

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 12 16:55:02 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 26/03/2025 GMT
    20                           ; 
    21                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0004                     fsr             equ	4
    54     0004                     fsr0            equ	4
    55     0000                     indf            equ	0
    56     0000                     indf0           equ	0
    57     0002                     pc              equ	2
    58     0002                     pcl             equ	2
    59     000A                     pclath          equ	10
    60     0003                     status          equ	3
    61     0000                     INDF            equ	0	;# 
    62     0001                     TMR0            equ	1	;# 
    63     0002                     PCL             equ	2	;# 
    64     0003                     STATUS          equ	3	;# 
    65     0004                     FSR             equ	4	;# 
    66     0005                     PORTA           equ	5	;# 
    67     0006                     PORTB           equ	6	;# 
    68     0007                     PORTC           equ	7	;# 
    69     0008                     PORTD           equ	8	;# 
    70     0009                     PORTE           equ	9	;# 
    71     000A                     PCLATH          equ	10	;# 
    72     000B                     INTCON          equ	11	;# 
    73     000C                     PIR1            equ	12	;# 
    74     000D                     PIR2            equ	13	;# 
    75     000E                     TMR1            equ	14	;# 
    76     000E                     TMR1L           equ	14	;# 
    77     000F                     TMR1H           equ	15	;# 
    78     0010                     T1CON           equ	16	;# 
    79     0011                     TMR2            equ	17	;# 
    80     0012                     T2CON           equ	18	;# 
    81     0013                     SSPBUF          equ	19	;# 
    82     0014                     SSPCON          equ	20	;# 
    83     0015                     CCPR1           equ	21	;# 
    84     0015                     CCPR1L          equ	21	;# 
    85     0016                     CCPR1H          equ	22	;# 
    86     0017                     CCP1CON         equ	23	;# 
    87     0018                     RCSTA           equ	24	;# 
    88     0019                     TXREG           equ	25	;# 
    89     001A                     RCREG           equ	26	;# 
    90     001B                     CCPR2           equ	27	;# 
    91     001B                     CCPR2L          equ	27	;# 
    92     001C                     CCPR2H          equ	28	;# 
    93     001D                     CCP2CON         equ	29	;# 
    94     001E                     ADRESH          equ	30	;# 
    95     001F                     ADCON0          equ	31	;# 
    96     0081                     OPTION_REG      equ	129	;# 
    97     0085                     TRISA           equ	133	;# 
    98     0086                     TRISB           equ	134	;# 
    99     0087                     TRISC           equ	135	;# 
   100     0088                     TRISD           equ	136	;# 
   101     0089                     TRISE           equ	137	;# 
   102     008C                     PIE1            equ	140	;# 
   103     008D                     PIE2            equ	141	;# 
   104     008E                     PCON            equ	142	;# 
   105     008F                     OSCCON          equ	143	;# 
   106     0090                     OSCTUNE         equ	144	;# 
   107     0091                     SSPCON2         equ	145	;# 
   108     0092                     PR2             equ	146	;# 
   109     0093                     SSPADD          equ	147	;# 
   110     0093                     SSPMSK          equ	147	;# 
   111     0093                     MSK             equ	147	;# 
   112     0094                     SSPSTAT         equ	148	;# 
   113     0095                     WPUB            equ	149	;# 
   114     0096                     IOCB            equ	150	;# 
   115     0097                     VRCON           equ	151	;# 
   116     0098                     TXSTA           equ	152	;# 
   117     0099                     SPBRG           equ	153	;# 
   118     009A                     SPBRGH          equ	154	;# 
   119     009B                     PWM1CON         equ	155	;# 
   120     009C                     ECCPAS          equ	156	;# 
   121     009D                     PSTRCON         equ	157	;# 
   122     009E                     ADRESL          equ	158	;# 
   123     009F                     ADCON1          equ	159	;# 
   124     0105                     WDTCON          equ	261	;# 
   125     0107                     CM1CON0         equ	263	;# 
   126     0108                     CM2CON0         equ	264	;# 
   127     0109                     CM2CON1         equ	265	;# 
   128     010C                     EEDATA          equ	268	;# 
   129     010C                     EEDAT           equ	268	;# 
   130     010D                     EEADR           equ	269	;# 
   131     010E                     EEDATH          equ	270	;# 
   132     010F                     EEADRH          equ	271	;# 
   133     0185                     SRCON           equ	389	;# 
   134     0187                     BAUDCTL         equ	391	;# 
   135     0188                     ANSEL           equ	392	;# 
   136     0189                     ANSELH          equ	393	;# 
   137     018C                     EECON1          equ	396	;# 
   138     018D                     EECON2          equ	397	;# 
   139     0000                     INDF            equ	0	;# 
   140     0001                     TMR0            equ	1	;# 
   141     0002                     PCL             equ	2	;# 
   142     0003                     STATUS          equ	3	;# 
   143     0004                     FSR             equ	4	;# 
   144     0005                     PORTA           equ	5	;# 
   145     0006                     PORTB           equ	6	;# 
   146     0007                     PORTC           equ	7	;# 
   147     0008                     PORTD           equ	8	;# 
   148     0009                     PORTE           equ	9	;# 
   149     000A                     PCLATH          equ	10	;# 
   150     000B                     INTCON          equ	11	;# 
   151     000C                     PIR1            equ	12	;# 
   152     000D                     PIR2            equ	13	;# 
   153     000E                     TMR1            equ	14	;# 
   154     000E                     TMR1L           equ	14	;# 
   155     000F                     TMR1H           equ	15	;# 
   156     0010                     T1CON           equ	16	;# 
   157     0011                     TMR2            equ	17	;# 
   158     0012                     T2CON           equ	18	;# 
   159     0013                     SSPBUF          equ	19	;# 
   160     0014                     SSPCON          equ	20	;# 
   161     0015                     CCPR1           equ	21	;# 
   162     0015                     CCPR1L          equ	21	;# 
   163     0016                     CCPR1H          equ	22	;# 
   164     0017                     CCP1CON         equ	23	;# 
   165     0018                     RCSTA           equ	24	;# 
   166     0019                     TXREG           equ	25	;# 
   167     001A                     RCREG           equ	26	;# 
   168     001B                     CCPR2           equ	27	;# 
   169     001B                     CCPR2L          equ	27	;# 
   170     001C                     CCPR2H          equ	28	;# 
   171     001D                     CCP2CON         equ	29	;# 
   172     001E                     ADRESH          equ	30	;# 
   173     001F                     ADCON0          equ	31	;# 
   174     0081                     OPTION_REG      equ	129	;# 
   175     0085                     TRISA           equ	133	;# 
   176     0086                     TRISB           equ	134	;# 
   177     0087                     TRISC           equ	135	;# 
   178     0088                     TRISD           equ	136	;# 
   179     0089                     TRISE           equ	137	;# 
   180     008C                     PIE1            equ	140	;# 
   181     008D                     PIE2            equ	141	;# 
   182     008E                     PCON            equ	142	;# 
   183     008F                     OSCCON          equ	143	;# 
   184     0090                     OSCTUNE         equ	144	;# 
   185     0091                     SSPCON2         equ	145	;# 
   186     0092                     PR2             equ	146	;# 
   187     0093                     SSPADD          equ	147	;# 
   188     0093                     SSPMSK          equ	147	;# 
   189     0093                     MSK             equ	147	;# 
   190     0094                     SSPSTAT         equ	148	;# 
   191     0095                     WPUB            equ	149	;# 
   192     0096                     IOCB            equ	150	;# 
   193     0097                     VRCON           equ	151	;# 
   194     0098                     TXSTA           equ	152	;# 
   195     0099                     SPBRG           equ	153	;# 
   196     009A                     SPBRGH          equ	154	;# 
   197     009B                     PWM1CON         equ	155	;# 
   198     009C                     ECCPAS          equ	156	;# 
   199     009D                     PSTRCON         equ	157	;# 
   200     009E                     ADRESL          equ	158	;# 
   201     009F                     ADCON1          equ	159	;# 
   202     0105                     WDTCON          equ	261	;# 
   203     0107                     CM1CON0         equ	263	;# 
   204     0108                     CM2CON0         equ	264	;# 
   205     0109                     CM2CON1         equ	265	;# 
   206     010C                     EEDATA          equ	268	;# 
   207     010C                     EEDAT           equ	268	;# 
   208     010D                     EEADR           equ	269	;# 
   209     010E                     EEDATH          equ	270	;# 
   210     010F                     EEADRH          equ	271	;# 
   211     0185                     SRCON           equ	389	;# 
   212     0187                     BAUDCTL         equ	391	;# 
   213     0188                     ANSEL           equ	392	;# 
   214     0189                     ANSELH          equ	393	;# 
   215     018C                     EECON1          equ	396	;# 
   216     018D                     EECON2          equ	397	;# 
   217     0000                     INDF            equ	0	;# 
   218     0001                     TMR0            equ	1	;# 
   219     0002                     PCL             equ	2	;# 
   220     0003                     STATUS          equ	3	;# 
   221     0004                     FSR             equ	4	;# 
   222     0005                     PORTA           equ	5	;# 
   223     0006                     PORTB           equ	6	;# 
   224     0007                     PORTC           equ	7	;# 
   225     0008                     PORTD           equ	8	;# 
   226     0009                     PORTE           equ	9	;# 
   227     000A                     PCLATH          equ	10	;# 
   228     000B                     INTCON          equ	11	;# 
   229     000C                     PIR1            equ	12	;# 
   230     000D                     PIR2            equ	13	;# 
   231     000E                     TMR1            equ	14	;# 
   232     000E                     TMR1L           equ	14	;# 
   233     000F                     TMR1H           equ	15	;# 
   234     0010                     T1CON           equ	16	;# 
   235     0011                     TMR2            equ	17	;# 
   236     0012                     T2CON           equ	18	;# 
   237     0013                     SSPBUF          equ	19	;# 
   238     0014                     SSPCON          equ	20	;# 
   239     0015                     CCPR1           equ	21	;# 
   240     0015                     CCPR1L          equ	21	;# 
   241     0016                     CCPR1H          equ	22	;# 
   242     0017                     CCP1CON         equ	23	;# 
   243     0018                     RCSTA           equ	24	;# 
   244     0019                     TXREG           equ	25	;# 
   245     001A                     RCREG           equ	26	;# 
   246     001B                     CCPR2           equ	27	;# 
   247     001B                     CCPR2L          equ	27	;# 
   248     001C                     CCPR2H          equ	28	;# 
   249     001D                     CCP2CON         equ	29	;# 
   250     001E                     ADRESH          equ	30	;# 
   251     001F                     ADCON0          equ	31	;# 
   252     0081                     OPTION_REG      equ	129	;# 
   253     0085                     TRISA           equ	133	;# 
   254     0086                     TRISB           equ	134	;# 
   255     0087                     TRISC           equ	135	;# 
   256     0088                     TRISD           equ	136	;# 
   257     0089                     TRISE           equ	137	;# 
   258     008C                     PIE1            equ	140	;# 
   259     008D                     PIE2            equ	141	;# 
   260     008E                     PCON            equ	142	;# 
   261     008F                     OSCCON          equ	143	;# 
   262     0090                     OSCTUNE         equ	144	;# 
   263     0091                     SSPCON2         equ	145	;# 
   264     0092                     PR2             equ	146	;# 
   265     0093                     SSPADD          equ	147	;# 
   266     0093                     SSPMSK          equ	147	;# 
   267     0093                     MSK             equ	147	;# 
   268     0094                     SSPSTAT         equ	148	;# 
   269     0095                     WPUB            equ	149	;# 
   270     0096                     IOCB            equ	150	;# 
   271     0097                     VRCON           equ	151	;# 
   272     0098                     TXSTA           equ	152	;# 
   273     0099                     SPBRG           equ	153	;# 
   274     009A                     SPBRGH          equ	154	;# 
   275     009B                     PWM1CON         equ	155	;# 
   276     009C                     ECCPAS          equ	156	;# 
   277     009D                     PSTRCON         equ	157	;# 
   278     009E                     ADRESL          equ	158	;# 
   279     009F                     ADCON1          equ	159	;# 
   280     0105                     WDTCON          equ	261	;# 
   281     0107                     CM1CON0         equ	263	;# 
   282     0108                     CM2CON0         equ	264	;# 
   283     0109                     CM2CON1         equ	265	;# 
   284     010C                     EEDATA          equ	268	;# 
   285     010C                     EEDAT           equ	268	;# 
   286     010D                     EEADR           equ	269	;# 
   287     010E                     EEDATH          equ	270	;# 
   288     010F                     EEADRH          equ	271	;# 
   289     0185                     SRCON           equ	389	;# 
   290     0187                     BAUDCTL         equ	391	;# 
   291     0188                     ANSEL           equ	392	;# 
   292     0189                     ANSELH          equ	393	;# 
   293     018C                     EECON1          equ	396	;# 
   294     018D                     EECON2          equ	397	;# 
   295                           
   296                           	psect	idataBANK0
   297     04F1                     __pidataBANK0:
   298                           
   299                           ;initializer for _lcd
   300     04F1  3407               	retlw	7
   301     04F2  3400               	retlw	0
   302     04F3  341A               	retlw	26
   303     04F4  342C               	retlw	44
   304     04F5  343E               	retlw	62
   305     0006                     _PORTB          set	6
   306     0005                     _PORTA          set	5
   307     0007                     _PORTC          set	7
   308     0087                     _TRISC          set	135
   309     0086                     _TRISB          set	134
   310     0085                     _TRISA          set	133
   311                           
   312                           	psect	strings
   313     0003                     __pstrings:
   314     0003                     stringtab:
   315     0003                     __stringtab:
   316     0003                     stringcode:	
   317                           ;	String table - string pointers are 1 byte each
   318                           
   319     0003                     stringdir:
   320     0003  3000               	movlw	high stringdir
   321     0004  008A               	movwf	10
   322     0005  0804               	movf	4,w
   323     0006  0A84               	incf	4,f
   324     0007  0782               	addwf	2,f
   325     0008                     __stringbase:
   326     0008  3400               	retlw	0
   327     0009                     __end_of__stringtab:
   328     0009                     STR_1:
   329     0009  3448               	retlw	72	;'H'
   330     000A  3465               	retlw	101	;'e'
   331     000B  346C               	retlw	108	;'l'
   332     000C  346C               	retlw	108	;'l'
   333     000D  346F               	retlw	111	;'o'
   334     000E  3420               	retlw	32	;' '
   335     000F  3457               	retlw	87	;'W'
   336     0010  346F               	retlw	111	;'o'
   337     0011  3472               	retlw	114	;'r'
   338     0012  346C               	retlw	108	;'l'
   339     0013  3464               	retlw	100	;'d'
   340     0014  3421               	retlw	33	;'!'
   341     0015  3400               	retlw	0
   342                           
   343                           	psect	cinit
   344     07DE                     start_initialization:	
   345                           ; #config settings
   346                           
   347     07DE                     __initialization:
   348                           
   349                           ; Initialize objects allocated to BANK0
   350     07DE  120A  118A  24F1  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   351     07E3  00A8               	movwf	__pdataBANK0& (0+127)
   352     07E4  120A  118A  24F2  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   353     07E9  00A9               	movwf	(__pdataBANK0+1)& (0+127)
   354     07EA  120A  118A  24F3  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   355     07EF  00AA               	movwf	(__pdataBANK0+2)& (0+127)
   356     07F0  120A  118A  24F4  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   357     07F5  00AB               	movwf	(__pdataBANK0+3)& (0+127)
   358     07F6  120A  118A  24F5  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   359     07FB  00AC               	movwf	(__pdataBANK0+4)& (0+127)
   360     07FC                     end_of_initialization:	
   361                           ;End of C runtime variable initialization code
   362                           
   363     07FC                     __end_of__initialization:
   364     07FC  0183               	clrf	3
   365     07FD  120A  118A  2D6F   	ljmp	_main	;jump to C main() function
   366                           
   367                           	psect	dataBANK0
   368     0028                     __pdataBANK0:
   369     0028                     _lcd:
   370     0028                     	ds	5
   371                           
   372                           	psect	cstackCOMMON
   373     0070                     __pcstackCOMMON:
   374     0070                     ?_LCD_Out:
   375     0070                     ?_LCD_Write:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     ?_LCD_putc:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     ??_LCD_Out:	
   382                           ; 1 bytes @ 0x0
   383                           
   384                           
   385                           ; 1 bytes @ 0x0
   386     0070                     	ds	2
   387     0072                     LCD_Out@c:
   388                           
   389                           ; 1 bytes @ 0x2
   390     0072                     	ds	1
   391     0073                     ??_LCD_Write:
   392     0073                     ??_LCD_putc:	
   393                           ; 1 bytes @ 0x3
   394                           
   395                           
   396                           ; 1 bytes @ 0x3
   397     0073                     	ds	2
   398     0075                     LCD_Write@c:
   399     0075                     LCD_putc@c:	
   400                           ; 1 bytes @ 0x5
   401                           
   402                           
   403                           ; 1 bytes @ 0x5
   404     0075                     	ds	1
   405     0076                     ?_LCD_Init:
   406     0076                     ?_LCD_putrs:	
   407                           ; 1 bytes @ 0x6
   408                           
   409     0076                     LCD_putrs@a:	
   410                           ; 1 bytes @ 0x6
   411                           
   412     0076                     LCD_Init@display:	
   413                           ; 1 bytes @ 0x6
   414                           
   415                           
   416                           ; 5 bytes @ 0x6
   417     0076                     	ds	1
   418     0077                     LCD_putrs@i:
   419     0077                     ??_LCD_putrs:	
   420                           ; 2 bytes @ 0x7
   421                           
   422                           
   423                           ; 1 bytes @ 0x7
   424     0077                     	ds	4
   425     007B                     ??_LCD_Init:
   426                           
   427                           ; 1 bytes @ 0xB
   428     007B                     	ds	2
   429     007D                     LCD_Init@cmd:
   430                           
   431                           ; 1 bytes @ 0xD
   432     007D                     	ds	1
   433                           
   434                           	psect	cstackBANK0
   435     0020                     __pcstackBANK0:
   436     0020                     ?_main:
   437     0020                     main@argc:	
   438                           ; 2 bytes @ 0x0
   439                           
   440                           
   441                           ; 2 bytes @ 0x0
   442     0020                     	ds	2
   443     0022                     main@argv:
   444                           
   445                           ; 2 bytes @ 0x2
   446     0022                     	ds	2
   447     0024                     ??_main:
   448                           
   449                           ; 1 bytes @ 0x4
   450     0024                     	ds	3
   451     0027                     main@c:
   452                           
   453                           ; 1 bytes @ 0x7
   454     0027                     	ds	1
   455                           
   456                           	psect	maintext
   457     056F                     __pmaintext:	
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 27 in file "main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;  argc            2    0[BANK0 ] int 
   466 ;;  argv            2    2[BANK0 ] PTR PTR unsigned char 
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  c               1    7[BANK0 ] unsigned char 
   469 ;; Return value:  Size  Location     Type
   470 ;;                  2    0[BANK0 ] int 
   471 ;; Registers used:
   472 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   473 ;; Tracked objects:
   474 ;;		On entry : B00/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   478 ;;      Params:         0       4       0       0       0
   479 ;;      Locals:         0       1       0       0       0
   480 ;;      Temps:          0       3       0       0       0
   481 ;;      Totals:         0       8       0       0       0
   482 ;;Total ram usage:        8 bytes
   483 ;; Hardware stack levels required when called: 3
   484 ;; This function calls:
   485 ;;		_LCD_Init
   486 ;;		_LCD_Write
   487 ;;		_LCD_putc
   488 ;;		_LCD_putrs
   489 ;; This function is called by:
   490 ;;		Startup code after reset
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494     056F                     _main:	
   495                           ;psect for function _main
   496                           
   497     056F                     l927:	
   498                           ;incstack = 0
   499                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   500                           
   501     056F  3076               	movlw	LCD_Init@display& (0+255)
   502     0570  0084               	movwf	4
   503     0571  1283               	bcf	3,5	;RP0=0, select bank0
   504     0572  1303               	bcf	3,6	;RP1=0, select bank0
   505     0573  0828               	movf	_lcd,w
   506     0574  0080               	movwf	0
   507     0575  0A84               	incf	4,f
   508     0576  0829               	movf	_lcd+1,w
   509     0577  0080               	movwf	0
   510     0578  0A84               	incf	4,f
   511     0579  082A               	movf	_lcd+2,w
   512     057A  0080               	movwf	0
   513     057B  0A84               	incf	4,f
   514     057C  082B               	movf	_lcd+3,w
   515     057D  0080               	movwf	0
   516     057E  0A84               	incf	4,f
   517     057F  082C               	movf	_lcd+4,w
   518     0580  0080               	movwf	0
   519     0581  120A  118A  2678  120A  118A  	fcall	_LCD_Init
   520     0586                     l87:
   521     0586  3000               	movlw	0
   522     0587  120A  118A  251A  120A  118A  	fcall	_LCD_Write
   523     058C  3001               	movlw	1
   524     058D  120A  118A  251A  120A  118A  	fcall	_LCD_Write
   525     0592                     l91:
   526     0592  3008               	movlw	8
   527     0593  120A  118A  251A  120A  118A  	fcall	_LCD_Write
   528     0598  3000               	movlw	0
   529     0599  120A  118A  251A  120A  118A  	fcall	_LCD_Write
   530     059E                     l105:
   531     059E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   532     059F  00F6               	movwf	LCD_putrs@a
   533     05A0  120A  118A  24F6  120A  118A  	fcall	_LCD_putrs
   534     05A5                     l937:
   535     05A5  300C               	movlw	12
   536     05A6  120A  118A  251A  120A  118A  	fcall	_LCD_Write
   537     05AB  3000               	movlw	0
   538     05AC  120A  118A  251A  120A  118A  	fcall	_LCD_Write
   539     05B1                     l943:
   540     05B1  3041               	movlw	65
   541     05B2  1283               	bcf	3,5	;RP0=0, select bank0
   542     05B3  1303               	bcf	3,6	;RP1=0, select bank0
   543     05B4  00A7               	movwf	main@c
   544     05B5                     l949:
   545     05B5  0827               	movf	main@c,w
   546     05B6  120A  118A  25E6  120A  118A  	fcall	_LCD_putc
   547     05BB                     l951:
   548     05BB  3002               	movlw	2
   549     05BC  1283               	bcf	3,5	;RP0=0, select bank0
   550     05BD  1303               	bcf	3,6	;RP1=0, select bank0
   551     05BE  00A6               	movwf	??_main+2
   552     05BF  3086               	movlw	134
   553     05C0  00A5               	movwf	??_main+1
   554     05C1  3098               	movlw	152
   555     05C2  00A4               	movwf	??_main
   556     05C3                     u577:
   557     05C3  0BA4               	decfsz	??_main,f
   558     05C4  2DC3               	goto	u577
   559     05C5  0BA5               	decfsz	??_main+1,f
   560     05C6  2DC3               	goto	u577
   561     05C7  0BA6               	decfsz	??_main+2,f
   562     05C8  2DC3               	goto	u577
   563     05C9  0000               	nop
   564     05CA                     l953:
   565     05CA  3001               	movlw	1
   566     05CB  1283               	bcf	3,5	;RP0=0, select bank0
   567     05CC  1303               	bcf	3,6	;RP1=0, select bank0
   568     05CD  07A7               	addwf	main@c,f
   569     05CE                     l955:
   570     05CE  3051               	movlw	81
   571     05CF  0227               	subwf	main@c,w
   572     05D0  1C03               	skipc
   573     05D1  2DD3               	goto	u561
   574     05D2  2DD4               	goto	u560
   575     05D3                     u561:
   576     05D3  2DB5               	goto	l949
   577     05D4                     u560:
   578     05D4                     l957:
   579     05D4  3006               	movlw	6
   580     05D5  1283               	bcf	3,5	;RP0=0, select bank0
   581     05D6  1303               	bcf	3,6	;RP1=0, select bank0
   582     05D7  00A6               	movwf	??_main+2
   583     05D8  3013               	movlw	19
   584     05D9  00A5               	movwf	??_main+1
   585     05DA  30AD               	movlw	173
   586     05DB  00A4               	movwf	??_main
   587     05DC                     u587:
   588     05DC  0BA4               	decfsz	??_main,f
   589     05DD  2DDC               	goto	u587
   590     05DE  0BA5               	decfsz	??_main+1,f
   591     05DF  2DDC               	goto	u587
   592     05E0  0BA6               	decfsz	??_main+2,f
   593     05E1  2DDC               	goto	u587
   594     05E2  2D86               	goto	l87
   595     05E3  120A  118A  2800   	ljmp	start
   596     05E6                     __end_of_main:
   597                           
   598                           	psect	text1
   599     04F6                     __ptext1:	
   600 ;; *************** function _LCD_putrs *****************
   601 ;; Defined at:
   602 ;;		line 142 in file "lcd.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  a               1    6[COMMON] PTR const unsigned char 
   605 ;;		 -> STR_1(13), 
   606 ;; Auto vars:     Size  Location     Type
   607 ;;  i               2    7[COMMON] int 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         1       0       0       0       0
   618 ;;      Locals:         2       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0
   620 ;;      Totals:         3       0       0       0       0
   621 ;;Total ram usage:        3 bytes
   622 ;; Hardware stack levels used: 1
   623 ;; Hardware stack levels required when called: 2
   624 ;; This function calls:
   625 ;;		_LCD_putc
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631     04F6                     _LCD_putrs:	
   632                           ;psect for function _LCD_putrs
   633                           
   634     04F6                     l911:	
   635                           ;incstack = 0
   636                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   637                           
   638                           
   639                           ;lcd.c: 144:     for ( int i = 0; a[i] != '\0'; ++i ) {
   640     04F6  01F7               	clrf	LCD_putrs@i
   641     04F7  01F8               	clrf	LCD_putrs@i+1
   642     04F8  2D0C               	goto	l917
   643     04F9                     l913:
   644                           
   645                           ;lcd.c: 145:         LCD_putc(a[i]);
   646     04F9  0877               	movf	LCD_putrs@i,w
   647     04FA  0776               	addwf	LCD_putrs@a,w
   648     04FB  0084               	movwf	4
   649     04FC  120A  118A  2003  120A  118A  	fcall	stringdir
   650     0501  120A  118A  25E6  120A  118A  	fcall	_LCD_putc
   651     0506                     l915:
   652                           
   653                           ;lcd.c: 146:     }
   654     0506  3001               	movlw	1
   655     0507  07F7               	addwf	LCD_putrs@i,f
   656     0508  1803               	skipnc
   657     0509  0AF8               	incf	LCD_putrs@i+1,f
   658     050A  3000               	movlw	0
   659     050B  07F8               	addwf	LCD_putrs@i+1,f
   660     050C                     l917:
   661     050C  0877               	movf	LCD_putrs@i,w
   662     050D  0776               	addwf	LCD_putrs@a,w
   663     050E  0084               	movwf	4
   664     050F  120A  118A  2003  120A  118A  	fcall	stringdir
   665     0514  3A00               	xorlw	0
   666     0515  1D03               	skipz
   667     0516  2D18               	goto	u541
   668     0517  2D19               	goto	u540
   669     0518                     u541:
   670     0518  2CF9               	goto	l913
   671     0519                     u540:
   672     0519                     l67:
   673     0519  0008               	return
   674     051A                     __end_of_LCD_putrs:
   675                           
   676                           	psect	text2
   677     05E6                     __ptext2:	
   678 ;; *************** function _LCD_putc *****************
   679 ;; Defined at:
   680 ;;		line 117 in file "lcd.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  c               1    wreg     unsigned char 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  c               1    5[COMMON] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         1       0       0       0       0
   696 ;;      Temps:          2       0       0       0       0
   697 ;;      Totals:         3       0       0       0       0
   698 ;;Total ram usage:        3 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 1
   701 ;; This function calls:
   702 ;;		_LCD_Out
   703 ;; This function is called by:
   704 ;;		_LCD_putrs
   705 ;;		_main
   706 ;;		_LCD_puts
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710     05E6                     _LCD_putc:	
   711                           ;psect for function _LCD_putc
   712                           
   713                           
   714                           ;incstack = 0
   715                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   716                           ;LCD_putc@c stored from wreg
   717     05E6  00F5               	movwf	LCD_putc@c
   718     05E7                     l849:
   719                           
   720                           ;lcd.c: 119:    *(lcd.PORT) |= 1 << lcd.RS;
   721     05E7  1283               	bcf	3,5	;RP0=0, select bank0
   722     05E8  1303               	bcf	3,6	;RP1=0, select bank0
   723     05E9  0828               	movf	_lcd,w
   724     05EA  0084               	movwf	4
   725     05EB  1783               	bsf	3,7
   726     05EC  1C29               	btfss	_lcd+1,0
   727     05ED  1383               	bcf	3,7
   728     05EE  3001               	movlw	1
   729     05EF  00F3               	movwf	??_LCD_putc
   730     05F0  082A               	movf	_lcd+2,w
   731     05F1  3907               	andlw	7
   732     05F2  3E01               	addlw	1
   733     05F3  2DF6               	goto	u444
   734     05F4                     u445:
   735     05F4  1003               	clrc
   736     05F5  0DF3               	rlf	??_LCD_putc,f
   737     05F6                     u444:
   738     05F6  3EFF               	addlw	-1
   739     05F7  1D03               	skipz
   740     05F8  2DF4               	goto	u445
   741     05F9  0873               	movf	??_LCD_putc,w
   742     05FA  0480               	iorwf	0,f
   743     05FB                     l851:
   744                           
   745                           ;lcd.c: 120:     LCD_Out((c & 0xF0) >> 4);
   746     05FB  0875               	movf	LCD_putc@c,w
   747     05FC  00F3               	movwf	??_LCD_putc
   748     05FD  3004               	movlw	4
   749     05FE                     u455:
   750     05FE  1003               	clrc
   751     05FF  0CF3               	rrf	??_LCD_putc,f
   752     0600  3EFF               	addlw	-1
   753     0601  1D03               	skipz
   754     0602  2DFE               	goto	u455
   755     0603  0873               	movf	??_LCD_putc,w
   756     0604  390F               	andlw	15
   757     0605  120A  118A  2724  120A  118A  	fcall	_LCD_Out
   758     060A                     l853:
   759                           
   760                           ;lcd.c: 122:     *(lcd.PORT) |= 1 << lcd.EN;
   761     060A  1283               	bcf	3,5	;RP0=0, select bank0
   762     060B  1303               	bcf	3,6	;RP1=0, select bank0
   763     060C  0828               	movf	_lcd,w
   764     060D  0084               	movwf	4
   765     060E  1783               	bsf	3,7
   766     060F  1C29               	btfss	_lcd+1,0
   767     0610  1383               	bcf	3,7
   768     0611  3001               	movlw	1
   769     0612  00F3               	movwf	??_LCD_putc
   770     0613  0C2A               	rrf	_lcd+2,w
   771     0614  00F4               	movwf	??_LCD_putc+1
   772     0615  0CF4               	rrf	??_LCD_putc+1,f
   773     0616  0C74               	rrf	??_LCD_putc+1,w
   774     0617  3907               	andlw	7
   775     0618  3E01               	addlw	1
   776     0619  2E1C               	goto	u464
   777     061A                     u465:
   778     061A  1003               	clrc
   779     061B  0DF3               	rlf	??_LCD_putc,f
   780     061C                     u464:
   781     061C  3EFF               	addlw	-1
   782     061D  1D03               	skipz
   783     061E  2E1A               	goto	u465
   784     061F  0873               	movf	??_LCD_putc,w
   785     0620  0480               	iorwf	0,f
   786     0621                     l855:
   787                           
   788                           ;lcd.c: 123:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   789     0621  300D               	movlw	13
   790     0622  00F3               	movwf	??_LCD_putc
   791     0623                     u597:
   792     0623  0BF3               	decfsz	??_LCD_putc,f
   793     0624  2E23               	goto	u597
   794     0625                     l857:
   795                           
   796                           ;lcd.c: 124:     *(lcd.PORT) &= ~(1 << lcd.EN);
   797     0625  1283               	bcf	3,5	;RP0=0, select bank0
   798     0626  1303               	bcf	3,6	;RP1=0, select bank0
   799     0627  0828               	movf	_lcd,w
   800     0628  0084               	movwf	4
   801     0629  1783               	bsf	3,7
   802     062A  1C29               	btfss	_lcd+1,0
   803     062B  1383               	bcf	3,7
   804     062C  3001               	movlw	1
   805     062D  00F3               	movwf	??_LCD_putc
   806     062E  0C2A               	rrf	_lcd+2,w
   807     062F  00F4               	movwf	??_LCD_putc+1
   808     0630  0CF4               	rrf	??_LCD_putc+1,f
   809     0631  0C74               	rrf	??_LCD_putc+1,w
   810     0632  3907               	andlw	7
   811     0633  3E01               	addlw	1
   812     0634  2E37               	goto	u474
   813     0635                     u475:
   814     0635  1003               	clrc
   815     0636  0DF3               	rlf	??_LCD_putc,f
   816     0637                     u474:
   817     0637  3EFF               	addlw	-1
   818     0638  1D03               	skipz
   819     0639  2E35               	goto	u475
   820     063A  0873               	movf	??_LCD_putc,w
   821     063B  3AFF               	xorlw	255
   822     063C  0580               	andwf	0,f
   823     063D                     l859:
   824                           
   825                           ;lcd.c: 126:     LCD_Out(c & 0x0F);
   826     063D  0875               	movf	LCD_putc@c,w
   827     063E  390F               	andlw	15
   828     063F  120A  118A  2724  120A  118A  	fcall	_LCD_Out
   829     0644                     l861:
   830                           
   831                           ;lcd.c: 128:     *(lcd.PORT) |= 1 << lcd.EN;
   832     0644  1283               	bcf	3,5	;RP0=0, select bank0
   833     0645  1303               	bcf	3,6	;RP1=0, select bank0
   834     0646  0828               	movf	_lcd,w
   835     0647  0084               	movwf	4
   836     0648  1783               	bsf	3,7
   837     0649  1C29               	btfss	_lcd+1,0
   838     064A  1383               	bcf	3,7
   839     064B  3001               	movlw	1
   840     064C  00F3               	movwf	??_LCD_putc
   841     064D  0C2A               	rrf	_lcd+2,w
   842     064E  00F4               	movwf	??_LCD_putc+1
   843     064F  0CF4               	rrf	??_LCD_putc+1,f
   844     0650  0C74               	rrf	??_LCD_putc+1,w
   845     0651  3907               	andlw	7
   846     0652  3E01               	addlw	1
   847     0653  2E56               	goto	u484
   848     0654                     u485:
   849     0654  1003               	clrc
   850     0655  0DF3               	rlf	??_LCD_putc,f
   851     0656                     u484:
   852     0656  3EFF               	addlw	-1
   853     0657  1D03               	skipz
   854     0658  2E54               	goto	u485
   855     0659  0873               	movf	??_LCD_putc,w
   856     065A  0480               	iorwf	0,f
   857                           
   858                           ;lcd.c: 129:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   859     065B  300D               	movlw	13
   860     065C  00F3               	movwf	??_LCD_putc
   861     065D                     u607:
   862     065D  0BF3               	decfsz	??_LCD_putc,f
   863     065E  2E5D               	goto	u607
   864     065F                     l863:
   865                           
   866                           ;lcd.c: 130:     *(lcd.PORT) &= ~(1 << lcd.EN);
   867     065F  1283               	bcf	3,5	;RP0=0, select bank0
   868     0660  1303               	bcf	3,6	;RP1=0, select bank0
   869     0661  0828               	movf	_lcd,w
   870     0662  0084               	movwf	4
   871     0663  1783               	bsf	3,7
   872     0664  1C29               	btfss	_lcd+1,0
   873     0665  1383               	bcf	3,7
   874     0666  3001               	movlw	1
   875     0667  00F3               	movwf	??_LCD_putc
   876     0668  0C2A               	rrf	_lcd+2,w
   877     0669  00F4               	movwf	??_LCD_putc+1
   878     066A  0CF4               	rrf	??_LCD_putc+1,f
   879     066B  0C74               	rrf	??_LCD_putc+1,w
   880     066C  3907               	andlw	7
   881     066D  3E01               	addlw	1
   882     066E  2E71               	goto	u494
   883     066F                     u495:
   884     066F  1003               	clrc
   885     0670  0DF3               	rlf	??_LCD_putc,f
   886     0671                     u494:
   887     0671  3EFF               	addlw	-1
   888     0672  1D03               	skipz
   889     0673  2E6F               	goto	u495
   890     0674  0873               	movf	??_LCD_putc,w
   891     0675  3AFF               	xorlw	255
   892     0676  0580               	andwf	0,f
   893     0677                     l55:
   894     0677  0008               	return
   895     0678                     __end_of_LCD_putc:
   896                           
   897                           	psect	text3
   898     0678                     __ptext3:	
   899 ;; *************** function _LCD_Init *****************
   900 ;; Defined at:
   901 ;;		line 59 in file "lcd.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  display         5    6[COMMON] struct .
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  cmd             1   13[COMMON] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      _Bool 
   908 ;; Registers used:
   909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         5       0       0       0       0
   916 ;;      Locals:         1       0       0       0       0
   917 ;;      Temps:          2       0       0       0       0
   918 ;;      Totals:         8       0       0       0       0
   919 ;;Total ram usage:        8 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 2
   922 ;; This function calls:
   923 ;;		_LCD_Write
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929     0678                     _LCD_Init:	
   930                           ;psect for function _LCD_Init
   931                           
   932     0678                     l865:	
   933                           ;incstack = 0
   934                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   935                           
   936                           
   937                           ;lcd.c: 61:     lcd = display;
   938     0678  3028               	movlw	_lcd& (0+255)
   939     0679  0084               	movwf	4
   940     067A  0876               	movf	LCD_Init@display,w
   941     067B  1383               	bcf	3,7	;select IRP bank0
   942     067C  0080               	movwf	0
   943     067D  0A84               	incf	4,f
   944     067E  0877               	movf	LCD_Init@display+1,w
   945     067F  0080               	movwf	0
   946     0680  0A84               	incf	4,f
   947     0681  0878               	movf	LCD_Init@display+2,w
   948     0682  0080               	movwf	0
   949     0683  0A84               	incf	4,f
   950     0684  0879               	movf	LCD_Init@display+3,w
   951     0685  0080               	movwf	0
   952     0686  0A84               	incf	4,f
   953     0687  087A               	movf	LCD_Init@display+4,w
   954     0688  0080               	movwf	0
   955     0689                     l867:
   956                           
   957                           ;lcd.c: 70:     if ( lcd.PORT == &PORTA ) {
   958     0689  3000               	movlw	0
   959     068A  1283               	bcf	3,5	;RP0=0, select bank0
   960     068B  1303               	bcf	3,6	;RP1=0, select bank0
   961     068C  0629               	xorwf	_lcd+1,w
   962     068D  1D03               	skipz
   963     068E  2E91               	goto	u505
   964     068F  3005               	movlw	5
   965     0690  0628               	xorwf	_lcd,w
   966     0691                     u505:
   967     0691  1D03               	skipz
   968     0692  2E94               	goto	u501
   969     0693  2E95               	goto	u500
   970     0694                     u501:
   971     0694  2E99               	goto	l871
   972     0695                     u500:
   973     0695                     l869:
   974                           
   975                           ;lcd.c: 71:         TRISA = 0x00;
   976     0695  1683               	bsf	3,5	;RP0=1, select bank1
   977     0696  1303               	bcf	3,6	;RP1=0, select bank1
   978     0697  0185               	clrf	5	;volatile
   979                           
   980                           ;lcd.c: 72:     }
   981     0698  2EB4               	goto	l879
   982     0699                     l871:
   983     0699  3000               	movlw	0
   984     069A  0629               	xorwf	_lcd+1,w
   985     069B  1D03               	skipz
   986     069C  2E9F               	goto	u515
   987     069D  3006               	movlw	6
   988     069E  0628               	xorwf	_lcd,w
   989     069F                     u515:
   990     069F  1D03               	skipz
   991     06A0  2EA2               	goto	u511
   992     06A1  2EA3               	goto	u510
   993     06A2                     u511:
   994     06A2  2EA7               	goto	l875
   995     06A3                     u510:
   996     06A3                     l873:
   997                           
   998                           ;lcd.c: 74:         TRISB = 0x00;
   999     06A3  1683               	bsf	3,5	;RP0=1, select bank1
  1000     06A4  1303               	bcf	3,6	;RP1=0, select bank1
  1001     06A5  0186               	clrf	6	;volatile
  1002                           
  1003                           ;lcd.c: 75:     }
  1004     06A6  2EB4               	goto	l879
  1005     06A7                     l875:
  1006     06A7  3000               	movlw	0
  1007     06A8  0629               	xorwf	_lcd+1,w
  1008     06A9  1D03               	skipz
  1009     06AA  2EAD               	goto	u525
  1010     06AB  3007               	movlw	7
  1011     06AC  0628               	xorwf	_lcd,w
  1012     06AD                     u525:
  1013     06AD  1D03               	skipz
  1014     06AE  2EB0               	goto	u521
  1015     06AF  2EB1               	goto	u520
  1016     06B0                     u521:
  1017     06B0  2F23               	goto	l39
  1018     06B1                     u520:
  1019     06B1                     l877:
  1020                           
  1021                           ;lcd.c: 77:         TRISC = 0x00;
  1022     06B1  1683               	bsf	3,5	;RP0=1, select bank1
  1023     06B2  1303               	bcf	3,6	;RP1=0, select bank1
  1024     06B3  0187               	clrf	7	;volatile
  1025     06B4                     l879:	
  1026                           ;lcd.c: 78:     }
  1027                           
  1028                           
  1029                           ;lcd.c: 92:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1030     06B4  301A               	movlw	26
  1031     06B5  00FC               	movwf	??_LCD_Init+1
  1032     06B6  30F8               	movlw	248
  1033     06B7  00FB               	movwf	??_LCD_Init
  1034     06B8                     u617:
  1035     06B8  0BFB               	decfsz	??_LCD_Init,f
  1036     06B9  2EB8               	goto	u617
  1037     06BA  0BFC               	decfsz	??_LCD_Init+1,f
  1038     06BB  2EB8               	goto	u617
  1039     06BC  0000               	nop
  1040     06BD                     l881:
  1041                           
  1042                           ;lcd.c: 95:     LCD_Write(0x03);
  1043     06BD  3003               	movlw	3
  1044     06BE  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1045     06C3                     l883:
  1046                           
  1047                           ;lcd.c: 96:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1048     06C3  3007               	movlw	7
  1049     06C4  00FC               	movwf	??_LCD_Init+1
  1050     06C5  307D               	movlw	125
  1051     06C6  00FB               	movwf	??_LCD_Init
  1052     06C7                     u627:
  1053     06C7  0BFB               	decfsz	??_LCD_Init,f
  1054     06C8  2EC7               	goto	u627
  1055     06C9  0BFC               	decfsz	??_LCD_Init+1,f
  1056     06CA  2EC7               	goto	u627
  1057                           
  1058                           ;lcd.c: 97:     LCD_Write(0x03);
  1059     06CB  3003               	movlw	3
  1060     06CC  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1061     06D1                     l885:
  1062                           
  1063                           ;lcd.c: 98:     _delay((unsigned long)((16)*(4000000/4000.0)));
  1064     06D1  3015               	movlw	21
  1065     06D2  00FC               	movwf	??_LCD_Init+1
  1066     06D3  30C6               	movlw	198
  1067     06D4  00FB               	movwf	??_LCD_Init
  1068     06D5                     u637:
  1069     06D5  0BFB               	decfsz	??_LCD_Init,f
  1070     06D6  2ED5               	goto	u637
  1071     06D7  0BFC               	decfsz	??_LCD_Init+1,f
  1072     06D8  2ED5               	goto	u637
  1073     06D9  0000               	nop
  1074     06DA                     l887:
  1075                           
  1076                           ;lcd.c: 99:     LCD_Write(0x03);
  1077     06DA  3003               	movlw	3
  1078     06DB  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1079     06E0                     l889:
  1080                           
  1081                           ;lcd.c: 102:     LCD_Write(0x02);
  1082     06E0  3002               	movlw	2
  1083     06E1  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1084     06E6                     l891:
  1085     06E6  3002               	movlw	2
  1086     06E7  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1087     06EC                     l893:
  1088     06EC  3008               	movlw	8
  1089     06ED  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1090     06F2                     l895:
  1091     06F2  3000               	movlw	0
  1092     06F3  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1093     06F8                     l897:
  1094     06F8  3006               	movlw	6
  1095     06F9  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1096     06FE                     l899:
  1097     06FE  3008               	movlw	8
  1098     06FF  00FD               	movwf	LCD_Init@cmd
  1099     0700                     l901:
  1100     0700  157D               	bsf	LCD_Init@cmd,2
  1101     0701                     l907:
  1102     0701  087D               	movf	LCD_Init@cmd,w
  1103     0702  00FB               	movwf	??_LCD_Init
  1104     0703  3004               	movlw	4
  1105     0704                     u535:
  1106     0704  1003               	clrc
  1107     0705  0CFB               	rrf	??_LCD_Init,f
  1108     0706  3EFF               	addlw	-1
  1109     0707  1D03               	skipz
  1110     0708  2F04               	goto	u535
  1111     0709  087B               	movf	??_LCD_Init,w
  1112     070A  390F               	andlw	15
  1113     070B  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1114     0710  087D               	movf	LCD_Init@cmd,w
  1115     0711  390F               	andlw	15
  1116     0712  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1117     0717                     l51:	
  1118                           ;lcd.c: 112:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while 
      +                          ( 0 );
  1119                           
  1120     0717  3000               	movlw	0
  1121     0718  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1122     071D  3001               	movlw	1
  1123     071E  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1124     0723                     l39:
  1125     0723  0008               	return
  1126     0724                     __end_of_LCD_Init:
  1127                           
  1128                           	psect	text4
  1129     051A                     __ptext4:	
  1130 ;; *************** function _LCD_Write *****************
  1131 ;; Defined at:
  1132 ;;		line 48 in file "lcd.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  c               1    wreg     unsigned char 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  c               1    5[COMMON] unsigned char 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         1       0       0       0       0
  1148 ;;      Temps:          2       0       0       0       0
  1149 ;;      Totals:         3       0       0       0       0
  1150 ;;Total ram usage:        3 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 1
  1153 ;; This function calls:
  1154 ;;		_LCD_Out
  1155 ;; This function is called by:
  1156 ;;		_LCD_Init
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161     051A                     _LCD_Write:	
  1162                           ;psect for function _LCD_Write
  1163                           
  1164                           
  1165                           ;incstack = 0
  1166                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1167                           ;LCD_Write@c stored from wreg
  1168     051A  00F5               	movwf	LCD_Write@c
  1169     051B                     l839:
  1170                           
  1171                           ;lcd.c: 50:     *(lcd.PORT) &= ~(1 << lcd.RS);
  1172     051B  1283               	bcf	3,5	;RP0=0, select bank0
  1173     051C  1303               	bcf	3,6	;RP1=0, select bank0
  1174     051D  0828               	movf	_lcd,w
  1175     051E  0084               	movwf	4
  1176     051F  1783               	bsf	3,7
  1177     0520  1C29               	btfss	_lcd+1,0
  1178     0521  1383               	bcf	3,7
  1179     0522  3001               	movlw	1
  1180     0523  00F3               	movwf	??_LCD_Write
  1181     0524  082A               	movf	_lcd+2,w
  1182     0525  3907               	andlw	7
  1183     0526  3E01               	addlw	1
  1184     0527  2D2A               	goto	u414
  1185     0528                     u415:
  1186     0528  1003               	clrc
  1187     0529  0DF3               	rlf	??_LCD_Write,f
  1188     052A                     u414:
  1189     052A  3EFF               	addlw	-1
  1190     052B  1D03               	skipz
  1191     052C  2D28               	goto	u415
  1192     052D  0873               	movf	??_LCD_Write,w
  1193     052E  3AFF               	xorlw	255
  1194     052F  0580               	andwf	0,f
  1195     0530                     l841:
  1196                           
  1197                           ;lcd.c: 51:     LCD_Out(c);
  1198     0530  0875               	movf	LCD_Write@c,w
  1199     0531  120A  118A  2724  120A  118A  	fcall	_LCD_Out
  1200     0536                     l843:
  1201                           
  1202                           ;lcd.c: 53:     *(lcd.PORT) |= 1 << lcd.EN;
  1203     0536  1283               	bcf	3,5	;RP0=0, select bank0
  1204     0537  1303               	bcf	3,6	;RP1=0, select bank0
  1205     0538  0828               	movf	_lcd,w
  1206     0539  0084               	movwf	4
  1207     053A  1783               	bsf	3,7
  1208     053B  1C29               	btfss	_lcd+1,0
  1209     053C  1383               	bcf	3,7
  1210     053D  3001               	movlw	1
  1211     053E  00F3               	movwf	??_LCD_Write
  1212     053F  0C2A               	rrf	_lcd+2,w
  1213     0540  00F4               	movwf	??_LCD_Write+1
  1214     0541  0CF4               	rrf	??_LCD_Write+1,f
  1215     0542  0C74               	rrf	??_LCD_Write+1,w
  1216     0543  3907               	andlw	7
  1217     0544  3E01               	addlw	1
  1218     0545  2D48               	goto	u424
  1219     0546                     u425:
  1220     0546  1003               	clrc
  1221     0547  0DF3               	rlf	??_LCD_Write,f
  1222     0548                     u424:
  1223     0548  3EFF               	addlw	-1
  1224     0549  1D03               	skipz
  1225     054A  2D46               	goto	u425
  1226     054B  0873               	movf	??_LCD_Write,w
  1227     054C  0480               	iorwf	0,f
  1228     054D                     l845:
  1229                           
  1230                           ;lcd.c: 54:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1231     054D  3006               	movlw	6
  1232     054E  00F4               	movwf	??_LCD_Write+1
  1233     054F  3030               	movlw	48
  1234     0550  00F3               	movwf	??_LCD_Write
  1235     0551                     u647:
  1236     0551  0BF3               	decfsz	??_LCD_Write,f
  1237     0552  2D51               	goto	u647
  1238     0553  0BF4               	decfsz	??_LCD_Write+1,f
  1239     0554  2D51               	goto	u647
  1240     0555  0000               	nop
  1241     0556                     l847:
  1242                           
  1243                           ;lcd.c: 55:     *(lcd.PORT) &= ~(1 << lcd.EN);
  1244     0556  1283               	bcf	3,5	;RP0=0, select bank0
  1245     0557  1303               	bcf	3,6	;RP1=0, select bank0
  1246     0558  0828               	movf	_lcd,w
  1247     0559  0084               	movwf	4
  1248     055A  1783               	bsf	3,7
  1249     055B  1C29               	btfss	_lcd+1,0
  1250     055C  1383               	bcf	3,7
  1251     055D  3001               	movlw	1
  1252     055E  00F3               	movwf	??_LCD_Write
  1253     055F  0C2A               	rrf	_lcd+2,w
  1254     0560  00F4               	movwf	??_LCD_Write+1
  1255     0561  0CF4               	rrf	??_LCD_Write+1,f
  1256     0562  0C74               	rrf	??_LCD_Write+1,w
  1257     0563  3907               	andlw	7
  1258     0564  3E01               	addlw	1
  1259     0565  2D68               	goto	u434
  1260     0566                     u435:
  1261     0566  1003               	clrc
  1262     0567  0DF3               	rlf	??_LCD_Write,f
  1263     0568                     u434:
  1264     0568  3EFF               	addlw	-1
  1265     0569  1D03               	skipz
  1266     056A  2D66               	goto	u435
  1267     056B  0873               	movf	??_LCD_Write,w
  1268     056C  3AFF               	xorlw	255
  1269     056D  0580               	andwf	0,f
  1270     056E                     l30:
  1271     056E  0008               	return
  1272     056F                     __end_of_LCD_Write:
  1273                           
  1274                           	psect	text5
  1275     0724                     __ptext5:	
  1276 ;; *************** function _LCD_Out *****************
  1277 ;; Defined at:
  1278 ;;		line 16 in file "lcd.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  c               1    wreg     unsigned char 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  c               1    2[COMMON] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         1       0       0       0       0
  1294 ;;      Temps:          2       0       0       0       0
  1295 ;;      Totals:         3       0       0       0       0
  1296 ;;Total ram usage:        3 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_LCD_Write
  1302 ;;		_LCD_putc
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306     0724                     _LCD_Out:	
  1307                           ;psect for function _LCD_Out
  1308                           
  1309                           
  1310                           ;incstack = 0
  1311                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  1312                           ;LCD_Out@c stored from wreg
  1313     0724  00F2               	movwf	LCD_Out@c
  1314     0725                     l815:
  1315                           
  1316                           ;lcd.c: 18:     if ( c & 1 ){
  1317     0725  1C72               	btfss	LCD_Out@c,0
  1318     0726  2F28               	goto	u291
  1319     0727  2F29               	goto	u290
  1320     0728                     u291:
  1321     0728  2F3E               	goto	l819
  1322     0729                     u290:
  1323     0729                     l817:
  1324                           
  1325                           ;lcd.c: 19:         *(lcd.PORT) |= 1 << lcd.D4;
  1326     0729  1283               	bcf	3,5	;RP0=0, select bank0
  1327     072A  1303               	bcf	3,6	;RP1=0, select bank0
  1328     072B  0828               	movf	_lcd,w
  1329     072C  0084               	movwf	4
  1330     072D  1783               	bsf	3,7
  1331     072E  1C29               	btfss	_lcd+1,0
  1332     072F  1383               	bcf	3,7
  1333     0730  3001               	movlw	1
  1334     0731  00F0               	movwf	??_LCD_Out
  1335     0732  082B               	movf	_lcd+3,w
  1336     0733  3907               	andlw	7
  1337     0734  3E01               	addlw	1
  1338     0735  2F38               	goto	u304
  1339     0736                     u305:
  1340     0736  1003               	clrc
  1341     0737  0DF0               	rlf	??_LCD_Out,f
  1342     0738                     u304:
  1343     0738  3EFF               	addlw	-1
  1344     0739  1D03               	skipz
  1345     073A  2F36               	goto	u305
  1346     073B  0870               	movf	??_LCD_Out,w
  1347     073C  0480               	iorwf	0,f
  1348                           
  1349                           ;lcd.c: 20:     }
  1350     073D  2F53               	goto	l821
  1351     073E                     l819:
  1352                           
  1353                           ;lcd.c: 22:          *(lcd.PORT) &= ~(1 << lcd.D4);
  1354     073E  1283               	bcf	3,5	;RP0=0, select bank0
  1355     073F  1303               	bcf	3,6	;RP1=0, select bank0
  1356     0740  0828               	movf	_lcd,w
  1357     0741  0084               	movwf	4
  1358     0742  1783               	bsf	3,7
  1359     0743  1C29               	btfss	_lcd+1,0
  1360     0744  1383               	bcf	3,7
  1361     0745  3001               	movlw	1
  1362     0746  00F0               	movwf	??_LCD_Out
  1363     0747  082B               	movf	_lcd+3,w
  1364     0748  3907               	andlw	7
  1365     0749  3E01               	addlw	1
  1366     074A  2F4D               	goto	u314
  1367     074B                     u315:
  1368     074B  1003               	clrc
  1369     074C  0DF0               	rlf	??_LCD_Out,f
  1370     074D                     u314:
  1371     074D  3EFF               	addlw	-1
  1372     074E  1D03               	skipz
  1373     074F  2F4B               	goto	u315
  1374     0750  0870               	movf	??_LCD_Out,w
  1375     0751  3AFF               	xorlw	255
  1376     0752  0580               	andwf	0,f
  1377     0753                     l821:
  1378                           
  1379                           ;lcd.c: 25:     if ( c & 2 ) {
  1380     0753  1CF2               	btfss	LCD_Out@c,1
  1381     0754  2F56               	goto	u321
  1382     0755  2F57               	goto	u320
  1383     0756                     u321:
  1384     0756  2F6D               	goto	l825
  1385     0757                     u320:
  1386     0757                     l823:
  1387                           
  1388                           ;lcd.c: 26:         *(lcd.PORT) |= 1 << lcd.D5;
  1389     0757  0828               	movf	_lcd,w
  1390     0758  0084               	movwf	4
  1391     0759  1783               	bsf	3,7
  1392     075A  1C29               	btfss	_lcd+1,0
  1393     075B  1383               	bcf	3,7
  1394     075C  3001               	movlw	1
  1395     075D  00F0               	movwf	??_LCD_Out
  1396     075E  0C2B               	rrf	_lcd+3,w
  1397     075F  00F1               	movwf	??_LCD_Out+1
  1398     0760  0CF1               	rrf	??_LCD_Out+1,f
  1399     0761  0C71               	rrf	??_LCD_Out+1,w
  1400     0762  3907               	andlw	7
  1401     0763  3E01               	addlw	1
  1402     0764  2F67               	goto	u334
  1403     0765                     u335:
  1404     0765  1003               	clrc
  1405     0766  0DF0               	rlf	??_LCD_Out,f
  1406     0767                     u334:
  1407     0767  3EFF               	addlw	-1
  1408     0768  1D03               	skipz
  1409     0769  2F65               	goto	u335
  1410     076A  0870               	movf	??_LCD_Out,w
  1411     076B  0480               	iorwf	0,f
  1412                           
  1413                           ;lcd.c: 27:     }
  1414     076C  2F83               	goto	l827
  1415     076D                     l825:
  1416                           
  1417                           ;lcd.c: 29:         *(lcd.PORT) &= ~(1 << lcd.D5);
  1418     076D  0828               	movf	_lcd,w
  1419     076E  0084               	movwf	4
  1420     076F  1783               	bsf	3,7
  1421     0770  1C29               	btfss	_lcd+1,0
  1422     0771  1383               	bcf	3,7
  1423     0772  3001               	movlw	1
  1424     0773  00F0               	movwf	??_LCD_Out
  1425     0774  0C2B               	rrf	_lcd+3,w
  1426     0775  00F1               	movwf	??_LCD_Out+1
  1427     0776  0CF1               	rrf	??_LCD_Out+1,f
  1428     0777  0C71               	rrf	??_LCD_Out+1,w
  1429     0778  3907               	andlw	7
  1430     0779  3E01               	addlw	1
  1431     077A  2F7D               	goto	u344
  1432     077B                     u345:
  1433     077B  1003               	clrc
  1434     077C  0DF0               	rlf	??_LCD_Out,f
  1435     077D                     u344:
  1436     077D  3EFF               	addlw	-1
  1437     077E  1D03               	skipz
  1438     077F  2F7B               	goto	u345
  1439     0780  0870               	movf	??_LCD_Out,w
  1440     0781  3AFF               	xorlw	255
  1441     0782  0580               	andwf	0,f
  1442     0783                     l827:
  1443                           
  1444                           ;lcd.c: 32:     if ( c & 4 ) {
  1445     0783  1D72               	btfss	LCD_Out@c,2
  1446     0784  2F86               	goto	u351
  1447     0785  2F87               	goto	u350
  1448     0786                     u351:
  1449     0786  2F9A               	goto	l831
  1450     0787                     u350:
  1451     0787                     l829:
  1452                           
  1453                           ;lcd.c: 33:         *(lcd.PORT) |= 1 << lcd.D6;
  1454     0787  0828               	movf	_lcd,w
  1455     0788  0084               	movwf	4
  1456     0789  1783               	bsf	3,7
  1457     078A  1C29               	btfss	_lcd+1,0
  1458     078B  1383               	bcf	3,7
  1459     078C  3001               	movlw	1
  1460     078D  00F0               	movwf	??_LCD_Out
  1461     078E  082C               	movf	_lcd+4,w
  1462     078F  3907               	andlw	7
  1463     0790  3E01               	addlw	1
  1464     0791  2F94               	goto	u364
  1465     0792                     u365:
  1466     0792  1003               	clrc
  1467     0793  0DF0               	rlf	??_LCD_Out,f
  1468     0794                     u364:
  1469     0794  3EFF               	addlw	-1
  1470     0795  1D03               	skipz
  1471     0796  2F92               	goto	u365
  1472     0797  0870               	movf	??_LCD_Out,w
  1473     0798  0480               	iorwf	0,f
  1474                           
  1475                           ;lcd.c: 34:     }
  1476     0799  2FAD               	goto	l833
  1477     079A                     l831:
  1478                           
  1479                           ;lcd.c: 36:         *(lcd.PORT) &= ~(1 << lcd.D6);
  1480     079A  0828               	movf	_lcd,w
  1481     079B  0084               	movwf	4
  1482     079C  1783               	bsf	3,7
  1483     079D  1C29               	btfss	_lcd+1,0
  1484     079E  1383               	bcf	3,7
  1485     079F  3001               	movlw	1
  1486     07A0  00F0               	movwf	??_LCD_Out
  1487     07A1  082C               	movf	_lcd+4,w
  1488     07A2  3907               	andlw	7
  1489     07A3  3E01               	addlw	1
  1490     07A4  2FA7               	goto	u374
  1491     07A5                     u375:
  1492     07A5  1003               	clrc
  1493     07A6  0DF0               	rlf	??_LCD_Out,f
  1494     07A7                     u374:
  1495     07A7  3EFF               	addlw	-1
  1496     07A8  1D03               	skipz
  1497     07A9  2FA5               	goto	u375
  1498     07AA  0870               	movf	??_LCD_Out,w
  1499     07AB  3AFF               	xorlw	255
  1500     07AC  0580               	andwf	0,f
  1501     07AD                     l833:
  1502                           
  1503                           ;lcd.c: 39:     if ( c & 8 ) {
  1504     07AD  1DF2               	btfss	LCD_Out@c,3
  1505     07AE  2FB0               	goto	u381
  1506     07AF  2FB1               	goto	u380
  1507     07B0                     u381:
  1508     07B0  2FC7               	goto	l837
  1509     07B1                     u380:
  1510     07B1                     l835:
  1511                           
  1512                           ;lcd.c: 40:          *(lcd.PORT) |= 1 << lcd.D7;
  1513     07B1  0828               	movf	_lcd,w
  1514     07B2  0084               	movwf	4
  1515     07B3  1783               	bsf	3,7
  1516     07B4  1C29               	btfss	_lcd+1,0
  1517     07B5  1383               	bcf	3,7
  1518     07B6  3001               	movlw	1
  1519     07B7  00F0               	movwf	??_LCD_Out
  1520     07B8  0C2C               	rrf	_lcd+4,w
  1521     07B9  00F1               	movwf	??_LCD_Out+1
  1522     07BA  0CF1               	rrf	??_LCD_Out+1,f
  1523     07BB  0C71               	rrf	??_LCD_Out+1,w
  1524     07BC  3907               	andlw	7
  1525     07BD  3E01               	addlw	1
  1526     07BE  2FC1               	goto	u394
  1527     07BF                     u395:
  1528     07BF  1003               	clrc
  1529     07C0  0DF0               	rlf	??_LCD_Out,f
  1530     07C1                     u394:
  1531     07C1  3EFF               	addlw	-1
  1532     07C2  1D03               	skipz
  1533     07C3  2FBF               	goto	u395
  1534     07C4  0870               	movf	??_LCD_Out,w
  1535     07C5  0480               	iorwf	0,f
  1536                           
  1537                           ;lcd.c: 41:     }
  1538     07C6  2FDD               	goto	l27
  1539     07C7                     l837:
  1540                           
  1541                           ;lcd.c: 43:          *(lcd.PORT) &= ~(1 << lcd.D7);
  1542     07C7  0828               	movf	_lcd,w
  1543     07C8  0084               	movwf	4
  1544     07C9  1783               	bsf	3,7
  1545     07CA  1C29               	btfss	_lcd+1,0
  1546     07CB  1383               	bcf	3,7
  1547     07CC  3001               	movlw	1
  1548     07CD  00F0               	movwf	??_LCD_Out
  1549     07CE  0C2C               	rrf	_lcd+4,w
  1550     07CF  00F1               	movwf	??_LCD_Out+1
  1551     07D0  0CF1               	rrf	??_LCD_Out+1,f
  1552     07D1  0C71               	rrf	??_LCD_Out+1,w
  1553     07D2  3907               	andlw	7
  1554     07D3  3E01               	addlw	1
  1555     07D4  2FD7               	goto	u404
  1556     07D5                     u405:
  1557     07D5  1003               	clrc
  1558     07D6  0DF0               	rlf	??_LCD_Out,f
  1559     07D7                     u404:
  1560     07D7  3EFF               	addlw	-1
  1561     07D8  1D03               	skipz
  1562     07D9  2FD5               	goto	u405
  1563     07DA  0870               	movf	??_LCD_Out,w
  1564     07DB  3AFF               	xorlw	255
  1565     07DC  0580               	andwf	0,f
  1566     07DD                     l27:
  1567     07DD  0008               	return
  1568     07DE                     __end_of_LCD_Out:
  1569     0002                     ___latbits      equ	2
  1570     007E                     btemp           set	126	;btemp
  1571     007E                     wtemp0          set	126
  1572                           
  1573                           	psect	config
  1574                           
  1575                           ;Config register CONFIG1 @ 0x2007
  1576                           ;	Oscillator Selection bits
  1577                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1578                           ;	Watchdog Timer Enable bit
  1579                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1580                           ;	Power-up Timer Enable bit
  1581                           ;	PWRTE = OFF, PWRT disabled
  1582                           ;	RE3/MCLR pin function select bit
  1583                           ;	MCLRE = 0x1, unprogrammed default
  1584                           ;	Code Protection bit
  1585                           ;	CP = OFF, Program memory code protection is disabled
  1586                           ;	Data Code Protection bit
  1587                           ;	CPD = OFF, Data memory code protection is disabled
  1588                           ;	Brown Out Reset Selection bits
  1589                           ;	BOREN = ON, BOR enabled
  1590                           ;	Internal External Switchover bit
  1591                           ;	IESO = 0x1, unprogrammed default
  1592                           ;	Fail-Safe Clock Monitor Enabled bit
  1593                           ;	FCMEN = 0x1, unprogrammed default
  1594                           ;	Low Voltage Programming Enable bit
  1595                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1596                           ;	In-Circuit Debugger Mode bit
  1597                           ;	DEBUG = 0x1, unprogrammed default
  1598     2007                     	org	8199
  1599     2007  2FF1               	dw	12273
  1600                           
  1601                           ;Config register CONFIG2 @ 0x2008
  1602                           ;	Brown-out Reset Selection bit
  1603                           ;	BOR4V = 0x1, unprogrammed default
  1604                           ;	Flash Program Memory Self Write Enable bits
  1605                           ;	WRT = OFF, Write protection off
  1606     2008                     	org	8200
  1607     2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    0
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4     868
                                              0 BANK0      8     4      4
                           _LCD_Init
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (1) _LCD_putrs                                            3     2      1     265
                                              6 COMMON     3     2      1
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             3     3      0     174
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     216
                                              6 COMMON     8     3      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            3     3      0     145
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Out                                              3     3      0     116
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
   _LCD_putc
     _LCD_Out
   _LCD_putrs
     _LCD_putc

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      8      13     16.2%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      27      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 12 16:55:02 2025

                      pc 0002                       l30 056E                       l27 07DD  
                     l51 0717                       l39 0723                       l55 0677  
                     l67 0519                       l91 0592                       l87 0586  
                     fsr 0004                      l105 059E                      l821 0753  
                    l901 0700                      l831 079A                      l823 0757  
                    l815 0725                      l911 04F6                      l833 07AD  
                    l825 076D                      l817 0729                      l841 0530  
                    l913 04F9                      l835 07B1                      l827 0783  
                    l819 073E                      l843 0536                      l907 0701  
                    l851 05FB                      l915 0506                      l837 07C7  
                    l829 0787                      l845 054D                      l861 0644  
                    l853 060A                      l917 050C                      l847 0556  
                    l839 051B                      l871 0699                      l863 065F  
                    l855 0621                      l951 05BB                      l943 05B1  
                    l927 056F                      l881 06BD                      l873 06A3  
                    l865 0678                      l857 0625                      l849 05E7  
                    l953 05CA                      l937 05A5                      l891 06E6  
                    l883 06C3                      l875 06A7                      l867 0689  
                    l859 063D                      l955 05CE                      l893 06EC  
                    l885 06D1                      l877 06B1                      l869 0695  
                    l957 05D4                      l949 05B5                      l895 06F2  
                    l887 06DA                      l879 06B4                      l897 06F8  
                    l889 06E0                      l899 06FE                      u320 0757  
                    u304 0738                      u321 0756                      u305 0736  
                    u314 074D                      u315 074B                      u404 07D7  
                    u500 0695                      u405 07D5                      u501 0694  
                    u350 0787                      u334 0767                      u414 052A  
                    u510 06A3                      u351 0786                      u335 0765  
                    u415 0528                      u511 06A2                      u344 077D  
                    u424 0548                      u520 06B1                      u345 077B  
                    u425 0546                      u521 06B0                      u505 0691  
                    u290 0729                      u434 0568                      u291 0728  
                    u435 0566                      u515 069F                      u380 07B1  
                    u364 0794                      u444 05F6                      u540 0519  
                    u381 07B0                      u365 0792                      u525 06AD  
                    u445 05F4                      u541 0518                      u374 07A7  
                    u375 07A5                      u535 0704                      u607 065D  
                    u455 05FE                      u464 061C                      u560 05D4  
                    u617 06B8                      u465 061A                      u561 05D3  
                    u394 07C1                      u474 0637                      u395 07BF  
                    u627 06C7                      u475 0635                      u484 0656  
                    u637 06D5                      u485 0654                      u494 0671  
                    u647 0551                      u495 066F                      u577 05C3  
                    u587 05DC                      u597 0623          LCD_Init@display 0076  
                    _lcd 0028                      fsr0 0004                      indf 0000  
        __end_of_LCD_Out 07DE                     STR_1 0009                     _main 056F  
                   btemp 007E                     start 0000              LCD_Init@cmd 007D  
       __end_of_LCD_Init 0724         __end_of_LCD_putc 0678                    ?_main 0020  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  main@c 0027                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07DE             __end_of_main 05E6  
                 ??_main 0024                ??_LCD_Out 0070        __end_of_LCD_Write 056F  
      __end_of_LCD_putrs 051A  __end_of__initialization 07FC                ?_LCD_Init 0076  
              ?_LCD_putc 0070           __pcstackCOMMON 0070             __pidataBANK0 04F1  
              LCD_putc@c 0075               ??_LCD_Init 007B               ??_LCD_putc 0073  
             __pmaintext 056F                  _LCD_Out 0724               __stringtab 0003  
                __ptext1 04F6                  __ptext2 05E6                  __ptext3 0678  
                __ptext4 051A                  __ptext5 0724                _LCD_Write 051A  
   end_of_initialization 07FC                _LCD_putrs 04F6               ?_LCD_Write 0070  
             ?_LCD_putrs 0076               LCD_Write@c 0075      start_initialization 07DE  
             LCD_putrs@a 0076               LCD_putrs@i 0077              __pdataBANK0 0028  
               ?_LCD_Out 0070                ___latbits 0002            __pcstackBANK0 0020  
               LCD_Out@c 0072              ??_LCD_Write 0073              ??_LCD_putrs 0077  
              __pstrings 0003                 _LCD_Init 0678                 _LCD_putc 05E6  
            __stringbase 0008       __end_of__stringtab 0009                 main@argc 0020  
               main@argv 0022                stringcode 0003                 stringdir 0003  
               stringtab 0003  
