

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 23 11:52:51 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 26/03/2025 GMT
    20                           ; 
    21                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0004                     fsr             equ	4
    54     0004                     fsr0            equ	4
    55     0000                     indf            equ	0
    56     0000                     indf0           equ	0
    57     0002                     pc              equ	2
    58     0002                     pcl             equ	2
    59     000A                     pclath          equ	10
    60     0003                     status          equ	3
    61     0000                     INDF            equ	0	;# 
    62     0001                     TMR0            equ	1	;# 
    63     0002                     PCL             equ	2	;# 
    64     0003                     STATUS          equ	3	;# 
    65     0004                     FSR             equ	4	;# 
    66     0005                     PORTA           equ	5	;# 
    67     0006                     PORTB           equ	6	;# 
    68     0007                     PORTC           equ	7	;# 
    69     0008                     PORTD           equ	8	;# 
    70     0009                     PORTE           equ	9	;# 
    71     000A                     PCLATH          equ	10	;# 
    72     000B                     INTCON          equ	11	;# 
    73     000C                     PIR1            equ	12	;# 
    74     000D                     PIR2            equ	13	;# 
    75     000E                     TMR1            equ	14	;# 
    76     000E                     TMR1L           equ	14	;# 
    77     000F                     TMR1H           equ	15	;# 
    78     0010                     T1CON           equ	16	;# 
    79     0011                     TMR2            equ	17	;# 
    80     0012                     T2CON           equ	18	;# 
    81     0013                     SSPBUF          equ	19	;# 
    82     0014                     SSPCON          equ	20	;# 
    83     0015                     CCPR1           equ	21	;# 
    84     0015                     CCPR1L          equ	21	;# 
    85     0016                     CCPR1H          equ	22	;# 
    86     0017                     CCP1CON         equ	23	;# 
    87     0018                     RCSTA           equ	24	;# 
    88     0019                     TXREG           equ	25	;# 
    89     001A                     RCREG           equ	26	;# 
    90     001B                     CCPR2           equ	27	;# 
    91     001B                     CCPR2L          equ	27	;# 
    92     001C                     CCPR2H          equ	28	;# 
    93     001D                     CCP2CON         equ	29	;# 
    94     001E                     ADRESH          equ	30	;# 
    95     001F                     ADCON0          equ	31	;# 
    96     0081                     OPTION_REG      equ	129	;# 
    97     0085                     TRISA           equ	133	;# 
    98     0086                     TRISB           equ	134	;# 
    99     0087                     TRISC           equ	135	;# 
   100     0088                     TRISD           equ	136	;# 
   101     0089                     TRISE           equ	137	;# 
   102     008C                     PIE1            equ	140	;# 
   103     008D                     PIE2            equ	141	;# 
   104     008E                     PCON            equ	142	;# 
   105     008F                     OSCCON          equ	143	;# 
   106     0090                     OSCTUNE         equ	144	;# 
   107     0091                     SSPCON2         equ	145	;# 
   108     0092                     PR2             equ	146	;# 
   109     0093                     SSPADD          equ	147	;# 
   110     0093                     SSPMSK          equ	147	;# 
   111     0093                     MSK             equ	147	;# 
   112     0094                     SSPSTAT         equ	148	;# 
   113     0095                     WPUB            equ	149	;# 
   114     0096                     IOCB            equ	150	;# 
   115     0097                     VRCON           equ	151	;# 
   116     0098                     TXSTA           equ	152	;# 
   117     0099                     SPBRG           equ	153	;# 
   118     009A                     SPBRGH          equ	154	;# 
   119     009B                     PWM1CON         equ	155	;# 
   120     009C                     ECCPAS          equ	156	;# 
   121     009D                     PSTRCON         equ	157	;# 
   122     009E                     ADRESL          equ	158	;# 
   123     009F                     ADCON1          equ	159	;# 
   124     0105                     WDTCON          equ	261	;# 
   125     0107                     CM1CON0         equ	263	;# 
   126     0108                     CM2CON0         equ	264	;# 
   127     0109                     CM2CON1         equ	265	;# 
   128     010C                     EEDATA          equ	268	;# 
   129     010C                     EEDAT           equ	268	;# 
   130     010D                     EEADR           equ	269	;# 
   131     010E                     EEDATH          equ	270	;# 
   132     010F                     EEADRH          equ	271	;# 
   133     0185                     SRCON           equ	389	;# 
   134     0187                     BAUDCTL         equ	391	;# 
   135     0188                     ANSEL           equ	392	;# 
   136     0189                     ANSELH          equ	393	;# 
   137     018C                     EECON1          equ	396	;# 
   138     018D                     EECON2          equ	397	;# 
   139     0000                     INDF            equ	0	;# 
   140     0001                     TMR0            equ	1	;# 
   141     0002                     PCL             equ	2	;# 
   142     0003                     STATUS          equ	3	;# 
   143     0004                     FSR             equ	4	;# 
   144     0005                     PORTA           equ	5	;# 
   145     0006                     PORTB           equ	6	;# 
   146     0007                     PORTC           equ	7	;# 
   147     0008                     PORTD           equ	8	;# 
   148     0009                     PORTE           equ	9	;# 
   149     000A                     PCLATH          equ	10	;# 
   150     000B                     INTCON          equ	11	;# 
   151     000C                     PIR1            equ	12	;# 
   152     000D                     PIR2            equ	13	;# 
   153     000E                     TMR1            equ	14	;# 
   154     000E                     TMR1L           equ	14	;# 
   155     000F                     TMR1H           equ	15	;# 
   156     0010                     T1CON           equ	16	;# 
   157     0011                     TMR2            equ	17	;# 
   158     0012                     T2CON           equ	18	;# 
   159     0013                     SSPBUF          equ	19	;# 
   160     0014                     SSPCON          equ	20	;# 
   161     0015                     CCPR1           equ	21	;# 
   162     0015                     CCPR1L          equ	21	;# 
   163     0016                     CCPR1H          equ	22	;# 
   164     0017                     CCP1CON         equ	23	;# 
   165     0018                     RCSTA           equ	24	;# 
   166     0019                     TXREG           equ	25	;# 
   167     001A                     RCREG           equ	26	;# 
   168     001B                     CCPR2           equ	27	;# 
   169     001B                     CCPR2L          equ	27	;# 
   170     001C                     CCPR2H          equ	28	;# 
   171     001D                     CCP2CON         equ	29	;# 
   172     001E                     ADRESH          equ	30	;# 
   173     001F                     ADCON0          equ	31	;# 
   174     0081                     OPTION_REG      equ	129	;# 
   175     0085                     TRISA           equ	133	;# 
   176     0086                     TRISB           equ	134	;# 
   177     0087                     TRISC           equ	135	;# 
   178     0088                     TRISD           equ	136	;# 
   179     0089                     TRISE           equ	137	;# 
   180     008C                     PIE1            equ	140	;# 
   181     008D                     PIE2            equ	141	;# 
   182     008E                     PCON            equ	142	;# 
   183     008F                     OSCCON          equ	143	;# 
   184     0090                     OSCTUNE         equ	144	;# 
   185     0091                     SSPCON2         equ	145	;# 
   186     0092                     PR2             equ	146	;# 
   187     0093                     SSPADD          equ	147	;# 
   188     0093                     SSPMSK          equ	147	;# 
   189     0093                     MSK             equ	147	;# 
   190     0094                     SSPSTAT         equ	148	;# 
   191     0095                     WPUB            equ	149	;# 
   192     0096                     IOCB            equ	150	;# 
   193     0097                     VRCON           equ	151	;# 
   194     0098                     TXSTA           equ	152	;# 
   195     0099                     SPBRG           equ	153	;# 
   196     009A                     SPBRGH          equ	154	;# 
   197     009B                     PWM1CON         equ	155	;# 
   198     009C                     ECCPAS          equ	156	;# 
   199     009D                     PSTRCON         equ	157	;# 
   200     009E                     ADRESL          equ	158	;# 
   201     009F                     ADCON1          equ	159	;# 
   202     0105                     WDTCON          equ	261	;# 
   203     0107                     CM1CON0         equ	263	;# 
   204     0108                     CM2CON0         equ	264	;# 
   205     0109                     CM2CON1         equ	265	;# 
   206     010C                     EEDATA          equ	268	;# 
   207     010C                     EEDAT           equ	268	;# 
   208     010D                     EEADR           equ	269	;# 
   209     010E                     EEDATH          equ	270	;# 
   210     010F                     EEADRH          equ	271	;# 
   211     0185                     SRCON           equ	389	;# 
   212     0187                     BAUDCTL         equ	391	;# 
   213     0188                     ANSEL           equ	392	;# 
   214     0189                     ANSELH          equ	393	;# 
   215     018C                     EECON1          equ	396	;# 
   216     018D                     EECON2          equ	397	;# 
   217     0000                     INDF            equ	0	;# 
   218     0001                     TMR0            equ	1	;# 
   219     0002                     PCL             equ	2	;# 
   220     0003                     STATUS          equ	3	;# 
   221     0004                     FSR             equ	4	;# 
   222     0005                     PORTA           equ	5	;# 
   223     0006                     PORTB           equ	6	;# 
   224     0007                     PORTC           equ	7	;# 
   225     0008                     PORTD           equ	8	;# 
   226     0009                     PORTE           equ	9	;# 
   227     000A                     PCLATH          equ	10	;# 
   228     000B                     INTCON          equ	11	;# 
   229     000C                     PIR1            equ	12	;# 
   230     000D                     PIR2            equ	13	;# 
   231     000E                     TMR1            equ	14	;# 
   232     000E                     TMR1L           equ	14	;# 
   233     000F                     TMR1H           equ	15	;# 
   234     0010                     T1CON           equ	16	;# 
   235     0011                     TMR2            equ	17	;# 
   236     0012                     T2CON           equ	18	;# 
   237     0013                     SSPBUF          equ	19	;# 
   238     0014                     SSPCON          equ	20	;# 
   239     0015                     CCPR1           equ	21	;# 
   240     0015                     CCPR1L          equ	21	;# 
   241     0016                     CCPR1H          equ	22	;# 
   242     0017                     CCP1CON         equ	23	;# 
   243     0018                     RCSTA           equ	24	;# 
   244     0019                     TXREG           equ	25	;# 
   245     001A                     RCREG           equ	26	;# 
   246     001B                     CCPR2           equ	27	;# 
   247     001B                     CCPR2L          equ	27	;# 
   248     001C                     CCPR2H          equ	28	;# 
   249     001D                     CCP2CON         equ	29	;# 
   250     001E                     ADRESH          equ	30	;# 
   251     001F                     ADCON0          equ	31	;# 
   252     0081                     OPTION_REG      equ	129	;# 
   253     0085                     TRISA           equ	133	;# 
   254     0086                     TRISB           equ	134	;# 
   255     0087                     TRISC           equ	135	;# 
   256     0088                     TRISD           equ	136	;# 
   257     0089                     TRISE           equ	137	;# 
   258     008C                     PIE1            equ	140	;# 
   259     008D                     PIE2            equ	141	;# 
   260     008E                     PCON            equ	142	;# 
   261     008F                     OSCCON          equ	143	;# 
   262     0090                     OSCTUNE         equ	144	;# 
   263     0091                     SSPCON2         equ	145	;# 
   264     0092                     PR2             equ	146	;# 
   265     0093                     SSPADD          equ	147	;# 
   266     0093                     SSPMSK          equ	147	;# 
   267     0093                     MSK             equ	147	;# 
   268     0094                     SSPSTAT         equ	148	;# 
   269     0095                     WPUB            equ	149	;# 
   270     0096                     IOCB            equ	150	;# 
   271     0097                     VRCON           equ	151	;# 
   272     0098                     TXSTA           equ	152	;# 
   273     0099                     SPBRG           equ	153	;# 
   274     009A                     SPBRGH          equ	154	;# 
   275     009B                     PWM1CON         equ	155	;# 
   276     009C                     ECCPAS          equ	156	;# 
   277     009D                     PSTRCON         equ	157	;# 
   278     009E                     ADRESL          equ	158	;# 
   279     009F                     ADCON1          equ	159	;# 
   280     0105                     WDTCON          equ	261	;# 
   281     0107                     CM1CON0         equ	263	;# 
   282     0108                     CM2CON0         equ	264	;# 
   283     0109                     CM2CON1         equ	265	;# 
   284     010C                     EEDATA          equ	268	;# 
   285     010C                     EEDAT           equ	268	;# 
   286     010D                     EEADR           equ	269	;# 
   287     010E                     EEDATH          equ	270	;# 
   288     010F                     EEADRH          equ	271	;# 
   289     0185                     SRCON           equ	389	;# 
   290     0187                     BAUDCTL         equ	391	;# 
   291     0188                     ANSEL           equ	392	;# 
   292     0189                     ANSELH          equ	393	;# 
   293     018C                     EECON1          equ	396	;# 
   294     018D                     EECON2          equ	397	;# 
   295                           
   296                           	psect	idataBANK0
   297     04F9                     __pidataBANK0:
   298                           
   299                           ;initializer for _lcd
   300     04F9  3407               	retlw	7
   301     04FA  3400               	retlw	0
   302     04FB  341A               	retlw	26
   303     04FC  342C               	retlw	44
   304     04FD  343E               	retlw	62
   305     0006                     _PORTB          set	6
   306     0005                     _PORTA          set	5
   307     0007                     _PORTC          set	7
   308     0087                     _TRISC          set	135
   309     0086                     _TRISB          set	134
   310     0085                     _TRISA          set	133
   311                           
   312                           	psect	strings
   313     0003                     __pstrings:
   314     0003                     stringtab:
   315     0003                     __stringtab:
   316     0003                     stringcode:	
   317                           ;	String table - string pointers are 1 byte each
   318                           
   319     0003                     stringdir:
   320     0003  3000               	movlw	high stringdir
   321     0004  008A               	movwf	10
   322     0005  0804               	movf	4,w
   323     0006  0A84               	incf	4,f
   324     0007  0782               	addwf	2,f
   325     0008                     __stringbase:
   326     0008  3400               	retlw	0
   327     0009                     __end_of__stringtab:
   328     0009                     STR_1:
   329     0009  3448               	retlw	72	;'H'
   330     000A  3465               	retlw	101	;'e'
   331     000B  346C               	retlw	108	;'l'
   332     000C  346C               	retlw	108	;'l'
   333     000D  346F               	retlw	111	;'o'
   334     000E  3420               	retlw	32	;' '
   335     000F  3457               	retlw	87	;'W'
   336     0010  346F               	retlw	111	;'o'
   337     0011  3472               	retlw	114	;'r'
   338     0012  346C               	retlw	108	;'l'
   339     0013  3464               	retlw	100	;'d'
   340     0014  3421               	retlw	33	;'!'
   341     0015  3400               	retlw	0
   342                           
   343                           	psect	cinit
   344     07DE                     start_initialization:	
   345                           ; #config settings
   346                           
   347     07DE                     __initialization:
   348                           
   349                           ; Initialize objects allocated to BANK0
   350     07DE  120A  118A  24F9  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   351     07E3  00A8               	movwf	__pdataBANK0& (0+127)
   352     07E4  120A  118A  24FA  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   353     07E9  00A9               	movwf	(__pdataBANK0+1)& (0+127)
   354     07EA  120A  118A  24FB  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   355     07EF  00AA               	movwf	(__pdataBANK0+2)& (0+127)
   356     07F0  120A  118A  24FC  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   357     07F5  00AB               	movwf	(__pdataBANK0+3)& (0+127)
   358     07F6  120A  118A  24FD  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   359     07FB  00AC               	movwf	(__pdataBANK0+4)& (0+127)
   360     07FC                     end_of_initialization:	
   361                           ;End of C runtime variable initialization code
   362                           
   363     07FC                     __end_of__initialization:
   364     07FC  0183               	clrf	3
   365     07FD  120A  118A  2D6F   	ljmp	_main	;jump to C main() function
   366                           
   367                           	psect	dataBANK0
   368     0028                     __pdataBANK0:
   369     0028                     _lcd:
   370     0028                     	ds	5
   371                           
   372                           	psect	cstackCOMMON
   373     0070                     __pcstackCOMMON:
   374     0070                     ?_LCD_Out:
   375     0070                     ?_LCD_Write:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     ?_LCD_putc:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     ??_LCD_Out:	
   382                           ; 1 bytes @ 0x0
   383                           
   384                           
   385                           ; 1 bytes @ 0x0
   386     0070                     	ds	2
   387     0072                     LCD_Out@c:
   388                           
   389                           ; 1 bytes @ 0x2
   390     0072                     	ds	1
   391     0073                     ??_LCD_Write:
   392     0073                     ??_LCD_putc:	
   393                           ; 1 bytes @ 0x3
   394                           
   395                           
   396                           ; 1 bytes @ 0x3
   397     0073                     	ds	2
   398     0075                     LCD_Write@c:
   399     0075                     LCD_putc@c:	
   400                           ; 1 bytes @ 0x5
   401                           
   402                           
   403                           ; 1 bytes @ 0x5
   404     0075                     	ds	1
   405     0076                     ?_LCD_Init:
   406     0076                     ?_LCD_putrs:	
   407                           ; 1 bytes @ 0x6
   408                           
   409     0076                     LCD_putrs@a:	
   410                           ; 1 bytes @ 0x6
   411                           
   412     0076                     LCD_Init@display:	
   413                           ; 1 bytes @ 0x6
   414                           
   415                           
   416                           ; 5 bytes @ 0x6
   417     0076                     	ds	1
   418     0077                     ??_LCD_putrs:
   419                           
   420                           ; 1 bytes @ 0x7
   421     0077                     	ds	4
   422     007B                     ??_LCD_Init:
   423                           
   424                           ; 1 bytes @ 0xB
   425     007B                     	ds	2
   426     007D                     LCD_Init@cmd:
   427                           
   428                           ; 1 bytes @ 0xD
   429     007D                     	ds	1
   430                           
   431                           	psect	cstackBANK0
   432     0020                     __pcstackBANK0:
   433     0020                     ?_main:
   434     0020                     main@argc:	
   435                           ; 2 bytes @ 0x0
   436                           
   437                           
   438                           ; 2 bytes @ 0x0
   439     0020                     	ds	2
   440     0022                     main@argv:
   441                           
   442                           ; 2 bytes @ 0x2
   443     0022                     	ds	2
   444     0024                     ??_main:
   445                           
   446                           ; 1 bytes @ 0x4
   447     0024                     	ds	3
   448     0027                     main@c:
   449                           
   450                           ; 1 bytes @ 0x7
   451     0027                     	ds	1
   452                           
   453                           	psect	maintext
   454     056F                     __pmaintext:	
   455 ;;
   456 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   457 ;;
   458 ;; *************** function _main *****************
   459 ;; Defined at:
   460 ;;		line 27 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  argc            2    0[BANK0 ] int 
   463 ;;  argv            2    2[BANK0 ] PTR PTR unsigned char 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  c               1    7[BANK0 ] unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  2    0[BANK0 ] int 
   468 ;; Registers used:
   469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : B00/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   475 ;;      Params:         0       4       0       0       0
   476 ;;      Locals:         0       1       0       0       0
   477 ;;      Temps:          0       3       0       0       0
   478 ;;      Totals:         0       8       0       0       0
   479 ;;Total ram usage:        8 bytes
   480 ;; Hardware stack levels required when called: 3
   481 ;; This function calls:
   482 ;;		_LCD_Init
   483 ;;		_LCD_Write
   484 ;;		_LCD_putc
   485 ;;		_LCD_putrs
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491     056F                     _main:	
   492                           ;psect for function _main
   493                           
   494     056F                     l927:	
   495                           ;incstack = 0
   496                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   497                           
   498     056F  3076               	movlw	LCD_Init@display& (0+255)
   499     0570  0084               	movwf	4
   500     0571  1283               	bcf	3,5	;RP0=0, select bank0
   501     0572  1303               	bcf	3,6	;RP1=0, select bank0
   502     0573  0828               	movf	_lcd,w
   503     0574  0080               	movwf	0
   504     0575  0A84               	incf	4,f
   505     0576  0829               	movf	_lcd+1,w
   506     0577  0080               	movwf	0
   507     0578  0A84               	incf	4,f
   508     0579  082A               	movf	_lcd+2,w
   509     057A  0080               	movwf	0
   510     057B  0A84               	incf	4,f
   511     057C  082B               	movf	_lcd+3,w
   512     057D  0080               	movwf	0
   513     057E  0A84               	incf	4,f
   514     057F  082C               	movf	_lcd+4,w
   515     0580  0080               	movwf	0
   516     0581  120A  118A  2678  120A  118A  	fcall	_LCD_Init
   517     0586                     l87:
   518     0586  3000               	movlw	0
   519     0587  120A  118A  251A  120A  118A  	fcall	_LCD_Write
   520     058C  3001               	movlw	1
   521     058D  120A  118A  251A  120A  118A  	fcall	_LCD_Write
   522     0592                     l91:
   523     0592  3008               	movlw	8
   524     0593  120A  118A  251A  120A  118A  	fcall	_LCD_Write
   525     0598  3000               	movlw	0
   526     0599  120A  118A  251A  120A  118A  	fcall	_LCD_Write
   527     059E                     l105:
   528     059E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   529     059F  00F6               	movwf	LCD_putrs@a
   530     05A0  120A  118A  24FE  120A  118A  	fcall	_LCD_putrs
   531     05A5                     l937:
   532     05A5  300C               	movlw	12
   533     05A6  120A  118A  251A  120A  118A  	fcall	_LCD_Write
   534     05AB  3000               	movlw	0
   535     05AC  120A  118A  251A  120A  118A  	fcall	_LCD_Write
   536     05B1                     l943:
   537     05B1  3041               	movlw	65
   538     05B2  1283               	bcf	3,5	;RP0=0, select bank0
   539     05B3  1303               	bcf	3,6	;RP1=0, select bank0
   540     05B4  00A7               	movwf	main@c
   541     05B5                     l949:
   542     05B5  0827               	movf	main@c,w
   543     05B6  120A  118A  25E6  120A  118A  	fcall	_LCD_putc
   544     05BB                     l951:
   545     05BB  3002               	movlw	2
   546     05BC  1283               	bcf	3,5	;RP0=0, select bank0
   547     05BD  1303               	bcf	3,6	;RP1=0, select bank0
   548     05BE  00A6               	movwf	??_main+2
   549     05BF  3086               	movlw	134
   550     05C0  00A5               	movwf	??_main+1
   551     05C1  3098               	movlw	152
   552     05C2  00A4               	movwf	??_main
   553     05C3                     u577:
   554     05C3  0BA4               	decfsz	??_main,f
   555     05C4  2DC3               	goto	u577
   556     05C5  0BA5               	decfsz	??_main+1,f
   557     05C6  2DC3               	goto	u577
   558     05C7  0BA6               	decfsz	??_main+2,f
   559     05C8  2DC3               	goto	u577
   560     05C9  0000               	nop
   561     05CA                     l953:
   562     05CA  3001               	movlw	1
   563     05CB  1283               	bcf	3,5	;RP0=0, select bank0
   564     05CC  1303               	bcf	3,6	;RP1=0, select bank0
   565     05CD  07A7               	addwf	main@c,f
   566     05CE                     l955:
   567     05CE  3051               	movlw	81
   568     05CF  0227               	subwf	main@c,w
   569     05D0  1C03               	skipc
   570     05D1  2DD3               	goto	u561
   571     05D2  2DD4               	goto	u560
   572     05D3                     u561:
   573     05D3  2DB5               	goto	l949
   574     05D4                     u560:
   575     05D4                     l957:
   576     05D4  3006               	movlw	6
   577     05D5  1283               	bcf	3,5	;RP0=0, select bank0
   578     05D6  1303               	bcf	3,6	;RP1=0, select bank0
   579     05D7  00A6               	movwf	??_main+2
   580     05D8  3013               	movlw	19
   581     05D9  00A5               	movwf	??_main+1
   582     05DA  30AD               	movlw	173
   583     05DB  00A4               	movwf	??_main
   584     05DC                     u587:
   585     05DC  0BA4               	decfsz	??_main,f
   586     05DD  2DDC               	goto	u587
   587     05DE  0BA5               	decfsz	??_main+1,f
   588     05DF  2DDC               	goto	u587
   589     05E0  0BA6               	decfsz	??_main+2,f
   590     05E1  2DDC               	goto	u587
   591     05E2  2D86               	goto	l87
   592     05E3  120A  118A  2800   	ljmp	start
   593     05E6                     __end_of_main:
   594                           
   595                           	psect	text1
   596     04FE                     __ptext1:	
   597 ;; *************** function _LCD_putrs *****************
   598 ;; Defined at:
   599 ;;		line 133 in file "lcd.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  a               1    6[COMMON] PTR const unsigned char 
   602 ;;		 -> STR_1(13), 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         1       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0
   617 ;;      Totals:         1       0       0       0       0
   618 ;;Total ram usage:        1 bytes
   619 ;; Hardware stack levels used: 1
   620 ;; Hardware stack levels required when called: 2
   621 ;; This function calls:
   622 ;;		_LCD_putc
   623 ;; This function is called by:
   624 ;;		_main
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628     04FE                     _LCD_putrs:	
   629                           ;psect for function _LCD_putrs
   630                           
   631     04FE                     l911:	
   632                           ;incstack = 0
   633                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   634                           
   635                           
   636                           ;lcd.c: 134:     while ( *a ) {
   637     04FE  2D0D               	goto	l917
   638     04FF                     l913:
   639                           
   640                           ;lcd.c: 135:         LCD_putc(*a++);
   641     04FF  0876               	movf	LCD_putrs@a,w
   642     0500  0084               	movwf	4
   643     0501  120A  118A  2003  120A  118A  	fcall	stringdir
   644     0506  120A  118A  25E6  120A  118A  	fcall	_LCD_putc
   645     050B                     l915:
   646     050B  3001               	movlw	1
   647     050C  07F6               	addwf	LCD_putrs@a,f
   648     050D                     l917:
   649                           
   650                           ;lcd.c: 134:     while ( *a ) {
   651     050D  0876               	movf	LCD_putrs@a,w
   652     050E  0084               	movwf	4
   653     050F  120A  118A  2003  120A  118A  	fcall	stringdir
   654     0514  3A00               	xorlw	0
   655     0515  1D03               	skipz
   656     0516  2D18               	goto	u541
   657     0517  2D19               	goto	u540
   658     0518                     u541:
   659     0518  2CFF               	goto	l913
   660     0519                     u540:
   661     0519                     l67:
   662     0519  0008               	return
   663     051A                     __end_of_LCD_putrs:
   664                           
   665                           	psect	text2
   666     05E6                     __ptext2:	
   667 ;; *************** function _LCD_putc *****************
   668 ;; Defined at:
   669 ;;		line 110 in file "lcd.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  c               1    wreg     unsigned char 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  c               1    5[COMMON] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   683 ;;      Params:         0       0       0       0       0
   684 ;;      Locals:         1       0       0       0       0
   685 ;;      Temps:          2       0       0       0       0
   686 ;;      Totals:         3       0       0       0       0
   687 ;;Total ram usage:        3 bytes
   688 ;; Hardware stack levels used: 1
   689 ;; Hardware stack levels required when called: 1
   690 ;; This function calls:
   691 ;;		_LCD_Out
   692 ;; This function is called by:
   693 ;;		_LCD_putrs
   694 ;;		_main
   695 ;;		_LCD_puts
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699     05E6                     _LCD_putc:	
   700                           ;psect for function _LCD_putc
   701                           
   702                           
   703                           ;incstack = 0
   704                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   705                           ;LCD_putc@c stored from wreg
   706     05E6  00F5               	movwf	LCD_putc@c
   707     05E7                     l849:
   708                           
   709                           ;lcd.c: 112:    *(lcd.PORT) |= 1 << lcd.RS;
   710     05E7  1283               	bcf	3,5	;RP0=0, select bank0
   711     05E8  1303               	bcf	3,6	;RP1=0, select bank0
   712     05E9  0828               	movf	_lcd,w
   713     05EA  0084               	movwf	4
   714     05EB  1783               	bsf	3,7
   715     05EC  1C29               	btfss	_lcd+1,0
   716     05ED  1383               	bcf	3,7
   717     05EE  3001               	movlw	1
   718     05EF  00F3               	movwf	??_LCD_putc
   719     05F0  082A               	movf	_lcd+2,w
   720     05F1  3907               	andlw	7
   721     05F2  3E01               	addlw	1
   722     05F3  2DF6               	goto	u444
   723     05F4                     u445:
   724     05F4  1003               	clrc
   725     05F5  0DF3               	rlf	??_LCD_putc,f
   726     05F6                     u444:
   727     05F6  3EFF               	addlw	-1
   728     05F7  1D03               	skipz
   729     05F8  2DF4               	goto	u445
   730     05F9  0873               	movf	??_LCD_putc,w
   731     05FA  0480               	iorwf	0,f
   732     05FB                     l851:
   733                           
   734                           ;lcd.c: 113:     LCD_Out((c & 0xF0) >> 4);
   735     05FB  0875               	movf	LCD_putc@c,w
   736     05FC  00F3               	movwf	??_LCD_putc
   737     05FD  3004               	movlw	4
   738     05FE                     u455:
   739     05FE  1003               	clrc
   740     05FF  0CF3               	rrf	??_LCD_putc,f
   741     0600  3EFF               	addlw	-1
   742     0601  1D03               	skipz
   743     0602  2DFE               	goto	u455
   744     0603  0873               	movf	??_LCD_putc,w
   745     0604  390F               	andlw	15
   746     0605  120A  118A  2724  120A  118A  	fcall	_LCD_Out
   747     060A                     l853:
   748                           
   749                           ;lcd.c: 115:     *(lcd.PORT) |= 1 << lcd.EN;
   750     060A  1283               	bcf	3,5	;RP0=0, select bank0
   751     060B  1303               	bcf	3,6	;RP1=0, select bank0
   752     060C  0828               	movf	_lcd,w
   753     060D  0084               	movwf	4
   754     060E  1783               	bsf	3,7
   755     060F  1C29               	btfss	_lcd+1,0
   756     0610  1383               	bcf	3,7
   757     0611  3001               	movlw	1
   758     0612  00F3               	movwf	??_LCD_putc
   759     0613  0C2A               	rrf	_lcd+2,w
   760     0614  00F4               	movwf	??_LCD_putc+1
   761     0615  0CF4               	rrf	??_LCD_putc+1,f
   762     0616  0C74               	rrf	??_LCD_putc+1,w
   763     0617  3907               	andlw	7
   764     0618  3E01               	addlw	1
   765     0619  2E1C               	goto	u464
   766     061A                     u465:
   767     061A  1003               	clrc
   768     061B  0DF3               	rlf	??_LCD_putc,f
   769     061C                     u464:
   770     061C  3EFF               	addlw	-1
   771     061D  1D03               	skipz
   772     061E  2E1A               	goto	u465
   773     061F  0873               	movf	??_LCD_putc,w
   774     0620  0480               	iorwf	0,f
   775     0621                     l855:
   776                           
   777                           ;lcd.c: 116:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   778     0621  300D               	movlw	13
   779     0622  00F3               	movwf	??_LCD_putc
   780     0623                     u597:
   781     0623  0BF3               	decfsz	??_LCD_putc,f
   782     0624  2E23               	goto	u597
   783     0625                     l857:
   784                           
   785                           ;lcd.c: 117:     *(lcd.PORT) &= ~(1 << lcd.EN);
   786     0625  1283               	bcf	3,5	;RP0=0, select bank0
   787     0626  1303               	bcf	3,6	;RP1=0, select bank0
   788     0627  0828               	movf	_lcd,w
   789     0628  0084               	movwf	4
   790     0629  1783               	bsf	3,7
   791     062A  1C29               	btfss	_lcd+1,0
   792     062B  1383               	bcf	3,7
   793     062C  3001               	movlw	1
   794     062D  00F3               	movwf	??_LCD_putc
   795     062E  0C2A               	rrf	_lcd+2,w
   796     062F  00F4               	movwf	??_LCD_putc+1
   797     0630  0CF4               	rrf	??_LCD_putc+1,f
   798     0631  0C74               	rrf	??_LCD_putc+1,w
   799     0632  3907               	andlw	7
   800     0633  3E01               	addlw	1
   801     0634  2E37               	goto	u474
   802     0635                     u475:
   803     0635  1003               	clrc
   804     0636  0DF3               	rlf	??_LCD_putc,f
   805     0637                     u474:
   806     0637  3EFF               	addlw	-1
   807     0638  1D03               	skipz
   808     0639  2E35               	goto	u475
   809     063A  0873               	movf	??_LCD_putc,w
   810     063B  3AFF               	xorlw	255
   811     063C  0580               	andwf	0,f
   812     063D                     l859:
   813                           
   814                           ;lcd.c: 119:     LCD_Out(c & 0x0F);
   815     063D  0875               	movf	LCD_putc@c,w
   816     063E  390F               	andlw	15
   817     063F  120A  118A  2724  120A  118A  	fcall	_LCD_Out
   818     0644                     l861:
   819                           
   820                           ;lcd.c: 121:     *(lcd.PORT) |= 1 << lcd.EN;
   821     0644  1283               	bcf	3,5	;RP0=0, select bank0
   822     0645  1303               	bcf	3,6	;RP1=0, select bank0
   823     0646  0828               	movf	_lcd,w
   824     0647  0084               	movwf	4
   825     0648  1783               	bsf	3,7
   826     0649  1C29               	btfss	_lcd+1,0
   827     064A  1383               	bcf	3,7
   828     064B  3001               	movlw	1
   829     064C  00F3               	movwf	??_LCD_putc
   830     064D  0C2A               	rrf	_lcd+2,w
   831     064E  00F4               	movwf	??_LCD_putc+1
   832     064F  0CF4               	rrf	??_LCD_putc+1,f
   833     0650  0C74               	rrf	??_LCD_putc+1,w
   834     0651  3907               	andlw	7
   835     0652  3E01               	addlw	1
   836     0653  2E56               	goto	u484
   837     0654                     u485:
   838     0654  1003               	clrc
   839     0655  0DF3               	rlf	??_LCD_putc,f
   840     0656                     u484:
   841     0656  3EFF               	addlw	-1
   842     0657  1D03               	skipz
   843     0658  2E54               	goto	u485
   844     0659  0873               	movf	??_LCD_putc,w
   845     065A  0480               	iorwf	0,f
   846                           
   847                           ;lcd.c: 122:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   848     065B  300D               	movlw	13
   849     065C  00F3               	movwf	??_LCD_putc
   850     065D                     u607:
   851     065D  0BF3               	decfsz	??_LCD_putc,f
   852     065E  2E5D               	goto	u607
   853     065F                     l863:
   854                           
   855                           ;lcd.c: 123:     *(lcd.PORT) &= ~(1 << lcd.EN);
   856     065F  1283               	bcf	3,5	;RP0=0, select bank0
   857     0660  1303               	bcf	3,6	;RP1=0, select bank0
   858     0661  0828               	movf	_lcd,w
   859     0662  0084               	movwf	4
   860     0663  1783               	bsf	3,7
   861     0664  1C29               	btfss	_lcd+1,0
   862     0665  1383               	bcf	3,7
   863     0666  3001               	movlw	1
   864     0667  00F3               	movwf	??_LCD_putc
   865     0668  0C2A               	rrf	_lcd+2,w
   866     0669  00F4               	movwf	??_LCD_putc+1
   867     066A  0CF4               	rrf	??_LCD_putc+1,f
   868     066B  0C74               	rrf	??_LCD_putc+1,w
   869     066C  3907               	andlw	7
   870     066D  3E01               	addlw	1
   871     066E  2E71               	goto	u494
   872     066F                     u495:
   873     066F  1003               	clrc
   874     0670  0DF3               	rlf	??_LCD_putc,f
   875     0671                     u494:
   876     0671  3EFF               	addlw	-1
   877     0672  1D03               	skipz
   878     0673  2E6F               	goto	u495
   879     0674  0873               	movf	??_LCD_putc,w
   880     0675  3AFF               	xorlw	255
   881     0676  0580               	andwf	0,f
   882     0677                     l55:
   883     0677  0008               	return
   884     0678                     __end_of_LCD_putc:
   885                           
   886                           	psect	text3
   887     0678                     __ptext3:	
   888 ;; *************** function _LCD_Init *****************
   889 ;; Defined at:
   890 ;;		line 52 in file "lcd.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  display         5    6[COMMON] struct .
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  cmd             1   13[COMMON] unsigned char 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      _Bool 
   897 ;; Registers used:
   898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   904 ;;      Params:         5       0       0       0       0
   905 ;;      Locals:         1       0       0       0       0
   906 ;;      Temps:          2       0       0       0       0
   907 ;;      Totals:         8       0       0       0       0
   908 ;;Total ram usage:        8 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; Hardware stack levels required when called: 2
   911 ;; This function calls:
   912 ;;		_LCD_Write
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918     0678                     _LCD_Init:	
   919                           ;psect for function _LCD_Init
   920                           
   921     0678                     l865:	
   922                           ;incstack = 0
   923                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   924                           
   925                           
   926                           ;lcd.c: 54:     lcd = display;
   927     0678  3028               	movlw	_lcd& (0+255)
   928     0679  0084               	movwf	4
   929     067A  0876               	movf	LCD_Init@display,w
   930     067B  1383               	bcf	3,7	;select IRP bank0
   931     067C  0080               	movwf	0
   932     067D  0A84               	incf	4,f
   933     067E  0877               	movf	LCD_Init@display+1,w
   934     067F  0080               	movwf	0
   935     0680  0A84               	incf	4,f
   936     0681  0878               	movf	LCD_Init@display+2,w
   937     0682  0080               	movwf	0
   938     0683  0A84               	incf	4,f
   939     0684  0879               	movf	LCD_Init@display+3,w
   940     0685  0080               	movwf	0
   941     0686  0A84               	incf	4,f
   942     0687  087A               	movf	LCD_Init@display+4,w
   943     0688  0080               	movwf	0
   944     0689                     l867:
   945                           
   946                           ;lcd.c: 63:     if ( lcd.PORT == &PORTA ) {
   947     0689  3000               	movlw	0
   948     068A  1283               	bcf	3,5	;RP0=0, select bank0
   949     068B  1303               	bcf	3,6	;RP1=0, select bank0
   950     068C  0629               	xorwf	_lcd+1,w
   951     068D  1D03               	skipz
   952     068E  2E91               	goto	u505
   953     068F  3005               	movlw	5
   954     0690  0628               	xorwf	_lcd,w
   955     0691                     u505:
   956     0691  1D03               	skipz
   957     0692  2E94               	goto	u501
   958     0693  2E95               	goto	u500
   959     0694                     u501:
   960     0694  2E99               	goto	l871
   961     0695                     u500:
   962     0695                     l869:
   963                           
   964                           ;lcd.c: 64:         TRISA = 0x00;
   965     0695  1683               	bsf	3,5	;RP0=1, select bank1
   966     0696  1303               	bcf	3,6	;RP1=0, select bank1
   967     0697  0185               	clrf	5	;volatile
   968                           
   969                           ;lcd.c: 65:     }
   970     0698  2EB4               	goto	l879
   971     0699                     l871:
   972     0699  3000               	movlw	0
   973     069A  0629               	xorwf	_lcd+1,w
   974     069B  1D03               	skipz
   975     069C  2E9F               	goto	u515
   976     069D  3006               	movlw	6
   977     069E  0628               	xorwf	_lcd,w
   978     069F                     u515:
   979     069F  1D03               	skipz
   980     06A0  2EA2               	goto	u511
   981     06A1  2EA3               	goto	u510
   982     06A2                     u511:
   983     06A2  2EA7               	goto	l875
   984     06A3                     u510:
   985     06A3                     l873:
   986                           
   987                           ;lcd.c: 67:         TRISB = 0x00;
   988     06A3  1683               	bsf	3,5	;RP0=1, select bank1
   989     06A4  1303               	bcf	3,6	;RP1=0, select bank1
   990     06A5  0186               	clrf	6	;volatile
   991                           
   992                           ;lcd.c: 68:     }
   993     06A6  2EB4               	goto	l879
   994     06A7                     l875:
   995     06A7  3000               	movlw	0
   996     06A8  0629               	xorwf	_lcd+1,w
   997     06A9  1D03               	skipz
   998     06AA  2EAD               	goto	u525
   999     06AB  3007               	movlw	7
  1000     06AC  0628               	xorwf	_lcd,w
  1001     06AD                     u525:
  1002     06AD  1D03               	skipz
  1003     06AE  2EB0               	goto	u521
  1004     06AF  2EB1               	goto	u520
  1005     06B0                     u521:
  1006     06B0  2F23               	goto	l39
  1007     06B1                     u520:
  1008     06B1                     l877:
  1009                           
  1010                           ;lcd.c: 70:         TRISC = 0x00;
  1011     06B1  1683               	bsf	3,5	;RP0=1, select bank1
  1012     06B2  1303               	bcf	3,6	;RP1=0, select bank1
  1013     06B3  0187               	clrf	7	;volatile
  1014     06B4                     l879:	
  1015                           ;lcd.c: 71:     }
  1016                           
  1017                           
  1018                           ;lcd.c: 85:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1019     06B4  301A               	movlw	26
  1020     06B5  00FC               	movwf	??_LCD_Init+1
  1021     06B6  30F8               	movlw	248
  1022     06B7  00FB               	movwf	??_LCD_Init
  1023     06B8                     u617:
  1024     06B8  0BFB               	decfsz	??_LCD_Init,f
  1025     06B9  2EB8               	goto	u617
  1026     06BA  0BFC               	decfsz	??_LCD_Init+1,f
  1027     06BB  2EB8               	goto	u617
  1028     06BC  0000               	nop
  1029     06BD                     l881:
  1030                           
  1031                           ;lcd.c: 88:     LCD_Write(0x03);
  1032     06BD  3003               	movlw	3
  1033     06BE  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1034     06C3                     l883:
  1035                           
  1036                           ;lcd.c: 89:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1037     06C3  3007               	movlw	7
  1038     06C4  00FC               	movwf	??_LCD_Init+1
  1039     06C5  307D               	movlw	125
  1040     06C6  00FB               	movwf	??_LCD_Init
  1041     06C7                     u627:
  1042     06C7  0BFB               	decfsz	??_LCD_Init,f
  1043     06C8  2EC7               	goto	u627
  1044     06C9  0BFC               	decfsz	??_LCD_Init+1,f
  1045     06CA  2EC7               	goto	u627
  1046                           
  1047                           ;lcd.c: 90:     LCD_Write(0x03);
  1048     06CB  3003               	movlw	3
  1049     06CC  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1050     06D1                     l885:
  1051                           
  1052                           ;lcd.c: 91:     _delay((unsigned long)((16)*(4000000/4000.0)));
  1053     06D1  3015               	movlw	21
  1054     06D2  00FC               	movwf	??_LCD_Init+1
  1055     06D3  30C6               	movlw	198
  1056     06D4  00FB               	movwf	??_LCD_Init
  1057     06D5                     u637:
  1058     06D5  0BFB               	decfsz	??_LCD_Init,f
  1059     06D6  2ED5               	goto	u637
  1060     06D7  0BFC               	decfsz	??_LCD_Init+1,f
  1061     06D8  2ED5               	goto	u637
  1062     06D9  0000               	nop
  1063     06DA                     l887:
  1064                           
  1065                           ;lcd.c: 92:     LCD_Write(0x03);
  1066     06DA  3003               	movlw	3
  1067     06DB  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1068     06E0                     l889:
  1069                           
  1070                           ;lcd.c: 95:     LCD_Write(0x02);
  1071     06E0  3002               	movlw	2
  1072     06E1  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1073     06E6                     l891:
  1074     06E6  3002               	movlw	2
  1075     06E7  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1076     06EC                     l893:
  1077     06EC  3008               	movlw	8
  1078     06ED  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1079     06F2                     l895:
  1080     06F2  3000               	movlw	0
  1081     06F3  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1082     06F8                     l897:
  1083     06F8  3006               	movlw	6
  1084     06F9  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1085     06FE                     l899:
  1086     06FE  3008               	movlw	8
  1087     06FF  00FD               	movwf	LCD_Init@cmd
  1088     0700                     l901:
  1089     0700  157D               	bsf	LCD_Init@cmd,2
  1090     0701                     l907:
  1091     0701  087D               	movf	LCD_Init@cmd,w
  1092     0702  00FB               	movwf	??_LCD_Init
  1093     0703  3004               	movlw	4
  1094     0704                     u535:
  1095     0704  1003               	clrc
  1096     0705  0CFB               	rrf	??_LCD_Init,f
  1097     0706  3EFF               	addlw	-1
  1098     0707  1D03               	skipz
  1099     0708  2F04               	goto	u535
  1100     0709  087B               	movf	??_LCD_Init,w
  1101     070A  390F               	andlw	15
  1102     070B  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1103     0710  087D               	movf	LCD_Init@cmd,w
  1104     0711  390F               	andlw	15
  1105     0712  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1106     0717                     l51:	
  1107                           ;lcd.c: 105:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while 
      +                          ( 0 );
  1108                           
  1109     0717  3000               	movlw	0
  1110     0718  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1111     071D  3001               	movlw	1
  1112     071E  120A  118A  251A  120A  118A  	fcall	_LCD_Write
  1113     0723                     l39:
  1114     0723  0008               	return
  1115     0724                     __end_of_LCD_Init:
  1116                           
  1117                           	psect	text4
  1118     051A                     __ptext4:	
  1119 ;; *************** function _LCD_Write *****************
  1120 ;; Defined at:
  1121 ;;		line 41 in file "lcd.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  c               1    wreg     unsigned char 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  c               1    5[COMMON] unsigned char 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         0       0       0       0       0
  1136 ;;      Locals:         1       0       0       0       0
  1137 ;;      Temps:          2       0       0       0       0
  1138 ;;      Totals:         3       0       0       0       0
  1139 ;;Total ram usage:        3 bytes
  1140 ;; Hardware stack levels used: 1
  1141 ;; Hardware stack levels required when called: 1
  1142 ;; This function calls:
  1143 ;;		_LCD_Out
  1144 ;; This function is called by:
  1145 ;;		_LCD_Init
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150     051A                     _LCD_Write:	
  1151                           ;psect for function _LCD_Write
  1152                           
  1153                           
  1154                           ;incstack = 0
  1155                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1156                           ;LCD_Write@c stored from wreg
  1157     051A  00F5               	movwf	LCD_Write@c
  1158     051B                     l839:
  1159                           
  1160                           ;lcd.c: 43:     *(lcd.PORT) &= ~(1 << lcd.RS);
  1161     051B  1283               	bcf	3,5	;RP0=0, select bank0
  1162     051C  1303               	bcf	3,6	;RP1=0, select bank0
  1163     051D  0828               	movf	_lcd,w
  1164     051E  0084               	movwf	4
  1165     051F  1783               	bsf	3,7
  1166     0520  1C29               	btfss	_lcd+1,0
  1167     0521  1383               	bcf	3,7
  1168     0522  3001               	movlw	1
  1169     0523  00F3               	movwf	??_LCD_Write
  1170     0524  082A               	movf	_lcd+2,w
  1171     0525  3907               	andlw	7
  1172     0526  3E01               	addlw	1
  1173     0527  2D2A               	goto	u414
  1174     0528                     u415:
  1175     0528  1003               	clrc
  1176     0529  0DF3               	rlf	??_LCD_Write,f
  1177     052A                     u414:
  1178     052A  3EFF               	addlw	-1
  1179     052B  1D03               	skipz
  1180     052C  2D28               	goto	u415
  1181     052D  0873               	movf	??_LCD_Write,w
  1182     052E  3AFF               	xorlw	255
  1183     052F  0580               	andwf	0,f
  1184     0530                     l841:
  1185                           
  1186                           ;lcd.c: 44:     LCD_Out(c);
  1187     0530  0875               	movf	LCD_Write@c,w
  1188     0531  120A  118A  2724  120A  118A  	fcall	_LCD_Out
  1189     0536                     l843:
  1190                           
  1191                           ;lcd.c: 46:     *(lcd.PORT) |= 1 << lcd.EN;
  1192     0536  1283               	bcf	3,5	;RP0=0, select bank0
  1193     0537  1303               	bcf	3,6	;RP1=0, select bank0
  1194     0538  0828               	movf	_lcd,w
  1195     0539  0084               	movwf	4
  1196     053A  1783               	bsf	3,7
  1197     053B  1C29               	btfss	_lcd+1,0
  1198     053C  1383               	bcf	3,7
  1199     053D  3001               	movlw	1
  1200     053E  00F3               	movwf	??_LCD_Write
  1201     053F  0C2A               	rrf	_lcd+2,w
  1202     0540  00F4               	movwf	??_LCD_Write+1
  1203     0541  0CF4               	rrf	??_LCD_Write+1,f
  1204     0542  0C74               	rrf	??_LCD_Write+1,w
  1205     0543  3907               	andlw	7
  1206     0544  3E01               	addlw	1
  1207     0545  2D48               	goto	u424
  1208     0546                     u425:
  1209     0546  1003               	clrc
  1210     0547  0DF3               	rlf	??_LCD_Write,f
  1211     0548                     u424:
  1212     0548  3EFF               	addlw	-1
  1213     0549  1D03               	skipz
  1214     054A  2D46               	goto	u425
  1215     054B  0873               	movf	??_LCD_Write,w
  1216     054C  0480               	iorwf	0,f
  1217     054D                     l845:
  1218                           
  1219                           ;lcd.c: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1220     054D  3006               	movlw	6
  1221     054E  00F4               	movwf	??_LCD_Write+1
  1222     054F  3030               	movlw	48
  1223     0550  00F3               	movwf	??_LCD_Write
  1224     0551                     u647:
  1225     0551  0BF3               	decfsz	??_LCD_Write,f
  1226     0552  2D51               	goto	u647
  1227     0553  0BF4               	decfsz	??_LCD_Write+1,f
  1228     0554  2D51               	goto	u647
  1229     0555  0000               	nop
  1230     0556                     l847:
  1231                           
  1232                           ;lcd.c: 48:     *(lcd.PORT) &= ~(1 << lcd.EN);
  1233     0556  1283               	bcf	3,5	;RP0=0, select bank0
  1234     0557  1303               	bcf	3,6	;RP1=0, select bank0
  1235     0558  0828               	movf	_lcd,w
  1236     0559  0084               	movwf	4
  1237     055A  1783               	bsf	3,7
  1238     055B  1C29               	btfss	_lcd+1,0
  1239     055C  1383               	bcf	3,7
  1240     055D  3001               	movlw	1
  1241     055E  00F3               	movwf	??_LCD_Write
  1242     055F  0C2A               	rrf	_lcd+2,w
  1243     0560  00F4               	movwf	??_LCD_Write+1
  1244     0561  0CF4               	rrf	??_LCD_Write+1,f
  1245     0562  0C74               	rrf	??_LCD_Write+1,w
  1246     0563  3907               	andlw	7
  1247     0564  3E01               	addlw	1
  1248     0565  2D68               	goto	u434
  1249     0566                     u435:
  1250     0566  1003               	clrc
  1251     0567  0DF3               	rlf	??_LCD_Write,f
  1252     0568                     u434:
  1253     0568  3EFF               	addlw	-1
  1254     0569  1D03               	skipz
  1255     056A  2D66               	goto	u435
  1256     056B  0873               	movf	??_LCD_Write,w
  1257     056C  3AFF               	xorlw	255
  1258     056D  0580               	andwf	0,f
  1259     056E                     l30:
  1260     056E  0008               	return
  1261     056F                     __end_of_LCD_Write:
  1262                           
  1263                           	psect	text5
  1264     0724                     __ptext5:	
  1265 ;; *************** function _LCD_Out *****************
  1266 ;; Defined at:
  1267 ;;		line 9 in file "lcd.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  c               1    wreg     unsigned char 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  c               1    2[COMMON] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         1       0       0       0       0
  1283 ;;      Temps:          2       0       0       0       0
  1284 ;;      Totals:         3       0       0       0       0
  1285 ;;Total ram usage:        3 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; This function calls:
  1288 ;;		Nothing
  1289 ;; This function is called by:
  1290 ;;		_LCD_Write
  1291 ;;		_LCD_putc
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295     0724                     _LCD_Out:	
  1296                           ;psect for function _LCD_Out
  1297                           
  1298                           
  1299                           ;incstack = 0
  1300                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  1301                           ;LCD_Out@c stored from wreg
  1302     0724  00F2               	movwf	LCD_Out@c
  1303     0725                     l815:
  1304                           
  1305                           ;lcd.c: 11:     if ( c & 1 ){
  1306     0725  1C72               	btfss	LCD_Out@c,0
  1307     0726  2F28               	goto	u291
  1308     0727  2F29               	goto	u290
  1309     0728                     u291:
  1310     0728  2F3E               	goto	l819
  1311     0729                     u290:
  1312     0729                     l817:
  1313                           
  1314                           ;lcd.c: 12:         *(lcd.PORT) |= 1 << lcd.D4;
  1315     0729  1283               	bcf	3,5	;RP0=0, select bank0
  1316     072A  1303               	bcf	3,6	;RP1=0, select bank0
  1317     072B  0828               	movf	_lcd,w
  1318     072C  0084               	movwf	4
  1319     072D  1783               	bsf	3,7
  1320     072E  1C29               	btfss	_lcd+1,0
  1321     072F  1383               	bcf	3,7
  1322     0730  3001               	movlw	1
  1323     0731  00F0               	movwf	??_LCD_Out
  1324     0732  082B               	movf	_lcd+3,w
  1325     0733  3907               	andlw	7
  1326     0734  3E01               	addlw	1
  1327     0735  2F38               	goto	u304
  1328     0736                     u305:
  1329     0736  1003               	clrc
  1330     0737  0DF0               	rlf	??_LCD_Out,f
  1331     0738                     u304:
  1332     0738  3EFF               	addlw	-1
  1333     0739  1D03               	skipz
  1334     073A  2F36               	goto	u305
  1335     073B  0870               	movf	??_LCD_Out,w
  1336     073C  0480               	iorwf	0,f
  1337                           
  1338                           ;lcd.c: 13:     }
  1339     073D  2F53               	goto	l821
  1340     073E                     l819:
  1341                           
  1342                           ;lcd.c: 15:          *(lcd.PORT) &= ~(1 << lcd.D4);
  1343     073E  1283               	bcf	3,5	;RP0=0, select bank0
  1344     073F  1303               	bcf	3,6	;RP1=0, select bank0
  1345     0740  0828               	movf	_lcd,w
  1346     0741  0084               	movwf	4
  1347     0742  1783               	bsf	3,7
  1348     0743  1C29               	btfss	_lcd+1,0
  1349     0744  1383               	bcf	3,7
  1350     0745  3001               	movlw	1
  1351     0746  00F0               	movwf	??_LCD_Out
  1352     0747  082B               	movf	_lcd+3,w
  1353     0748  3907               	andlw	7
  1354     0749  3E01               	addlw	1
  1355     074A  2F4D               	goto	u314
  1356     074B                     u315:
  1357     074B  1003               	clrc
  1358     074C  0DF0               	rlf	??_LCD_Out,f
  1359     074D                     u314:
  1360     074D  3EFF               	addlw	-1
  1361     074E  1D03               	skipz
  1362     074F  2F4B               	goto	u315
  1363     0750  0870               	movf	??_LCD_Out,w
  1364     0751  3AFF               	xorlw	255
  1365     0752  0580               	andwf	0,f
  1366     0753                     l821:
  1367                           
  1368                           ;lcd.c: 18:     if ( c & 2 ) {
  1369     0753  1CF2               	btfss	LCD_Out@c,1
  1370     0754  2F56               	goto	u321
  1371     0755  2F57               	goto	u320
  1372     0756                     u321:
  1373     0756  2F6D               	goto	l825
  1374     0757                     u320:
  1375     0757                     l823:
  1376                           
  1377                           ;lcd.c: 19:         *(lcd.PORT) |= 1 << lcd.D5;
  1378     0757  0828               	movf	_lcd,w
  1379     0758  0084               	movwf	4
  1380     0759  1783               	bsf	3,7
  1381     075A  1C29               	btfss	_lcd+1,0
  1382     075B  1383               	bcf	3,7
  1383     075C  3001               	movlw	1
  1384     075D  00F0               	movwf	??_LCD_Out
  1385     075E  0C2B               	rrf	_lcd+3,w
  1386     075F  00F1               	movwf	??_LCD_Out+1
  1387     0760  0CF1               	rrf	??_LCD_Out+1,f
  1388     0761  0C71               	rrf	??_LCD_Out+1,w
  1389     0762  3907               	andlw	7
  1390     0763  3E01               	addlw	1
  1391     0764  2F67               	goto	u334
  1392     0765                     u335:
  1393     0765  1003               	clrc
  1394     0766  0DF0               	rlf	??_LCD_Out,f
  1395     0767                     u334:
  1396     0767  3EFF               	addlw	-1
  1397     0768  1D03               	skipz
  1398     0769  2F65               	goto	u335
  1399     076A  0870               	movf	??_LCD_Out,w
  1400     076B  0480               	iorwf	0,f
  1401                           
  1402                           ;lcd.c: 20:     }
  1403     076C  2F83               	goto	l827
  1404     076D                     l825:
  1405                           
  1406                           ;lcd.c: 22:         *(lcd.PORT) &= ~(1 << lcd.D5);
  1407     076D  0828               	movf	_lcd,w
  1408     076E  0084               	movwf	4
  1409     076F  1783               	bsf	3,7
  1410     0770  1C29               	btfss	_lcd+1,0
  1411     0771  1383               	bcf	3,7
  1412     0772  3001               	movlw	1
  1413     0773  00F0               	movwf	??_LCD_Out
  1414     0774  0C2B               	rrf	_lcd+3,w
  1415     0775  00F1               	movwf	??_LCD_Out+1
  1416     0776  0CF1               	rrf	??_LCD_Out+1,f
  1417     0777  0C71               	rrf	??_LCD_Out+1,w
  1418     0778  3907               	andlw	7
  1419     0779  3E01               	addlw	1
  1420     077A  2F7D               	goto	u344
  1421     077B                     u345:
  1422     077B  1003               	clrc
  1423     077C  0DF0               	rlf	??_LCD_Out,f
  1424     077D                     u344:
  1425     077D  3EFF               	addlw	-1
  1426     077E  1D03               	skipz
  1427     077F  2F7B               	goto	u345
  1428     0780  0870               	movf	??_LCD_Out,w
  1429     0781  3AFF               	xorlw	255
  1430     0782  0580               	andwf	0,f
  1431     0783                     l827:
  1432                           
  1433                           ;lcd.c: 25:     if ( c & 4 ) {
  1434     0783  1D72               	btfss	LCD_Out@c,2
  1435     0784  2F86               	goto	u351
  1436     0785  2F87               	goto	u350
  1437     0786                     u351:
  1438     0786  2F9A               	goto	l831
  1439     0787                     u350:
  1440     0787                     l829:
  1441                           
  1442                           ;lcd.c: 26:         *(lcd.PORT) |= 1 << lcd.D6;
  1443     0787  0828               	movf	_lcd,w
  1444     0788  0084               	movwf	4
  1445     0789  1783               	bsf	3,7
  1446     078A  1C29               	btfss	_lcd+1,0
  1447     078B  1383               	bcf	3,7
  1448     078C  3001               	movlw	1
  1449     078D  00F0               	movwf	??_LCD_Out
  1450     078E  082C               	movf	_lcd+4,w
  1451     078F  3907               	andlw	7
  1452     0790  3E01               	addlw	1
  1453     0791  2F94               	goto	u364
  1454     0792                     u365:
  1455     0792  1003               	clrc
  1456     0793  0DF0               	rlf	??_LCD_Out,f
  1457     0794                     u364:
  1458     0794  3EFF               	addlw	-1
  1459     0795  1D03               	skipz
  1460     0796  2F92               	goto	u365
  1461     0797  0870               	movf	??_LCD_Out,w
  1462     0798  0480               	iorwf	0,f
  1463                           
  1464                           ;lcd.c: 27:     }
  1465     0799  2FAD               	goto	l833
  1466     079A                     l831:
  1467                           
  1468                           ;lcd.c: 29:         *(lcd.PORT) &= ~(1 << lcd.D6);
  1469     079A  0828               	movf	_lcd,w
  1470     079B  0084               	movwf	4
  1471     079C  1783               	bsf	3,7
  1472     079D  1C29               	btfss	_lcd+1,0
  1473     079E  1383               	bcf	3,7
  1474     079F  3001               	movlw	1
  1475     07A0  00F0               	movwf	??_LCD_Out
  1476     07A1  082C               	movf	_lcd+4,w
  1477     07A2  3907               	andlw	7
  1478     07A3  3E01               	addlw	1
  1479     07A4  2FA7               	goto	u374
  1480     07A5                     u375:
  1481     07A5  1003               	clrc
  1482     07A6  0DF0               	rlf	??_LCD_Out,f
  1483     07A7                     u374:
  1484     07A7  3EFF               	addlw	-1
  1485     07A8  1D03               	skipz
  1486     07A9  2FA5               	goto	u375
  1487     07AA  0870               	movf	??_LCD_Out,w
  1488     07AB  3AFF               	xorlw	255
  1489     07AC  0580               	andwf	0,f
  1490     07AD                     l833:
  1491                           
  1492                           ;lcd.c: 32:     if ( c & 8 ) {
  1493     07AD  1DF2               	btfss	LCD_Out@c,3
  1494     07AE  2FB0               	goto	u381
  1495     07AF  2FB1               	goto	u380
  1496     07B0                     u381:
  1497     07B0  2FC7               	goto	l837
  1498     07B1                     u380:
  1499     07B1                     l835:
  1500                           
  1501                           ;lcd.c: 33:          *(lcd.PORT) |= 1 << lcd.D7;
  1502     07B1  0828               	movf	_lcd,w
  1503     07B2  0084               	movwf	4
  1504     07B3  1783               	bsf	3,7
  1505     07B4  1C29               	btfss	_lcd+1,0
  1506     07B5  1383               	bcf	3,7
  1507     07B6  3001               	movlw	1
  1508     07B7  00F0               	movwf	??_LCD_Out
  1509     07B8  0C2C               	rrf	_lcd+4,w
  1510     07B9  00F1               	movwf	??_LCD_Out+1
  1511     07BA  0CF1               	rrf	??_LCD_Out+1,f
  1512     07BB  0C71               	rrf	??_LCD_Out+1,w
  1513     07BC  3907               	andlw	7
  1514     07BD  3E01               	addlw	1
  1515     07BE  2FC1               	goto	u394
  1516     07BF                     u395:
  1517     07BF  1003               	clrc
  1518     07C0  0DF0               	rlf	??_LCD_Out,f
  1519     07C1                     u394:
  1520     07C1  3EFF               	addlw	-1
  1521     07C2  1D03               	skipz
  1522     07C3  2FBF               	goto	u395
  1523     07C4  0870               	movf	??_LCD_Out,w
  1524     07C5  0480               	iorwf	0,f
  1525                           
  1526                           ;lcd.c: 34:     }
  1527     07C6  2FDD               	goto	l27
  1528     07C7                     l837:
  1529                           
  1530                           ;lcd.c: 36:          *(lcd.PORT) &= ~(1 << lcd.D7);
  1531     07C7  0828               	movf	_lcd,w
  1532     07C8  0084               	movwf	4
  1533     07C9  1783               	bsf	3,7
  1534     07CA  1C29               	btfss	_lcd+1,0
  1535     07CB  1383               	bcf	3,7
  1536     07CC  3001               	movlw	1
  1537     07CD  00F0               	movwf	??_LCD_Out
  1538     07CE  0C2C               	rrf	_lcd+4,w
  1539     07CF  00F1               	movwf	??_LCD_Out+1
  1540     07D0  0CF1               	rrf	??_LCD_Out+1,f
  1541     07D1  0C71               	rrf	??_LCD_Out+1,w
  1542     07D2  3907               	andlw	7
  1543     07D3  3E01               	addlw	1
  1544     07D4  2FD7               	goto	u404
  1545     07D5                     u405:
  1546     07D5  1003               	clrc
  1547     07D6  0DF0               	rlf	??_LCD_Out,f
  1548     07D7                     u404:
  1549     07D7  3EFF               	addlw	-1
  1550     07D8  1D03               	skipz
  1551     07D9  2FD5               	goto	u405
  1552     07DA  0870               	movf	??_LCD_Out,w
  1553     07DB  3AFF               	xorlw	255
  1554     07DC  0580               	andwf	0,f
  1555     07DD                     l27:
  1556     07DD  0008               	return
  1557     07DE                     __end_of_LCD_Out:
  1558     0002                     ___latbits      equ	2
  1559     007E                     btemp           set	126	;btemp
  1560     007E                     wtemp0          set	126
  1561                           
  1562                           	psect	config
  1563                           
  1564                           ;Config register CONFIG1 @ 0x2007
  1565                           ;	Oscillator Selection bits
  1566                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1567                           ;	Watchdog Timer Enable bit
  1568                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1569                           ;	Power-up Timer Enable bit
  1570                           ;	PWRTE = OFF, PWRT disabled
  1571                           ;	RE3/MCLR pin function select bit
  1572                           ;	MCLRE = 0x1, unprogrammed default
  1573                           ;	Code Protection bit
  1574                           ;	CP = OFF, Program memory code protection is disabled
  1575                           ;	Data Code Protection bit
  1576                           ;	CPD = OFF, Data memory code protection is disabled
  1577                           ;	Brown Out Reset Selection bits
  1578                           ;	BOREN = ON, BOR enabled
  1579                           ;	Internal External Switchover bit
  1580                           ;	IESO = 0x1, unprogrammed default
  1581                           ;	Fail-Safe Clock Monitor Enabled bit
  1582                           ;	FCMEN = 0x1, unprogrammed default
  1583                           ;	Low Voltage Programming Enable bit
  1584                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1585                           ;	In-Circuit Debugger Mode bit
  1586                           ;	DEBUG = 0x1, unprogrammed default
  1587     2007                     	org	8199
  1588     2007  2FF1               	dw	12273
  1589                           
  1590                           ;Config register CONFIG2 @ 0x2008
  1591                           ;	Brown-out Reset Selection bit
  1592                           ;	BOR4V = 0x1, unprogrammed default
  1593                           ;	Flash Program Memory Self Write Enable bits
  1594                           ;	WRT = OFF, Write protection off
  1595     2008                     	org	8200
  1596     2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    0
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     4      4     823
                                              0 BANK0      8     4      4
                           _LCD_Init
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (1) _LCD_putrs                                            1     0      1     220
                                              6 COMMON     1     0      1
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             3     3      0     174
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     216
                                              6 COMMON     8     3      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            3     3      0     145
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Out                                              3     3      0     116
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
   _LCD_putc
     _LCD_Out
   _LCD_putrs
     _LCD_putc

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      8      13     16.2%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      27      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 23 11:52:51 2025

                      pc 0002                       l30 056E                       l27 07DD  
                     l51 0717                       l39 0723                       l55 0677  
                     l67 0519                       l91 0592                       l87 0586  
                     fsr 0004                      l105 059E                      l821 0753  
                    l901 0700                      l831 079A                      l823 0757  
                    l815 0725                      l911 04FE                      l833 07AD  
                    l825 076D                      l817 0729                      l841 0530  
                    l913 04FF                      l835 07B1                      l827 0783  
                    l819 073E                      l843 0536                      l907 0701  
                    l851 05FB                      l915 050B                      l837 07C7  
                    l829 0787                      l845 054D                      l861 0644  
                    l853 060A                      l917 050D                      l847 0556  
                    l839 051B                      l871 0699                      l863 065F  
                    l855 0621                      l951 05BB                      l943 05B1  
                    l927 056F                      l881 06BD                      l873 06A3  
                    l865 0678                      l857 0625                      l849 05E7  
                    l953 05CA                      l937 05A5                      l891 06E6  
                    l883 06C3                      l875 06A7                      l867 0689  
                    l859 063D                      l955 05CE                      l893 06EC  
                    l885 06D1                      l877 06B1                      l869 0695  
                    l957 05D4                      l949 05B5                      l895 06F2  
                    l887 06DA                      l879 06B4                      l897 06F8  
                    l889 06E0                      l899 06FE                      u320 0757  
                    u304 0738                      u321 0756                      u305 0736  
                    u314 074D                      u315 074B                      u404 07D7  
                    u500 0695                      u405 07D5                      u501 0694  
                    u350 0787                      u334 0767                      u414 052A  
                    u510 06A3                      u351 0786                      u335 0765  
                    u415 0528                      u511 06A2                      u344 077D  
                    u424 0548                      u520 06B1                      u345 077B  
                    u425 0546                      u521 06B0                      u505 0691  
                    u290 0729                      u434 0568                      u291 0728  
                    u435 0566                      u515 069F                      u380 07B1  
                    u364 0794                      u444 05F6                      u540 0519  
                    u381 07B0                      u365 0792                      u525 06AD  
                    u445 05F4                      u541 0518                      u374 07A7  
                    u375 07A5                      u535 0704                      u607 065D  
                    u455 05FE                      u464 061C                      u560 05D4  
                    u617 06B8                      u465 061A                      u561 05D3  
                    u394 07C1                      u474 0637                      u395 07BF  
                    u627 06C7                      u475 0635                      u484 0656  
                    u637 06D5                      u485 0654                      u494 0671  
                    u647 0551                      u495 066F                      u577 05C3  
                    u587 05DC                      u597 0623          LCD_Init@display 0076  
                    _lcd 0028                      fsr0 0004                      indf 0000  
        __end_of_LCD_Out 07DE                     STR_1 0009                     _main 056F  
                   btemp 007E                     start 0000              LCD_Init@cmd 007D  
       __end_of_LCD_Init 0724         __end_of_LCD_putc 0678                    ?_main 0020  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  main@c 0027                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07DE             __end_of_main 05E6  
                 ??_main 0024                ??_LCD_Out 0070        __end_of_LCD_Write 056F  
      __end_of_LCD_putrs 051A  __end_of__initialization 07FC                ?_LCD_Init 0076  
              ?_LCD_putc 0070           __pcstackCOMMON 0070             __pidataBANK0 04F9  
              LCD_putc@c 0075               ??_LCD_Init 007B               ??_LCD_putc 0073  
             __pmaintext 056F                  _LCD_Out 0724               __stringtab 0003  
                __ptext1 04FE                  __ptext2 05E6                  __ptext3 0678  
                __ptext4 051A                  __ptext5 0724                _LCD_Write 051A  
   end_of_initialization 07FC                _LCD_putrs 04FE               ?_LCD_Write 0070  
             ?_LCD_putrs 0076               LCD_Write@c 0075      start_initialization 07DE  
             LCD_putrs@a 0076              __pdataBANK0 0028                 ?_LCD_Out 0070  
              ___latbits 0002            __pcstackBANK0 0020                 LCD_Out@c 0072  
            ??_LCD_Write 0073              ??_LCD_putrs 0077                __pstrings 0003  
               _LCD_Init 0678                 _LCD_putc 05E6              __stringbase 0008  
     __end_of__stringtab 0009                 main@argc 0020                 main@argv 0022  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
