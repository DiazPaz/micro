

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Jun 25 18:08:57 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,space=0,delta=2
    12                           	psect	clrtext,global,class=CODE,space=0,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=2
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,space=0,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Generated 26/03/2025 GMT
    37                           ; 
    38                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70     0004                     fsr             equ	4
    71     0004                     fsr0            equ	4
    72     0000                     indf            equ	0
    73     0000                     indf0           equ	0
    74     0002                     pc              equ	2
    75     0002                     pcl             equ	2
    76     000A                     pclath          equ	10
    77     0003                     status          equ	3
    78     0000                     INDF            equ	0	;# 
    79     0001                     TMR0            equ	1	;# 
    80     0002                     PCL             equ	2	;# 
    81     0003                     STATUS          equ	3	;# 
    82     0004                     FSR             equ	4	;# 
    83     0005                     PORTA           equ	5	;# 
    84     0006                     PORTB           equ	6	;# 
    85     0007                     PORTC           equ	7	;# 
    86     0008                     PORTD           equ	8	;# 
    87     0009                     PORTE           equ	9	;# 
    88     000A                     PCLATH          equ	10	;# 
    89     000B                     INTCON          equ	11	;# 
    90     000C                     PIR1            equ	12	;# 
    91     000D                     PIR2            equ	13	;# 
    92     000E                     TMR1            equ	14	;# 
    93     000E                     TMR1L           equ	14	;# 
    94     000F                     TMR1H           equ	15	;# 
    95     0010                     T1CON           equ	16	;# 
    96     0011                     TMR2            equ	17	;# 
    97     0012                     T2CON           equ	18	;# 
    98     0013                     SSPBUF          equ	19	;# 
    99     0014                     SSPCON          equ	20	;# 
   100     0015                     CCPR1           equ	21	;# 
   101     0015                     CCPR1L          equ	21	;# 
   102     0016                     CCPR1H          equ	22	;# 
   103     0017                     CCP1CON         equ	23	;# 
   104     0018                     RCSTA           equ	24	;# 
   105     0019                     TXREG           equ	25	;# 
   106     001A                     RCREG           equ	26	;# 
   107     001B                     CCPR2           equ	27	;# 
   108     001B                     CCPR2L          equ	27	;# 
   109     001C                     CCPR2H          equ	28	;# 
   110     001D                     CCP2CON         equ	29	;# 
   111     001E                     ADRESH          equ	30	;# 
   112     001F                     ADCON0          equ	31	;# 
   113     0081                     OPTION_REG      equ	129	;# 
   114     0085                     TRISA           equ	133	;# 
   115     0086                     TRISB           equ	134	;# 
   116     0087                     TRISC           equ	135	;# 
   117     0088                     TRISD           equ	136	;# 
   118     0089                     TRISE           equ	137	;# 
   119     008C                     PIE1            equ	140	;# 
   120     008D                     PIE2            equ	141	;# 
   121     008E                     PCON            equ	142	;# 
   122     008F                     OSCCON          equ	143	;# 
   123     0090                     OSCTUNE         equ	144	;# 
   124     0091                     SSPCON2         equ	145	;# 
   125     0092                     PR2             equ	146	;# 
   126     0093                     SSPADD          equ	147	;# 
   127     0093                     SSPMSK          equ	147	;# 
   128     0093                     MSK             equ	147	;# 
   129     0094                     SSPSTAT         equ	148	;# 
   130     0095                     WPUB            equ	149	;# 
   131     0096                     IOCB            equ	150	;# 
   132     0097                     VRCON           equ	151	;# 
   133     0098                     TXSTA           equ	152	;# 
   134     0099                     SPBRG           equ	153	;# 
   135     009A                     SPBRGH          equ	154	;# 
   136     009B                     PWM1CON         equ	155	;# 
   137     009C                     ECCPAS          equ	156	;# 
   138     009D                     PSTRCON         equ	157	;# 
   139     009E                     ADRESL          equ	158	;# 
   140     009F                     ADCON1          equ	159	;# 
   141     0105                     WDTCON          equ	261	;# 
   142     0107                     CM1CON0         equ	263	;# 
   143     0108                     CM2CON0         equ	264	;# 
   144     0109                     CM2CON1         equ	265	;# 
   145     010C                     EEDATA          equ	268	;# 
   146     010C                     EEDAT           equ	268	;# 
   147     010D                     EEADR           equ	269	;# 
   148     010E                     EEDATH          equ	270	;# 
   149     010F                     EEADRH          equ	271	;# 
   150     0185                     SRCON           equ	389	;# 
   151     0187                     BAUDCTL         equ	391	;# 
   152     0188                     ANSEL           equ	392	;# 
   153     0189                     ANSELH          equ	393	;# 
   154     018C                     EECON1          equ	396	;# 
   155     018D                     EECON2          equ	397	;# 
   156     0000                     INDF            equ	0	;# 
   157     0001                     TMR0            equ	1	;# 
   158     0002                     PCL             equ	2	;# 
   159     0003                     STATUS          equ	3	;# 
   160     0004                     FSR             equ	4	;# 
   161     0005                     PORTA           equ	5	;# 
   162     0006                     PORTB           equ	6	;# 
   163     0007                     PORTC           equ	7	;# 
   164     0008                     PORTD           equ	8	;# 
   165     0009                     PORTE           equ	9	;# 
   166     000A                     PCLATH          equ	10	;# 
   167     000B                     INTCON          equ	11	;# 
   168     000C                     PIR1            equ	12	;# 
   169     000D                     PIR2            equ	13	;# 
   170     000E                     TMR1            equ	14	;# 
   171     000E                     TMR1L           equ	14	;# 
   172     000F                     TMR1H           equ	15	;# 
   173     0010                     T1CON           equ	16	;# 
   174     0011                     TMR2            equ	17	;# 
   175     0012                     T2CON           equ	18	;# 
   176     0013                     SSPBUF          equ	19	;# 
   177     0014                     SSPCON          equ	20	;# 
   178     0015                     CCPR1           equ	21	;# 
   179     0015                     CCPR1L          equ	21	;# 
   180     0016                     CCPR1H          equ	22	;# 
   181     0017                     CCP1CON         equ	23	;# 
   182     0018                     RCSTA           equ	24	;# 
   183     0019                     TXREG           equ	25	;# 
   184     001A                     RCREG           equ	26	;# 
   185     001B                     CCPR2           equ	27	;# 
   186     001B                     CCPR2L          equ	27	;# 
   187     001C                     CCPR2H          equ	28	;# 
   188     001D                     CCP2CON         equ	29	;# 
   189     001E                     ADRESH          equ	30	;# 
   190     001F                     ADCON0          equ	31	;# 
   191     0081                     OPTION_REG      equ	129	;# 
   192     0085                     TRISA           equ	133	;# 
   193     0086                     TRISB           equ	134	;# 
   194     0087                     TRISC           equ	135	;# 
   195     0088                     TRISD           equ	136	;# 
   196     0089                     TRISE           equ	137	;# 
   197     008C                     PIE1            equ	140	;# 
   198     008D                     PIE2            equ	141	;# 
   199     008E                     PCON            equ	142	;# 
   200     008F                     OSCCON          equ	143	;# 
   201     0090                     OSCTUNE         equ	144	;# 
   202     0091                     SSPCON2         equ	145	;# 
   203     0092                     PR2             equ	146	;# 
   204     0093                     SSPADD          equ	147	;# 
   205     0093                     SSPMSK          equ	147	;# 
   206     0093                     MSK             equ	147	;# 
   207     0094                     SSPSTAT         equ	148	;# 
   208     0095                     WPUB            equ	149	;# 
   209     0096                     IOCB            equ	150	;# 
   210     0097                     VRCON           equ	151	;# 
   211     0098                     TXSTA           equ	152	;# 
   212     0099                     SPBRG           equ	153	;# 
   213     009A                     SPBRGH          equ	154	;# 
   214     009B                     PWM1CON         equ	155	;# 
   215     009C                     ECCPAS          equ	156	;# 
   216     009D                     PSTRCON         equ	157	;# 
   217     009E                     ADRESL          equ	158	;# 
   218     009F                     ADCON1          equ	159	;# 
   219     0105                     WDTCON          equ	261	;# 
   220     0107                     CM1CON0         equ	263	;# 
   221     0108                     CM2CON0         equ	264	;# 
   222     0109                     CM2CON1         equ	265	;# 
   223     010C                     EEDATA          equ	268	;# 
   224     010C                     EEDAT           equ	268	;# 
   225     010D                     EEADR           equ	269	;# 
   226     010E                     EEDATH          equ	270	;# 
   227     010F                     EEADRH          equ	271	;# 
   228     0185                     SRCON           equ	389	;# 
   229     0187                     BAUDCTL         equ	391	;# 
   230     0188                     ANSEL           equ	392	;# 
   231     0189                     ANSELH          equ	393	;# 
   232     018C                     EECON1          equ	396	;# 
   233     018D                     EECON2          equ	397	;# 
   234     0000                     INDF            equ	0	;# 
   235     0001                     TMR0            equ	1	;# 
   236     0002                     PCL             equ	2	;# 
   237     0003                     STATUS          equ	3	;# 
   238     0004                     FSR             equ	4	;# 
   239     0005                     PORTA           equ	5	;# 
   240     0006                     PORTB           equ	6	;# 
   241     0007                     PORTC           equ	7	;# 
   242     0008                     PORTD           equ	8	;# 
   243     0009                     PORTE           equ	9	;# 
   244     000A                     PCLATH          equ	10	;# 
   245     000B                     INTCON          equ	11	;# 
   246     000C                     PIR1            equ	12	;# 
   247     000D                     PIR2            equ	13	;# 
   248     000E                     TMR1            equ	14	;# 
   249     000E                     TMR1L           equ	14	;# 
   250     000F                     TMR1H           equ	15	;# 
   251     0010                     T1CON           equ	16	;# 
   252     0011                     TMR2            equ	17	;# 
   253     0012                     T2CON           equ	18	;# 
   254     0013                     SSPBUF          equ	19	;# 
   255     0014                     SSPCON          equ	20	;# 
   256     0015                     CCPR1           equ	21	;# 
   257     0015                     CCPR1L          equ	21	;# 
   258     0016                     CCPR1H          equ	22	;# 
   259     0017                     CCP1CON         equ	23	;# 
   260     0018                     RCSTA           equ	24	;# 
   261     0019                     TXREG           equ	25	;# 
   262     001A                     RCREG           equ	26	;# 
   263     001B                     CCPR2           equ	27	;# 
   264     001B                     CCPR2L          equ	27	;# 
   265     001C                     CCPR2H          equ	28	;# 
   266     001D                     CCP2CON         equ	29	;# 
   267     001E                     ADRESH          equ	30	;# 
   268     001F                     ADCON0          equ	31	;# 
   269     0081                     OPTION_REG      equ	129	;# 
   270     0085                     TRISA           equ	133	;# 
   271     0086                     TRISB           equ	134	;# 
   272     0087                     TRISC           equ	135	;# 
   273     0088                     TRISD           equ	136	;# 
   274     0089                     TRISE           equ	137	;# 
   275     008C                     PIE1            equ	140	;# 
   276     008D                     PIE2            equ	141	;# 
   277     008E                     PCON            equ	142	;# 
   278     008F                     OSCCON          equ	143	;# 
   279     0090                     OSCTUNE         equ	144	;# 
   280     0091                     SSPCON2         equ	145	;# 
   281     0092                     PR2             equ	146	;# 
   282     0093                     SSPADD          equ	147	;# 
   283     0093                     SSPMSK          equ	147	;# 
   284     0093                     MSK             equ	147	;# 
   285     0094                     SSPSTAT         equ	148	;# 
   286     0095                     WPUB            equ	149	;# 
   287     0096                     IOCB            equ	150	;# 
   288     0097                     VRCON           equ	151	;# 
   289     0098                     TXSTA           equ	152	;# 
   290     0099                     SPBRG           equ	153	;# 
   291     009A                     SPBRGH          equ	154	;# 
   292     009B                     PWM1CON         equ	155	;# 
   293     009C                     ECCPAS          equ	156	;# 
   294     009D                     PSTRCON         equ	157	;# 
   295     009E                     ADRESL          equ	158	;# 
   296     009F                     ADCON1          equ	159	;# 
   297     0105                     WDTCON          equ	261	;# 
   298     0107                     CM1CON0         equ	263	;# 
   299     0108                     CM2CON0         equ	264	;# 
   300     0109                     CM2CON1         equ	265	;# 
   301     010C                     EEDATA          equ	268	;# 
   302     010C                     EEDAT           equ	268	;# 
   303     010D                     EEADR           equ	269	;# 
   304     010E                     EEDATH          equ	270	;# 
   305     010F                     EEADRH          equ	271	;# 
   306     0185                     SRCON           equ	389	;# 
   307     0187                     BAUDCTL         equ	391	;# 
   308     0188                     ANSEL           equ	392	;# 
   309     0189                     ANSELH          equ	393	;# 
   310     018C                     EECON1          equ	396	;# 
   311     018D                     EECON2          equ	397	;# 
   312                           
   313                           	psect	idataCOMMON
   314     06A4                     __pidataCOMMON:
   315                           
   316                           ;initializer for _pos_x
   317     06A4  3409               	retlw	9
   318                           
   319                           	psect	idataBANK0
   320     069D                     __pidataBANK0:
   321                           
   322                           ;initializer for _lcd
   323     069D  3407               	retlw	7
   324     069E  3400               	retlw	0
   325     069F  341A               	retlw	26
   326     06A0  342C               	retlw	44
   327     06A1  343E               	retlw	62
   328                           
   329                           ;initializer for _vidas
   330     06A2  3403               	retlw	3
   331     06A3  3400               	retlw	0
   332                           
   333                           	psect	strings
   334     0400                     __pstrings:
   335     0400                     stringtab:
   336     0400                     __stringtab:
   337     0400                     stringcode:	
   338                           ;	String table - string pointers are 1 byte each
   339                           
   340     0400                     stringdir:
   341     0400  3004               	movlw	high stringdir
   342     0401  008A               	movwf	10
   343     0402  0804               	movf	4,w
   344     0403  0A84               	incf	4,f
   345     0404  0782               	addwf	2,f
   346     0405                     __stringbase:
   347     0405  3400               	retlw	0
   348     0406                     __end_of__stringtab:
   349     0406                     _corazon:
   350     0406  341F               	retlw	31
   351     0407  341F               	retlw	31
   352     0408  341F               	retlw	31
   353     0409  341F               	retlw	31
   354     040A  341F               	retlw	31
   355     040B  341F               	retlw	31
   356     040C  341F               	retlw	31
   357     040D  3400               	retlw	0
   358     040E                     __end_of_corazon:
   359     040E                     _medio_corazon:
   360     040E  3400               	retlw	0
   361     040F  3400               	retlw	0
   362     0410  3400               	retlw	0
   363     0411  3415               	retlw	21
   364     0412  341F               	retlw	31
   365     0413  341F               	retlw	31
   366     0414  341F               	retlw	31
   367     0415  3400               	retlw	0
   368     0416                     __end_of_medio_corazon:
   369     0416                     _alien_chico:
   370     0416  340A               	retlw	10
   371     0417  341F               	retlw	31
   372     0418  3400               	retlw	0
   373     0419  341F               	retlw	31
   374     041A  3415               	retlw	21
   375     041B  341F               	retlw	31
   376     041C  340A               	retlw	10
   377     041D  3400               	retlw	0
   378     041E                     __end_of_alien_chico:
   379     041E                     _alien_grande:
   380     041E  3411               	retlw	17
   381     041F  340E               	retlw	14
   382     0420  341F               	retlw	31
   383     0421  3415               	retlw	21
   384     0422  341F               	retlw	31
   385     0423  341F               	retlw	31
   386     0424  340A               	retlw	10
   387     0425  3400               	retlw	0
   388     0426                     __end_of_alien_grande:
   389     0426                     _nave:
   390     0426  3404               	retlw	4
   391     0427  340E               	retlw	14
   392     0428  340E               	retlw	14
   393     0429  340A               	retlw	10
   394     042A  341B               	retlw	27
   395     042B  341F               	retlw	31
   396     042C  3415               	retlw	21
   397     042D  3400               	retlw	0
   398     042E                     __end_of_nave:
   399     0005                     _PORTA          set	5
   400     001E                     _ADRESH         set	30
   401     001F                     _ADCON0         set	31
   402     0006                     _PORTBbits      set	6
   403     0006                     _PORTB          set	6
   404     0007                     _PORTC          set	7
   405     00F9                     _GO_nDONE       set	249
   406     005F                     _GIE            set	95
   407     005C                     _INTE           set	92
   408     0059                     _INTF           set	89
   409     0087                     _TRISC          set	135
   410     0085                     _TRISA          set	133
   411     009E                     _ADRESL         set	158
   412     009F                     _ADCON1         set	159
   413     0086                     _TRISB          set	134
   414     0081                     _OPTION_REG     set	129
   415     040E                     _INTEDG         set	1038
   416     0189                     _ANSELH         set	393
   417     0188                     _ANSEL          set	392
   418     042E                     STR_5:
   419     042E  3450               	retlw	80	;'P'
   420     042F  3475               	retlw	117	;'u'
   421     0430  346C               	retlw	108	;'l'
   422     0431  3473               	retlw	115	;'s'
   423     0432  3461               	retlw	97	;'a'
   424     0433  3420               	retlw	32	;' '
   425     0434  3465               	retlw	101	;'e'
   426     0435  346C               	retlw	108	;'l'
   427     0436  3420               	retlw	32	;' '
   428     0437  3462               	retlw	98	;'b'
   429     0438  346F               	retlw	111	;'o'
   430     0439  3474               	retlw	116	;'t'
   431     043A  346F               	retlw	111	;'o'
   432     043B  346E               	retlw	110	;'n'
   433     043C  3400               	retlw	0
   434     043D                     STR_2:
   435     043D  3444               	retlw	68	;'D'
   436     043E  3465               	retlw	101	;'e'
   437     043F  3420               	retlw	32	;' '
   438     0440  344E               	retlw	78	;'N'
   439     0441  3475               	retlw	117	;'u'
   440     0442  3465               	retlw	101	;'e'
   441     0443  3476               	retlw	118	;'v'
   442     0444  346F               	retlw	111	;'o'
   443     0445  3420               	retlw	32	;' '
   444     0446  344C               	retlw	76	;'L'
   445     0447  3465               	retlw	101	;'e'
   446     0448  346F               	retlw	111	;'o'
   447     0449  346E               	retlw	110	;'n'
   448     044A  3400               	retlw	0
   449     044B                     STR_1:
   450     044B  344C               	retlw	76	;'L'
   451     044C  346F               	retlw	111	;'o'
   452     044D  3473               	retlw	115	;'s'
   453     044E  3420               	retlw	32	;' '
   454     044F  3449               	retlw	73	;'I'
   455     0450  346E               	retlw	110	;'n'
   456     0451  3476               	retlw	118	;'v'
   457     0452  3461               	retlw	97	;'a'
   458     0453  3473               	retlw	115	;'s'
   459     0454  346F               	retlw	111	;'o'
   460     0455  3472               	retlw	114	;'r'
   461     0456  3465               	retlw	101	;'e'
   462     0457  3473               	retlw	115	;'s'
   463     0458  3400               	retlw	0
   464     0459                     STR_4:
   465     0459  3420               	retlw	32	;' '
   466     045A  3420               	retlw	32	;' '
   467     045B  3420               	retlw	32	;' '
   468     045C  3420               	retlw	32	;' '
   469     045D  3420               	retlw	32	;' '
   470     045E  3420               	retlw	32	;' '
   471     045F  3420               	retlw	32	;' '
   472     0460  3420               	retlw	32	;' '
   473     0461  3420               	retlw	32	;' '
   474     0462  3420               	retlw	32	;' '
   475     0463  3420               	retlw	32	;' '
   476     0464  3400               	retlw	0
   477     0465                     STR_3:
   478     0465  3449               	retlw	73	;'I'
   479     0466  346E               	retlw	110	;'n'
   480     0467  3469               	retlw	105	;'i'
   481     0468  3463               	retlw	99	;'c'
   482     0469  3469               	retlw	105	;'i'
   483     046A  346F               	retlw	111	;'o'
   484     046B  3400               	retlw	0
   485     0463                     STR_6           equ	STR_4+10
   486     0463                     STR_7           equ	STR_4+10
   487     0463                     STR_8           equ	STR_4+10
   488                           
   489                           	psect	cinit
   490     000F                     start_initialization:	
   491                           ; #config settings
   492                           
   493     000F                     __initialization:
   494                           
   495                           ; Initialize objects allocated to BANK0
   496     000F  1383               	bcf	3,7	;select IRP bank0
   497     0010  3058               	movlw	low (__pdataBANK0+7)
   498     0011  00FD               	movwf	btemp+-1
   499     0012  3006               	movlw	high __pidataBANK0
   500     0013  00FE               	movwf	btemp
   501     0014  309D               	movlw	low __pidataBANK0
   502     0015  00FF               	movwf	btemp+1
   503     0016  3051               	movlw	low __pdataBANK0
   504     0017  0084               	movwf	4
   505     0018  120A  118A  266A  120A  118A  	fcall	init_ram0
   506                           
   507                           ; Initialize objects allocated to COMMON
   508     001D  120A  118A  26A4  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   509     0022  00FB               	movwf	__pdataCOMMON& (0+127)
   510                           
   511                           ; Clear objects allocated to BANK0
   512     0023  3020               	movlw	low __pbssBANK0
   513     0024  0084               	movwf	4
   514     0025  303A               	movlw	low (__pbssBANK0+26)
   515     0026  120A  118A  2695  120A  118A  	fcall	clear_ram0
   516     002B                     end_of_initialization:	
   517                           ;End of C runtime variable initialization code
   518                           
   519     002B                     __end_of__initialization:
   520     002B  0183               	clrf	3
   521     002C  120A  118A  2A3E   	ljmp	_main	;jump to C main() function
   522                           
   523                           	psect	dataCOMMON
   524     007B                     __pdataCOMMON:
   525     007B                     _pos_x:
   526     007B                     	ds	1
   527                           
   528                           	psect	bssBANK0
   529     0020                     __pbssBANK0:
   530     0020                     _fondo:
   531     0020                     	ds	20
   532     0034                     _nivel:
   533     0034                     	ds	2
   534     0036                     _seed:
   535     0036                     	ds	4
   536                           
   537                           	psect	dataBANK0
   538     0051                     __pdataBANK0:
   539     0051                     _lcd:
   540     0051                     	ds	5
   541     0056                     _vidas:
   542     0056                     	ds	2
   543                           
   544                           	psect	inittext
   545     0666                     init_fetch0:	
   546                           ;	Called with low address in FSR and high address in W
   547                           
   548     0666  087E               	movf	btemp,w
   549     0667  008A               	movwf	10
   550     0668  087F               	movf	btemp+1,w
   551     0669  0082               	movwf	2
   552     066A                     init_ram0:	
   553                           ;Called with:
   554                           ;	high address of idata address in btemp 
   555                           ;	low address of idata address in btemp+1 
   556                           ;	low address of data in FSR
   557                           ;	high address + 1 of data in btemp-1
   558                           
   559     066A  120A  118A  2666  120A  118A  	fcall	init_fetch0
   560     066F  0080               	movwf	0
   561     0670  0A84               	incf	4,f
   562     0671  0804               	movf	4,w
   563     0672  067D               	xorwf	btemp+-1,w
   564     0673  1903               	btfsc	3,2
   565     0674  3400               	retlw	0
   566     0675  0AFF               	incf	btemp+1,f
   567     0676  1903               	btfsc	3,2
   568     0677  0AFE               	incf	btemp,f
   569     0678  2E6A               	goto	init_ram0
   570                           
   571                           	psect	clrtext
   572     0695                     clear_ram0:	
   573                           ;	Called with FSR containing the base address, and
   574                           ;	W with the last address+1
   575                           
   576     0695  0064               	clrwdt	;clear the watchdog before getting into this loop
   577     0696                     clrloop0:
   578     0696  0180               	clrf	0	;clear RAM location pointed to by FSR
   579     0697  0A84               	incf	4,f	;increment pointer
   580     0698  0604               	xorwf	4,w	;XOR with final address
   581     0699  1903               	btfsc	3,2	;have we reached the end yet?
   582     069A  3400               	retlw	0	;all done for this memory range, return
   583     069B  0604               	xorwf	4,w	;XOR again to restore value
   584     069C  2E96               	goto	clrloop0	;do the next byte
   585                           
   586                           	psect	cstackCOMMON
   587     0070                     __pcstackCOMMON:
   588     0070                     ?_LCD_Write:
   589     0070                     ?_pantalla_inicio:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?___nivel_1:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?_LCD_putc:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?_LCD_cg_ram_addr:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?_LCD_ram_write:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ?_main:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_ISR:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ?_LCD_Out:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ??_ISR:	
   614                           ; 1 bytes @ 0x0
   615                           
   616                           
   617                           ; 1 bytes @ 0x0
   618     0070                     	ds	2
   619     0072                     ?_time:
   620     0072                     ?___lmul:	
   621                           ; 4 bytes @ 0x2
   622                           
   623     0072                     time@t:	
   624                           ; 4 bytes @ 0x2
   625                           
   626     0072                     ___lmul@multiplier:	
   627                           ; 1 bytes @ 0x2
   628                           
   629     0072                     ??_LCD_Out:	
   630                           ; 4 bytes @ 0x2
   631                           
   632                           
   633                           ; 1 bytes @ 0x2
   634     0072                     	ds	2
   635     0074                     LCD_Out@c:
   636                           
   637                           ; 1 bytes @ 0x4
   638     0074                     	ds	1
   639     0075                     ??_LCD_Write:
   640     0075                     ??_LCD_putc:	
   641                           ; 1 bytes @ 0x5
   642                           
   643                           
   644                           ; 1 bytes @ 0x5
   645     0075                     	ds	1
   646     0076                     ?_srand:
   647     0076                     srand@s:	
   648                           ; 1 bytes @ 0x6
   649                           
   650     0076                     ___lmul@multiplicand:	
   651                           ; 2 bytes @ 0x6
   652                           
   653     0076                     ??_time:	
   654                           ; 4 bytes @ 0x6
   655                           
   656                           
   657                           ; 1 bytes @ 0x6
   658     0076                     	ds	1
   659     0077                     LCD_Write@c:
   660     0077                     LCD_putc@c:	
   661                           ; 1 bytes @ 0x7
   662                           
   663                           
   664                           ; 1 bytes @ 0x7
   665     0077                     	ds	1
   666     0078                     ?_LCD_putrs:
   667     0078                     LCD_putrs@a:	
   668                           ; 1 bytes @ 0x8
   669                           
   670     0078                     LCD_cg_ram_addr@addr:	
   671                           ; 1 bytes @ 0x8
   672                           
   673     0078                     ??_LCD_Init:	
   674                           ; 1 bytes @ 0x8
   675                           
   676     0078                     ??_srand:	
   677                           ; 1 bytes @ 0x8
   678                           
   679     0078                     ??_LCD_ram_write:	
   680                           ; 1 bytes @ 0x8
   681                           
   682                           
   683                           ; 1 bytes @ 0x8
   684     0078                     	ds	1
   685     0079                     LCD_ram_write@data:
   686     0079                     LCD_putrs@i:	
   687                           ; 1 bytes @ 0x9
   688                           
   689     0079                     ??_LCD_putrs:	
   690                           ; 2 bytes @ 0x9
   691                           
   692                           
   693                           ; 1 bytes @ 0x9
   694     0079                     	ds	1
   695     007A                     LCD_Init@cmd:
   696     007A                     ??_LCD_custom_char:	
   697                           ; 1 bytes @ 0xA
   698                           
   699     007A                     ??___lmul:	
   700                           ; 1 bytes @ 0xA
   701                           
   702                           
   703                           ; 1 bytes @ 0xA
   704     007A                     	ds	1
   705     007B                     ??_main:
   706     007B                     ??___awmod:	
   707                           ; 1 bytes @ 0xB
   708                           
   709                           
   710                           	psect	cstackBANK0
   711     003A                     __pcstackBANK0:	
   712                           ; 1 bytes @ 0xB
   713                           
   714     003A                     ?_LCD_Init:
   715     003A                     ___lmul@product:	
   716                           ; 1 bytes @ 0x0
   717                           
   718     003A                     LCD_Init@display:	
   719                           ; 4 bytes @ 0x0
   720                           
   721     003A                     ??_pantalla_inicio:	
   722                           ; 5 bytes @ 0x0
   723                           
   724     003A                     ??_LCD_cg_ram_addr:	
   725                           ; 1 bytes @ 0x0
   726                           
   727                           
   728                           ; 1 bytes @ 0x0
   729     003A                     	ds	1
   730     003B                     pantalla_inicio@j:
   731                           
   732                           ; 1 bytes @ 0x1
   733     003B                     	ds	1
   734     003C                     pantalla_inicio@i:
   735                           
   736                           ; 1 bytes @ 0x2
   737     003C                     	ds	2
   738     003E                     ?_LCD_custom_char:
   739     003E                     ?_rand:	
   740                           ; 1 bytes @ 0x4
   741                           
   742     003E                     LCD_custom_char@x:	
   743                           ; 2 bytes @ 0x4
   744                           
   745                           
   746                           ; 1 bytes @ 0x4
   747     003E                     	ds	1
   748     003F                     LCD_custom_char@pos:
   749                           
   750                           ; 1 bytes @ 0x5
   751     003F                     	ds	1
   752     0040                     LCD_custom_char@i:
   753     0040                     ??_rand:	
   754                           ; 1 bytes @ 0x6
   755                           
   756                           
   757                           ; 1 bytes @ 0x6
   758     0040                     	ds	4
   759     0044                     ?___awmod:
   760     0044                     ___awmod@divisor:	
   761                           ; 2 bytes @ 0xA
   762                           
   763                           
   764                           ; 2 bytes @ 0xA
   765     0044                     	ds	2
   766     0046                     ___awmod@dividend:
   767                           
   768                           ; 2 bytes @ 0xC
   769     0046                     	ds	2
   770     0048                     ___awmod@counter:
   771                           
   772                           ; 1 bytes @ 0xE
   773     0048                     	ds	1
   774     0049                     ___awmod@sign:
   775                           
   776                           ; 1 bytes @ 0xF
   777     0049                     	ds	1
   778     004A                     ??___nivel_1:
   779                           
   780                           ; 1 bytes @ 0x10
   781     004A                     	ds	2
   782     004C                     ___nivel_1@cantidadAliens:
   783                           
   784                           ; 1 bytes @ 0x12
   785     004C                     	ds	1
   786     004D                     ___nivel_1@tipoAlien:
   787                           
   788                           ; 1 bytes @ 0x13
   789     004D                     	ds	1
   790     004E                     ___nivel_1@i:
   791                           
   792                           ; 2 bytes @ 0x14
   793     004E                     	ds	2
   794     0050                     ___nivel_1@posAliens:
   795                           
   796                           ; 1 bytes @ 0x16
   797     0050                     	ds	1
   798                           
   799                           	psect	maintext
   800     023E                     __pmaintext:	
   801 ;;
   802 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   803 ;;
   804 ;; *************** function _main *****************
   805 ;; Defined at:
   806 ;;		line 103 in file "main.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  bandera         2    0        unsigned int 
   811 ;;  boton1          2    0        unsigned int 
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : B00/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0
   824 ;;      Totals:         0       0       0       0       0
   825 ;;Total ram usage:        0 bytes
   826 ;; Hardware stack levels required when called: 5
   827 ;; This function calls:
   828 ;;		_LCD_Init
   829 ;;		_LCD_Write
   830 ;;		_LCD_custom_char
   831 ;;		___nivel_1
   832 ;;		_pantalla_inicio
   833 ;;		_srand
   834 ;;		_time
   835 ;; This function is called by:
   836 ;;		Startup code after reset
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840     023E                     _main:	
   841                           ;psect for function _main
   842                           
   843     023E                     l2326:	
   844                           ;incstack = 0
   845                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   846                           
   847                           
   848                           ;main.c: 104:         {
   849     023E  1683               	bsf	3,5	;RP0=1, select bank3
   850     023F  1703               	bsf	3,6	;RP1=1, select bank3
   851     0240  0188               	clrf	8	;volatile
   852                           
   853                           ;main.c: 105:             case 0:
   854     0241  0189               	clrf	9	;volatile
   855     0242                     l2328:
   856                           
   857                           ;main.c: 106:                 pantalla_inicio();
   858     0242  307F               	movlw	127
   859     0243  1683               	bsf	3,5	;RP0=1, select bank1
   860     0244  1303               	bcf	3,6	;RP1=0, select bank1
   861     0245  0581               	andwf	1,f	;volatile
   862     0246                     l2330:
   863                           
   864                           ;main.c: 108:             case 1:
   865     0246  30FF               	movlw	255
   866     0247  0086               	movwf	6	;volatile
   867     0248                     l2332:
   868                           
   869                           ;main.c: 109:                 __nivel_1();
   870     0248  1283               	bcf	3,5	;RP0=0, select bank0
   871     0249  1303               	bcf	3,6	;RP1=0, select bank0
   872     024A  0186               	clrf	6	;volatile
   873     024B                     l2334:
   874                           
   875                           ;main.c: 111:             default:
   876     024B  108B               	bcf	11,1	;volatile
   877     024C                     l2336:
   878                           
   879                           ;main.c: 112:                 break;
   880     024C  1683               	bsf	3,5	;RP0=1, select bank1
   881     024D  1303               	bcf	3,6	;RP1=0, select bank1
   882     024E  1301               	bcf	1,6	;volatile
   883     024F                     l2338:
   884                           
   885                           ;main.c: 113:         }
   886     024F  160B               	bsf	11,4	;volatile
   887     0250                     l2340:
   888                           
   889                           ;main.c: 114:     }
   890     0250  178B               	bsf	11,7	;volatile
   891     0251                     l2342:
   892                           
   893                           ;main.c: 116: 
   894     0251  303A               	movlw	LCD_Init@display& (0+255)
   895     0252  0084               	movwf	4
   896     0253  1283               	bcf	3,5	;RP0=0, select bank0
   897     0254  1303               	bcf	3,6	;RP1=0, select bank0
   898     0255  0851               	movf	_lcd,w
   899     0256  1383               	bcf	3,7	;select IRP bank0
   900     0257  0080               	movwf	0
   901     0258  0A84               	incf	4,f
   902     0259  0852               	movf	_lcd+1,w
   903     025A  0080               	movwf	0
   904     025B  0A84               	incf	4,f
   905     025C  0853               	movf	_lcd+2,w
   906     025D  0080               	movwf	0
   907     025E  0A84               	incf	4,f
   908     025F  0854               	movf	_lcd+3,w
   909     0260  0080               	movwf	0
   910     0261  0A84               	incf	4,f
   911     0262  0855               	movf	_lcd+4,w
   912     0263  0080               	movwf	0
   913     0264  120A  118A  20E9  120A  118A  	fcall	_LCD_Init
   914     0269                     l2344:
   915     0269  3000               	movlw	0
   916     026A  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
   917     026F                     l2346:
   918     026F  3001               	movlw	1
   919     0270  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
   920     0275                     l2348:
   921                           
   922                           ;main.c: 119:     do { if ( 0 == 0 ) { do { LCD_Write( (0x80 + 3 & 0xF0) >> 4 ); LCD_Wri
      +                          te( 0x80 + 3 & 0x0F); } while ( 0 ); } else if ( 0 == 1 ) { do { LCD_Write( (0xC0 + 3 & 
      +                          0xF0) >> 4 ); LCD_Write( 0xC0 + 3 & 0x0F); } while ( 0 ); } else if ( 0 == 2 ) { do { LC
      +                          D_Write( (0x94 + 3 & 0xF0) >> 4 ); LCD_Write( 0x94 + 3 & 0x0F); } while ( 0 ); } else if
      +                           ( 0 == 3 ) { do { LCD_Write( (0xD4 + 3 & 0xF0) >> 4 ); LCD_Write( 0xD4 + 3 & 0x0F); } w
      +                          hile ( 0 ); } } while ( 0 );
   923     0275  3021               	movlw	(low ((_nave-__stringbase)| (0+32768)))& (0+255)
   924     0276  1283               	bcf	3,5	;RP0=0, select bank0
   925     0277  1303               	bcf	3,6	;RP1=0, select bank0
   926     0278  00BE               	movwf	LCD_custom_char@x
   927     0279  3000               	movlw	0
   928     027A  120A  118A  25B7  120A  118A  	fcall	_LCD_custom_char
   929     027F                     l2350:
   930                           
   931                           ;main.c: 120:     LCD_putrs("Los Invasores");
   932     027F  3019               	movlw	(low ((_alien_grande-__stringbase)| (0+32768)))& (0+255)
   933     0280  1283               	bcf	3,5	;RP0=0, select bank0
   934     0281  1303               	bcf	3,6	;RP1=0, select bank0
   935     0282  00BE               	movwf	LCD_custom_char@x
   936     0283  3001               	movlw	1
   937     0284  120A  118A  25B7  120A  118A  	fcall	_LCD_custom_char
   938     0289                     l2352:
   939                           
   940                           ;main.c: 121:     do { if ( 1 == 0 ) { do { LCD_Write( (0x80 + 4 & 0xF0) >> 4 ); LCD_Wri
      +                          te( 0x80 + 4 & 0x0F); } while ( 0 ); } else if ( 1 == 1 ) { do { LCD_Write( (0xC0 + 4 & 
      +                          0xF0) >> 4 ); LCD_Write( 0xC0 + 4 & 0x0F); } while ( 0 ); } else if ( 1 == 2 ) { do { LC
      +                          D_Write( (0x94 + 4 & 0xF0) >> 4 ); LCD_Write( 0x94 + 4 & 0x0F); } while ( 0 ); } else if
      +                           ( 1 == 3 ) { do { LCD_Write( (0xD4 + 4 & 0xF0) >> 4 ); LCD_Write( 0xD4 + 4 & 0x0F); } w
      +                          hile ( 0 ); } } while ( 0 );
   941     0289  3011               	movlw	(low ((_alien_chico-__stringbase)| (0+32768)))& (0+255)
   942     028A  1283               	bcf	3,5	;RP0=0, select bank0
   943     028B  1303               	bcf	3,6	;RP1=0, select bank0
   944     028C  00BE               	movwf	LCD_custom_char@x
   945     028D  3002               	movlw	2
   946     028E  120A  118A  25B7  120A  118A  	fcall	_LCD_custom_char
   947     0293                     l2354:
   948                           
   949                           ;main.c: 122:     LCD_putrs("De Nuevo Leon");
   950     0293  3001               	movlw	(low ((_corazon-__stringbase)| (0+32768)))& (0+255)
   951     0294  1283               	bcf	3,5	;RP0=0, select bank0
   952     0295  1303               	bcf	3,6	;RP1=0, select bank0
   953     0296  00BE               	movwf	LCD_custom_char@x
   954     0297  3003               	movlw	3
   955     0298  120A  118A  25B7  120A  118A  	fcall	_LCD_custom_char
   956     029D                     l2356:
   957                           
   958                           ;main.c: 123:     for(unsigned char i = 8; i < (8+3); i++){
   959     029D  3009               	movlw	(low ((_medio_corazon-__stringbase)| (0+32768)))& (0+255)
   960     029E  1283               	bcf	3,5	;RP0=0, select bank0
   961     029F  1303               	bcf	3,6	;RP1=0, select bank0
   962     02A0  00BE               	movwf	LCD_custom_char@x
   963     02A1  3004               	movlw	4
   964     02A2  120A  118A  25B7  120A  118A  	fcall	_LCD_custom_char
   965     02A7                     l2358:
   966                           
   967                           ;main.c: 124:         do { if ( 2 == 0 ) { do { LCD_Write( (0x80 + i & 0xF0) >> 4 ); LCD
      +                          _Write( 0x80 + i & 0x0F); } while ( 0 ); } else if ( 2 == 1 ) { do { LCD_Write( (0xC0 + 
      +                          i & 0xF0) >> 4 ); LCD_Write( 0xC0 + i & 0x0F); } while ( 0 ); } else if ( 2 == 2 ) { do 
      +                          { LCD_Write( (0x94 + i & 0xF0) >> 4 ); LCD_Write( 0x94 + i & 0x0F); } while ( 0 ); } els
      +                          e if ( 2 == 3 ) { do { LCD_Write( (0xD4 + i & 0xF0) >> 4 ); LCD_Write( 0xD4 + i & 0x0F);
      +                           } while ( 0 ); } } while ( 0 );
   968     02A7  3021               	movlw	(low ((_nave-__stringbase)| (0+32768)))& (0+255)
   969     02A8  1283               	bcf	3,5	;RP0=0, select bank0
   970     02A9  1303               	bcf	3,6	;RP1=0, select bank0
   971     02AA  00BE               	movwf	LCD_custom_char@x
   972     02AB  3005               	movlw	5
   973     02AC  120A  118A  25B7  120A  118A  	fcall	_LCD_custom_char
   974     02B1                     l2360:
   975                           
   976                           ;main.c: 126:         LCD_putc(i);
   977     02B1  01F2               	clrf	time@t
   978     02B2  120A  118A  2634  120A  118A  	fcall	_time
   979     02B7  0873               	movf	?_time+1,w
   980     02B8  00F7               	movwf	srand@s+1
   981     02B9  0872               	movf	?_time,w
   982     02BA  00F6               	movwf	srand@s
   983     02BB  120A  118A  2688  120A  118A  	fcall	_srand
   984     02C0                     l2362:
   985     02C0  1283               	bcf	3,5	;RP0=0, select bank0
   986     02C1  1303               	bcf	3,6	;RP1=0, select bank0
   987     02C2  0806               	movf	6,w	;volatile
   988                           
   989                           ;main.c: 131:         LCD_putrs("Inicio");
   990     02C3  2AD0               	goto	l2370
   991     02C4                     l2364:
   992                           
   993                           ;main.c: 134:     do { if ( 3 == 0 ) { do { LCD_Write( (0x80 + 7 & 0xF0) >> 4 ); LCD_Wri
      +                          te( 0x80 + 7 & 0x0F); } while ( 0 ); } else if ( 3 == 1 ) { do { LCD_Write( (0xC0 + 7 & 
      +                          0xF0) >> 4 ); LCD_Write( 0xC0 + 7 & 0x0F); } while ( 0 ); } else if ( 3 == 2 ) { do { LC
      +                          D_Write( (0x94 + 7 & 0xF0) >> 4 ); LCD_Write( 0x94 + 7 & 0x0F); } while ( 0 ); } else if
      +                           ( 3 == 3 ) { do { LCD_Write( (0xD4 + 7 & 0xF0) >> 4 ); LCD_Write( 0xD4 + 7 & 0x0F); } w
      +                          hile ( 0 ); } } while ( 0 );
   994     02C4  120A  118A  2195  120A  118A  	fcall	_pantalla_inicio
   995                           
   996                           ;main.c: 135:     LCD_putrs("           ");
   997     02C9  2AC0               	goto	l2362
   998     02CA                     l2366:
   999                           
  1000                           ;main.c: 137:     LCD_putrs("Pulsa el boton");
  1001     02CA  120A  118A  2372  120A  118A  	fcall	___nivel_1
  1002                           
  1003                           ;main.c: 138: 
  1004     02CF  2AC0               	goto	l2362
  1005     02D0                     l2370:
  1006                           
  1007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1008                           ; Switch size 1, requested type "simple"
  1009                           ; Number of cases is 1, Range of values is 0 to 0
  1010                           ; switch strategies available:
  1011                           ; Name         Instructions Cycles
  1012                           ; simple_byte            4     3 (average)
  1013                           ; direct_byte           11     8 (fixed)
  1014                           ; jumptable            260     6 (fixed)
  1015                           ;	Chosen strategy is simple_byte
  1016     02D0  0835               	movf	_nivel+1,w
  1017     02D1  3A00               	xorlw	0	; case 0
  1018     02D2  1903               	skipnz
  1019     02D3  2AD5               	goto	l2562
  1020     02D4  2AC0               	goto	l2362
  1021     02D5                     l2562:
  1022                           
  1023                           ; Switch size 1, requested type "simple"
  1024                           ; Number of cases is 2, Range of values is 0 to 1
  1025                           ; switch strategies available:
  1026                           ; Name         Instructions Cycles
  1027                           ; simple_byte            7     4 (average)
  1028                           ; direct_byte           14     8 (fixed)
  1029                           ; jumptable            260     6 (fixed)
  1030                           ;	Chosen strategy is simple_byte
  1031     02D5  0834               	movf	_nivel,w
  1032     02D6  3A00               	xorlw	0	; case 0
  1033     02D7  1903               	skipnz
  1034     02D8  2AC4               	goto	l2364
  1035     02D9  3A01               	xorlw	1	; case 1
  1036     02DA  1903               	skipnz
  1037     02DB  2ACA               	goto	l2366
  1038     02DC  2AC0               	goto	l2362
  1039     02DD  120A  118A  280C   	ljmp	start
  1040     02E0                     __end_of_main:
  1041                           
  1042                           	psect	text1
  1043     0634                     __ptext1:	
  1044 ;; *************** function _time *****************
  1045 ;; Defined at:
  1046 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\time.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  t               1    2[COMMON] PTR unsigned long 
  1049 ;;		 -> NULL(0), 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  4    2[COMMON] unsigned long 
  1054 ;; Registers used:
  1055 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1061 ;;      Params:         4       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0
  1064 ;;      Totals:         4       0       0       0       0
  1065 ;;Total ram usage:        4 bytes
  1066 ;; Hardware stack levels used: 1
  1067 ;; Hardware stack levels required when called: 1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075     0634                     _time:	
  1076                           ;psect for function _time
  1077                           
  1078     0634                     l1754:	
  1079                           ;incstack = 0
  1080                           ; Regs used in _time: [wreg-fsr0h+status,2+status,0]
  1081                           
  1082     0634  0872               	movf	time@t,w
  1083     0635  1903               	btfsc	3,2
  1084     0636  2E38               	goto	u1451
  1085     0637  2E39               	goto	u1450
  1086     0638                     u1451:
  1087     0638  2E47               	goto	l1758
  1088     0639                     u1450:
  1089     0639                     l1756:
  1090     0639  0872               	movf	time@t,w
  1091     063A  0084               	movwf	4
  1092     063B  30FF               	movlw	255
  1093     063C  1383               	bcf	3,7	;select IRP bank0
  1094     063D  0080               	movwf	0
  1095     063E  0A84               	incf	4,f
  1096     063F  30FF               	movlw	255
  1097     0640  0080               	movwf	0
  1098     0641  0A84               	incf	4,f
  1099     0642  30FF               	movlw	255
  1100     0643  0080               	movwf	0
  1101     0644  0A84               	incf	4,f
  1102     0645  30FF               	movlw	255
  1103     0646  0080               	movwf	0
  1104     0647                     l1758:
  1105     0647  30FF               	movlw	255
  1106     0648  00F5               	movwf	?_time+3
  1107     0649  30FF               	movlw	255
  1108     064A  00F4               	movwf	?_time+2
  1109     064B  30FF               	movlw	255
  1110     064C  00F3               	movwf	?_time+1
  1111     064D  30FF               	movlw	255
  1112     064E  00F2               	movwf	?_time
  1113     064F                     l1010:
  1114     064F  0008               	return
  1115     0650                     __end_of_time:
  1116                           
  1117                           	psect	text2
  1118     0688                     __ptext2:	
  1119 ;; *************** function _srand *****************
  1120 ;; Defined at:
  1121 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\rand.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  s               2    6[COMMON] unsigned int 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         2       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0
  1138 ;;      Totals:         2       0       0       0       0
  1139 ;;Total ram usage:        2 bytes
  1140 ;; Hardware stack levels used: 1
  1141 ;; Hardware stack levels required when called: 1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149     0688                     _srand:	
  1150                           ;psect for function _srand
  1151                           
  1152     0688                     l1762:	
  1153                           ;incstack = 0
  1154                           ; Regs used in _srand: [wreg+status,2+status,0]
  1155                           
  1156     0688  0876               	movf	srand@s,w
  1157     0689  3EFF               	addlw	255
  1158     068A  1283               	bcf	3,5	;RP0=0, select bank0
  1159     068B  1303               	bcf	3,6	;RP1=0, select bank0
  1160     068C  00B6               	movwf	_seed
  1161     068D  0877               	movf	srand@s+1,w
  1162     068E  1803               	skipnc
  1163     068F  3E01               	addlw	1
  1164     0690  3EFF               	addlw	255
  1165     0691  00B7               	movwf	_seed+1
  1166     0692  01B8               	clrf	_seed+2
  1167     0693  01B9               	clrf	_seed+3
  1168     0694                     l1003:
  1169     0694  0008               	return
  1170     0695                     __end_of_srand:
  1171                           
  1172                           	psect	text3
  1173     0195                     __ptext3:	
  1174 ;; *************** function _pantalla_inicio *****************
  1175 ;; Defined at:
  1176 ;;		line 145 in file "main.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  j               1    1[BANK0 ] unsigned char 
  1181 ;;  i               1    2[BANK0 ] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       0       0       0       0
  1192 ;;      Locals:         0       2       0       0       0
  1193 ;;      Temps:          0       1       0       0       0
  1194 ;;      Totals:         0       3       0       0       0
  1195 ;;Total ram usage:        3 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 4
  1198 ;; This function calls:
  1199 ;;		_LCD_Write
  1200 ;;		_LCD_putc
  1201 ;;		_LCD_putrs
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207     0195                     _pantalla_inicio:	
  1208                           ;psect for function _pantalla_inicio
  1209                           
  1210     0195                     l98:	
  1211                           ;incstack = 0
  1212                           ; Regs used in _pantalla_inicio: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1213                           ;main.c: 146:     for(unsigned int i = 0; i < cantidadAliens; i++)
  1214                           
  1215     0195                     l2232:
  1216     0195  3000               	movlw	0
  1217     0196  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1218     019B  3001               	movlw	1
  1219     019C  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1220     01A1                     l102:
  1221     01A1  3008               	movlw	8
  1222     01A2  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1223     01A7  3003               	movlw	3
  1224     01A8  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1225     01AD                     l116:
  1226                           
  1227                           ;main.c: 148:         uint8_t posAliens = rand() % 20;
  1228     01AD  3046               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1229     01AE  00F8               	movwf	LCD_putrs@a
  1230     01AF  120A  118A  2610  120A  118A  	fcall	_LCD_putrs
  1231     01B4                     l2242:
  1232     01B4  300C               	movlw	12
  1233     01B5  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1234     01BA  3004               	movlw	4
  1235     01BB  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1236     01C0                     l133:
  1237                           
  1238                           ;main.c: 150:         uint8_t tipoAlien = rand() % 2 + 1;
  1239     01C0  3038               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1240     01C1  00F8               	movwf	LCD_putrs@a
  1241     01C2  120A  118A  2610  120A  118A  	fcall	_LCD_putrs
  1242     01C7                     l2248:
  1243                           
  1244                           ;main.c: 151:         LCD_putc(tipoAlien);
  1245     01C7  3008               	movlw	8
  1246     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1247     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1248     01CA  00BC               	movwf	pantalla_inicio@i
  1249     01CB  29CC               	goto	l2258
  1250     01CC                     l141:
  1251     01CC                     l2258:
  1252     01CC  083C               	movf	pantalla_inicio@i,w
  1253     01CD  3E94               	addlw	148
  1254     01CE  00BA               	movwf	??_pantalla_inicio
  1255     01CF  3004               	movlw	4
  1256     01D0                     u2265:
  1257     01D0  1003               	clrc
  1258     01D1  0CBA               	rrf	??_pantalla_inicio,f
  1259     01D2  3EFF               	addlw	-1
  1260     01D3  1D03               	skipz
  1261     01D4  29D0               	goto	u2265
  1262     01D5  083A               	movf	??_pantalla_inicio,w
  1263     01D6  390F               	andlw	15
  1264     01D7  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1265     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1266     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1267     01DE  083C               	movf	pantalla_inicio@i,w
  1268     01DF  3E94               	addlw	148
  1269     01E0  390F               	andlw	15
  1270     01E1  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1271     01E6                     l152:
  1272                           
  1273                           ;main.c: 154: 
  1274     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1275     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1276     01E8  083C               	movf	pantalla_inicio@i,w
  1277     01E9  120A  118A  22E0  120A  118A  	fcall	_LCD_putc
  1278     01EE                     l2262:
  1279                           
  1280                           ;main.c: 155: }
  1281     01EE  3001               	movlw	1
  1282     01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1283     01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1284     01F1  07BC               	addwf	pantalla_inicio@i,f
  1285     01F2                     l2264:
  1286     01F2  300B               	movlw	11
  1287     01F3  023C               	subwf	pantalla_inicio@i,w
  1288     01F4  1C03               	skipc
  1289     01F5  29F7               	goto	u2271
  1290     01F6  29F8               	goto	u2270
  1291     01F7                     u2271:
  1292     01F7  29CC               	goto	l141
  1293     01F8                     u2270:
  1294     01F8                     l2266:
  1295                           
  1296                           ;main.c: 156: 
  1297     01F8  01BB               	clrf	pantalla_inicio@j
  1298     01F9  29FA               	goto	l2278
  1299     01FA                     l160:
  1300     01FA                     l2278:
  1301     01FA  300D               	movlw	13
  1302     01FB  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1303     0200  300B               	movlw	11
  1304     0201  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1305     0206                     l171:
  1306                           
  1307                           ;main.c: 159:         for(uint8_t i = 0; i < 20; i++){
  1308     0206  3060               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1309     0207  00F8               	movwf	LCD_putrs@a
  1310     0208  120A  118A  2610  120A  118A  	fcall	_LCD_putrs
  1311     020D                     l2280:
  1312                           
  1313                           ;main.c: 161: 
  1314     020D  3001               	movlw	1
  1315     020E  1283               	bcf	3,5	;RP0=0, select bank0
  1316     020F  1303               	bcf	3,6	;RP1=0, select bank0
  1317     0210  07BB               	addwf	pantalla_inicio@j,f
  1318     0211                     l2282:
  1319     0211  3003               	movlw	3
  1320     0212  023B               	subwf	pantalla_inicio@j,w
  1321     0213  1C03               	skipc
  1322     0214  2A16               	goto	u2281
  1323     0215  2A17               	goto	u2280
  1324     0216                     u2281:
  1325     0216  29FA               	goto	l160
  1326     0217                     u2280:
  1327     0217                     l2290:
  1328     0217  300D               	movlw	13
  1329     0218  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1330     021D  300B               	movlw	11
  1331     021E  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1332     0223                     l188:
  1333                           
  1334                           ;main.c: 163:                     do { if ( j == 0 ) { do { LCD_Write( (0x80 + i & 0xF0)
      +                           >> 4 ); LCD_Write( 0x80 + i & 0x0F); } while ( 0 ); } else if ( j == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + i & 0xF0) >> 4 ); LCD_Write( 0xC0 + i & 0x0F); } while ( 0 ); } else if ( j 
      +                          == 2 ) { do { LCD_Write( (0x94 + i & 0xF0) >> 4 ); LCD_Write( 0x94 + i & 0x0F); } while 
      +                          ( 0 ); } else if ( j == 3 ) { do { LCD_Write( (0xD4 + i & 0xF0) >> 4 ); LCD_Write( 0xD4 
      +                          + i & 0x0F); } while ( 0 ); } } while ( 0 );
  1335     0223  3054               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1336     0224  00F8               	movwf	LCD_putrs@a
  1337     0225  120A  118A  2610  120A  118A  	fcall	_LCD_putrs
  1338     022A                     l2298:
  1339     022A  300D               	movlw	13
  1340     022B  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1341     0230  3007               	movlw	7
  1342     0231  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1343     0236                     l205:
  1344                           
  1345                           ;main.c: 165:                     _delay((unsigned long)((5)*(4000000/4000.0)));
  1346     0236  3029               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1347     0237  00F8               	movwf	LCD_putrs@a
  1348     0238  120A  118A  2610  120A  118A  	fcall	_LCD_putrs
  1349     023D                     l206:
  1350     023D  0008               	return
  1351     023E                     __end_of_pantalla_inicio:
  1352                           
  1353                           	psect	text4
  1354     0610                     __ptext4:	
  1355 ;; *************** function _LCD_putrs *****************
  1356 ;; Defined at:
  1357 ;;		line 135 in file "lcd.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  a               1    8[COMMON] PTR const unsigned char 
  1360 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(15), 
  1361 ;;		 -> STR_4(12), STR_3(7), STR_2(14), STR_1(14), 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  i               2    9[COMMON] int 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1373 ;;      Params:         1       0       0       0       0
  1374 ;;      Locals:         2       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0
  1376 ;;      Totals:         3       0       0       0       0
  1377 ;;Total ram usage:        3 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 3
  1380 ;; This function calls:
  1381 ;;		_LCD_putc
  1382 ;; This function is called by:
  1383 ;;		_pantalla_inicio
  1384 ;;		_disparo_aliens
  1385 ;;		_pot_x
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389     0610                     _LCD_putrs:	
  1390                           ;psect for function _LCD_putrs
  1391                           
  1392     0610                     l2154:	
  1393                           ;incstack = 0
  1394                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1395                           
  1396                           
  1397                           ;lcd.c: 137:     for ( int i = 0; a[i] != '\0'; ++i ) {
  1398     0610  01F9               	clrf	LCD_putrs@i
  1399     0611  01FA               	clrf	LCD_putrs@i+1
  1400     0612  2E26               	goto	l2160
  1401     0613                     l2156:
  1402                           
  1403                           ;lcd.c: 138:         LCD_putc(a[i]);
  1404     0613  0879               	movf	LCD_putrs@i,w
  1405     0614  0778               	addwf	LCD_putrs@a,w
  1406     0615  0084               	movwf	4
  1407     0616  120A  118A  2400  120A  118A  	fcall	stringdir
  1408     061B  120A  118A  22E0  120A  118A  	fcall	_LCD_putc
  1409     0620                     l2158:
  1410                           
  1411                           ;lcd.c: 139:     }
  1412     0620  3001               	movlw	1
  1413     0621  07F9               	addwf	LCD_putrs@i,f
  1414     0622  1803               	skipnc
  1415     0623  0AFA               	incf	LCD_putrs@i+1,f
  1416     0624  3000               	movlw	0
  1417     0625  07FA               	addwf	LCD_putrs@i+1,f
  1418     0626                     l2160:
  1419     0626  0879               	movf	LCD_putrs@i,w
  1420     0627  0778               	addwf	LCD_putrs@a,w
  1421     0628  0084               	movwf	4
  1422     0629  120A  118A  2400  120A  118A  	fcall	stringdir
  1423     062E  3A00               	xorlw	0
  1424     062F  1D03               	skipz
  1425     0630  2E32               	goto	u2181
  1426     0631  2E33               	goto	u2180
  1427     0632                     u2181:
  1428     0632  2E13               	goto	l2156
  1429     0633                     u2180:
  1430     0633                     l448:
  1431     0633  0008               	return
  1432     0634                     __end_of_LCD_putrs:
  1433                           
  1434                           	psect	text5
  1435     0372                     __ptext5:	
  1436 ;; *************** function ___nivel_1 *****************
  1437 ;; Defined at:
  1438 ;;		line 169 in file "main.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  posAliens       1   22[BANK0 ] unsigned char 
  1443 ;;  tipoAlien       1   19[BANK0 ] unsigned char 
  1444 ;;  i               2   20[BANK0 ] unsigned int 
  1445 ;;  cantidadAlie    1   18[BANK0 ] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         0       0       0       0       0
  1456 ;;      Locals:         0       5       0       0       0
  1457 ;;      Temps:          0       2       0       0       0
  1458 ;;      Totals:         0       7       0       0       0
  1459 ;;Total ram usage:        7 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 3
  1462 ;; This function calls:
  1463 ;;		_LCD_Write
  1464 ;;		_LCD_putc
  1465 ;;		___awmod
  1466 ;;		_rand
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472     0372                     ___nivel_1:	
  1473                           ;psect for function ___nivel_1
  1474                           
  1475     0372                     l209:	
  1476                           ;incstack = 0
  1477                           ; Regs used in ___nivel_1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1478                           ;main.c: 170:             else if(fondo[i] == 2){
  1479                           
  1480     0372                     l2300:
  1481     0372  3000               	movlw	0
  1482     0373  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1483     0378  3001               	movlw	1
  1484     0379  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1485     037E                     l2302:
  1486                           
  1487                           ;main.c: 172:                 for(uint8_t j = 1; j <= 3; j++){
  1488     037E  300F               	movlw	15
  1489     037F  1283               	bcf	3,5	;RP0=0, select bank0
  1490     0380  1303               	bcf	3,6	;RP1=0, select bank0
  1491     0381  00C4               	movwf	___awmod@divisor
  1492     0382  3000               	movlw	0
  1493     0383  00C5               	movwf	___awmod@divisor+1
  1494     0384  120A  118A  251A  120A  118A  	fcall	_rand
  1495     0389  1283               	bcf	3,5	;RP0=0, select bank0
  1496     038A  1303               	bcf	3,6	;RP1=0, select bank0
  1497     038B  083F               	movf	?_rand+1,w
  1498     038C  00C7               	movwf	___awmod@dividend+1
  1499     038D  083E               	movf	?_rand,w
  1500     038E  00C6               	movwf	___awmod@dividend
  1501     038F  120A  118A  246C  120A  118A  	fcall	___awmod
  1502     0394  1283               	bcf	3,5	;RP0=0, select bank0
  1503     0395  1303               	bcf	3,6	;RP1=0, select bank0
  1504     0396  0844               	movf	?___awmod,w
  1505     0397  3E01               	addlw	1
  1506     0398  00CC               	movwf	___nivel_1@cantidadAliens
  1507     0399                     l2304:
  1508                           
  1509                           ;main.c: 174:                     LCD_putc(':');
  1510     0399  01CE               	clrf	___nivel_1@i
  1511     039A  01CF               	clrf	___nivel_1@i+1
  1512     039B  2BE7               	goto	l2324
  1513     039C                     l2306:
  1514                           
  1515                           ;main.c: 175:                     _delay((unsigned long)((5)*(4000000/4000.0)));;main.c:
      +                           176:                     do { if ( j == 0 ) { do { LCD_Write( (0x80 + i & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + i & 0x0F); } while ( 0 ); } else if ( j == 1 ) { do { LCD_Write( (0xC
      +                          0 + i & 0xF0) >> 4 ); LCD_Write( 0xC0 + i & 0x0F); } while ( 0 ); } else if ( j == 2 ) {
      +                           do { LCD_Write( (0x94 + i & 0xF0) >> 4 ); LCD_Write( 0x94 + i & 0x0F); } while ( 0 ); }
      +                           else if ( j == 3 ) { do { LCD_Write( (0xD4 + i & 0xF0) >> 4 ); LCD_Write( 0xD4 + i & 0x
      +                          0F); } while ( 0 ); } } while ( 0 );
  1516     039C  3014               	movlw	20
  1517     039D  00C4               	movwf	___awmod@divisor
  1518     039E  3000               	movlw	0
  1519     039F  00C5               	movwf	___awmod@divisor+1
  1520     03A0  120A  118A  251A  120A  118A  	fcall	_rand
  1521     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1522     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1523     03A7  083F               	movf	?_rand+1,w
  1524     03A8  00C7               	movwf	___awmod@dividend+1
  1525     03A9  083E               	movf	?_rand,w
  1526     03AA  00C6               	movwf	___awmod@dividend
  1527     03AB  120A  118A  246C  120A  118A  	fcall	___awmod
  1528     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1529     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1530     03B2  0844               	movf	?___awmod,w
  1531     03B3  00D0               	movwf	___nivel_1@posAliens
  1532     03B4                     l2308:
  1533     03B4  0850               	movf	___nivel_1@posAliens,w
  1534     03B5  3E80               	addlw	128
  1535     03B6  00CA               	movwf	??___nivel_1
  1536     03B7  3004               	movlw	4
  1537     03B8                     u2295:
  1538     03B8  1003               	clrc
  1539     03B9  0CCA               	rrf	??___nivel_1,f
  1540     03BA  3EFF               	addlw	-1
  1541     03BB  1D03               	skipz
  1542     03BC  2BB8               	goto	u2295
  1543     03BD  084A               	movf	??___nivel_1,w
  1544     03BE  390F               	andlw	15
  1545     03BF  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1546     03C4                     l2310:
  1547     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1548     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1549     03C6  0850               	movf	___nivel_1@posAliens,w
  1550     03C7  3E80               	addlw	128
  1551     03C8  390F               	andlw	15
  1552     03C9  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  1553     03CE                     l2318:
  1554                           
  1555                           ;main.c: 178:                 }
  1556     03CE  120A  118A  251A  120A  118A  	fcall	_rand
  1557     03D3  1283               	bcf	3,5	;RP0=0, select bank0
  1558     03D4  1303               	bcf	3,6	;RP1=0, select bank0
  1559     03D5  083E               	movf	?_rand,w
  1560     03D6  3901               	andlw	1
  1561     03D7  3E01               	addlw	1
  1562     03D8  00CD               	movwf	___nivel_1@tipoAlien
  1563     03D9                     l2320:
  1564                           
  1565                           ;main.c: 179:             }
  1566     03D9  084D               	movf	___nivel_1@tipoAlien,w
  1567     03DA  120A  118A  22E0  120A  118A  	fcall	_LCD_putc
  1568     03DF                     l2322:
  1569                           
  1570                           ;main.c: 180:         }
  1571     03DF  3001               	movlw	1
  1572     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1573     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1574     03E2  07CE               	addwf	___nivel_1@i,f
  1575     03E3  1803               	skipnc
  1576     03E4  0ACF               	incf	___nivel_1@i+1,f
  1577     03E5  3000               	movlw	0
  1578     03E6  07CF               	addwf	___nivel_1@i+1,f
  1579     03E7                     l2324:
  1580     03E7  084C               	movf	___nivel_1@cantidadAliens,w
  1581     03E8  00CA               	movwf	??___nivel_1
  1582     03E9  01CB               	clrf	??___nivel_1+1
  1583     03EA  084B               	movf	??___nivel_1+1,w
  1584     03EB  024F               	subwf	___nivel_1@i+1,w
  1585     03EC  1D03               	skipz
  1586     03ED  2BF0               	goto	u2305
  1587     03EE  084A               	movf	??___nivel_1,w
  1588     03EF  024E               	subwf	___nivel_1@i,w
  1589     03F0                     u2305:
  1590     03F0  1C03               	skipc
  1591     03F1  2BF3               	goto	u2301
  1592     03F2  2BF4               	goto	u2300
  1593     03F3                     u2301:
  1594     03F3  2B9C               	goto	l2306
  1595     03F4                     u2300:
  1596     03F4                     l231:
  1597     03F4  0008               	return
  1598     03F5                     __end_of___nivel_1:
  1599                           
  1600                           	psect	text6
  1601     051A                     __ptext6:	
  1602 ;; *************** function _rand *****************
  1603 ;; Defined at:
  1604 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\rand.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  2    4[BANK0 ] int 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0, pclath, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1618 ;;      Params:         0       2       0       0       0
  1619 ;;      Locals:         0       0       0       0       0
  1620 ;;      Temps:          0       4       0       0       0
  1621 ;;      Totals:         0       6       0       0       0
  1622 ;;Total ram usage:        6 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; Hardware stack levels required when called: 2
  1625 ;; This function calls:
  1626 ;;		___lmul
  1627 ;; This function is called by:
  1628 ;;		___nivel_1
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632     051A                     _rand:	
  1633                           ;psect for function _rand
  1634                           
  1635     051A                     l1640:	
  1636                           ;incstack = 0
  1637                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1638                           
  1639     051A  3001               	movlw	1
  1640     051B  1283               	bcf	3,5	;RP0=0, select bank0
  1641     051C  1303               	bcf	3,6	;RP1=0, select bank0
  1642     051D  00C0               	movwf	??_rand
  1643     051E  3000               	movlw	0
  1644     051F  00C1               	movwf	??_rand+1
  1645     0520  3000               	movlw	0
  1646     0521  00C2               	movwf	??_rand+2
  1647     0522  3000               	movlw	0
  1648     0523  00C3               	movwf	??_rand+3
  1649     0524  0839               	movf	_seed+3,w
  1650     0525  00F5               	movwf	___lmul@multiplier+3
  1651     0526  0838               	movf	_seed+2,w
  1652     0527  00F4               	movwf	___lmul@multiplier+2
  1653     0528  0837               	movf	_seed+1,w
  1654     0529  00F3               	movwf	___lmul@multiplier+1
  1655     052A  0836               	movf	_seed,w
  1656     052B  00F2               	movwf	___lmul@multiplier
  1657     052C  304C               	movlw	76
  1658     052D  00F9               	movwf	___lmul@multiplicand+3
  1659     052E  3095               	movlw	149
  1660     052F  00F8               	movwf	___lmul@multiplicand+2
  1661     0530  307F               	movlw	127
  1662     0531  00F7               	movwf	___lmul@multiplicand+1
  1663     0532  302D               	movlw	45
  1664     0533  00F6               	movwf	___lmul@multiplicand
  1665     0534  120A  118A  256B  120A  118A  	fcall	___lmul
  1666     0539  0872               	movf	?___lmul,w
  1667     053A  1283               	bcf	3,5	;RP0=0, select bank0
  1668     053B  1303               	bcf	3,6	;RP1=0, select bank0
  1669     053C  07C0               	addwf	??_rand,f
  1670     053D  0873               	movf	?___lmul+1,w
  1671     053E  1803               	skipnc
  1672     053F  0F73               	incfsz	?___lmul+1,w
  1673     0540  2D42               	goto	u1270
  1674     0541  2D43               	goto	u1271
  1675     0542                     u1270:
  1676     0542  07C1               	addwf	??_rand+1,f
  1677     0543                     u1271:
  1678     0543  0874               	movf	?___lmul+2,w
  1679     0544  1803               	skipnc
  1680     0545  0F74               	incfsz	?___lmul+2,w
  1681     0546  2D48               	goto	u1272
  1682     0547  2D49               	goto	u1273
  1683     0548                     u1272:
  1684     0548  07C2               	addwf	??_rand+2,f
  1685     0549                     u1273:
  1686     0549  0875               	movf	?___lmul+3,w
  1687     054A  1803               	skipnc
  1688     054B  0A75               	incf	?___lmul+3,w
  1689     054C  07C3               	addwf	??_rand+3,f
  1690     054D  0843               	movf	??_rand+3,w
  1691     054E  00B9               	movwf	_seed+3
  1692     054F  0842               	movf	??_rand+2,w
  1693     0550  00B8               	movwf	_seed+2
  1694     0551  0841               	movf	??_rand+1,w
  1695     0552  00B7               	movwf	_seed+1
  1696     0553  0840               	movf	??_rand,w
  1697     0554  00B6               	movwf	_seed
  1698     0555                     l1642:
  1699     0555  0836               	movf	_seed,w
  1700     0556  00C0               	movwf	??_rand
  1701     0557  0837               	movf	_seed+1,w
  1702     0558  00C1               	movwf	??_rand+1
  1703     0559  0838               	movf	_seed+2,w
  1704     055A  00C2               	movwf	??_rand+2
  1705     055B  0839               	movf	_seed+3,w
  1706     055C  00C3               	movwf	??_rand+3
  1707     055D  3011               	movlw	17
  1708     055E                     u1285:
  1709     055E  1003               	clrc
  1710     055F  0CC3               	rrf	??_rand+3,f
  1711     0560  0CC2               	rrf	??_rand+2,f
  1712     0561  0CC1               	rrf	??_rand+1,f
  1713     0562  0CC0               	rrf	??_rand,f
  1714     0563                     u1280:
  1715     0563  3EFF               	addlw	-1
  1716     0564  1D03               	skipz
  1717     0565  2D5E               	goto	u1285
  1718     0566  0841               	movf	??_rand+1,w
  1719     0567  00BF               	movwf	?_rand+1
  1720     0568  0840               	movf	??_rand,w
  1721     0569  00BE               	movwf	?_rand
  1722     056A                     l1006:
  1723     056A  0008               	return
  1724     056B                     __end_of_rand:
  1725                           
  1726                           	psect	text7
  1727     056B                     __ptext7:	
  1728 ;; *************** function ___lmul *****************
  1729 ;; Defined at:
  1730 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  multiplier      4    2[COMMON] unsigned long 
  1733 ;;  multiplicand    4    6[COMMON] unsigned long 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  product         4    0[BANK0 ] unsigned long 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  4    2[COMMON] unsigned long 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1745 ;;      Params:         8       0       0       0       0
  1746 ;;      Locals:         0       4       0       0       0
  1747 ;;      Temps:          1       0       0       0       0
  1748 ;;      Totals:         9       4       0       0       0
  1749 ;;Total ram usage:       13 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_rand
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759     056B                     ___lmul:	
  1760                           ;psect for function ___lmul
  1761                           
  1762     056B                     l1618:	
  1763                           ;incstack = 0
  1764                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1765                           
  1766     056B  3000               	movlw	0
  1767     056C  1283               	bcf	3,5	;RP0=0, select bank0
  1768     056D  1303               	bcf	3,6	;RP1=0, select bank0
  1769     056E  00BD               	movwf	___lmul@product+3
  1770     056F  3000               	movlw	0
  1771     0570  00BC               	movwf	___lmul@product+2
  1772     0571  3000               	movlw	0
  1773     0572  00BB               	movwf	___lmul@product+1
  1774     0573  3000               	movlw	0
  1775     0574  00BA               	movwf	___lmul@product
  1776     0575                     l1620:
  1777     0575  1C72               	btfss	___lmul@multiplier,0
  1778     0576  2D78               	goto	u1211
  1779     0577  2D79               	goto	u1210
  1780     0578                     u1211:
  1781     0578  2D92               	goto	l1624
  1782     0579                     u1210:
  1783     0579                     l1622:
  1784     0579  0876               	movf	___lmul@multiplicand,w
  1785     057A  1283               	bcf	3,5	;RP0=0, select bank0
  1786     057B  1303               	bcf	3,6	;RP1=0, select bank0
  1787     057C  07BA               	addwf	___lmul@product,f
  1788     057D  0877               	movf	___lmul@multiplicand+1,w
  1789     057E  1103               	clrz
  1790     057F  1803               	skipnc
  1791     0580  3E01               	addlw	1
  1792     0581  1903               	skipnz
  1793     0582  2D84               	goto	u1221
  1794     0583  07BB               	addwf	___lmul@product+1,f
  1795     0584                     u1221:
  1796     0584  0878               	movf	___lmul@multiplicand+2,w
  1797     0585  1103               	clrz
  1798     0586  1803               	skipnc
  1799     0587  3E01               	addlw	1
  1800     0588  1903               	skipnz
  1801     0589  2D8B               	goto	u1222
  1802     058A  07BC               	addwf	___lmul@product+2,f
  1803     058B                     u1222:
  1804     058B  0879               	movf	___lmul@multiplicand+3,w
  1805     058C  1103               	clrz
  1806     058D  1803               	skipnc
  1807     058E  3E01               	addlw	1
  1808     058F  1903               	skipnz
  1809     0590  2D92               	goto	u1223
  1810     0591  07BD               	addwf	___lmul@product+3,f
  1811     0592                     u1223:
  1812     0592                     l1624:
  1813     0592  3001               	movlw	1
  1814     0593  00FA               	movwf	??___lmul
  1815     0594                     u1235:
  1816     0594  1003               	clrc
  1817     0595  0DF6               	rlf	___lmul@multiplicand,f
  1818     0596  0DF7               	rlf	___lmul@multiplicand+1,f
  1819     0597  0DF8               	rlf	___lmul@multiplicand+2,f
  1820     0598  0DF9               	rlf	___lmul@multiplicand+3,f
  1821     0599  0BFA               	decfsz	??___lmul,f
  1822     059A  2D94               	goto	u1235
  1823     059B                     l1626:
  1824     059B  3001               	movlw	1
  1825     059C                     u1245:
  1826     059C  1003               	clrc
  1827     059D  0CF5               	rrf	___lmul@multiplier+3,f
  1828     059E  0CF4               	rrf	___lmul@multiplier+2,f
  1829     059F  0CF3               	rrf	___lmul@multiplier+1,f
  1830     05A0  0CF2               	rrf	___lmul@multiplier,f
  1831     05A1  3EFF               	addlw	-1
  1832     05A2  1D03               	skipz
  1833     05A3  2D9C               	goto	u1245
  1834     05A4  0875               	movf	___lmul@multiplier+3,w
  1835     05A5  0474               	iorwf	___lmul@multiplier+2,w
  1836     05A6  0473               	iorwf	___lmul@multiplier+1,w
  1837     05A7  0472               	iorwf	___lmul@multiplier,w
  1838     05A8  1D03               	skipz
  1839     05A9  2DAB               	goto	u1251
  1840     05AA  2DAC               	goto	u1250
  1841     05AB                     u1251:
  1842     05AB  2D75               	goto	l1620
  1843     05AC                     u1250:
  1844     05AC                     l1628:
  1845     05AC  1283               	bcf	3,5	;RP0=0, select bank0
  1846     05AD  1303               	bcf	3,6	;RP1=0, select bank0
  1847     05AE  083D               	movf	___lmul@product+3,w
  1848     05AF  00F5               	movwf	?___lmul+3
  1849     05B0  083C               	movf	___lmul@product+2,w
  1850     05B1  00F4               	movwf	?___lmul+2
  1851     05B2  083B               	movf	___lmul@product+1,w
  1852     05B3  00F3               	movwf	?___lmul+1
  1853     05B4  083A               	movf	___lmul@product,w
  1854     05B5  00F2               	movwf	?___lmul
  1855     05B6                     l556:
  1856     05B6  0008               	return
  1857     05B7                     __end_of___lmul:
  1858                           
  1859                           	psect	text8
  1860     046C                     __ptext8:	
  1861 ;; *************** function ___awmod *****************
  1862 ;; Defined at:
  1863 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  divisor         2   10[BANK0 ] int 
  1866 ;;  dividend        2   12[BANK0 ] int 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  sign            1   15[BANK0 ] unsigned char 
  1869 ;;  counter         1   14[BANK0 ] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  2   10[BANK0 ] int 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1879 ;;      Params:         0       4       0       0       0
  1880 ;;      Locals:         0       2       0       0       0
  1881 ;;      Temps:          0       0       0       0       0
  1882 ;;      Totals:         0       6       0       0       0
  1883 ;;Total ram usage:        6 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 1
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		___nivel_1
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893     046C                     ___awmod:	
  1894                           ;psect for function ___awmod
  1895                           
  1896     046C                     l1654:	
  1897                           ;incstack = 0
  1898                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1899                           
  1900     046C  1283               	bcf	3,5	;RP0=0, select bank0
  1901     046D  1303               	bcf	3,6	;RP1=0, select bank0
  1902     046E  01C9               	clrf	___awmod@sign
  1903     046F                     l1656:
  1904     046F  1FC7               	btfss	___awmod@dividend+1,7
  1905     0470  2C72               	goto	u1301
  1906     0471  2C73               	goto	u1300
  1907     0472                     u1301:
  1908     0472  2C7A               	goto	l1662
  1909     0473                     u1300:
  1910     0473                     l1658:
  1911     0473  09C6               	comf	___awmod@dividend,f
  1912     0474  09C7               	comf	___awmod@dividend+1,f
  1913     0475  0AC6               	incf	___awmod@dividend,f
  1914     0476  1903               	skipnz
  1915     0477  0AC7               	incf	___awmod@dividend+1,f
  1916     0478                     l1660:
  1917     0478  3001               	movlw	1
  1918     0479  00C9               	movwf	___awmod@sign
  1919     047A                     l1662:
  1920     047A  1FC5               	btfss	___awmod@divisor+1,7
  1921     047B  2C7D               	goto	u1311
  1922     047C  2C7E               	goto	u1310
  1923     047D                     u1311:
  1924     047D  2C83               	goto	l1666
  1925     047E                     u1310:
  1926     047E                     l1664:
  1927     047E  09C4               	comf	___awmod@divisor,f
  1928     047F  09C5               	comf	___awmod@divisor+1,f
  1929     0480  0AC4               	incf	___awmod@divisor,f
  1930     0481  1903               	skipnz
  1931     0482  0AC5               	incf	___awmod@divisor+1,f
  1932     0483                     l1666:
  1933     0483  0844               	movf	___awmod@divisor,w
  1934     0484  0445               	iorwf	___awmod@divisor+1,w
  1935     0485  1903               	btfsc	3,2
  1936     0486  2C88               	goto	u1321
  1937     0487  2C89               	goto	u1320
  1938     0488                     u1321:
  1939     0488  2CB6               	goto	l1684
  1940     0489                     u1320:
  1941     0489                     l1668:
  1942     0489  3001               	movlw	1
  1943     048A  00C8               	movwf	___awmod@counter
  1944     048B  2C95               	goto	l1674
  1945     048C                     l1670:
  1946     048C  3001               	movlw	1
  1947     048D                     u1335:
  1948     048D  1003               	clrc
  1949     048E  0DC4               	rlf	___awmod@divisor,f
  1950     048F  0DC5               	rlf	___awmod@divisor+1,f
  1951     0490  3EFF               	addlw	-1
  1952     0491  1D03               	skipz
  1953     0492  2C8D               	goto	u1335
  1954     0493                     l1672:
  1955     0493  3001               	movlw	1
  1956     0494  07C8               	addwf	___awmod@counter,f
  1957     0495                     l1674:
  1958     0495  1FC5               	btfss	___awmod@divisor+1,7
  1959     0496  2C98               	goto	u1341
  1960     0497  2C99               	goto	u1340
  1961     0498                     u1341:
  1962     0498  2C8C               	goto	l1670
  1963     0499                     u1340:
  1964     0499                     l1676:
  1965     0499  0845               	movf	___awmod@divisor+1,w
  1966     049A  0247               	subwf	___awmod@dividend+1,w
  1967     049B  1D03               	skipz
  1968     049C  2C9F               	goto	u1355
  1969     049D  0844               	movf	___awmod@divisor,w
  1970     049E  0246               	subwf	___awmod@dividend,w
  1971     049F                     u1355:
  1972     049F  1C03               	skipc
  1973     04A0  2CA2               	goto	u1351
  1974     04A1  2CA3               	goto	u1350
  1975     04A2                     u1351:
  1976     04A2  2CA9               	goto	l1680
  1977     04A3                     u1350:
  1978     04A3                     l1678:
  1979     04A3  0844               	movf	___awmod@divisor,w
  1980     04A4  02C6               	subwf	___awmod@dividend,f
  1981     04A5  0845               	movf	___awmod@divisor+1,w
  1982     04A6  1C03               	skipc
  1983     04A7  03C7               	decf	___awmod@dividend+1,f
  1984     04A8  02C7               	subwf	___awmod@dividend+1,f
  1985     04A9                     l1680:
  1986     04A9  3001               	movlw	1
  1987     04AA                     u1365:
  1988     04AA  1003               	clrc
  1989     04AB  0CC5               	rrf	___awmod@divisor+1,f
  1990     04AC  0CC4               	rrf	___awmod@divisor,f
  1991     04AD  3EFF               	addlw	-1
  1992     04AE  1D03               	skipz
  1993     04AF  2CAA               	goto	u1365
  1994     04B0                     l1682:
  1995     04B0  3001               	movlw	1
  1996     04B1  02C8               	subwf	___awmod@counter,f
  1997     04B2  1D03               	btfss	3,2
  1998     04B3  2CB5               	goto	u1371
  1999     04B4  2CB6               	goto	u1370
  2000     04B5                     u1371:
  2001     04B5  2C99               	goto	l1676
  2002     04B6                     u1370:
  2003     04B6                     l1684:
  2004     04B6  0849               	movf	___awmod@sign,w
  2005     04B7  1903               	btfsc	3,2
  2006     04B8  2CBA               	goto	u1381
  2007     04B9  2CBB               	goto	u1380
  2008     04BA                     u1381:
  2009     04BA  2CC0               	goto	l1688
  2010     04BB                     u1380:
  2011     04BB                     l1686:
  2012     04BB  09C6               	comf	___awmod@dividend,f
  2013     04BC  09C7               	comf	___awmod@dividend+1,f
  2014     04BD  0AC6               	incf	___awmod@dividend,f
  2015     04BE  1903               	skipnz
  2016     04BF  0AC7               	incf	___awmod@dividend+1,f
  2017     04C0                     l1688:
  2018     04C0  0847               	movf	___awmod@dividend+1,w
  2019     04C1  00C5               	movwf	?___awmod+1
  2020     04C2  0846               	movf	___awmod@dividend,w
  2021     04C3  00C4               	movwf	?___awmod
  2022     04C4                     l708:
  2023     04C4  0008               	return
  2024     04C5                     __end_of___awmod:
  2025                           
  2026                           	psect	text9
  2027     05B7                     __ptext9:	
  2028 ;; *************** function _LCD_custom_char *****************
  2029 ;; Defined at:
  2030 ;;		line 257 in file "main.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  pos             1    wreg     unsigned char 
  2033 ;;  x               1    4[BANK0 ] PTR const unsigned char 
  2034 ;;		 -> medio_corazon(8), corazon(8), alien_chico(8), alien_grande(8), 
  2035 ;;		 -> nave(8), 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  pos             1    5[BANK0 ] unsigned char 
  2038 ;;  i               1    6[BANK0 ] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         0       1       0       0       0
  2049 ;;      Locals:         0       2       0       0       0
  2050 ;;      Temps:          1       0       0       0       0
  2051 ;;      Totals:         1       3       0       0       0
  2052 ;;Total ram usage:        4 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 4
  2055 ;; This function calls:
  2056 ;;		_LCD_cg_ram_addr
  2057 ;;		_LCD_ram_write
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063     05B7                     _LCD_custom_char:	
  2064                           ;psect for function _LCD_custom_char
  2065                           
  2066                           
  2067                           ;incstack = 0
  2068                           ; Regs used in _LCD_custom_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2069                           ;LCD_custom_char@pos stored from wreg
  2070     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  2071     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  2072     05B9  00BF               	movwf	LCD_custom_char@pos
  2073     05BA                     l2216:
  2074     05BA  083F               	movf	LCD_custom_char@pos,w
  2075     05BB  3907               	andlw	7
  2076     05BC  00FA               	movwf	??_LCD_custom_char
  2077     05BD  3002               	movlw	2
  2078     05BE                     u2245:
  2079     05BE  1003               	clrc
  2080     05BF  0DFA               	rlf	??_LCD_custom_char,f
  2081     05C0  3EFF               	addlw	-1
  2082     05C1  1D03               	skipz
  2083     05C2  2DBE               	goto	u2245
  2084     05C3  1003               	clrc
  2085     05C4  0D7A               	rlf	??_LCD_custom_char,w
  2086     05C5  00BF               	movwf	LCD_custom_char@pos
  2087     05C6                     l2218:
  2088     05C6  083F               	movf	LCD_custom_char@pos,w
  2089     05C7  120A  118A  25E7  120A  118A  	fcall	_LCD_cg_ram_addr
  2090     05CC                     l2220:
  2091     05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2092     05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2093     05CE  01C0               	clrf	LCD_custom_char@i
  2094     05CF                     l2226:
  2095     05CF  0840               	movf	LCD_custom_char@i,w
  2096     05D0  073E               	addwf	LCD_custom_char@x,w
  2097     05D1  0084               	movwf	4
  2098     05D2  120A  118A  2400  120A  118A  	fcall	stringdir
  2099     05D7  120A  118A  2679  120A  118A  	fcall	_LCD_ram_write
  2100     05DC                     l2228:
  2101     05DC  3001               	movlw	1
  2102     05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2103     05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2104     05DF  07C0               	addwf	LCD_custom_char@i,f
  2105     05E0                     l2230:
  2106     05E0  3008               	movlw	8
  2107     05E1  0240               	subwf	LCD_custom_char@i,w
  2108     05E2  1C03               	skipc
  2109     05E3  2DE5               	goto	u2251
  2110     05E4  2DE6               	goto	u2250
  2111     05E5                     u2251:
  2112     05E5  2DCF               	goto	l2226
  2113     05E6                     u2250:
  2114     05E6                     l381:
  2115     05E6  0008               	return
  2116     05E7                     __end_of_LCD_custom_char:
  2117                           
  2118                           	psect	text10
  2119     0679                     __ptext10:	
  2120 ;; *************** function _LCD_ram_write *****************
  2121 ;; Defined at:
  2122 ;;		line 149 in file "lcd.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  data            1    wreg     unsigned char 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  data            1    9[COMMON] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         0       0       0       0       0
  2137 ;;      Locals:         1       0       0       0       0
  2138 ;;      Temps:          1       0       0       0       0
  2139 ;;      Totals:         2       0       0       0       0
  2140 ;;Total ram usage:        2 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 3
  2143 ;; This function calls:
  2144 ;;		_LCD_putc
  2145 ;; This function is called by:
  2146 ;;		_LCD_custom_char
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150     0679                     _LCD_ram_write:	
  2151                           ;psect for function _LCD_ram_write
  2152                           
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in _LCD_ram_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2156                           ;LCD_ram_write@data stored from wreg
  2157     0679  00F9               	movwf	LCD_ram_write@data
  2158     067A                     l2166:
  2159                           
  2160                           ;lcd.c: 150:     LCD_putc(data);
  2161     067A  0879               	movf	LCD_ram_write@data,w
  2162     067B  120A  118A  22E0  120A  118A  	fcall	_LCD_putc
  2163     0680                     l2168:
  2164                           
  2165                           ;lcd.c: 151:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2166     0680  30C7               	movlw	199
  2167     0681  00F8               	movwf	??_LCD_ram_write
  2168     0682                     u2767:
  2169     0682  2E83               	nop2
  2170     0683  0BF8               	decfsz	??_LCD_ram_write,f
  2171     0684  2E82               	goto	u2767
  2172     0685  2E86               	nop2
  2173     0686  2E87               	nop2
  2174     0687                     l456:
  2175     0687  0008               	return
  2176     0688                     __end_of_LCD_ram_write:
  2177                           
  2178                           	psect	text11
  2179     02E0                     __ptext11:	
  2180 ;; *************** function _LCD_putc *****************
  2181 ;; Defined at:
  2182 ;;		line 110 in file "lcd.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  c               1    wreg     unsigned char 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  c               1    7[COMMON] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2196 ;;      Params:         0       0       0       0       0
  2197 ;;      Locals:         1       0       0       0       0
  2198 ;;      Temps:          2       0       0       0       0
  2199 ;;      Totals:         3       0       0       0       0
  2200 ;;Total ram usage:        3 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 2
  2203 ;; This function calls:
  2204 ;;		_LCD_Out
  2205 ;; This function is called by:
  2206 ;;		_pantalla_inicio
  2207 ;;		___nivel_1
  2208 ;;		_LCD_putrs
  2209 ;;		_LCD_ram_write
  2210 ;;		_disparo_aliens
  2211 ;;		_pot_x
  2212 ;;		_LCD_puts
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216     02E0                     _LCD_putc:	
  2217                           ;psect for function _LCD_putc
  2218                           
  2219                           
  2220                           ;incstack = 0
  2221                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2222                           ;LCD_putc@c stored from wreg
  2223     02E0  00F7               	movwf	LCD_putc@c
  2224     02E1                     l2138:
  2225                           
  2226                           ;lcd.c: 112:    *(lcd.PORT) |= 1 << lcd.RS;
  2227     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2228     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2229     02E3  0851               	movf	_lcd,w
  2230     02E4  0084               	movwf	4
  2231     02E5  1783               	bsf	3,7
  2232     02E6  1C52               	btfss	_lcd+1,0
  2233     02E7  1383               	bcf	3,7
  2234     02E8  3001               	movlw	1
  2235     02E9  00F5               	movwf	??_LCD_putc
  2236     02EA  0853               	movf	_lcd+2,w
  2237     02EB  3907               	andlw	7
  2238     02EC  3E01               	addlw	1
  2239     02ED  2AF0               	goto	u2124
  2240     02EE                     u2125:
  2241     02EE  1003               	clrc
  2242     02EF  0DF5               	rlf	??_LCD_putc,f
  2243     02F0                     u2124:
  2244     02F0  3EFF               	addlw	-1
  2245     02F1  1D03               	skipz
  2246     02F2  2AEE               	goto	u2125
  2247     02F3  0875               	movf	??_LCD_putc,w
  2248     02F4  0480               	iorwf	0,f
  2249     02F5                     l2140:
  2250                           
  2251                           ;lcd.c: 113:     LCD_Out((c & 0xF0) >> 4);
  2252     02F5  0877               	movf	LCD_putc@c,w
  2253     02F6  00F5               	movwf	??_LCD_putc
  2254     02F7  3004               	movlw	4
  2255     02F8                     u2135:
  2256     02F8  1003               	clrc
  2257     02F9  0CF5               	rrf	??_LCD_putc,f
  2258     02FA  3EFF               	addlw	-1
  2259     02FB  1D03               	skipz
  2260     02FC  2AF8               	goto	u2135
  2261     02FD  0875               	movf	??_LCD_putc,w
  2262     02FE  390F               	andlw	15
  2263     02FF  120A  118A  202F  120A  118A  	fcall	_LCD_Out
  2264     0304                     l2142:
  2265                           
  2266                           ;lcd.c: 115:     *(lcd.PORT) |= 1 << lcd.EN;
  2267     0304  1283               	bcf	3,5	;RP0=0, select bank0
  2268     0305  1303               	bcf	3,6	;RP1=0, select bank0
  2269     0306  0851               	movf	_lcd,w
  2270     0307  0084               	movwf	4
  2271     0308  1783               	bsf	3,7
  2272     0309  1C52               	btfss	_lcd+1,0
  2273     030A  1383               	bcf	3,7
  2274     030B  3001               	movlw	1
  2275     030C  00F5               	movwf	??_LCD_putc
  2276     030D  0C53               	rrf	_lcd+2,w
  2277     030E  00F6               	movwf	??_LCD_putc+1
  2278     030F  0CF6               	rrf	??_LCD_putc+1,f
  2279     0310  0C76               	rrf	??_LCD_putc+1,w
  2280     0311  3907               	andlw	7
  2281     0312  3E01               	addlw	1
  2282     0313  2B16               	goto	u2144
  2283     0314                     u2145:
  2284     0314  1003               	clrc
  2285     0315  0DF5               	rlf	??_LCD_putc,f
  2286     0316                     u2144:
  2287     0316  3EFF               	addlw	-1
  2288     0317  1D03               	skipz
  2289     0318  2B14               	goto	u2145
  2290     0319  0875               	movf	??_LCD_putc,w
  2291     031A  0480               	iorwf	0,f
  2292     031B                     l2144:
  2293                           
  2294                           ;lcd.c: 116:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2295     031B  300D               	movlw	13
  2296     031C  00F5               	movwf	??_LCD_putc
  2297     031D                     u2777:
  2298     031D  0BF5               	decfsz	??_LCD_putc,f
  2299     031E  2B1D               	goto	u2777
  2300     031F                     l2146:
  2301                           
  2302                           ;lcd.c: 117:     *(lcd.PORT) &= ~(1 << lcd.EN);
  2303     031F  1283               	bcf	3,5	;RP0=0, select bank0
  2304     0320  1303               	bcf	3,6	;RP1=0, select bank0
  2305     0321  0851               	movf	_lcd,w
  2306     0322  0084               	movwf	4
  2307     0323  1783               	bsf	3,7
  2308     0324  1C52               	btfss	_lcd+1,0
  2309     0325  1383               	bcf	3,7
  2310     0326  3001               	movlw	1
  2311     0327  00F5               	movwf	??_LCD_putc
  2312     0328  0C53               	rrf	_lcd+2,w
  2313     0329  00F6               	movwf	??_LCD_putc+1
  2314     032A  0CF6               	rrf	??_LCD_putc+1,f
  2315     032B  0C76               	rrf	??_LCD_putc+1,w
  2316     032C  3907               	andlw	7
  2317     032D  3E01               	addlw	1
  2318     032E  2B31               	goto	u2154
  2319     032F                     u2155:
  2320     032F  1003               	clrc
  2321     0330  0DF5               	rlf	??_LCD_putc,f
  2322     0331                     u2154:
  2323     0331  3EFF               	addlw	-1
  2324     0332  1D03               	skipz
  2325     0333  2B2F               	goto	u2155
  2326     0334  0875               	movf	??_LCD_putc,w
  2327     0335  3AFF               	xorlw	255
  2328     0336  0580               	andwf	0,f
  2329     0337                     l2148:
  2330                           
  2331                           ;lcd.c: 119:     LCD_Out(c & 0x0F);
  2332     0337  0877               	movf	LCD_putc@c,w
  2333     0338  390F               	andlw	15
  2334     0339  120A  118A  202F  120A  118A  	fcall	_LCD_Out
  2335     033E                     l2150:
  2336                           
  2337                           ;lcd.c: 121:     *(lcd.PORT) |= 1 << lcd.EN;
  2338     033E  1283               	bcf	3,5	;RP0=0, select bank0
  2339     033F  1303               	bcf	3,6	;RP1=0, select bank0
  2340     0340  0851               	movf	_lcd,w
  2341     0341  0084               	movwf	4
  2342     0342  1783               	bsf	3,7
  2343     0343  1C52               	btfss	_lcd+1,0
  2344     0344  1383               	bcf	3,7
  2345     0345  3001               	movlw	1
  2346     0346  00F5               	movwf	??_LCD_putc
  2347     0347  0C53               	rrf	_lcd+2,w
  2348     0348  00F6               	movwf	??_LCD_putc+1
  2349     0349  0CF6               	rrf	??_LCD_putc+1,f
  2350     034A  0C76               	rrf	??_LCD_putc+1,w
  2351     034B  3907               	andlw	7
  2352     034C  3E01               	addlw	1
  2353     034D  2B50               	goto	u2164
  2354     034E                     u2165:
  2355     034E  1003               	clrc
  2356     034F  0DF5               	rlf	??_LCD_putc,f
  2357     0350                     u2164:
  2358     0350  3EFF               	addlw	-1
  2359     0351  1D03               	skipz
  2360     0352  2B4E               	goto	u2165
  2361     0353  0875               	movf	??_LCD_putc,w
  2362     0354  0480               	iorwf	0,f
  2363                           
  2364                           ;lcd.c: 122:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2365     0355  300D               	movlw	13
  2366     0356  00F5               	movwf	??_LCD_putc
  2367     0357                     u2787:
  2368     0357  0BF5               	decfsz	??_LCD_putc,f
  2369     0358  2B57               	goto	u2787
  2370     0359                     l2152:
  2371                           
  2372                           ;lcd.c: 123:     *(lcd.PORT) &= ~(1 << lcd.EN);
  2373     0359  1283               	bcf	3,5	;RP0=0, select bank0
  2374     035A  1303               	bcf	3,6	;RP1=0, select bank0
  2375     035B  0851               	movf	_lcd,w
  2376     035C  0084               	movwf	4
  2377     035D  1783               	bsf	3,7
  2378     035E  1C52               	btfss	_lcd+1,0
  2379     035F  1383               	bcf	3,7
  2380     0360  3001               	movlw	1
  2381     0361  00F5               	movwf	??_LCD_putc
  2382     0362  0C53               	rrf	_lcd+2,w
  2383     0363  00F6               	movwf	??_LCD_putc+1
  2384     0364  0CF6               	rrf	??_LCD_putc+1,f
  2385     0365  0C76               	rrf	??_LCD_putc+1,w
  2386     0366  3907               	andlw	7
  2387     0367  3E01               	addlw	1
  2388     0368  2B6B               	goto	u2174
  2389     0369                     u2175:
  2390     0369  1003               	clrc
  2391     036A  0DF5               	rlf	??_LCD_putc,f
  2392     036B                     u2174:
  2393     036B  3EFF               	addlw	-1
  2394     036C  1D03               	skipz
  2395     036D  2B69               	goto	u2175
  2396     036E  0875               	movf	??_LCD_putc,w
  2397     036F  3AFF               	xorlw	255
  2398     0370  0580               	andwf	0,f
  2399     0371                     l436:
  2400     0371  0008               	return
  2401     0372                     __end_of_LCD_putc:
  2402                           
  2403                           	psect	text12
  2404     05E7                     __ptext12:	
  2405 ;; *************** function _LCD_cg_ram_addr *****************
  2406 ;; Defined at:
  2407 ;;		line 144 in file "lcd.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  addr            1    wreg     unsigned char 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  addr            1    8[COMMON] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2421 ;;      Params:         0       0       0       0       0
  2422 ;;      Locals:         1       0       0       0       0
  2423 ;;      Temps:          0       4       0       0       0
  2424 ;;      Totals:         1       4       0       0       0
  2425 ;;Total ram usage:        5 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; Hardware stack levels required when called: 3
  2428 ;; This function calls:
  2429 ;;		_LCD_Write
  2430 ;; This function is called by:
  2431 ;;		_LCD_custom_char
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435     05E7                     _LCD_cg_ram_addr:	
  2436                           ;psect for function _LCD_cg_ram_addr
  2437                           
  2438                           
  2439                           ;incstack = 0
  2440                           ; Regs used in _LCD_cg_ram_addr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2441                           ;LCD_cg_ram_addr@addr stored from wreg
  2442     05E7  00F8               	movwf	LCD_cg_ram_addr@addr
  2443     05E8                     l451:	
  2444                           ;lcd.c: 145:     do { LCD_Write( (0x40 | (addr & 0x3F) & 0xF0) >> 4 ); LCD_Write( 0x40 |
      +                           (addr & 0x3F) & 0x0F); } while ( 0 );
  2445                           
  2446     05E8                     l2162:
  2447     05E8  3030               	movlw	48
  2448     05E9  0578               	andwf	LCD_cg_ram_addr@addr,w
  2449     05EA  1283               	bcf	3,5	;RP0=0, select bank0
  2450     05EB  1303               	bcf	3,6	;RP1=0, select bank0
  2451     05EC  00BA               	movwf	??_LCD_cg_ram_addr
  2452     05ED  3040               	movlw	64
  2453     05EE  043A               	iorwf	??_LCD_cg_ram_addr,w
  2454     05EF  00BB               	movwf	??_LCD_cg_ram_addr+1
  2455     05F0  3000               	movlw	0
  2456     05F1  00BC               	movwf	??_LCD_cg_ram_addr+2
  2457     05F2  3004               	movlw	4
  2458     05F3  00BD               	movwf	??_LCD_cg_ram_addr+3
  2459     05F4                     u2195:
  2460     05F4  0D3C               	rlf	??_LCD_cg_ram_addr+2,w
  2461     05F5  0CBC               	rrf	??_LCD_cg_ram_addr+2,f
  2462     05F6  0CBB               	rrf	??_LCD_cg_ram_addr+1,f
  2463     05F7  0BBD               	decfsz	??_LCD_cg_ram_addr+3,f
  2464     05F8  2DF4               	goto	u2195
  2465     05F9  083B               	movf	??_LCD_cg_ram_addr+1,w
  2466     05FA  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2467     05FF  0878               	movf	LCD_cg_ram_addr@addr,w
  2468     0600  390F               	andlw	15
  2469     0601  3840               	iorlw	64
  2470     0602  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2471     0607                     l2164:
  2472                           
  2473                           ;lcd.c: 146:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2474     0607  30C7               	movlw	199
  2475     0608  1283               	bcf	3,5	;RP0=0, select bank0
  2476     0609  1303               	bcf	3,6	;RP1=0, select bank0
  2477     060A  00BA               	movwf	??_LCD_cg_ram_addr
  2478     060B                     u2797:
  2479     060B  2E0C               	nop2
  2480     060C  0BBA               	decfsz	??_LCD_cg_ram_addr,f
  2481     060D  2E0B               	goto	u2797
  2482     060E  2E0F               	nop2
  2483     060F                     l453:
  2484     060F  0008               	return
  2485     0610                     __end_of_LCD_cg_ram_addr:
  2486                           
  2487                           	psect	text13
  2488     00E9                     __ptext13:	
  2489 ;; *************** function _LCD_Init *****************
  2490 ;; Defined at:
  2491 ;;		line 52 in file "lcd.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  display         5    0[BANK0 ] struct .
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  cmd             1   10[COMMON] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  1    wreg      _Bool 
  2498 ;; Registers used:
  2499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2505 ;;      Params:         0       5       0       0       0
  2506 ;;      Locals:         1       0       0       0       0
  2507 ;;      Temps:          2       0       0       0       0
  2508 ;;      Totals:         3       5       0       0       0
  2509 ;;Total ram usage:        8 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 3
  2512 ;; This function calls:
  2513 ;;		_LCD_Write
  2514 ;; This function is called by:
  2515 ;;		_main
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519     00E9                     _LCD_Init:	
  2520                           ;psect for function _LCD_Init
  2521                           
  2522     00E9                     l2170:	
  2523                           ;incstack = 0
  2524                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2525                           
  2526                           
  2527                           ;lcd.c: 54:     lcd = display;
  2528     00E9  3051               	movlw	_lcd& (0+255)
  2529     00EA  0084               	movwf	4
  2530     00EB  1283               	bcf	3,5	;RP0=0, select bank0
  2531     00EC  1303               	bcf	3,6	;RP1=0, select bank0
  2532     00ED  083A               	movf	LCD_Init@display,w
  2533     00EE  1383               	bcf	3,7	;select IRP bank0
  2534     00EF  0080               	movwf	0
  2535     00F0  0A84               	incf	4,f
  2536     00F1  083B               	movf	LCD_Init@display+1,w
  2537     00F2  0080               	movwf	0
  2538     00F3  0A84               	incf	4,f
  2539     00F4  083C               	movf	LCD_Init@display+2,w
  2540     00F5  0080               	movwf	0
  2541     00F6  0A84               	incf	4,f
  2542     00F7  083D               	movf	LCD_Init@display+3,w
  2543     00F8  0080               	movwf	0
  2544     00F9  0A84               	incf	4,f
  2545     00FA  083E               	movf	LCD_Init@display+4,w
  2546     00FB  0080               	movwf	0
  2547     00FC                     l2172:
  2548                           
  2549                           ;lcd.c: 63:     if ( lcd.PORT == &PORTA ) {
  2550     00FC  3000               	movlw	0
  2551     00FD  0652               	xorwf	_lcd+1,w
  2552     00FE  1D03               	skipz
  2553     00FF  2902               	goto	u2205
  2554     0100  3005               	movlw	5
  2555     0101  0651               	xorwf	_lcd,w
  2556     0102                     u2205:
  2557     0102  1D03               	skipz
  2558     0103  2905               	goto	u2201
  2559     0104  2906               	goto	u2200
  2560     0105                     u2201:
  2561     0105  290A               	goto	l2176
  2562     0106                     u2200:
  2563     0106                     l2174:
  2564                           
  2565                           ;lcd.c: 64:         TRISA = 0x00;
  2566     0106  1683               	bsf	3,5	;RP0=1, select bank1
  2567     0107  1303               	bcf	3,6	;RP1=0, select bank1
  2568     0108  0185               	clrf	5	;volatile
  2569                           
  2570                           ;lcd.c: 65:     }
  2571     0109  2925               	goto	l2184
  2572     010A                     l2176:
  2573     010A  3000               	movlw	0
  2574     010B  0652               	xorwf	_lcd+1,w
  2575     010C  1D03               	skipz
  2576     010D  2910               	goto	u2215
  2577     010E  3006               	movlw	6
  2578     010F  0651               	xorwf	_lcd,w
  2579     0110                     u2215:
  2580     0110  1D03               	skipz
  2581     0111  2913               	goto	u2211
  2582     0112  2914               	goto	u2210
  2583     0113                     u2211:
  2584     0113  2918               	goto	l2180
  2585     0114                     u2210:
  2586     0114                     l2178:
  2587                           
  2588                           ;lcd.c: 67:         TRISB = 0x00;
  2589     0114  1683               	bsf	3,5	;RP0=1, select bank1
  2590     0115  1303               	bcf	3,6	;RP1=0, select bank1
  2591     0116  0186               	clrf	6	;volatile
  2592                           
  2593                           ;lcd.c: 68:     }
  2594     0117  2925               	goto	l2184
  2595     0118                     l2180:
  2596     0118  3000               	movlw	0
  2597     0119  0652               	xorwf	_lcd+1,w
  2598     011A  1D03               	skipz
  2599     011B  291E               	goto	u2225
  2600     011C  3007               	movlw	7
  2601     011D  0651               	xorwf	_lcd,w
  2602     011E                     u2225:
  2603     011E  1D03               	skipz
  2604     011F  2921               	goto	u2221
  2605     0120  2922               	goto	u2220
  2606     0121                     u2221:
  2607     0121  2994               	goto	l420
  2608     0122                     u2220:
  2609     0122                     l2182:
  2610                           
  2611                           ;lcd.c: 70:         TRISC = 0x00;
  2612     0122  1683               	bsf	3,5	;RP0=1, select bank1
  2613     0123  1303               	bcf	3,6	;RP1=0, select bank1
  2614     0124  0187               	clrf	7	;volatile
  2615     0125                     l2184:	
  2616                           ;lcd.c: 71:     }
  2617                           
  2618                           
  2619                           ;lcd.c: 85:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2620     0125  301A               	movlw	26
  2621     0126  00F9               	movwf	??_LCD_Init+1
  2622     0127  30F8               	movlw	248
  2623     0128  00F8               	movwf	??_LCD_Init
  2624     0129                     u2807:
  2625     0129  0BF8               	decfsz	??_LCD_Init,f
  2626     012A  2929               	goto	u2807
  2627     012B  0BF9               	decfsz	??_LCD_Init+1,f
  2628     012C  2929               	goto	u2807
  2629     012D  0000               	nop
  2630     012E                     l2186:
  2631                           
  2632                           ;lcd.c: 88:     LCD_Write(0x03);
  2633     012E  3003               	movlw	3
  2634     012F  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2635     0134                     l2188:
  2636                           
  2637                           ;lcd.c: 89:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2638     0134  3007               	movlw	7
  2639     0135  00F9               	movwf	??_LCD_Init+1
  2640     0136  307D               	movlw	125
  2641     0137  00F8               	movwf	??_LCD_Init
  2642     0138                     u2817:
  2643     0138  0BF8               	decfsz	??_LCD_Init,f
  2644     0139  2938               	goto	u2817
  2645     013A  0BF9               	decfsz	??_LCD_Init+1,f
  2646     013B  2938               	goto	u2817
  2647                           
  2648                           ;lcd.c: 90:     LCD_Write(0x03);
  2649     013C  3003               	movlw	3
  2650     013D  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2651     0142                     l2190:
  2652                           
  2653                           ;lcd.c: 91:     _delay((unsigned long)((16)*(4000000/4000.0)));
  2654     0142  3015               	movlw	21
  2655     0143  00F9               	movwf	??_LCD_Init+1
  2656     0144  30C6               	movlw	198
  2657     0145  00F8               	movwf	??_LCD_Init
  2658     0146                     u2827:
  2659     0146  0BF8               	decfsz	??_LCD_Init,f
  2660     0147  2946               	goto	u2827
  2661     0148  0BF9               	decfsz	??_LCD_Init+1,f
  2662     0149  2946               	goto	u2827
  2663     014A  0000               	nop
  2664     014B                     l2192:
  2665                           
  2666                           ;lcd.c: 92:     LCD_Write(0x03);
  2667     014B  3003               	movlw	3
  2668     014C  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2669     0151                     l2194:
  2670                           
  2671                           ;lcd.c: 95:     LCD_Write(0x02);
  2672     0151  3002               	movlw	2
  2673     0152  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2674     0157                     l2196:
  2675     0157  3002               	movlw	2
  2676     0158  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2677     015D                     l2198:
  2678     015D  3008               	movlw	8
  2679     015E  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2680     0163                     l2200:
  2681     0163  3000               	movlw	0
  2682     0164  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2683     0169                     l2202:
  2684     0169  3006               	movlw	6
  2685     016A  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2686     016F                     l2204:
  2687     016F  3008               	movlw	8
  2688     0170  00FA               	movwf	LCD_Init@cmd
  2689     0171                     l2206:
  2690     0171  157A               	bsf	LCD_Init@cmd,2
  2691     0172                     l2212:
  2692     0172  087A               	movf	LCD_Init@cmd,w
  2693     0173  00F8               	movwf	??_LCD_Init
  2694     0174  3004               	movlw	4
  2695     0175                     u2235:
  2696     0175  1003               	clrc
  2697     0176  0CF8               	rrf	??_LCD_Init,f
  2698     0177  3EFF               	addlw	-1
  2699     0178  1D03               	skipz
  2700     0179  2975               	goto	u2235
  2701     017A  0878               	movf	??_LCD_Init,w
  2702     017B  390F               	andlw	15
  2703     017C  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2704     0181  087A               	movf	LCD_Init@cmd,w
  2705     0182  390F               	andlw	15
  2706     0183  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2707     0188                     l432:	
  2708                           ;lcd.c: 105:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while 
      +                          ( 0 );
  2709                           
  2710     0188  3000               	movlw	0
  2711     0189  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2712     018E  3001               	movlw	1
  2713     018F  120A  118A  24C5  120A  118A  	fcall	_LCD_Write
  2714     0194                     l420:
  2715     0194  0008               	return
  2716     0195                     __end_of_LCD_Init:
  2717                           
  2718                           	psect	text14
  2719     04C5                     __ptext14:	
  2720 ;; *************** function _LCD_Write *****************
  2721 ;; Defined at:
  2722 ;;		line 41 in file "lcd.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  c               1    wreg     unsigned char 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  c               1    7[COMMON] unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2736 ;;      Params:         0       0       0       0       0
  2737 ;;      Locals:         1       0       0       0       0
  2738 ;;      Temps:          2       0       0       0       0
  2739 ;;      Totals:         3       0       0       0       0
  2740 ;;Total ram usage:        3 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; Hardware stack levels required when called: 2
  2743 ;; This function calls:
  2744 ;;		_LCD_Out
  2745 ;; This function is called by:
  2746 ;;		_main
  2747 ;;		_pantalla_inicio
  2748 ;;		___nivel_1
  2749 ;;		_LCD_Init
  2750 ;;		_LCD_cg_ram_addr
  2751 ;;		_disparo_aliens
  2752 ;;		_pot_x
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756     04C5                     _LCD_Write:	
  2757                           ;psect for function _LCD_Write
  2758                           
  2759                           
  2760                           ;incstack = 0
  2761                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2762                           ;LCD_Write@c stored from wreg
  2763     04C5  00F7               	movwf	LCD_Write@c
  2764     04C6                     l2128:
  2765                           
  2766                           ;lcd.c: 43:     *(lcd.PORT) &= ~(1 << lcd.RS);
  2767     04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2768     04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2769     04C8  0851               	movf	_lcd,w
  2770     04C9  0084               	movwf	4
  2771     04CA  1783               	bsf	3,7
  2772     04CB  1C52               	btfss	_lcd+1,0
  2773     04CC  1383               	bcf	3,7
  2774     04CD  3001               	movlw	1
  2775     04CE  00F5               	movwf	??_LCD_Write
  2776     04CF  0853               	movf	_lcd+2,w
  2777     04D0  3907               	andlw	7
  2778     04D1  3E01               	addlw	1
  2779     04D2  2CD5               	goto	u2094
  2780     04D3                     u2095:
  2781     04D3  1003               	clrc
  2782     04D4  0DF5               	rlf	??_LCD_Write,f
  2783     04D5                     u2094:
  2784     04D5  3EFF               	addlw	-1
  2785     04D6  1D03               	skipz
  2786     04D7  2CD3               	goto	u2095
  2787     04D8  0875               	movf	??_LCD_Write,w
  2788     04D9  3AFF               	xorlw	255
  2789     04DA  0580               	andwf	0,f
  2790     04DB                     l2130:
  2791                           
  2792                           ;lcd.c: 44:     LCD_Out(c);
  2793     04DB  0877               	movf	LCD_Write@c,w
  2794     04DC  120A  118A  202F  120A  118A  	fcall	_LCD_Out
  2795     04E1                     l2132:
  2796                           
  2797                           ;lcd.c: 46:     *(lcd.PORT) |= 1 << lcd.EN;
  2798     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2799     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2800     04E3  0851               	movf	_lcd,w
  2801     04E4  0084               	movwf	4
  2802     04E5  1783               	bsf	3,7
  2803     04E6  1C52               	btfss	_lcd+1,0
  2804     04E7  1383               	bcf	3,7
  2805     04E8  3001               	movlw	1
  2806     04E9  00F5               	movwf	??_LCD_Write
  2807     04EA  0C53               	rrf	_lcd+2,w
  2808     04EB  00F6               	movwf	??_LCD_Write+1
  2809     04EC  0CF6               	rrf	??_LCD_Write+1,f
  2810     04ED  0C76               	rrf	??_LCD_Write+1,w
  2811     04EE  3907               	andlw	7
  2812     04EF  3E01               	addlw	1
  2813     04F0  2CF3               	goto	u2104
  2814     04F1                     u2105:
  2815     04F1  1003               	clrc
  2816     04F2  0DF5               	rlf	??_LCD_Write,f
  2817     04F3                     u2104:
  2818     04F3  3EFF               	addlw	-1
  2819     04F4  1D03               	skipz
  2820     04F5  2CF1               	goto	u2105
  2821     04F6  0875               	movf	??_LCD_Write,w
  2822     04F7  0480               	iorwf	0,f
  2823     04F8                     l2134:
  2824                           
  2825                           ;lcd.c: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2826     04F8  3006               	movlw	6
  2827     04F9  00F6               	movwf	??_LCD_Write+1
  2828     04FA  3030               	movlw	48
  2829     04FB  00F5               	movwf	??_LCD_Write
  2830     04FC                     u2837:
  2831     04FC  0BF5               	decfsz	??_LCD_Write,f
  2832     04FD  2CFC               	goto	u2837
  2833     04FE  0BF6               	decfsz	??_LCD_Write+1,f
  2834     04FF  2CFC               	goto	u2837
  2835     0500  0000               	nop
  2836     0501                     l2136:
  2837                           
  2838                           ;lcd.c: 48:     *(lcd.PORT) &= ~(1 << lcd.EN);
  2839     0501  1283               	bcf	3,5	;RP0=0, select bank0
  2840     0502  1303               	bcf	3,6	;RP1=0, select bank0
  2841     0503  0851               	movf	_lcd,w
  2842     0504  0084               	movwf	4
  2843     0505  1783               	bsf	3,7
  2844     0506  1C52               	btfss	_lcd+1,0
  2845     0507  1383               	bcf	3,7
  2846     0508  3001               	movlw	1
  2847     0509  00F5               	movwf	??_LCD_Write
  2848     050A  0C53               	rrf	_lcd+2,w
  2849     050B  00F6               	movwf	??_LCD_Write+1
  2850     050C  0CF6               	rrf	??_LCD_Write+1,f
  2851     050D  0C76               	rrf	??_LCD_Write+1,w
  2852     050E  3907               	andlw	7
  2853     050F  3E01               	addlw	1
  2854     0510  2D13               	goto	u2114
  2855     0511                     u2115:
  2856     0511  1003               	clrc
  2857     0512  0DF5               	rlf	??_LCD_Write,f
  2858     0513                     u2114:
  2859     0513  3EFF               	addlw	-1
  2860     0514  1D03               	skipz
  2861     0515  2D11               	goto	u2115
  2862     0516  0875               	movf	??_LCD_Write,w
  2863     0517  3AFF               	xorlw	255
  2864     0518  0580               	andwf	0,f
  2865     0519                     l411:
  2866     0519  0008               	return
  2867     051A                     __end_of_LCD_Write:
  2868                           
  2869                           	psect	text15
  2870     002F                     __ptext15:	
  2871 ;; *************** function _LCD_Out *****************
  2872 ;; Defined at:
  2873 ;;		line 9 in file "lcd.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  c               1    wreg     unsigned char 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  c               1    4[COMMON] unsigned char 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       0       0       0       0
  2888 ;;      Locals:         1       0       0       0       0
  2889 ;;      Temps:          2       0       0       0       0
  2890 ;;      Totals:         3       0       0       0       0
  2891 ;;Total ram usage:        3 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 1
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_LCD_Write
  2898 ;;		_LCD_putc
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902     002F                     _LCD_Out:	
  2903                           ;psect for function _LCD_Out
  2904                           
  2905                           
  2906                           ;incstack = 0
  2907                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  2908                           ;LCD_Out@c stored from wreg
  2909     002F  00F4               	movwf	LCD_Out@c
  2910     0030                     l2104:
  2911                           
  2912                           ;lcd.c: 11:     if ( c & 1 ){
  2913     0030  1C74               	btfss	LCD_Out@c,0
  2914     0031  2833               	goto	u1971
  2915     0032  2834               	goto	u1970
  2916     0033                     u1971:
  2917     0033  2849               	goto	l2108
  2918     0034                     u1970:
  2919     0034                     l2106:
  2920                           
  2921                           ;lcd.c: 12:         *(lcd.PORT) |= 1 << lcd.D4;
  2922     0034  1283               	bcf	3,5	;RP0=0, select bank0
  2923     0035  1303               	bcf	3,6	;RP1=0, select bank0
  2924     0036  0851               	movf	_lcd,w
  2925     0037  0084               	movwf	4
  2926     0038  1783               	bsf	3,7
  2927     0039  1C52               	btfss	_lcd+1,0
  2928     003A  1383               	bcf	3,7
  2929     003B  3001               	movlw	1
  2930     003C  00F2               	movwf	??_LCD_Out
  2931     003D  0854               	movf	_lcd+3,w
  2932     003E  3907               	andlw	7
  2933     003F  3E01               	addlw	1
  2934     0040  2843               	goto	u1984
  2935     0041                     u1985:
  2936     0041  1003               	clrc
  2937     0042  0DF2               	rlf	??_LCD_Out,f
  2938     0043                     u1984:
  2939     0043  3EFF               	addlw	-1
  2940     0044  1D03               	skipz
  2941     0045  2841               	goto	u1985
  2942     0046  0872               	movf	??_LCD_Out,w
  2943     0047  0480               	iorwf	0,f
  2944                           
  2945                           ;lcd.c: 13:     }
  2946     0048  285E               	goto	l2110
  2947     0049                     l2108:
  2948                           
  2949                           ;lcd.c: 15:          *(lcd.PORT) &= ~(1 << lcd.D4);
  2950     0049  1283               	bcf	3,5	;RP0=0, select bank0
  2951     004A  1303               	bcf	3,6	;RP1=0, select bank0
  2952     004B  0851               	movf	_lcd,w
  2953     004C  0084               	movwf	4
  2954     004D  1783               	bsf	3,7
  2955     004E  1C52               	btfss	_lcd+1,0
  2956     004F  1383               	bcf	3,7
  2957     0050  3001               	movlw	1
  2958     0051  00F2               	movwf	??_LCD_Out
  2959     0052  0854               	movf	_lcd+3,w
  2960     0053  3907               	andlw	7
  2961     0054  3E01               	addlw	1
  2962     0055  2858               	goto	u1994
  2963     0056                     u1995:
  2964     0056  1003               	clrc
  2965     0057  0DF2               	rlf	??_LCD_Out,f
  2966     0058                     u1994:
  2967     0058  3EFF               	addlw	-1
  2968     0059  1D03               	skipz
  2969     005A  2856               	goto	u1995
  2970     005B  0872               	movf	??_LCD_Out,w
  2971     005C  3AFF               	xorlw	255
  2972     005D  0580               	andwf	0,f
  2973     005E                     l2110:
  2974                           
  2975                           ;lcd.c: 18:     if ( c & 2 ) {
  2976     005E  1CF4               	btfss	LCD_Out@c,1
  2977     005F  2861               	goto	u2001
  2978     0060  2862               	goto	u2000
  2979     0061                     u2001:
  2980     0061  2878               	goto	l2114
  2981     0062                     u2000:
  2982     0062                     l2112:
  2983                           
  2984                           ;lcd.c: 19:         *(lcd.PORT) |= 1 << lcd.D5;
  2985     0062  0851               	movf	_lcd,w
  2986     0063  0084               	movwf	4
  2987     0064  1783               	bsf	3,7
  2988     0065  1C52               	btfss	_lcd+1,0
  2989     0066  1383               	bcf	3,7
  2990     0067  3001               	movlw	1
  2991     0068  00F2               	movwf	??_LCD_Out
  2992     0069  0C54               	rrf	_lcd+3,w
  2993     006A  00F3               	movwf	??_LCD_Out+1
  2994     006B  0CF3               	rrf	??_LCD_Out+1,f
  2995     006C  0C73               	rrf	??_LCD_Out+1,w
  2996     006D  3907               	andlw	7
  2997     006E  3E01               	addlw	1
  2998     006F  2872               	goto	u2014
  2999     0070                     u2015:
  3000     0070  1003               	clrc
  3001     0071  0DF2               	rlf	??_LCD_Out,f
  3002     0072                     u2014:
  3003     0072  3EFF               	addlw	-1
  3004     0073  1D03               	skipz
  3005     0074  2870               	goto	u2015
  3006     0075  0872               	movf	??_LCD_Out,w
  3007     0076  0480               	iorwf	0,f
  3008                           
  3009                           ;lcd.c: 20:     }
  3010     0077  288E               	goto	l2116
  3011     0078                     l2114:
  3012                           
  3013                           ;lcd.c: 22:         *(lcd.PORT) &= ~(1 << lcd.D5);
  3014     0078  0851               	movf	_lcd,w
  3015     0079  0084               	movwf	4
  3016     007A  1783               	bsf	3,7
  3017     007B  1C52               	btfss	_lcd+1,0
  3018     007C  1383               	bcf	3,7
  3019     007D  3001               	movlw	1
  3020     007E  00F2               	movwf	??_LCD_Out
  3021     007F  0C54               	rrf	_lcd+3,w
  3022     0080  00F3               	movwf	??_LCD_Out+1
  3023     0081  0CF3               	rrf	??_LCD_Out+1,f
  3024     0082  0C73               	rrf	??_LCD_Out+1,w
  3025     0083  3907               	andlw	7
  3026     0084  3E01               	addlw	1
  3027     0085  2888               	goto	u2024
  3028     0086                     u2025:
  3029     0086  1003               	clrc
  3030     0087  0DF2               	rlf	??_LCD_Out,f
  3031     0088                     u2024:
  3032     0088  3EFF               	addlw	-1
  3033     0089  1D03               	skipz
  3034     008A  2886               	goto	u2025
  3035     008B  0872               	movf	??_LCD_Out,w
  3036     008C  3AFF               	xorlw	255
  3037     008D  0580               	andwf	0,f
  3038     008E                     l2116:
  3039                           
  3040                           ;lcd.c: 25:     if ( c & 4 ) {
  3041     008E  1D74               	btfss	LCD_Out@c,2
  3042     008F  2891               	goto	u2031
  3043     0090  2892               	goto	u2030
  3044     0091                     u2031:
  3045     0091  28A5               	goto	l2120
  3046     0092                     u2030:
  3047     0092                     l2118:
  3048                           
  3049                           ;lcd.c: 26:         *(lcd.PORT) |= 1 << lcd.D6;
  3050     0092  0851               	movf	_lcd,w
  3051     0093  0084               	movwf	4
  3052     0094  1783               	bsf	3,7
  3053     0095  1C52               	btfss	_lcd+1,0
  3054     0096  1383               	bcf	3,7
  3055     0097  3001               	movlw	1
  3056     0098  00F2               	movwf	??_LCD_Out
  3057     0099  0855               	movf	_lcd+4,w
  3058     009A  3907               	andlw	7
  3059     009B  3E01               	addlw	1
  3060     009C  289F               	goto	u2044
  3061     009D                     u2045:
  3062     009D  1003               	clrc
  3063     009E  0DF2               	rlf	??_LCD_Out,f
  3064     009F                     u2044:
  3065     009F  3EFF               	addlw	-1
  3066     00A0  1D03               	skipz
  3067     00A1  289D               	goto	u2045
  3068     00A2  0872               	movf	??_LCD_Out,w
  3069     00A3  0480               	iorwf	0,f
  3070                           
  3071                           ;lcd.c: 27:     }
  3072     00A4  28B8               	goto	l2122
  3073     00A5                     l2120:
  3074                           
  3075                           ;lcd.c: 29:         *(lcd.PORT) &= ~(1 << lcd.D6);
  3076     00A5  0851               	movf	_lcd,w
  3077     00A6  0084               	movwf	4
  3078     00A7  1783               	bsf	3,7
  3079     00A8  1C52               	btfss	_lcd+1,0
  3080     00A9  1383               	bcf	3,7
  3081     00AA  3001               	movlw	1
  3082     00AB  00F2               	movwf	??_LCD_Out
  3083     00AC  0855               	movf	_lcd+4,w
  3084     00AD  3907               	andlw	7
  3085     00AE  3E01               	addlw	1
  3086     00AF  28B2               	goto	u2054
  3087     00B0                     u2055:
  3088     00B0  1003               	clrc
  3089     00B1  0DF2               	rlf	??_LCD_Out,f
  3090     00B2                     u2054:
  3091     00B2  3EFF               	addlw	-1
  3092     00B3  1D03               	skipz
  3093     00B4  28B0               	goto	u2055
  3094     00B5  0872               	movf	??_LCD_Out,w
  3095     00B6  3AFF               	xorlw	255
  3096     00B7  0580               	andwf	0,f
  3097     00B8                     l2122:
  3098                           
  3099                           ;lcd.c: 32:     if ( c & 8 ) {
  3100     00B8  1DF4               	btfss	LCD_Out@c,3
  3101     00B9  28BB               	goto	u2061
  3102     00BA  28BC               	goto	u2060
  3103     00BB                     u2061:
  3104     00BB  28D2               	goto	l2126
  3105     00BC                     u2060:
  3106     00BC                     l2124:
  3107                           
  3108                           ;lcd.c: 33:          *(lcd.PORT) |= 1 << lcd.D7;
  3109     00BC  0851               	movf	_lcd,w
  3110     00BD  0084               	movwf	4
  3111     00BE  1783               	bsf	3,7
  3112     00BF  1C52               	btfss	_lcd+1,0
  3113     00C0  1383               	bcf	3,7
  3114     00C1  3001               	movlw	1
  3115     00C2  00F2               	movwf	??_LCD_Out
  3116     00C3  0C55               	rrf	_lcd+4,w
  3117     00C4  00F3               	movwf	??_LCD_Out+1
  3118     00C5  0CF3               	rrf	??_LCD_Out+1,f
  3119     00C6  0C73               	rrf	??_LCD_Out+1,w
  3120     00C7  3907               	andlw	7
  3121     00C8  3E01               	addlw	1
  3122     00C9  28CC               	goto	u2074
  3123     00CA                     u2075:
  3124     00CA  1003               	clrc
  3125     00CB  0DF2               	rlf	??_LCD_Out,f
  3126     00CC                     u2074:
  3127     00CC  3EFF               	addlw	-1
  3128     00CD  1D03               	skipz
  3129     00CE  28CA               	goto	u2075
  3130     00CF  0872               	movf	??_LCD_Out,w
  3131     00D0  0480               	iorwf	0,f
  3132                           
  3133                           ;lcd.c: 34:     }
  3134     00D1  28E8               	goto	l408
  3135     00D2                     l2126:
  3136                           
  3137                           ;lcd.c: 36:          *(lcd.PORT) &= ~(1 << lcd.D7);
  3138     00D2  0851               	movf	_lcd,w
  3139     00D3  0084               	movwf	4
  3140     00D4  1783               	bsf	3,7
  3141     00D5  1C52               	btfss	_lcd+1,0
  3142     00D6  1383               	bcf	3,7
  3143     00D7  3001               	movlw	1
  3144     00D8  00F2               	movwf	??_LCD_Out
  3145     00D9  0C55               	rrf	_lcd+4,w
  3146     00DA  00F3               	movwf	??_LCD_Out+1
  3147     00DB  0CF3               	rrf	??_LCD_Out+1,f
  3148     00DC  0C73               	rrf	??_LCD_Out+1,w
  3149     00DD  3907               	andlw	7
  3150     00DE  3E01               	addlw	1
  3151     00DF  28E2               	goto	u2084
  3152     00E0                     u2085:
  3153     00E0  1003               	clrc
  3154     00E1  0DF2               	rlf	??_LCD_Out,f
  3155     00E2                     u2084:
  3156     00E2  3EFF               	addlw	-1
  3157     00E3  1D03               	skipz
  3158     00E4  28E0               	goto	u2085
  3159     00E5  0872               	movf	??_LCD_Out,w
  3160     00E6  3AFF               	xorlw	255
  3161     00E7  0580               	andwf	0,f
  3162     00E8                     l408:
  3163     00E8  0008               	return
  3164     00E9                     __end_of_LCD_Out:
  3165                           
  3166                           	psect	text16
  3167     0650                     __ptext16:	
  3168 ;; *************** function _ISR *****************
  3169 ;; Defined at:
  3170 ;;		line 246 in file "main.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3184 ;;      Params:         0       0       0       0       0
  3185 ;;      Locals:         0       0       0       0       0
  3186 ;;      Temps:          2       0       0       0       0
  3187 ;;      Totals:         2       0       0       0       0
  3188 ;;Total ram usage:        2 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		Interrupt level 1
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197     0650                     _ISR:	
  3198                           ;psect for function _ISR
  3199                           
  3200     0650                     i1l2056:
  3201     0650  1C8B               	btfss	11,1	;volatile
  3202     0651  2E53               	goto	u195_21
  3203     0652  2E54               	goto	u195_20
  3204     0653                     u195_21:
  3205     0653  2E5F               	goto	i1l376
  3206     0654                     u195_20:
  3207     0654                     i1l2058:
  3208     0654  138B               	bcf	11,7	;volatile
  3209     0655                     i1l2060:
  3210     0655  3001               	movlw	1
  3211     0656  1283               	bcf	3,5	;RP0=0, select bank0
  3212     0657  1303               	bcf	3,6	;RP1=0, select bank0
  3213     0658  07B4               	addwf	_nivel,f
  3214     0659  1803               	skipnc
  3215     065A  0AB5               	incf	_nivel+1,f
  3216     065B  3000               	movlw	0
  3217     065C  07B5               	addwf	_nivel+1,f
  3218     065D                     i1l2062:
  3219     065D  108B               	bcf	11,1	;volatile
  3220     065E                     i1l2064:
  3221     065E  178B               	bsf	11,7	;volatile
  3222     065F                     i1l376:
  3223     065F  0871               	movf	??_ISR+1,w
  3224     0660  008A               	movwf	10
  3225     0661  0E70               	swapf	??_ISR,w
  3226     0662  0083               	movwf	3
  3227     0663  0EFE               	swapf	btemp,f
  3228     0664  0E7E               	swapf	btemp,w
  3229     0665  0009               	retfie
  3230     0666                     __end_of_ISR:
  3231     0002                     ___latbits      equ	2
  3232     007E                     btemp           set	126	;btemp
  3233     007E                     wtemp0          set	126
  3234                           
  3235                           	psect	intentry
  3236     0004                     __pintentry:	
  3237                           ;incstack = 0
  3238                           ; Regs used in _ISR: [wreg]
  3239                           
  3240     0004                     interrupt_function:
  3241     007E                     saved_w         set	btemp
  3242     0004  00FE               	movwf	btemp
  3243     0005  0E03               	swapf	3,w
  3244     0006  00F0               	movwf	??_ISR
  3245     0007  080A               	movf	10,w
  3246     0008  00F1               	movwf	??_ISR+1
  3247     0009  120A  118A  2E50   	ljmp	_ISR
  3248                           
  3249                           	psect	config
  3250                           
  3251                           ;Config register CONFIG1 @ 0x2007
  3252                           ;	Oscillator Selection bits
  3253                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  3254                           ;	Watchdog Timer Enable bit
  3255                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3256                           ;	Power-up Timer Enable bit
  3257                           ;	PWRTE = OFF, PWRT disabled
  3258                           ;	RE3/MCLR pin function select bit
  3259                           ;	MCLRE = 0x1, unprogrammed default
  3260                           ;	Code Protection bit
  3261                           ;	CP = OFF, Program memory code protection is disabled
  3262                           ;	Data Code Protection bit
  3263                           ;	CPD = OFF, Data memory code protection is disabled
  3264                           ;	Brown Out Reset Selection bits
  3265                           ;	BOREN = ON, BOR enabled
  3266                           ;	Internal External Switchover bit
  3267                           ;	IESO = 0x1, unprogrammed default
  3268                           ;	Fail-Safe Clock Monitor Enabled bit
  3269                           ;	FCMEN = 0x1, unprogrammed default
  3270                           ;	Low Voltage Programming Enable bit
  3271                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3272                           ;	In-Circuit Debugger Mode bit
  3273                           ;	DEBUG = 0x1, unprogrammed default
  3274     2007                     	org	8199
  3275     2007  2FF1               	dw	12273
  3276                           
  3277                           ;Config register CONFIG2 @ 0x2008
  3278                           ;	Brown-out Reset Selection bit
  3279                           ;	BOR4V = 0x1, unprogrammed default
  3280                           ;	Flash Program Memory Self Write Enable bits
  3281                           ;	WRT = OFF, Write protection off
  3282     2008                     	org	8200
  3283     2008  3FFF               	dw	16383

Data Sizes:
    Strings     62
    Constant    40
    Data        8
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     23      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    LCD_custom_char@x	PTR const unsigned char  size(1) Largest target is 8
		 -> alien_chico(CODE[8]), alien_grande(CODE[8]), corazon(CODE[8]), medio_corazon(CODE[8]), 
		 -> nave(CODE[8]), 

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[14]), STR_2(CODE[14]), STR_3(CODE[7]), STR_4(CODE[12]), 
		 -> STR_5(CODE[15]), STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    time@t	PTR unsigned long  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_custom_char
    _srand->_time
    _pantalla_inicio->_LCD_putrs
    _LCD_putrs->_LCD_putc
    _rand->___lmul
    _LCD_custom_char->_LCD_ram_write
    _LCD_ram_write->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_cg_ram_addr->_LCD_Write
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___nivel_1
    ___nivel_1->___awmod
    _rand->___lmul
    ___awmod->_rand
    _LCD_custom_char->_LCD_cg_ram_addr

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4193
                           _LCD_Init
                          _LCD_Write
                    _LCD_custom_char
                          ___nivel_1
                    _pantalla_inicio
                              _srand
                               _time
 ---------------------------------------------------------------------------------
 (1) _time                                                 4     0      4      45
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      23
                                              6 COMMON     2     0      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (1) _pantalla_inicio                                      3     3      0    1368
                                              0 BANK0      3     3      0
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (2) _LCD_putrs                                            3     2      1     436
                                              8 COMMON     3     2      1
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (1) ___nivel_1                                            7     7      0    1267
                                             16 BANK0      7     7      0
                          _LCD_Write
                           _LCD_putc
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2      94
                                              4 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8      94
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     300
                                             10 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_custom_char                                      4     3      1     906
                                             10 COMMON     1     1      0
                                              4 BANK0      3     2      1
                    _LCD_cg_ram_addr
                      _LCD_ram_write
 ---------------------------------------------------------------------------------
 (2) _LCD_ram_write                                        2     2      0     329
                                              8 COMMON     2     2      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (3) _LCD_putc                                             3     3      0     282
                                              5 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (2) _LCD_cg_ram_addr                                      5     5      0     329
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     343
                                              8 COMMON     3     3      0
                                              0 BANK0      5     0      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            3     3      0     235
                                              5 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (4) _LCD_Out                                              3     3      0     188
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
   _LCD_custom_char
     _LCD_cg_ram_addr
       _LCD_Write
     _LCD_ram_write
       _LCD_putc
         _LCD_Out
   ___nivel_1
     _LCD_Write
     _LCD_putc
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
   _pantalla_inicio
     _LCD_Write
     _LCD_putc
     _LCD_putrs
       _LCD_putc
   _srand
     _time (ARG)
   _time

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     23      56     70.0%
BITBANK0            80      0       0      0.0%
COMMON              14     11      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      69      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Jun 25 18:08:57 2025

                       pc 0002                        l98 0195                        fsr 0004  
                     l102 01A1                       l116 01AD                       l205 0236  
                     l141 01CC                       l133 01C0                       l206 023D  
                     l231 03F4                       l160 01FA                       l152 01E6  
                     l209 0372                       l411 0519                       l171 0206  
                     l420 0194                       l408 00E8                       l432 0188  
                     l451 05E8                       l436 0371                       l188 0223  
                     l453 060F                       l381 05E6                       l456 0687  
                     l448 0633                       l708 04C4                       l556 05B6  
                     _GIE 005F                       _ISR 0650           LCD_Init@display 003A  
                     _lcd 0051                       fsr0 0004                       indf 0000  
            ___awmod@sign 0049                      ?_ISR 0070           __end_of_LCD_Out 00E9  
                    l1010 064F                      l1003 0694                      l1006 056A  
                    l2110 005E                      l2120 00A5                      l2112 0062  
                    l2104 0030                      l2200 0163                      l2122 00B8  
                    l2114 0078                      l2106 0034                      l2130 04DB  
                    l2202 0169                      l2124 00BC                      l2116 008E  
                    l2108 0049                      l2132 04E1                      l2212 0172  
                    l2204 016F                      l2140 02F5                      l2220 05CC  
                    l2300 0372                      l2126 00D2                      l2118 0092  
                    l2134 04F8                      l2206 0171                      l2150 033E  
                    l2142 0304                      l2230 05E0                      l2310 03C4  
                    l2302 037E                      l2136 0501                      l2128 04C6  
                    l2152 0359                      l2144 031B                      l2216 05BA  
                    l2320 03D9                      l2304 0399                      l2160 0626  
                    l2232 0195                      l2170 00E9                      l2162 05E8  
                    l2146 031F                      l2138 02E1                      l2226 05CF  
                    l2218 05C6                      l2322 03DF                      l2306 039C  
                    l2154 0610                      l2242 01B4                      l2330 0246  
                    l2180 0118                      l2172 00FC                      l2164 0607  
                    l2148 0337                      l2228 05DC                      l1620 0575  
                    l2308 03B4                      l2324 03E7                      l2156 0613  
                    l2340 0250                      l2332 0248                      l2190 0142  
                    l2182 0122                      l2174 0106                      l2166 067A  
                    l1622 0579                      l2318 03CE                      l2158 0620  
                    l2262 01EE                      l2350 027F                      l2342 0251  
                    l2334 024B                      l2326 023E                      l2192 014B  
                    l2184 0125                      l2176 010A                      l2168 0680  
                    l1624 0592                      l1640 051A                      l2280 020D  
                    l2264 01F2                      l2248 01C7                      l2360 02B1  
                    l2352 0289                      l2344 0269                      l2336 024C  
                    l2328 0242                      l2194 0151                      l2186 012E  
                    l2178 0114                      l1626 059B                      l1618 056B  
                    l1642 0555                      l2290 0217                      l2282 0211  
                    l2266 01F8                      l2258 01CC                      l2370 02D0  
                    l2362 02C0                      l2354 0293                      l2346 026F  
                    l2338 024F                      l2196 0157                      l2188 0134  
                    l1660 0478                      l1628 05AC                      l2364 02C4  
                    l2356 029D                      l2348 0275                      l2198 015D  
                    l1670 048C                      l1662 047A                      l1654 046C  
                    l2278 01FA                      l2366 02CA                      l2358 02A7  
                    l1680 04A9                      l1672 0493                      l1664 047E  
                    l1656 046F                      l1682 04B0                      l1674 0495  
                    l1666 0483                      l1658 0473                      l2298 022A  
                    l1762 0688                      l1754 0634                      l2562 02D5  
                    l1676 0499                      l1668 0489                      l1684 04B6  
                    l1756 0639                      l1686 04BB                      l1678 04A3  
                    l1758 0647                      l1688 04C0                      STR_1 044B  
                    STR_2 043D                      STR_3 0465                      STR_4 0459  
                    STR_5 042E                      u2000 0062                      u2001 0061  
                    u1210 0579                      u1211 0578                      u1300 0473  
                    u1301 0472                      u1221 0584                      u2030 0092  
                    u2014 0072                      u1310 047E                      u1222 058B  
                    u2031 0091                      u2015 0070                      u1311 047D  
                    u1223 0592                      u2024 0088                      u2104 04F3  
                    u2200 0106                      u1320 0489                      u2025 0086  
                    u2105 04F1                      u2201 0105                      u1321 0488  
                    u2114 0513                      u2210 0114                      u1250 05AC  
                    u2115 0511                      u2211 0113                      u1251 05AB  
                    u1235 0594                      u2060 00BC                      u2044 009F  
                    u2220 0122                      u2124 02F0                      u1340 0499  
                    u2300 03F4                      u2061 00BB                      u2045 009D  
                    u2221 0121                      u2205 0102                      u2125 02EE  
                    u1341 0498                      u1245 059C                      u2301 03F3  
                    u2054 00B2                      u1350 04A3                      u1270 0542  
                    u2055 00B0                      u2215 0110                      u2135 02F8  
                    u1351 04A2                      u1335 048D                      u1271 0543  
                    u2144 0316                      u1280 0563                      u1272 0548  
                    u2225 011E                      u2145 0314                      u1273 0549  
                    u2305 03F0                      u2074 00CC                      u2154 0331  
                    u2250 05E6                      u1370 04B6                      u1450 0639  
                    u2075 00CA                      u2235 0175                      u2155 032F  
                    u2251 05E5                      u1371 04B5                      u1355 049F  
                    u1451 0638                      u2084 00E2                      u2164 0350  
                    u1380 04BB                      u2180 0633                      u2085 00E0  
                    u2165 034E                      u2245 05BE                      u1381 04BA  
                    u1365 04AA                      u1285 055E                      u2181 0632  
                    u2094 04D5                      u2174 036B                      u2270 01F8  
                    u2095 04D3                      u2175 0369                      u2271 01F7  
                    u2280 0217                      u2281 0216                      u2265 01D0  
                    u2195 05F4                      u2295 03B8                      u2807 0129  
                    u2817 0138                      u1970 0034                      u1971 0033  
                    u2827 0146                      u2837 04FC                      _INTE 005C  
                    _INTF 0059                      u2767 0682                      u1984 0043  
                    u1985 0041                      u2777 031D                      u1994 0058  
                    u1995 0056                      u2787 0357                      u2797 060B  
                    _main 023E                      _nave 0426                      _rand 051A  
                    _seed 0036                      _time 0634                      btemp 007E  
       LCD_ram_write@data 0079                      start 000C               LCD_Init@cmd 007A  
___nivel_1@cantidadAliens 004C      __end_of_alien_grande 0426                     ??_ISR 0070  
        __end_of_LCD_Init 0195          __end_of_LCD_putc 0372                     ?_main 0070  
                   ?_rand 003E           __end_of___awmod 04C5                     ?_time 0072  
                   _ANSEL 0188                     i1l376 065F                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087         ??_LCD_cg_ram_addr 003A  
     ___lmul@multiplicand 0076           __end_of_corazon 040E          pantalla_inicio@i 003C  
        pantalla_inicio@j 003B                     _fondo 0020                     _nivel 0034  
                   _vidas 0056                     _pos_x 007B                     _srand 0688  
                   pclath 000A                     time@t 0072                     status 0003  
                   wtemp0 007E           __initialization 000F              __end_of_main 02E0  
            __end_of_nave 042E              __end_of_rand 056B             _medio_corazon 040E  
            __end_of_time 0650             _LCD_ram_write 0679                    ??_main 007B  
                  ??_rand 0040                    ??_time 0076       LCD_cg_ram_addr@addr 0078  
               ??_LCD_Out 0072         __end_of_LCD_Write 051A         __end_of_LCD_putrs 0634  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ADRESL 009E                    ?_srand 0076                    _ANSELH 0189  
                  i1l2060 0655                    i1l2062 065D                    i1l2064 065E  
                  i1l2056 0650                    i1l2058 0654                    _INTEDG 040E  
                  u195_20 0654                    u195_21 0653                    ___lmul 056B  
               ??___awmod 007B            ?_LCD_ram_write 0070           ___awmod@divisor 0044  
         ___awmod@counter 0048              __pdataCOMMON 007B                    saved_w 007E  
                  srand@s 0076   __end_of__initialization 002B                 ?_LCD_Init 003A  
               ?_LCD_putc 0070            __pcstackCOMMON 0070              __pidataBANK0 069D  
           __end_of_srand 0695                 LCD_putc@c 0077              _alien_grande 041E  
                 ??_srand 0078                __pbssBANK0 0020                ??_LCD_Init 0078  
       ??_LCD_custom_char 007A                ??_LCD_putc 0075                __pmaintext 023E  
         ??_LCD_ram_write 0078                   ?___lmul 0072           _LCD_cg_ram_addr 05E7  
              __pintentry 0004            ___lmul@product 003A         __end_of___nivel_1 03F5  
                 _LCD_Out 002F                __stringtab 0400       ___nivel_1@posAliens 0050  
     ___nivel_1@tipoAlien 004D                   ___awmod 046C          LCD_custom_char@i 0040  
        LCD_custom_char@x 003E                   __ptext1 0634                   __ptext2 0688  
                 __ptext3 0195                   __ptext4 0610                   __ptext5 0372  
                 __ptext6 051A                   __ptext7 056B                   __ptext8 046C  
                 __ptext9 05B7                   _corazon 0406          ___awmod@dividend 0046  
                 clrloop0 0696                 _LCD_Write 04C5      end_of_initialization 002B  
               _LCD_putrs 0610   __end_of_LCD_cg_ram_addr 0610                 _PORTBbits 0006  
       ??_pantalla_inicio 003A                ?_LCD_Write 0070                ?_LCD_putrs 0078  
     __end_of_alien_chico 041E               ___nivel_1@i 004E            __end_of___lmul 05B7  
           __pidataCOMMON 06A4                LCD_Write@c 0077           _LCD_custom_char 05B7  
     start_initialization 000F               __end_of_ISR 0666                LCD_putrs@a 0078  
              LCD_putrs@i 0079          ?_LCD_cg_ram_addr 0070                  ??___lmul 007A  
              init_fetch0 0666               __pdataBANK0 0051                  ?_LCD_Out 0070  
               ___latbits 0002             __pcstackBANK0 003A                  LCD_Out@c 0074  
               ___nivel_1 0372               ??_LCD_Write 0075        LCD_custom_char@pos 003F  
             ??_LCD_putrs 0079               _alien_chico 0416     __end_of_medio_corazon 0416  
                ?___awmod 0044     __end_of_LCD_ram_write 0688   __end_of_LCD_custom_char 05E7  
               __pstrings 0400                ?___nivel_1 0070         interrupt_function 0004  
                _LCD_Init 00E9                 clear_ram0 0695                  _LCD_putc 02E0  
                _GO_nDONE 00F9           _pantalla_inicio 0195               __stringbase 0405  
       ___lmul@multiplier 0072          ?_LCD_custom_char 003E        __end_of__stringtab 0406  
             ??___nivel_1 004A                  __ptext10 0679                  __ptext11 02E0  
                __ptext12 05E7                  __ptext13 00E9                  __ptext14 04C5  
                __ptext15 002F                  __ptext16 0650   __end_of_pantalla_inicio 023E  
                init_ram0 066A                  intlevel1 0000                 stringcode 0400  
              _OPTION_REG 0081                  stringdir 0400                  stringtab 0400  
        ?_pantalla_inicio 0070  
