

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Jun 25 12:55:15 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Generated 26/03/2025 GMT
    31                           ; 
    32                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0004                     fsr             equ	4
    65     0004                     fsr0            equ	4
    66     0000                     indf            equ	0
    67     0000                     indf0           equ	0
    68     0002                     pc              equ	2
    69     0002                     pcl             equ	2
    70     000A                     pclath          equ	10
    71     0003                     status          equ	3
    72     0000                     INDF            equ	0	;# 
    73     0001                     TMR0            equ	1	;# 
    74     0002                     PCL             equ	2	;# 
    75     0003                     STATUS          equ	3	;# 
    76     0004                     FSR             equ	4	;# 
    77     0005                     PORTA           equ	5	;# 
    78     0006                     PORTB           equ	6	;# 
    79     0007                     PORTC           equ	7	;# 
    80     0008                     PORTD           equ	8	;# 
    81     0009                     PORTE           equ	9	;# 
    82     000A                     PCLATH          equ	10	;# 
    83     000B                     INTCON          equ	11	;# 
    84     000C                     PIR1            equ	12	;# 
    85     000D                     PIR2            equ	13	;# 
    86     000E                     TMR1            equ	14	;# 
    87     000E                     TMR1L           equ	14	;# 
    88     000F                     TMR1H           equ	15	;# 
    89     0010                     T1CON           equ	16	;# 
    90     0011                     TMR2            equ	17	;# 
    91     0012                     T2CON           equ	18	;# 
    92     0013                     SSPBUF          equ	19	;# 
    93     0014                     SSPCON          equ	20	;# 
    94     0015                     CCPR1           equ	21	;# 
    95     0015                     CCPR1L          equ	21	;# 
    96     0016                     CCPR1H          equ	22	;# 
    97     0017                     CCP1CON         equ	23	;# 
    98     0018                     RCSTA           equ	24	;# 
    99     0019                     TXREG           equ	25	;# 
   100     001A                     RCREG           equ	26	;# 
   101     001B                     CCPR2           equ	27	;# 
   102     001B                     CCPR2L          equ	27	;# 
   103     001C                     CCPR2H          equ	28	;# 
   104     001D                     CCP2CON         equ	29	;# 
   105     001E                     ADRESH          equ	30	;# 
   106     001F                     ADCON0          equ	31	;# 
   107     0081                     OPTION_REG      equ	129	;# 
   108     0085                     TRISA           equ	133	;# 
   109     0086                     TRISB           equ	134	;# 
   110     0087                     TRISC           equ	135	;# 
   111     0088                     TRISD           equ	136	;# 
   112     0089                     TRISE           equ	137	;# 
   113     008C                     PIE1            equ	140	;# 
   114     008D                     PIE2            equ	141	;# 
   115     008E                     PCON            equ	142	;# 
   116     008F                     OSCCON          equ	143	;# 
   117     0090                     OSCTUNE         equ	144	;# 
   118     0091                     SSPCON2         equ	145	;# 
   119     0092                     PR2             equ	146	;# 
   120     0093                     SSPADD          equ	147	;# 
   121     0093                     SSPMSK          equ	147	;# 
   122     0093                     MSK             equ	147	;# 
   123     0094                     SSPSTAT         equ	148	;# 
   124     0095                     WPUB            equ	149	;# 
   125     0096                     IOCB            equ	150	;# 
   126     0097                     VRCON           equ	151	;# 
   127     0098                     TXSTA           equ	152	;# 
   128     0099                     SPBRG           equ	153	;# 
   129     009A                     SPBRGH          equ	154	;# 
   130     009B                     PWM1CON         equ	155	;# 
   131     009C                     ECCPAS          equ	156	;# 
   132     009D                     PSTRCON         equ	157	;# 
   133     009E                     ADRESL          equ	158	;# 
   134     009F                     ADCON1          equ	159	;# 
   135     0105                     WDTCON          equ	261	;# 
   136     0107                     CM1CON0         equ	263	;# 
   137     0108                     CM2CON0         equ	264	;# 
   138     0109                     CM2CON1         equ	265	;# 
   139     010C                     EEDATA          equ	268	;# 
   140     010C                     EEDAT           equ	268	;# 
   141     010D                     EEADR           equ	269	;# 
   142     010E                     EEDATH          equ	270	;# 
   143     010F                     EEADRH          equ	271	;# 
   144     0185                     SRCON           equ	389	;# 
   145     0187                     BAUDCTL         equ	391	;# 
   146     0188                     ANSEL           equ	392	;# 
   147     0189                     ANSELH          equ	393	;# 
   148     018C                     EECON1          equ	396	;# 
   149     018D                     EECON2          equ	397	;# 
   150     0000                     INDF            equ	0	;# 
   151     0001                     TMR0            equ	1	;# 
   152     0002                     PCL             equ	2	;# 
   153     0003                     STATUS          equ	3	;# 
   154     0004                     FSR             equ	4	;# 
   155     0005                     PORTA           equ	5	;# 
   156     0006                     PORTB           equ	6	;# 
   157     0007                     PORTC           equ	7	;# 
   158     0008                     PORTD           equ	8	;# 
   159     0009                     PORTE           equ	9	;# 
   160     000A                     PCLATH          equ	10	;# 
   161     000B                     INTCON          equ	11	;# 
   162     000C                     PIR1            equ	12	;# 
   163     000D                     PIR2            equ	13	;# 
   164     000E                     TMR1            equ	14	;# 
   165     000E                     TMR1L           equ	14	;# 
   166     000F                     TMR1H           equ	15	;# 
   167     0010                     T1CON           equ	16	;# 
   168     0011                     TMR2            equ	17	;# 
   169     0012                     T2CON           equ	18	;# 
   170     0013                     SSPBUF          equ	19	;# 
   171     0014                     SSPCON          equ	20	;# 
   172     0015                     CCPR1           equ	21	;# 
   173     0015                     CCPR1L          equ	21	;# 
   174     0016                     CCPR1H          equ	22	;# 
   175     0017                     CCP1CON         equ	23	;# 
   176     0018                     RCSTA           equ	24	;# 
   177     0019                     TXREG           equ	25	;# 
   178     001A                     RCREG           equ	26	;# 
   179     001B                     CCPR2           equ	27	;# 
   180     001B                     CCPR2L          equ	27	;# 
   181     001C                     CCPR2H          equ	28	;# 
   182     001D                     CCP2CON         equ	29	;# 
   183     001E                     ADRESH          equ	30	;# 
   184     001F                     ADCON0          equ	31	;# 
   185     0081                     OPTION_REG      equ	129	;# 
   186     0085                     TRISA           equ	133	;# 
   187     0086                     TRISB           equ	134	;# 
   188     0087                     TRISC           equ	135	;# 
   189     0088                     TRISD           equ	136	;# 
   190     0089                     TRISE           equ	137	;# 
   191     008C                     PIE1            equ	140	;# 
   192     008D                     PIE2            equ	141	;# 
   193     008E                     PCON            equ	142	;# 
   194     008F                     OSCCON          equ	143	;# 
   195     0090                     OSCTUNE         equ	144	;# 
   196     0091                     SSPCON2         equ	145	;# 
   197     0092                     PR2             equ	146	;# 
   198     0093                     SSPADD          equ	147	;# 
   199     0093                     SSPMSK          equ	147	;# 
   200     0093                     MSK             equ	147	;# 
   201     0094                     SSPSTAT         equ	148	;# 
   202     0095                     WPUB            equ	149	;# 
   203     0096                     IOCB            equ	150	;# 
   204     0097                     VRCON           equ	151	;# 
   205     0098                     TXSTA           equ	152	;# 
   206     0099                     SPBRG           equ	153	;# 
   207     009A                     SPBRGH          equ	154	;# 
   208     009B                     PWM1CON         equ	155	;# 
   209     009C                     ECCPAS          equ	156	;# 
   210     009D                     PSTRCON         equ	157	;# 
   211     009E                     ADRESL          equ	158	;# 
   212     009F                     ADCON1          equ	159	;# 
   213     0105                     WDTCON          equ	261	;# 
   214     0107                     CM1CON0         equ	263	;# 
   215     0108                     CM2CON0         equ	264	;# 
   216     0109                     CM2CON1         equ	265	;# 
   217     010C                     EEDATA          equ	268	;# 
   218     010C                     EEDAT           equ	268	;# 
   219     010D                     EEADR           equ	269	;# 
   220     010E                     EEDATH          equ	270	;# 
   221     010F                     EEADRH          equ	271	;# 
   222     0185                     SRCON           equ	389	;# 
   223     0187                     BAUDCTL         equ	391	;# 
   224     0188                     ANSEL           equ	392	;# 
   225     0189                     ANSELH          equ	393	;# 
   226     018C                     EECON1          equ	396	;# 
   227     018D                     EECON2          equ	397	;# 
   228     0000                     INDF            equ	0	;# 
   229     0001                     TMR0            equ	1	;# 
   230     0002                     PCL             equ	2	;# 
   231     0003                     STATUS          equ	3	;# 
   232     0004                     FSR             equ	4	;# 
   233     0005                     PORTA           equ	5	;# 
   234     0006                     PORTB           equ	6	;# 
   235     0007                     PORTC           equ	7	;# 
   236     0008                     PORTD           equ	8	;# 
   237     0009                     PORTE           equ	9	;# 
   238     000A                     PCLATH          equ	10	;# 
   239     000B                     INTCON          equ	11	;# 
   240     000C                     PIR1            equ	12	;# 
   241     000D                     PIR2            equ	13	;# 
   242     000E                     TMR1            equ	14	;# 
   243     000E                     TMR1L           equ	14	;# 
   244     000F                     TMR1H           equ	15	;# 
   245     0010                     T1CON           equ	16	;# 
   246     0011                     TMR2            equ	17	;# 
   247     0012                     T2CON           equ	18	;# 
   248     0013                     SSPBUF          equ	19	;# 
   249     0014                     SSPCON          equ	20	;# 
   250     0015                     CCPR1           equ	21	;# 
   251     0015                     CCPR1L          equ	21	;# 
   252     0016                     CCPR1H          equ	22	;# 
   253     0017                     CCP1CON         equ	23	;# 
   254     0018                     RCSTA           equ	24	;# 
   255     0019                     TXREG           equ	25	;# 
   256     001A                     RCREG           equ	26	;# 
   257     001B                     CCPR2           equ	27	;# 
   258     001B                     CCPR2L          equ	27	;# 
   259     001C                     CCPR2H          equ	28	;# 
   260     001D                     CCP2CON         equ	29	;# 
   261     001E                     ADRESH          equ	30	;# 
   262     001F                     ADCON0          equ	31	;# 
   263     0081                     OPTION_REG      equ	129	;# 
   264     0085                     TRISA           equ	133	;# 
   265     0086                     TRISB           equ	134	;# 
   266     0087                     TRISC           equ	135	;# 
   267     0088                     TRISD           equ	136	;# 
   268     0089                     TRISE           equ	137	;# 
   269     008C                     PIE1            equ	140	;# 
   270     008D                     PIE2            equ	141	;# 
   271     008E                     PCON            equ	142	;# 
   272     008F                     OSCCON          equ	143	;# 
   273     0090                     OSCTUNE         equ	144	;# 
   274     0091                     SSPCON2         equ	145	;# 
   275     0092                     PR2             equ	146	;# 
   276     0093                     SSPADD          equ	147	;# 
   277     0093                     SSPMSK          equ	147	;# 
   278     0093                     MSK             equ	147	;# 
   279     0094                     SSPSTAT         equ	148	;# 
   280     0095                     WPUB            equ	149	;# 
   281     0096                     IOCB            equ	150	;# 
   282     0097                     VRCON           equ	151	;# 
   283     0098                     TXSTA           equ	152	;# 
   284     0099                     SPBRG           equ	153	;# 
   285     009A                     SPBRGH          equ	154	;# 
   286     009B                     PWM1CON         equ	155	;# 
   287     009C                     ECCPAS          equ	156	;# 
   288     009D                     PSTRCON         equ	157	;# 
   289     009E                     ADRESL          equ	158	;# 
   290     009F                     ADCON1          equ	159	;# 
   291     0105                     WDTCON          equ	261	;# 
   292     0107                     CM1CON0         equ	263	;# 
   293     0108                     CM2CON0         equ	264	;# 
   294     0109                     CM2CON1         equ	265	;# 
   295     010C                     EEDATA          equ	268	;# 
   296     010C                     EEDAT           equ	268	;# 
   297     010D                     EEADR           equ	269	;# 
   298     010E                     EEDATH          equ	270	;# 
   299     010F                     EEADRH          equ	271	;# 
   300     0185                     SRCON           equ	389	;# 
   301     0187                     BAUDCTL         equ	391	;# 
   302     0188                     ANSEL           equ	392	;# 
   303     0189                     ANSELH          equ	393	;# 
   304     018C                     EECON1          equ	396	;# 
   305     018D                     EECON2          equ	397	;# 
   306                           
   307                           	psect	idataBANK0
   308     00C3                     __pidataBANK0:
   309                           
   310                           ;initializer for _lcd
   311     00C3  3407               	retlw	7
   312     00C4  3400               	retlw	0
   313     00C5  341A               	retlw	26
   314     00C6  342C               	retlw	44
   315     00C7  343E               	retlw	62
   316                           
   317                           ;initializer for _pos_y
   318     00C8  3402               	retlw	2
   319                           
   320                           ;initializer for _pos_x
   321     00C9  3408               	retlw	8
   322                           
   323                           	psect	strings
   324     0003                     __pstrings:
   325     0003                     stringtab:
   326     0003                     __stringtab:
   327     0003                     stringcode:	
   328                           ;	String table - string pointers are 1 byte each
   329                           
   330     0003                     stringdir:
   331     0003  3000               	movlw	high stringdir
   332     0004  008A               	movwf	10
   333     0005  0804               	movf	4,w
   334     0006  0A84               	incf	4,f
   335     0007  0782               	addwf	2,f
   336     0008                     __stringbase:
   337     0008  3400               	retlw	0
   338     0009                     __end_of__stringtab:
   339     0009                     _nube:
   340     0009  3400               	retlw	0
   341     000A  3406               	retlw	6
   342     000B  340F               	retlw	15
   343     000C  341F               	retlw	31
   344     000D  341F               	retlw	31
   345     000E  340E               	retlw	14
   346     000F  3400               	retlw	0
   347     0010  3400               	retlw	0
   348     0011                     __end_of_nube:
   349     0011                     _suelo:
   350     0011  341F               	retlw	31
   351     0012  341F               	retlw	31
   352     0013  341F               	retlw	31
   353     0014  341F               	retlw	31
   354     0015  341F               	retlw	31
   355     0016  341F               	retlw	31
   356     0017  341F               	retlw	31
   357     0018  341F               	retlw	31
   358     0019                     __end_of_suelo:
   359     0019                     _bob_reves:
   360     0019  340A               	retlw	10
   361     001A  340E               	retlw	14
   362     001B  3415               	retlw	21
   363     001C  341F               	retlw	31
   364     001D  340E               	retlw	14
   365     001E  341F               	retlw	31
   366     001F  340E               	retlw	14
   367     0020  3400               	retlw	0
   368     0021                     __end_of_bob_reves:
   369     0021                     _bob:
   370     0021  340E               	retlw	14
   371     0022  341F               	retlw	31
   372     0023  340E               	retlw	14
   373     0024  341F               	retlw	31
   374     0025  3415               	retlw	21
   375     0026  340E               	retlw	14
   376     0027  340A               	retlw	10
   377     0028  3400               	retlw	0
   378     0029                     __end_of_bob:
   379     0006                     _PORTB          set	6
   380     0005                     _PORTA          set	5
   381     001E                     _ADRESH         set	30
   382     001F                     _ADCON0         set	31
   383     0005                     _PORTAbits      set	5
   384     0007                     _PORTC          set	7
   385     00F9                     _GO_nDONE       set	249
   386     0087                     _TRISC          set	135
   387     0086                     _TRISB          set	134
   388     0085                     _TRISA          set	133
   389     009E                     _ADRESL         set	158
   390     009F                     _ADCON1         set	159
   391     0088                     _TRISD          set	136
   392     0085                     _TRISAbits      set	133
   393     0189                     _ANSELH         set	393
   394     0188                     _ANSEL          set	392
   395     0029                     STR_1:
   396     0029  3420               	retlw	32	;' '
   397     002A  3400               	retlw	0
   398     0029                     STR_2           equ	STR_1
   399     0029                     STR_3           equ	STR_1
   400     0029                     STR_4           equ	STR_1
   401     0029                     STR_5           equ	STR_1
   402                           
   403                           	psect	cinit
   404     07E8                     start_initialization:	
   405                           ; #config settings
   406                           
   407     07E8                     __initialization:
   408                           
   409                           ; Initialize objects allocated to BANK0
   410     07E8  1383               	bcf	3,7	;select IRP bank0
   411     07E9  3027               	movlw	low (__pdataBANK0+7)
   412     07EA  00FD               	movwf	btemp+-1
   413     07EB  3000               	movlw	high __pidataBANK0
   414     07EC  00FE               	movwf	btemp
   415     07ED  30C3               	movlw	low __pidataBANK0
   416     07EE  00FF               	movwf	btemp+1
   417     07EF  3020               	movlw	low __pdataBANK0
   418     07F0  0084               	movwf	4
   419     07F1  120A  118A  20EB  120A  118A  	fcall	init_ram0
   420                           
   421                           ; Clear objects allocated to BANK0
   422     07F6  01AE               	clrf	__pbssBANK0& (0+127)
   423     07F7  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   424     07F8  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   425     07F9  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   426     07FA  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   427     07FB  01B3               	clrf	(__pbssBANK0+5)& (0+127)
   428     07FC                     end_of_initialization:	
   429                           ;End of C runtime variable initialization code
   430                           
   431     07FC                     __end_of__initialization:
   432     07FC  0183               	clrf	3
   433     07FD  120A  118A  2C37   	ljmp	_main	;jump to C main() function
   434                           
   435                           	psect	bssBANK0
   436     002E                     __pbssBANK0:
   437     002E                     _nubes:
   438     002E                     	ds	3
   439     0031                     _sentido_bob:
   440     0031                     	ds	2
   441     0033                     checar_boton@boton_presionado:
   442     0033                     	ds	1
   443                           
   444                           	psect	dataBANK0
   445     0020                     __pdataBANK0:
   446     0020                     _lcd:
   447     0020                     	ds	5
   448     0025                     _pos_y:
   449     0025                     	ds	1
   450     0026                     _pos_x:
   451     0026                     	ds	1
   452                           
   453                           	psect	inittext
   454     00E7                     init_fetch0:	
   455                           ;	Called with low address in FSR and high address in W
   456                           
   457     00E7  087E               	movf	btemp,w
   458     00E8  008A               	movwf	10
   459     00E9  087F               	movf	btemp+1,w
   460     00EA  0082               	movwf	2
   461     00EB                     init_ram0:	
   462                           ;Called with:
   463                           ;	high address of idata address in btemp 
   464                           ;	low address of idata address in btemp+1 
   465                           ;	low address of data in FSR
   466                           ;	high address + 1 of data in btemp-1
   467                           
   468     00EB  120A  118A  20E7  120A  118A  	fcall	init_fetch0
   469     00F0  0080               	movwf	0
   470     00F1  0A84               	incf	4,f
   471     00F2  0804               	movf	4,w
   472     00F3  067D               	xorwf	btemp+-1,w
   473     00F4  1903               	btfsc	3,2
   474     00F5  3400               	retlw	0
   475     00F6  0AFF               	incf	btemp+1,f
   476     00F7  1903               	btfsc	3,2
   477     00F8  0AFE               	incf	btemp,f
   478     00F9  28EB               	goto	init_ram0
   479                           
   480                           	psect	cstackCOMMON
   481     0070                     __pcstackCOMMON:
   482     0070                     ?_ADC_Init:
   483     0070                     ?_LCD_Write:	
   484                           ; 1 bytes @ 0x0
   485                           
   486     0070                     ?_dibujar_suelo:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0070                     ?_LCD_putc:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0070                     ?_pot_x:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0070                     ?_pot_y:	
   496                           ; 1 bytes @ 0x0
   497                           
   498     0070                     ?_checar_boton:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     ?_LCD_cg_ram_addr:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     ?_LCD_ram_write:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0070                     ?_main:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     ?_LCD_Out:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_ADC_Read:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ??_ADC_Init:	
   517                           ; 2 bytes @ 0x0
   518                           
   519     0070                     ??_checar_boton:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ??_LCD_Out:	
   523                           ; 1 bytes @ 0x0
   524                           
   525                           
   526                           ; 1 bytes @ 0x0
   527     0070                     	ds	2
   528     0072                     LCD_Out@c:
   529     0072                     ??_ADC_Read:	
   530                           ; 1 bytes @ 0x2
   531                           
   532                           
   533                           ; 1 bytes @ 0x2
   534     0072                     	ds	1
   535     0073                     ??_LCD_Write:
   536     0073                     ??_LCD_putc:	
   537                           ; 1 bytes @ 0x3
   538                           
   539                           
   540                           ; 1 bytes @ 0x3
   541     0073                     	ds	1
   542     0074                     ADC_Read@channel:
   543                           
   544                           ; 1 bytes @ 0x4
   545     0074                     	ds	1
   546     0075                     LCD_Write@c:
   547     0075                     LCD_putc@c:	
   548                           ; 1 bytes @ 0x5
   549                           
   550                           
   551                           ; 1 bytes @ 0x5
   552     0075                     	ds	1
   553     0076                     ?_LCD_Init:
   554     0076                     ?_LCD_putrs:	
   555                           ; 1 bytes @ 0x6
   556                           
   557     0076                     dibujar_suelo@i:	
   558                           ; 1 bytes @ 0x6
   559                           
   560     0076                     LCD_putrs@a:	
   561                           ; 1 bytes @ 0x6
   562                           
   563     0076                     LCD_Init@display:	
   564                           ; 1 bytes @ 0x6
   565                           
   566     0076                     ??_dibujar_suelo:	
   567                           ; 5 bytes @ 0x6
   568                           
   569     0076                     ??_LCD_cg_ram_addr:	
   570                           ; 1 bytes @ 0x6
   571                           
   572     0076                     ??_LCD_ram_write:	
   573                           ; 1 bytes @ 0x6
   574                           
   575                           
   576                           ; 1 bytes @ 0x6
   577     0076                     	ds	1
   578     0077                     LCD_ram_write@data:
   579     0077                     LCD_putrs@i:	
   580                           ; 1 bytes @ 0x7
   581                           
   582     0077                     ??_LCD_putrs:	
   583                           ; 2 bytes @ 0x7
   584                           
   585                           
   586                           ; 1 bytes @ 0x7
   587     0077                     	ds	2
   588     0079                     ??_pot_x:
   589     0079                     ??_pot_y:	
   590                           ; 1 bytes @ 0x9
   591                           
   592                           
   593                           ; 1 bytes @ 0x9
   594     0079                     	ds	1
   595     007A                     LCD_cg_ram_addr@addr:
   596                           
   597                           ; 1 bytes @ 0xA
   598     007A                     	ds	1
   599     007B                     ?_LCD_custom_char:
   600     007B                     LCD_custom_char@x:	
   601                           ; 1 bytes @ 0xB
   602                           
   603     007B                     pot_y@adc_y:	
   604                           ; 1 bytes @ 0xB
   605                           
   606     007B                     ??_LCD_Init:	
   607                           ; 2 bytes @ 0xB
   608                           
   609                           
   610                           ; 1 bytes @ 0xB
   611     007B                     	ds	1
   612     007C                     ??_LCD_custom_char:
   613                           
   614                           ; 1 bytes @ 0xC
   615     007C                     	ds	1
   616     007D                     LCD_Init@cmd:
   617                           
   618                           ; 1 bytes @ 0xD
   619     007D                     	ds	1
   620                           
   621                           	psect	cstackBANK0
   622     0027                     __pcstackBANK0:
   623     0027                     LCD_custom_char@pos:
   624     0027                     _pot_x$191:	
   625                           ; 1 bytes @ 0x0
   626                           
   627                           
   628                           ; 2 bytes @ 0x0
   629     0027                     	ds	1
   630     0028                     LCD_custom_char@i:
   631                           
   632                           ; 1 bytes @ 0x1
   633     0028                     	ds	1
   634     0029                     _pot_x$192:
   635                           
   636                           ; 2 bytes @ 0x2
   637     0029                     	ds	2
   638     002B                     pot_x@adc_x:
   639                           
   640                           ; 2 bytes @ 0x4
   641     002B                     	ds	2
   642     002D                     ??_main:
   643                           
   644                           ; 1 bytes @ 0x6
   645     002D                     	ds	1
   646                           
   647                           	psect	maintext
   648     0437                     __pmaintext:	
   649 ;;
   650 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   651 ;;
   652 ;; *************** function _main *****************
   653 ;; Defined at:
   654 ;;		line 87 in file "main.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : B00/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0
   670 ;;      Temps:          0       1       0       0       0
   671 ;;      Totals:         0       1       0       0       0
   672 ;;Total ram usage:        1 bytes
   673 ;; Hardware stack levels required when called: 4
   674 ;; This function calls:
   675 ;;		_ADC_Init
   676 ;;		_LCD_Init
   677 ;;		_LCD_Write
   678 ;;		_LCD_custom_char
   679 ;;		_LCD_putc
   680 ;;		_checar_boton
   681 ;;		_dibujar_suelo
   682 ;;		_pot_x
   683 ;;		_pot_y
   684 ;; This function is called by:
   685 ;;		Startup code after reset
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689     0437                     _main:	
   690                           ;psect for function _main
   691                           
   692     0437                     l1711:	
   693                           ;incstack = 0
   694                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   695                           
   696                           
   697                           ;main.c: 88: 
   698     0437  1683               	bsf	3,5	;RP0=1, select bank1
   699     0438  1303               	bcf	3,6	;RP1=0, select bank1
   700     0439  1505               	bsf	5,2	;volatile
   701                           
   702                           ;main.c: 89: void LCD_custom_char(uint8_t pos, const char * x){
   703     043A  1185               	bcf	5,3	;volatile
   704                           
   705                           ;main.c: 90:     pos = (pos & 0x07) << 3;
   706     043B  1283               	bcf	3,5	;RP0=0, select bank0
   707     043C  1303               	bcf	3,6	;RP1=0, select bank0
   708     043D  1185               	bcf	5,3	;volatile
   709     043E                     l1713:
   710                           
   711                           ;main.c: 91:     LCD_cg_ram_addr(pos);
   712     043E  1683               	bsf	3,5	;RP0=1, select bank1
   713     043F  1303               	bcf	3,6	;RP1=0, select bank1
   714     0440  0188               	clrf	8	;volatile
   715     0441                     l1715:
   716                           
   717                           ;main.c: 93:     for(uint8_t i = 0; i < 8; i++){
   718     0441  120A  118A  20CA  120A  118A  	fcall	_ADC_Init
   719     0446                     l1717:
   720                           
   721                           ;main.c: 94:         LCD_ram_write(x[i]);
   722     0446  3076               	movlw	LCD_Init@display& (0+255)
   723     0447  0084               	movwf	4
   724     0448  1283               	bcf	3,5	;RP0=0, select bank0
   725     0449  1303               	bcf	3,6	;RP1=0, select bank0
   726     044A  0820               	movf	_lcd,w
   727     044B  0080               	movwf	0
   728     044C  0A84               	incf	4,f
   729     044D  0821               	movf	_lcd+1,w
   730     044E  0080               	movwf	0
   731     044F  0A84               	incf	4,f
   732     0450  0822               	movf	_lcd+2,w
   733     0451  0080               	movwf	0
   734     0452  0A84               	incf	4,f
   735     0453  0823               	movf	_lcd+3,w
   736     0454  0080               	movwf	0
   737     0455  0A84               	incf	4,f
   738     0456  0824               	movf	_lcd+4,w
   739     0457  0080               	movwf	0
   740     0458  120A  118A  22D1  120A  118A  	fcall	_LCD_Init
   741     045D                     l1719:
   742     045D  3000               	movlw	0
   743     045E  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
   744     0463                     l1721:
   745     0463  3001               	movlw	1
   746     0464  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
   747     0469                     l1723:
   748                           
   749                           ;main.c: 97: 
   750     0469  3019               	movlw	(low ((_bob-__stringbase)| (0+32768)))& (0+255)
   751     046A  00FB               	movwf	LCD_custom_char@x
   752     046B  3000               	movlw	0
   753     046C  120A  118A  21B1  120A  118A  	fcall	_LCD_custom_char
   754     0471                     l1725:
   755                           
   756                           ;main.c: 98: void ADC_Init(){
   757     0471  3011               	movlw	(low ((_bob_reves-__stringbase)| (0+32768)))& (0+255)
   758     0472  00FB               	movwf	LCD_custom_char@x
   759     0473  3001               	movlw	1
   760     0474  120A  118A  21B1  120A  118A  	fcall	_LCD_custom_char
   761     0479                     l1727:
   762                           
   763                           ;main.c: 99:     ANSEL = 0x03;
   764     0479  3009               	movlw	(low ((_suelo-__stringbase)| (0+32768)))& (0+255)
   765     047A  00FB               	movwf	LCD_custom_char@x
   766     047B  3002               	movlw	2
   767     047C  120A  118A  21B1  120A  118A  	fcall	_LCD_custom_char
   768     0481                     l1729:
   769                           
   770                           ;main.c: 100:     ANSELH = 0;
   771     0481  3001               	movlw	(low ((_nube-__stringbase)| (0+32768)))& (0+255)
   772     0482  00FB               	movwf	LCD_custom_char@x
   773     0483  3003               	movlw	3
   774     0484  120A  118A  21B1  120A  118A  	fcall	_LCD_custom_char
   775     0489                     l1731:
   776     0489  3000               	movlw	0
   777     048A  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
   778     048F                     l1733:
   779     048F  3001               	movlw	1
   780     0490  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
   781     0495                     l1735:
   782                           
   783                           ;main.c: 104: 
   784     0495  120A  118A  20FA  120A  118A  	fcall	_dibujar_suelo
   785     049A                     l1737:
   786     049A  1283               	bcf	3,5	;RP0=0, select bank0
   787     049B  1303               	bcf	3,6	;RP1=0, select bank0
   788     049C  0825               	movf	_pos_y,w
   789     049D  1D03               	btfss	3,2
   790     049E  2CA0               	goto	u2081
   791     049F  2CA1               	goto	u2080
   792     04A0                     u2081:
   793     04A0  2CBC               	goto	l1741
   794     04A1                     u2080:
   795     04A1                     l1739:
   796     04A1  0826               	movf	_pos_x,w
   797     04A2  3E80               	addlw	128
   798     04A3  00AD               	movwf	??_main
   799     04A4  3004               	movlw	4
   800     04A5                     u2095:
   801     04A5  1003               	clrc
   802     04A6  0CAD               	rrf	??_main,f
   803     04A7  3EFF               	addlw	-1
   804     04A8  1D03               	skipz
   805     04A9  2CA5               	goto	u2095
   806     04AA  082D               	movf	??_main,w
   807     04AB  390F               	andlw	15
   808     04AC  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
   809     04B1  1283               	bcf	3,5	;RP0=0, select bank0
   810     04B2  1303               	bcf	3,6	;RP1=0, select bank0
   811     04B3  0826               	movf	_pos_x,w
   812     04B4  3E80               	addlw	128
   813     04B5  390F               	andlw	15
   814     04B6  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
   815     04BB  2D1D               	goto	l91
   816     04BC                     l1741:
   817     04BC  0325               	decf	_pos_y,w
   818     04BD  1D03               	btfss	3,2
   819     04BE  2CC0               	goto	u2101
   820     04BF  2CC1               	goto	u2100
   821     04C0                     u2101:
   822     04C0  2CDC               	goto	l1745
   823     04C1                     u2100:
   824     04C1                     l1743:
   825     04C1  0826               	movf	_pos_x,w
   826     04C2  3EC0               	addlw	192
   827     04C3  00AD               	movwf	??_main
   828     04C4  3004               	movlw	4
   829     04C5                     u2115:
   830     04C5  1003               	clrc
   831     04C6  0CAD               	rrf	??_main,f
   832     04C7  3EFF               	addlw	-1
   833     04C8  1D03               	skipz
   834     04C9  2CC5               	goto	u2115
   835     04CA  082D               	movf	??_main,w
   836     04CB  390F               	andlw	15
   837     04CC  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
   838     04D1  1283               	bcf	3,5	;RP0=0, select bank0
   839     04D2  1303               	bcf	3,6	;RP1=0, select bank0
   840     04D3  0826               	movf	_pos_x,w
   841     04D4  3EC0               	addlw	192
   842     04D5  390F               	andlw	15
   843     04D6  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
   844     04DB  2D1D               	goto	l91
   845     04DC                     l1745:
   846     04DC  3002               	movlw	2
   847     04DD  0625               	xorwf	_pos_y,w
   848     04DE  1D03               	btfss	3,2
   849     04DF  2CE1               	goto	u2121
   850     04E0  2CE2               	goto	u2120
   851     04E1                     u2121:
   852     04E1  2CFD               	goto	l1749
   853     04E2                     u2120:
   854     04E2                     l1747:
   855     04E2  0826               	movf	_pos_x,w
   856     04E3  3E94               	addlw	148
   857     04E4  00AD               	movwf	??_main
   858     04E5  3004               	movlw	4
   859     04E6                     u2135:
   860     04E6  1003               	clrc
   861     04E7  0CAD               	rrf	??_main,f
   862     04E8  3EFF               	addlw	-1
   863     04E9  1D03               	skipz
   864     04EA  2CE6               	goto	u2135
   865     04EB  082D               	movf	??_main,w
   866     04EC  390F               	andlw	15
   867     04ED  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
   868     04F2  1283               	bcf	3,5	;RP0=0, select bank0
   869     04F3  1303               	bcf	3,6	;RP1=0, select bank0
   870     04F4  0826               	movf	_pos_x,w
   871     04F5  3E94               	addlw	148
   872     04F6  390F               	andlw	15
   873     04F7  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
   874     04FC  2D1D               	goto	l91
   875     04FD                     l1749:
   876     04FD  3003               	movlw	3
   877     04FE  0625               	xorwf	_pos_y,w
   878     04FF  1D03               	btfss	3,2
   879     0500  2D02               	goto	u2141
   880     0501  2D03               	goto	u2140
   881     0502                     u2141:
   882     0502  2D1D               	goto	l91
   883     0503                     u2140:
   884     0503                     l1751:
   885     0503  0826               	movf	_pos_x,w
   886     0504  3ED4               	addlw	212
   887     0505  00AD               	movwf	??_main
   888     0506  3004               	movlw	4
   889     0507                     u2155:
   890     0507  1003               	clrc
   891     0508  0CAD               	rrf	??_main,f
   892     0509  3EFF               	addlw	-1
   893     050A  1D03               	skipz
   894     050B  2D07               	goto	u2155
   895     050C  082D               	movf	??_main,w
   896     050D  390F               	andlw	15
   897     050E  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
   898     0513  1283               	bcf	3,5	;RP0=0, select bank0
   899     0514  1303               	bcf	3,6	;RP1=0, select bank0
   900     0515  0826               	movf	_pos_x,w
   901     0516  3ED4               	addlw	212
   902     0517  390F               	andlw	15
   903     0518  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
   904     051D                     l91:
   905                           
   906                           ;main.c: 106:     _delay((unsigned long)((5)*(4000000/4000000.0)));
   907     051D  1283               	bcf	3,5	;RP0=0, select bank0
   908     051E  1303               	bcf	3,6	;RP1=0, select bank0
   909     051F  0831               	movf	_sentido_bob,w
   910     0520  120A  118A  223F  120A  118A  	fcall	_LCD_putc
   911     0525                     l92:	
   912                           ;main.c: 108:     ADCON0 |= channel << 2;
   913                           
   914                           
   915                           ;main.c: 109:     _delay((unsigned long)((2)*(4000000/4000.0)));
   916     0525  120A  118A  2687  120A  118A  	fcall	_pot_x
   917                           
   918                           ;main.c: 110:     GO_nDONE = 1;
   919     052A  120A  118A  2538  120A  118A  	fcall	_pot_y
   920     052F                     l1753:
   921                           
   922                           ;main.c: 111:     while(GO_nDONE);
   923     052F  120A  118A  2160  120A  118A  	fcall	_checar_boton
   924     0534  2D25               	goto	l92
   925     0535  120A  118A  2800   	ljmp	start
   926     0538                     __end_of_main:
   927                           
   928                           	psect	text1
   929     0538                     __ptext1:	
   930 ;; *************** function _pot_y *****************
   931 ;; Defined at:
   932 ;;		line 162 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  adc_y           2   11[COMMON] unsigned int 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   946 ;;      Params:         0       0       0       0       0
   947 ;;      Locals:         2       0       0       0       0
   948 ;;      Temps:          2       0       0       0       0
   949 ;;      Totals:         4       0       0       0       0
   950 ;;Total ram usage:        4 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; Hardware stack levels required when called: 3
   953 ;; This function calls:
   954 ;;		_ADC_Read
   955 ;;		_LCD_Write
   956 ;;		_LCD_putc
   957 ;;		_LCD_putrs
   958 ;; This function is called by:
   959 ;;		_main
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963     0538                     _pot_y:	
   964                           ;psect for function _pot_y
   965                           
   966     0538                     l1653:	
   967                           ;incstack = 0
   968                           ; Regs used in _pot_y: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   969                           
   970                           
   971                           ;main.c: 163: 
   972     0538  3001               	movlw	1
   973     0539  120A  118A  2187  120A  118A  	fcall	_ADC_Read
   974     053E  0871               	movf	?_ADC_Read+1,w
   975     053F  00FC               	movwf	pot_y@adc_y+1
   976     0540  0870               	movf	?_ADC_Read,w
   977     0541  00FB               	movwf	pot_y@adc_y
   978     0542                     l1655:
   979     0542  1283               	bcf	3,5	;RP0=0, select bank0
   980     0543  1303               	bcf	3,6	;RP1=0, select bank0
   981     0544  0825               	movf	_pos_y,w
   982     0545  1D03               	btfss	3,2
   983     0546  2D48               	goto	u1821
   984     0547  2D49               	goto	u1820
   985     0548                     u1821:
   986     0548  2D64               	goto	l1659
   987     0549                     u1820:
   988     0549                     l1657:
   989     0549  0826               	movf	_pos_x,w
   990     054A  3E80               	addlw	128
   991     054B  00F9               	movwf	??_pot_y
   992     054C  3004               	movlw	4
   993     054D                     u1835:
   994     054D  1003               	clrc
   995     054E  0CF9               	rrf	??_pot_y,f
   996     054F  3EFF               	addlw	-1
   997     0550  1D03               	skipz
   998     0551  2D4D               	goto	u1835
   999     0552  0879               	movf	??_pot_y,w
  1000     0553  390F               	andlw	15
  1001     0554  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1002     0559  1283               	bcf	3,5	;RP0=0, select bank0
  1003     055A  1303               	bcf	3,6	;RP1=0, select bank0
  1004     055B  0826               	movf	_pos_x,w
  1005     055C  3E80               	addlw	128
  1006     055D  390F               	andlw	15
  1007     055E  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1008     0563  2DC5               	goto	l176
  1009     0564                     l1659:
  1010     0564  0325               	decf	_pos_y,w
  1011     0565  1D03               	btfss	3,2
  1012     0566  2D68               	goto	u1841
  1013     0567  2D69               	goto	u1840
  1014     0568                     u1841:
  1015     0568  2D84               	goto	l1663
  1016     0569                     u1840:
  1017     0569                     l1661:
  1018     0569  0826               	movf	_pos_x,w
  1019     056A  3EC0               	addlw	192
  1020     056B  00F9               	movwf	??_pot_y
  1021     056C  3004               	movlw	4
  1022     056D                     u1855:
  1023     056D  1003               	clrc
  1024     056E  0CF9               	rrf	??_pot_y,f
  1025     056F  3EFF               	addlw	-1
  1026     0570  1D03               	skipz
  1027     0571  2D6D               	goto	u1855
  1028     0572  0879               	movf	??_pot_y,w
  1029     0573  390F               	andlw	15
  1030     0574  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1031     0579  1283               	bcf	3,5	;RP0=0, select bank0
  1032     057A  1303               	bcf	3,6	;RP1=0, select bank0
  1033     057B  0826               	movf	_pos_x,w
  1034     057C  3EC0               	addlw	192
  1035     057D  390F               	andlw	15
  1036     057E  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1037     0583  2DC5               	goto	l176
  1038     0584                     l1663:
  1039     0584  3002               	movlw	2
  1040     0585  0625               	xorwf	_pos_y,w
  1041     0586  1D03               	btfss	3,2
  1042     0587  2D89               	goto	u1861
  1043     0588  2D8A               	goto	u1860
  1044     0589                     u1861:
  1045     0589  2DA5               	goto	l1667
  1046     058A                     u1860:
  1047     058A                     l1665:
  1048     058A  0826               	movf	_pos_x,w
  1049     058B  3E94               	addlw	148
  1050     058C  00F9               	movwf	??_pot_y
  1051     058D  3004               	movlw	4
  1052     058E                     u1875:
  1053     058E  1003               	clrc
  1054     058F  0CF9               	rrf	??_pot_y,f
  1055     0590  3EFF               	addlw	-1
  1056     0591  1D03               	skipz
  1057     0592  2D8E               	goto	u1875
  1058     0593  0879               	movf	??_pot_y,w
  1059     0594  390F               	andlw	15
  1060     0595  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1061     059A  1283               	bcf	3,5	;RP0=0, select bank0
  1062     059B  1303               	bcf	3,6	;RP1=0, select bank0
  1063     059C  0826               	movf	_pos_x,w
  1064     059D  3E94               	addlw	148
  1065     059E  390F               	andlw	15
  1066     059F  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1067     05A4  2DC5               	goto	l176
  1068     05A5                     l1667:
  1069     05A5  3003               	movlw	3
  1070     05A6  0625               	xorwf	_pos_y,w
  1071     05A7  1D03               	btfss	3,2
  1072     05A8  2DAA               	goto	u1881
  1073     05A9  2DAB               	goto	u1880
  1074     05AA                     u1881:
  1075     05AA  2DC5               	goto	l176
  1076     05AB                     u1880:
  1077     05AB                     l1669:
  1078     05AB  0826               	movf	_pos_x,w
  1079     05AC  3ED4               	addlw	212
  1080     05AD  00F9               	movwf	??_pot_y
  1081     05AE  3004               	movlw	4
  1082     05AF                     u1895:
  1083     05AF  1003               	clrc
  1084     05B0  0CF9               	rrf	??_pot_y,f
  1085     05B1  3EFF               	addlw	-1
  1086     05B2  1D03               	skipz
  1087     05B3  2DAF               	goto	u1895
  1088     05B4  0879               	movf	??_pot_y,w
  1089     05B5  390F               	andlw	15
  1090     05B6  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1091     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  1092     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  1093     05BD  0826               	movf	_pos_x,w
  1094     05BE  3ED4               	addlw	212
  1095     05BF  390F               	andlw	15
  1096     05C0  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1097     05C5                     l176:
  1098                           
  1099                           ;main.c: 166: 
  1100     05C5  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1101     05C6  00F6               	movwf	LCD_putrs@a
  1102     05C7  120A  118A  2116  120A  118A  	fcall	_LCD_putrs
  1103     05CC                     l1671:
  1104                           
  1105                           ;main.c: 168:         _Bool moved = 0;
  1106     05CC  3001               	movlw	1
  1107     05CD  027C               	subwf	pot_y@adc_y+1,w
  1108     05CE  3090               	movlw	144
  1109     05CF  1903               	skipnz
  1110     05D0  027B               	subwf	pot_y@adc_y,w
  1111     05D1  1803               	skipnc
  1112     05D2  2DD4               	goto	u1901
  1113     05D3  2DD5               	goto	u1900
  1114     05D4                     u1901:
  1115     05D4  2DDF               	goto	l1677
  1116     05D5                     u1900:
  1117     05D5                     l1673:
  1118     05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1119     05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1120     05D7  0825               	movf	_pos_y,w
  1121     05D8  1903               	btfsc	3,2
  1122     05D9  2DDB               	goto	u1911
  1123     05DA  2DDC               	goto	u1910
  1124     05DB                     u1911:
  1125     05DB  2DDF               	goto	l1677
  1126     05DC                     u1910:
  1127     05DC                     l1675:
  1128                           
  1129                           ;main.c: 169: 
  1130     05DC  3001               	movlw	1
  1131     05DD  02A5               	subwf	_pos_y,f
  1132                           
  1133                           ;main.c: 170: 
  1134     05DE  2DF2               	goto	l180
  1135     05DF                     l1677:
  1136     05DF  3002               	movlw	2
  1137     05E0  027C               	subwf	pot_y@adc_y+1,w
  1138     05E1  3059               	movlw	89
  1139     05E2  1903               	skipnz
  1140     05E3  027B               	subwf	pot_y@adc_y,w
  1141     05E4  1C03               	skipc
  1142     05E5  2DE7               	goto	u1921
  1143     05E6  2DE8               	goto	u1920
  1144     05E7                     u1921:
  1145     05E7  2DF2               	goto	l180
  1146     05E8                     u1920:
  1147     05E8                     l1679:
  1148     05E8  3002               	movlw	2
  1149     05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1150     05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1151     05EB  0225               	subwf	_pos_y,w
  1152     05EC  1803               	skipnc
  1153     05ED  2DEF               	goto	u1931
  1154     05EE  2DF0               	goto	u1930
  1155     05EF                     u1931:
  1156     05EF  2DF2               	goto	l180
  1157     05F0                     u1930:
  1158     05F0                     l1681:
  1159                           
  1160                           ;main.c: 171:         if(pos_x + offset < 20){
  1161     05F0  3001               	movlw	1
  1162     05F1  07A5               	addwf	_pos_y,f
  1163     05F2                     l180:	
  1164                           ;main.c: 174:             moved = 1;
  1165                           
  1166     05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1167     05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1168     05F4  0825               	movf	_pos_y,w
  1169     05F5  1D03               	btfss	3,2
  1170     05F6  2DF8               	goto	u1941
  1171     05F7  2DF9               	goto	u1940
  1172     05F8                     u1941:
  1173     05F8  2E14               	goto	l1685
  1174     05F9                     u1940:
  1175     05F9                     l1683:
  1176     05F9  0826               	movf	_pos_x,w
  1177     05FA  3E80               	addlw	128
  1178     05FB  00F9               	movwf	??_pot_y
  1179     05FC  3004               	movlw	4
  1180     05FD                     u1955:
  1181     05FD  1003               	clrc
  1182     05FE  0CF9               	rrf	??_pot_y,f
  1183     05FF  3EFF               	addlw	-1
  1184     0600  1D03               	skipz
  1185     0601  2DFD               	goto	u1955
  1186     0602  0879               	movf	??_pot_y,w
  1187     0603  390F               	andlw	15
  1188     0604  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1189     0609  1283               	bcf	3,5	;RP0=0, select bank0
  1190     060A  1303               	bcf	3,6	;RP1=0, select bank0
  1191     060B  0826               	movf	_pos_x,w
  1192     060C  3E80               	addlw	128
  1193     060D  390F               	andlw	15
  1194     060E  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1195     0613  2E75               	goto	l196
  1196     0614                     l1685:
  1197     0614  0325               	decf	_pos_y,w
  1198     0615  1D03               	btfss	3,2
  1199     0616  2E18               	goto	u1961
  1200     0617  2E19               	goto	u1960
  1201     0618                     u1961:
  1202     0618  2E34               	goto	l1689
  1203     0619                     u1960:
  1204     0619                     l1687:
  1205     0619  0826               	movf	_pos_x,w
  1206     061A  3EC0               	addlw	192
  1207     061B  00F9               	movwf	??_pot_y
  1208     061C  3004               	movlw	4
  1209     061D                     u1975:
  1210     061D  1003               	clrc
  1211     061E  0CF9               	rrf	??_pot_y,f
  1212     061F  3EFF               	addlw	-1
  1213     0620  1D03               	skipz
  1214     0621  2E1D               	goto	u1975
  1215     0622  0879               	movf	??_pot_y,w
  1216     0623  390F               	andlw	15
  1217     0624  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1218     0629  1283               	bcf	3,5	;RP0=0, select bank0
  1219     062A  1303               	bcf	3,6	;RP1=0, select bank0
  1220     062B  0826               	movf	_pos_x,w
  1221     062C  3EC0               	addlw	192
  1222     062D  390F               	andlw	15
  1223     062E  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1224     0633  2E75               	goto	l196
  1225     0634                     l1689:
  1226     0634  3002               	movlw	2
  1227     0635  0625               	xorwf	_pos_y,w
  1228     0636  1D03               	btfss	3,2
  1229     0637  2E39               	goto	u1981
  1230     0638  2E3A               	goto	u1980
  1231     0639                     u1981:
  1232     0639  2E55               	goto	l1693
  1233     063A                     u1980:
  1234     063A                     l1691:
  1235     063A  0826               	movf	_pos_x,w
  1236     063B  3E94               	addlw	148
  1237     063C  00F9               	movwf	??_pot_y
  1238     063D  3004               	movlw	4
  1239     063E                     u1995:
  1240     063E  1003               	clrc
  1241     063F  0CF9               	rrf	??_pot_y,f
  1242     0640  3EFF               	addlw	-1
  1243     0641  1D03               	skipz
  1244     0642  2E3E               	goto	u1995
  1245     0643  0879               	movf	??_pot_y,w
  1246     0644  390F               	andlw	15
  1247     0645  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1248     064A  1283               	bcf	3,5	;RP0=0, select bank0
  1249     064B  1303               	bcf	3,6	;RP1=0, select bank0
  1250     064C  0826               	movf	_pos_x,w
  1251     064D  3E94               	addlw	148
  1252     064E  390F               	andlw	15
  1253     064F  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1254     0654  2E75               	goto	l196
  1255     0655                     l1693:
  1256     0655  3003               	movlw	3
  1257     0656  0625               	xorwf	_pos_y,w
  1258     0657  1D03               	btfss	3,2
  1259     0658  2E5A               	goto	u2001
  1260     0659  2E5B               	goto	u2000
  1261     065A                     u2001:
  1262     065A  2E75               	goto	l196
  1263     065B                     u2000:
  1264     065B                     l1695:
  1265     065B  0826               	movf	_pos_x,w
  1266     065C  3ED4               	addlw	212
  1267     065D  00F9               	movwf	??_pot_y
  1268     065E  3004               	movlw	4
  1269     065F                     u2015:
  1270     065F  1003               	clrc
  1271     0660  0CF9               	rrf	??_pot_y,f
  1272     0661  3EFF               	addlw	-1
  1273     0662  1D03               	skipz
  1274     0663  2E5F               	goto	u2015
  1275     0664  0879               	movf	??_pot_y,w
  1276     0665  390F               	andlw	15
  1277     0666  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1278     066B  1283               	bcf	3,5	;RP0=0, select bank0
  1279     066C  1303               	bcf	3,6	;RP1=0, select bank0
  1280     066D  0826               	movf	_pos_x,w
  1281     066E  3ED4               	addlw	212
  1282     066F  390F               	andlw	15
  1283     0670  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1284     0675                     l196:
  1285                           
  1286                           ;main.c: 175:         }
  1287     0675  1283               	bcf	3,5	;RP0=0, select bank0
  1288     0676  1303               	bcf	3,6	;RP1=0, select bank0
  1289     0677  0831               	movf	_sentido_bob,w
  1290     0678  120A  118A  223F  120A  118A  	fcall	_LCD_putc
  1291     067D                     l1697:
  1292                           
  1293                           ;main.c: 176: 
  1294     067D  300D               	movlw	13
  1295     067E  00FA               	movwf	??_pot_y+1
  1296     067F  30FB               	movlw	251
  1297     0680  00F9               	movwf	??_pot_y
  1298     0681                     u2597:
  1299     0681  0BF9               	decfsz	??_pot_y,f
  1300     0682  2E81               	goto	u2597
  1301     0683  0BFA               	decfsz	??_pot_y+1,f
  1302     0684  2E81               	goto	u2597
  1303     0685  2E86               	nop2
  1304     0686                     l197:
  1305     0686  0008               	return
  1306     0687                     __end_of_pot_y:
  1307                           
  1308                           	psect	text2
  1309     0687                     __ptext2:	
  1310 ;; *************** function _pot_x *****************
  1311 ;; Defined at:
  1312 ;;		line 142 in file "main.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  adc_x           2    4[BANK0 ] unsigned int 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1326 ;;      Params:         0       0       0       0       0
  1327 ;;      Locals:         0       6       0       0       0
  1328 ;;      Temps:          2       0       0       0       0
  1329 ;;      Totals:         2       6       0       0       0
  1330 ;;Total ram usage:        8 bytes
  1331 ;; Hardware stack levels used: 1
  1332 ;; Hardware stack levels required when called: 3
  1333 ;; This function calls:
  1334 ;;		_ADC_Read
  1335 ;;		_LCD_Write
  1336 ;;		_LCD_putc
  1337 ;;		_LCD_putrs
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343     0687                     _pot_x:	
  1344                           ;psect for function _pot_x
  1345                           
  1346     0687                     l1601:	
  1347                           ;incstack = 0
  1348                           ; Regs used in _pot_x: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1349                           
  1350                           
  1351                           ;main.c: 143:     } else if(adc_y > 600 && pos_y < 2){
  1352     0687  3000               	movlw	0
  1353     0688  120A  118A  2187  120A  118A  	fcall	_ADC_Read
  1354     068D  0871               	movf	?_ADC_Read+1,w
  1355     068E  1283               	bcf	3,5	;RP0=0, select bank0
  1356     068F  1303               	bcf	3,6	;RP1=0, select bank0
  1357     0690  00AC               	movwf	pot_x@adc_x+1
  1358     0691  0870               	movf	?_ADC_Read,w
  1359     0692  00AB               	movwf	pot_x@adc_x
  1360     0693                     l1603:
  1361     0693  0825               	movf	_pos_y,w
  1362     0694  1D03               	btfss	3,2
  1363     0695  2E97               	goto	u1621
  1364     0696  2E98               	goto	u1620
  1365     0697                     u1621:
  1366     0697  2EB3               	goto	l1607
  1367     0698                     u1620:
  1368     0698                     l1605:
  1369     0698  0826               	movf	_pos_x,w
  1370     0699  3E80               	addlw	128
  1371     069A  00F9               	movwf	??_pot_x
  1372     069B  3004               	movlw	4
  1373     069C                     u1635:
  1374     069C  1003               	clrc
  1375     069D  0CF9               	rrf	??_pot_x,f
  1376     069E  3EFF               	addlw	-1
  1377     069F  1D03               	skipz
  1378     06A0  2E9C               	goto	u1635
  1379     06A1  0879               	movf	??_pot_x,w
  1380     06A2  390F               	andlw	15
  1381     06A3  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1382     06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1383     06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1384     06AA  0826               	movf	_pos_x,w
  1385     06AB  3E80               	addlw	128
  1386     06AC  390F               	andlw	15
  1387     06AD  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1388     06B2  2F14               	goto	l128
  1389     06B3                     l1607:
  1390     06B3  0325               	decf	_pos_y,w
  1391     06B4  1D03               	btfss	3,2
  1392     06B5  2EB7               	goto	u1641
  1393     06B6  2EB8               	goto	u1640
  1394     06B7                     u1641:
  1395     06B7  2ED3               	goto	l1611
  1396     06B8                     u1640:
  1397     06B8                     l1609:
  1398     06B8  0826               	movf	_pos_x,w
  1399     06B9  3EC0               	addlw	192
  1400     06BA  00F9               	movwf	??_pot_x
  1401     06BB  3004               	movlw	4
  1402     06BC                     u1655:
  1403     06BC  1003               	clrc
  1404     06BD  0CF9               	rrf	??_pot_x,f
  1405     06BE  3EFF               	addlw	-1
  1406     06BF  1D03               	skipz
  1407     06C0  2EBC               	goto	u1655
  1408     06C1  0879               	movf	??_pot_x,w
  1409     06C2  390F               	andlw	15
  1410     06C3  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1411     06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1412     06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1413     06CA  0826               	movf	_pos_x,w
  1414     06CB  3EC0               	addlw	192
  1415     06CC  390F               	andlw	15
  1416     06CD  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1417     06D2  2F14               	goto	l128
  1418     06D3                     l1611:
  1419     06D3  3002               	movlw	2
  1420     06D4  0625               	xorwf	_pos_y,w
  1421     06D5  1D03               	btfss	3,2
  1422     06D6  2ED8               	goto	u1661
  1423     06D7  2ED9               	goto	u1660
  1424     06D8                     u1661:
  1425     06D8  2EF4               	goto	l1615
  1426     06D9                     u1660:
  1427     06D9                     l1613:
  1428     06D9  0826               	movf	_pos_x,w
  1429     06DA  3E94               	addlw	148
  1430     06DB  00F9               	movwf	??_pot_x
  1431     06DC  3004               	movlw	4
  1432     06DD                     u1675:
  1433     06DD  1003               	clrc
  1434     06DE  0CF9               	rrf	??_pot_x,f
  1435     06DF  3EFF               	addlw	-1
  1436     06E0  1D03               	skipz
  1437     06E1  2EDD               	goto	u1675
  1438     06E2  0879               	movf	??_pot_x,w
  1439     06E3  390F               	andlw	15
  1440     06E4  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1441     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1442     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1443     06EB  0826               	movf	_pos_x,w
  1444     06EC  3E94               	addlw	148
  1445     06ED  390F               	andlw	15
  1446     06EE  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1447     06F3  2F14               	goto	l128
  1448     06F4                     l1615:
  1449     06F4  3003               	movlw	3
  1450     06F5  0625               	xorwf	_pos_y,w
  1451     06F6  1D03               	btfss	3,2
  1452     06F7  2EF9               	goto	u1681
  1453     06F8  2EFA               	goto	u1680
  1454     06F9                     u1681:
  1455     06F9  2F14               	goto	l128
  1456     06FA                     u1680:
  1457     06FA                     l1617:
  1458     06FA  0826               	movf	_pos_x,w
  1459     06FB  3ED4               	addlw	212
  1460     06FC  00F9               	movwf	??_pot_x
  1461     06FD  3004               	movlw	4
  1462     06FE                     u1695:
  1463     06FE  1003               	clrc
  1464     06FF  0CF9               	rrf	??_pot_x,f
  1465     0700  3EFF               	addlw	-1
  1466     0701  1D03               	skipz
  1467     0702  2EFE               	goto	u1695
  1468     0703  0879               	movf	??_pot_x,w
  1469     0704  390F               	andlw	15
  1470     0705  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1471     070A  1283               	bcf	3,5	;RP0=0, select bank0
  1472     070B  1303               	bcf	3,6	;RP1=0, select bank0
  1473     070C  0826               	movf	_pos_x,w
  1474     070D  3ED4               	addlw	212
  1475     070E  390F               	andlw	15
  1476     070F  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1477     0714                     l128:
  1478                           
  1479                           ;main.c: 146: 
  1480     0714  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1481     0715  00F6               	movwf	LCD_putrs@a
  1482     0716  120A  118A  2116  120A  118A  	fcall	_LCD_putrs
  1483     071B                     l1619:
  1484                           
  1485                           ;main.c: 148:     LCD_putc(sentido_bob);
  1486     071B  3002               	movlw	2
  1487     071C  1283               	bcf	3,5	;RP0=0, select bank0
  1488     071D  1303               	bcf	3,6	;RP1=0, select bank0
  1489     071E  022C               	subwf	pot_x@adc_x+1,w
  1490     071F  3059               	movlw	89
  1491     0720  1903               	skipnz
  1492     0721  022B               	subwf	pot_x@adc_x,w
  1493     0722  1C03               	skipc
  1494     0723  2F25               	goto	u1701
  1495     0724  2F26               	goto	u1700
  1496     0725                     u1701:
  1497     0725  2F39               	goto	l1627
  1498     0726                     u1700:
  1499     0726                     l1621:
  1500                           
  1501                           ;main.c: 149:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1502     0726  3013               	movlw	19
  1503     0727  0226               	subwf	_pos_x,w
  1504     0728  1C03               	skipc
  1505     0729  2F2B               	goto	u1711
  1506     072A  2F2C               	goto	u1710
  1507     072B                     u1711:
  1508     072B  2F2F               	goto	l1625
  1509     072C                     u1710:
  1510     072C                     l1623:
  1511     072C  01A7               	clrf	_pot_x$191
  1512     072D  01A8               	clrf	_pot_x$191+1
  1513     072E  2F36               	goto	l133
  1514     072F                     l1625:
  1515     072F  0826               	movf	_pos_x,w
  1516     0730  3E01               	addlw	1
  1517     0731  00A7               	movwf	_pot_x$191
  1518     0732  3000               	movlw	0
  1519     0733  1803               	skipnc
  1520     0734  3001               	movlw	1
  1521     0735  00A8               	movwf	_pot_x$191+1
  1522     0736                     l133:
  1523     0736  0827               	movf	_pot_x$191,w
  1524     0737  00A6               	movwf	_pos_x
  1525                           
  1526                           ;main.c: 150: }
  1527     0738  2F55               	goto	l1635
  1528     0739                     l1627:
  1529     0739  3001               	movlw	1
  1530     073A  022C               	subwf	pot_x@adc_x+1,w
  1531     073B  3090               	movlw	144
  1532     073C  1903               	skipnz
  1533     073D  022B               	subwf	pot_x@adc_x,w
  1534     073E  1803               	skipnc
  1535     073F  2F41               	goto	u1721
  1536     0740  2F42               	goto	u1720
  1537     0741                     u1721:
  1538     0741  2F55               	goto	l1635
  1539     0742                     u1720:
  1540     0742                     l1629:
  1541                           
  1542                           ;main.c: 151: 
  1543     0742  0826               	movf	_pos_x,w
  1544     0743  1D03               	btfss	3,2
  1545     0744  2F46               	goto	u1731
  1546     0745  2F47               	goto	u1730
  1547     0746                     u1731:
  1548     0746  2F4C               	goto	l1633
  1549     0747                     u1730:
  1550     0747                     l1631:
  1551     0747  3013               	movlw	19
  1552     0748  00A9               	movwf	_pot_x$192
  1553     0749  3000               	movlw	0
  1554     074A  00AA               	movwf	_pot_x$192+1
  1555     074B  2F53               	goto	l139
  1556     074C                     l1633:
  1557     074C  0826               	movf	_pos_x,w
  1558     074D  3EFF               	addlw	255
  1559     074E  00A9               	movwf	_pot_x$192
  1560     074F  30FF               	movlw	255
  1561     0750  1803               	skipnc
  1562     0751  3000               	movlw	0
  1563     0752  00AA               	movwf	_pot_x$192+1
  1564     0753                     l139:
  1565     0753  0829               	movf	_pot_x$192,w
  1566     0754  00A6               	movwf	_pos_x
  1567     0755                     l1635:
  1568     0755  0825               	movf	_pos_y,w
  1569     0756  1D03               	btfss	3,2
  1570     0757  2F59               	goto	u1741
  1571     0758  2F5A               	goto	u1740
  1572     0759                     u1741:
  1573     0759  2F75               	goto	l1639
  1574     075A                     u1740:
  1575     075A                     l1637:
  1576     075A  0826               	movf	_pos_x,w
  1577     075B  3E80               	addlw	128
  1578     075C  00F9               	movwf	??_pot_x
  1579     075D  3004               	movlw	4
  1580     075E                     u1755:
  1581     075E  1003               	clrc
  1582     075F  0CF9               	rrf	??_pot_x,f
  1583     0760  3EFF               	addlw	-1
  1584     0761  1D03               	skipz
  1585     0762  2F5E               	goto	u1755
  1586     0763  0879               	movf	??_pot_x,w
  1587     0764  390F               	andlw	15
  1588     0765  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1589     076A  1283               	bcf	3,5	;RP0=0, select bank0
  1590     076B  1303               	bcf	3,6	;RP1=0, select bank0
  1591     076C  0826               	movf	_pos_x,w
  1592     076D  3E80               	addlw	128
  1593     076E  390F               	andlw	15
  1594     076F  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1595     0774  2FD6               	goto	l156
  1596     0775                     l1639:
  1597     0775  0325               	decf	_pos_y,w
  1598     0776  1D03               	btfss	3,2
  1599     0777  2F79               	goto	u1761
  1600     0778  2F7A               	goto	u1760
  1601     0779                     u1761:
  1602     0779  2F95               	goto	l1643
  1603     077A                     u1760:
  1604     077A                     l1641:
  1605     077A  0826               	movf	_pos_x,w
  1606     077B  3EC0               	addlw	192
  1607     077C  00F9               	movwf	??_pot_x
  1608     077D  3004               	movlw	4
  1609     077E                     u1775:
  1610     077E  1003               	clrc
  1611     077F  0CF9               	rrf	??_pot_x,f
  1612     0780  3EFF               	addlw	-1
  1613     0781  1D03               	skipz
  1614     0782  2F7E               	goto	u1775
  1615     0783  0879               	movf	??_pot_x,w
  1616     0784  390F               	andlw	15
  1617     0785  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1618     078A  1283               	bcf	3,5	;RP0=0, select bank0
  1619     078B  1303               	bcf	3,6	;RP1=0, select bank0
  1620     078C  0826               	movf	_pos_x,w
  1621     078D  3EC0               	addlw	192
  1622     078E  390F               	andlw	15
  1623     078F  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1624     0794  2FD6               	goto	l156
  1625     0795                     l1643:
  1626     0795  3002               	movlw	2
  1627     0796  0625               	xorwf	_pos_y,w
  1628     0797  1D03               	btfss	3,2
  1629     0798  2F9A               	goto	u1781
  1630     0799  2F9B               	goto	u1780
  1631     079A                     u1781:
  1632     079A  2FB6               	goto	l1647
  1633     079B                     u1780:
  1634     079B                     l1645:
  1635     079B  0826               	movf	_pos_x,w
  1636     079C  3E94               	addlw	148
  1637     079D  00F9               	movwf	??_pot_x
  1638     079E  3004               	movlw	4
  1639     079F                     u1795:
  1640     079F  1003               	clrc
  1641     07A0  0CF9               	rrf	??_pot_x,f
  1642     07A1  3EFF               	addlw	-1
  1643     07A2  1D03               	skipz
  1644     07A3  2F9F               	goto	u1795
  1645     07A4  0879               	movf	??_pot_x,w
  1646     07A5  390F               	andlw	15
  1647     07A6  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1648     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1649     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1650     07AD  0826               	movf	_pos_x,w
  1651     07AE  3E94               	addlw	148
  1652     07AF  390F               	andlw	15
  1653     07B0  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1654     07B5  2FD6               	goto	l156
  1655     07B6                     l1647:
  1656     07B6  3003               	movlw	3
  1657     07B7  0625               	xorwf	_pos_y,w
  1658     07B8  1D03               	btfss	3,2
  1659     07B9  2FBB               	goto	u1801
  1660     07BA  2FBC               	goto	u1800
  1661     07BB                     u1801:
  1662     07BB  2FD6               	goto	l156
  1663     07BC                     u1800:
  1664     07BC                     l1649:
  1665     07BC  0826               	movf	_pos_x,w
  1666     07BD  3ED4               	addlw	212
  1667     07BE  00F9               	movwf	??_pot_x
  1668     07BF  3004               	movlw	4
  1669     07C0                     u1815:
  1670     07C0  1003               	clrc
  1671     07C1  0CF9               	rrf	??_pot_x,f
  1672     07C2  3EFF               	addlw	-1
  1673     07C3  1D03               	skipz
  1674     07C4  2FC0               	goto	u1815
  1675     07C5  0879               	movf	??_pot_x,w
  1676     07C6  390F               	andlw	15
  1677     07C7  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1678     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1679     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1680     07CE  0826               	movf	_pos_x,w
  1681     07CF  3ED4               	addlw	212
  1682     07D0  390F               	andlw	15
  1683     07D1  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1684     07D6                     l156:
  1685                           
  1686                           ;main.c: 155:     if (!PORTAbits.RA2 && !boton_presionado) {
  1687     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  1688     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  1689     07D8  0831               	movf	_sentido_bob,w
  1690     07D9  120A  118A  223F  120A  118A  	fcall	_LCD_putc
  1691     07DE                     l1651:
  1692                           
  1693                           ;main.c: 156:         boton_presionado = 1;
  1694     07DE  300D               	movlw	13
  1695     07DF  00FA               	movwf	??_pot_x+1
  1696     07E0  30FB               	movlw	251
  1697     07E1  00F9               	movwf	??_pot_x
  1698     07E2                     u2607:
  1699     07E2  0BF9               	decfsz	??_pot_x,f
  1700     07E3  2FE2               	goto	u2607
  1701     07E4  0BFA               	decfsz	??_pot_x+1,f
  1702     07E5  2FE2               	goto	u2607
  1703     07E6  2FE7               	nop2
  1704     07E7                     l157:
  1705     07E7  0008               	return
  1706     07E8                     __end_of_pot_x:
  1707                           
  1708                           	psect	text3
  1709     0116                     __ptext3:	
  1710 ;; *************** function _LCD_putrs *****************
  1711 ;; Defined at:
  1712 ;;		line 135 in file "lcd.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  a               1    6[COMMON] PTR const unsigned char 
  1715 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  1716 ;;		 -> STR_1(2), 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  i               2    7[COMMON] int 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         1       0       0       0       0
  1729 ;;      Locals:         2       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0
  1731 ;;      Totals:         3       0       0       0       0
  1732 ;;Total ram usage:        3 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 2
  1735 ;; This function calls:
  1736 ;;		_LCD_putc
  1737 ;; This function is called by:
  1738 ;;		_pot_x
  1739 ;;		_pot_y
  1740 ;;		_disparar
  1741 ;;		_mover_nubes
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745     0116                     _LCD_putrs:	
  1746                           ;psect for function _LCD_putrs
  1747                           
  1748     0116                     l1501:	
  1749                           ;incstack = 0
  1750                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1751                           
  1752                           
  1753                           ;lcd.c: 137:     for ( int i = 0; a[i] != '\0'; ++i ) {
  1754     0116  01F7               	clrf	LCD_putrs@i
  1755     0117  01F8               	clrf	LCD_putrs@i+1
  1756     0118  292C               	goto	l1507
  1757     0119                     l1503:
  1758                           
  1759                           ;lcd.c: 138:         LCD_putc(a[i]);
  1760     0119  0877               	movf	LCD_putrs@i,w
  1761     011A  0776               	addwf	LCD_putrs@a,w
  1762     011B  0084               	movwf	4
  1763     011C  120A  118A  2003  120A  118A  	fcall	stringdir
  1764     0121  120A  118A  223F  120A  118A  	fcall	_LCD_putc
  1765     0126                     l1505:
  1766                           
  1767                           ;lcd.c: 139:     }
  1768     0126  3001               	movlw	1
  1769     0127  07F7               	addwf	LCD_putrs@i,f
  1770     0128  1803               	skipnc
  1771     0129  0AF8               	incf	LCD_putrs@i+1,f
  1772     012A  3000               	movlw	0
  1773     012B  07F8               	addwf	LCD_putrs@i+1,f
  1774     012C                     l1507:
  1775     012C  0877               	movf	LCD_putrs@i,w
  1776     012D  0776               	addwf	LCD_putrs@a,w
  1777     012E  0084               	movwf	4
  1778     012F  120A  118A  2003  120A  118A  	fcall	stringdir
  1779     0134  3A00               	xorlw	0
  1780     0135  1D03               	skipz
  1781     0136  2938               	goto	u1541
  1782     0137  2939               	goto	u1540
  1783     0138                     u1541:
  1784     0138  2919               	goto	l1503
  1785     0139                     u1540:
  1786     0139                     l415:
  1787     0139  0008               	return
  1788     013A                     __end_of_LCD_putrs:
  1789                           
  1790                           	psect	text4
  1791     0187                     __ptext4:	
  1792 ;; *************** function _ADC_Read *****************
  1793 ;; Defined at:
  1794 ;;		line 132 in file "main.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  channel         1    wreg     unsigned char 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  channel         1    4[COMMON] unsigned char 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  2    0[COMMON] unsigned int 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1808 ;;      Params:         2       0       0       0       0
  1809 ;;      Locals:         1       0       0       0       0
  1810 ;;      Temps:          2       0       0       0       0
  1811 ;;      Totals:         5       0       0       0       0
  1812 ;;Total ram usage:        5 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_pot_x
  1818 ;;		_pot_y
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822     0187                     _ADC_Read:	
  1823                           ;psect for function _ADC_Read
  1824                           
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  1828                           ;ADC_Read@channel stored from wreg
  1829     0187  00F4               	movwf	ADC_Read@channel
  1830     0188                     l1489:
  1831                           
  1832                           ;main.c: 133: 
  1833     0188  2989               	nop2	;2 cycle nop
  1834     0189  298A               	nop2	;2 cycle nop
  1835     018A  0000               	nop
  1836     018B                     l1491:
  1837                           
  1838                           ;main.c: 134: 
  1839     018B  3083               	movlw	131
  1840     018C  1283               	bcf	3,5	;RP0=0, select bank0
  1841     018D  1303               	bcf	3,6	;RP1=0, select bank0
  1842     018E  059F               	andwf	31,f	;volatile
  1843                           
  1844                           ;main.c: 135: void pot_y(void){
  1845     018F  0874               	movf	ADC_Read@channel,w	;volatile
  1846     0190  00F2               	movwf	??_ADC_Read
  1847     0191  3001               	movlw	1
  1848     0192                     u1525:
  1849     0192  1003               	clrc
  1850     0193  0DF2               	rlf	??_ADC_Read,f
  1851     0194  3EFF               	addlw	-1
  1852     0195  1D03               	skipz
  1853     0196  2992               	goto	u1525
  1854     0197  1003               	clrc
  1855     0198  0D72               	rlf	??_ADC_Read,w
  1856     0199  049F               	iorwf	31,f	;volatile
  1857     019A                     l1493:
  1858                           
  1859                           ;main.c: 136:     unsigned int adc_y = ADC_Read(1);
  1860     019A  3003               	movlw	3
  1861     019B  00F3               	movwf	??_ADC_Read+1
  1862     019C  3097               	movlw	151
  1863     019D  00F2               	movwf	??_ADC_Read
  1864     019E                     u2617:
  1865     019E  0BF2               	decfsz	??_ADC_Read,f
  1866     019F  299E               	goto	u2617
  1867     01A0  0BF3               	decfsz	??_ADC_Read+1,f
  1868     01A1  299E               	goto	u2617
  1869     01A2  29A3               	nop2
  1870     01A3                     l1495:
  1871                           
  1872                           ;main.c: 137: 
  1873     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1874     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1875     01A5  149F               	bsf	31,1	;volatile
  1876     01A6                     l106:	
  1877                           ;main.c: 138:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  1878                           
  1879     01A6  189F               	btfsc	31,1	;volatile
  1880     01A7  29A9               	goto	u1531
  1881     01A8  29AA               	goto	u1530
  1882     01A9                     u1531:
  1883     01A9  29A6               	goto	l106
  1884     01AA                     u1530:
  1885     01AA                     l1497:
  1886                           
  1887                           ;main.c: 139:     LCD_putrs(" ");
  1888     01AA  081E               	movf	30,w	;volatile
  1889     01AB  00F1               	movwf	?_ADC_Read+1
  1890     01AC  1683               	bsf	3,5	;RP0=1, select bank1
  1891     01AD  1303               	bcf	3,6	;RP1=0, select bank1
  1892     01AE  081E               	movf	30,w	;volatile
  1893     01AF  00F0               	movwf	?_ADC_Read
  1894     01B0                     l109:
  1895     01B0  0008               	return
  1896     01B1                     __end_of_ADC_Read:
  1897                           
  1898                           	psect	text5
  1899     00FA                     __ptext5:	
  1900 ;; *************** function _dibujar_suelo *****************
  1901 ;; Defined at:
  1902 ;;		line 228 in file "main.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  i               1    6[COMMON] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1916 ;;      Params:         0       0       0       0       0
  1917 ;;      Locals:         1       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0
  1919 ;;      Totals:         1       0       0       0       0
  1920 ;;Total ram usage:        1 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 2
  1923 ;; This function calls:
  1924 ;;		_LCD_Write
  1925 ;;		_LCD_putc
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931     00FA                     _dibujar_suelo:	
  1932                           ;psect for function _dibujar_suelo
  1933                           
  1934     00FA                     l286:	
  1935                           ;incstack = 0
  1936                           ; Regs used in _dibujar_suelo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1937                           
  1938     00FA                     l1587:
  1939     00FA  300D               	movlw	13
  1940     00FB  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1941     0100  3004               	movlw	4
  1942     0101  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  1943     0106                     l1589:
  1944     0106  01F6               	clrf	dibujar_suelo@i
  1945     0107                     l1595:
  1946     0107  3002               	movlw	2
  1947     0108  120A  118A  223F  120A  118A  	fcall	_LCD_putc
  1948     010D                     l1597:
  1949     010D  3001               	movlw	1
  1950     010E  07F6               	addwf	dibujar_suelo@i,f
  1951     010F                     l1599:
  1952     010F  3014               	movlw	20
  1953     0110  0276               	subwf	dibujar_suelo@i,w
  1954     0111  1C03               	skipc
  1955     0112  2914               	goto	u1611
  1956     0113  2915               	goto	u1610
  1957     0114                     u1611:
  1958     0114  2907               	goto	l1595
  1959     0115                     u1610:
  1960     0115                     l305:
  1961     0115  0008               	return
  1962     0116                     __end_of_dibujar_suelo:
  1963                           
  1964                           	psect	text6
  1965     0160                     __ptext6:	
  1966 ;; *************** function _checar_boton *****************
  1967 ;; Defined at:
  1968 ;;		line 179 in file "main.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1982 ;;      Params:         0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0
  1984 ;;      Temps:          2       0       0       0       0
  1985 ;;      Totals:         2       0       0       0       0
  1986 ;;Total ram usage:        2 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995     0160                     _checar_boton:	
  1996                           ;psect for function _checar_boton
  1997                           
  1998     0160                     l1699:	
  1999                           ;incstack = 0
  2000                           ; Regs used in _checar_boton: [wreg+status,2+status,0]
  2001                           
  2002                           
  2003                           ;main.c: 180:             LCD_putc('-');;main.c: 182:         }
  2004     0160  1283               	bcf	3,5	;RP0=0, select bank0
  2005     0161  1303               	bcf	3,6	;RP1=0, select bank0
  2006     0162  1905               	btfsc	5,2	;volatile
  2007     0163  2965               	goto	u2021
  2008     0164  2966               	goto	u2020
  2009     0165                     u2021:
  2010     0165  297C               	goto	l202
  2011     0166                     u2020:
  2012     0166                     l1701:
  2013     0166  0833               	movf	checar_boton@boton_presionado,w
  2014     0167  1D03               	btfss	3,2
  2015     0168  296A               	goto	u2031
  2016     0169  296B               	goto	u2030
  2017     016A                     u2031:
  2018     016A  297C               	goto	l202
  2019     016B                     u2030:
  2020     016B                     l1703:
  2021                           
  2022                           ;main.c: 183: 
  2023     016B  3001               	movlw	1
  2024     016C  00B3               	movwf	checar_boton@boton_presionado
  2025     016D                     l1705:
  2026                           
  2027                           ;main.c: 184:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2028     016D  0831               	movf	_sentido_bob,w
  2029     016E  0432               	iorwf	_sentido_bob+1,w
  2030     016F  1903               	btfsc	3,2
  2031     0170  2972               	goto	u2041
  2032     0171  2974               	goto	u2040
  2033     0172                     u2041:
  2034     0172  3001               	movlw	1
  2035     0173  2975               	goto	u2050
  2036     0174                     u2040:
  2037     0174  3000               	movlw	0
  2038     0175                     u2050:
  2039     0175  00F0               	movwf	??_checar_boton
  2040     0176  01F1               	clrf	??_checar_boton+1
  2041     0177  0870               	movf	??_checar_boton,w
  2042     0178  00B1               	movwf	_sentido_bob
  2043     0179  0871               	movf	??_checar_boton+1,w
  2044     017A  00B2               	movwf	_sentido_bob+1
  2045                           
  2046                           ;main.c: 185: 
  2047     017B  2986               	goto	l205
  2048     017C                     l202:	
  2049                           ;main.c: 186: 
  2050                           
  2051     017C  1D05               	btfss	5,2	;volatile
  2052     017D  297F               	goto	u2061
  2053     017E  2980               	goto	u2060
  2054     017F                     u2061:
  2055     017F  2986               	goto	l205
  2056     0180                     u2060:
  2057     0180                     l1707:
  2058     0180  0833               	movf	checar_boton@boton_presionado,w
  2059     0181  1903               	btfsc	3,2
  2060     0182  2984               	goto	u2071
  2061     0183  2985               	goto	u2070
  2062     0184                     u2071:
  2063     0184  2986               	goto	l205
  2064     0185                     u2070:
  2065     0185                     l1709:
  2066                           
  2067                           ;main.c: 187:         if(pos_x + offset < 20){
  2068     0185  01B3               	clrf	checar_boton@boton_presionado
  2069     0186                     l205:
  2070     0186  0008               	return
  2071     0187                     __end_of_checar_boton:
  2072                           
  2073                           	psect	text7
  2074     01B1                     __ptext7:	
  2075 ;; *************** function _LCD_custom_char *****************
  2076 ;; Defined at:
  2077 ;;		line 116 in file "main.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  pos             1    wreg     unsigned char 
  2080 ;;  x               1   11[COMMON] PTR const unsigned char 
  2081 ;;		 -> nube(8), suelo(8), bob_reves(8), bob(8), 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  pos             1    0[BANK0 ] unsigned char 
  2084 ;;  i               1    1[BANK0 ] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         1       0       0       0       0
  2095 ;;      Locals:         0       2       0       0       0
  2096 ;;      Temps:          2       0       0       0       0
  2097 ;;      Totals:         3       2       0       0       0
  2098 ;;Total ram usage:        5 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; Hardware stack levels required when called: 3
  2101 ;; This function calls:
  2102 ;;		_LCD_cg_ram_addr
  2103 ;;		_LCD_ram_write
  2104 ;; This function is called by:
  2105 ;;		_main
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109     01B1                     _LCD_custom_char:	
  2110                           ;psect for function _LCD_custom_char
  2111                           
  2112                           
  2113                           ;incstack = 0
  2114                           ; Regs used in _LCD_custom_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2115                           ;LCD_custom_char@pos stored from wreg
  2116     01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2117     01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2118     01B3  00A7               	movwf	LCD_custom_char@pos
  2119     01B4                     l1563:
  2120                           
  2121                           ;main.c: 117: 
  2122     01B4  0827               	movf	LCD_custom_char@pos,w
  2123     01B5  3907               	andlw	7
  2124     01B6  00FC               	movwf	??_LCD_custom_char
  2125     01B7  3002               	movlw	2
  2126     01B8                     u1595:
  2127     01B8  1003               	clrc
  2128     01B9  0DFC               	rlf	??_LCD_custom_char,f
  2129     01BA  3EFF               	addlw	-1
  2130     01BB  1D03               	skipz
  2131     01BC  29B8               	goto	u1595
  2132     01BD  1003               	clrc
  2133     01BE  0D7C               	rlf	??_LCD_custom_char,w
  2134     01BF  00A7               	movwf	LCD_custom_char@pos
  2135     01C0                     l1565:
  2136                           
  2137                           ;main.c: 118:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  2138     01C0  0827               	movf	LCD_custom_char@pos,w
  2139     01C1  120A  118A  213A  120A  118A  	fcall	_LCD_cg_ram_addr
  2140     01C6                     l1567:
  2141                           
  2142                           ;main.c: 119:     LCD_putrs(" ");
  2143     01C6  3003               	movlw	3
  2144     01C7  00FD               	movwf	??_LCD_custom_char+1
  2145     01C8  3097               	movlw	151
  2146     01C9  00FC               	movwf	??_LCD_custom_char
  2147     01CA                     u2627:
  2148     01CA  0BFC               	decfsz	??_LCD_custom_char,f
  2149     01CB  29CA               	goto	u2627
  2150     01CC  0BFD               	decfsz	??_LCD_custom_char+1,f
  2151     01CD  29CA               	goto	u2627
  2152     01CE  29CF               	nop2
  2153     01CF                     l1569:
  2154                           
  2155                           ;main.c: 120: 
  2156     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2157     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2158     01D1  01A8               	clrf	LCD_custom_char@i
  2159     01D2                     l1575:
  2160                           
  2161                           ;main.c: 121:     if(adc_x > 600){
  2162     01D2  0828               	movf	LCD_custom_char@i,w
  2163     01D3  077B               	addwf	LCD_custom_char@x,w
  2164     01D4  0084               	movwf	4
  2165     01D5  120A  118A  2003  120A  118A  	fcall	stringdir
  2166     01DA  120A  118A  20D8  120A  118A  	fcall	_LCD_ram_write
  2167     01DF                     l1577:
  2168                           
  2169                           ;main.c: 122:         pos_x = (pos_x < 19) ? pos_x + 1 : 0;
  2170     01DF  3001               	movlw	1
  2171     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2172     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2173     01E2  07A8               	addwf	LCD_custom_char@i,f
  2174     01E3                     l1579:
  2175     01E3  3008               	movlw	8
  2176     01E4  0228               	subwf	LCD_custom_char@i,w
  2177     01E5  1C03               	skipc
  2178     01E6  29E8               	goto	u1601
  2179     01E7  29E9               	goto	u1600
  2180     01E8                     u1601:
  2181     01E8  29D2               	goto	l1575
  2182     01E9                     u1600:
  2183     01E9                     l100:
  2184     01E9  0008               	return
  2185     01EA                     __end_of_LCD_custom_char:
  2186                           
  2187                           	psect	text8
  2188     00D8                     __ptext8:	
  2189 ;; *************** function _LCD_ram_write *****************
  2190 ;; Defined at:
  2191 ;;		line 149 in file "lcd.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  data            1    wreg     unsigned char 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  data            1    7[COMMON] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2205 ;;      Params:         0       0       0       0       0
  2206 ;;      Locals:         1       0       0       0       0
  2207 ;;      Temps:          1       0       0       0       0
  2208 ;;      Totals:         2       0       0       0       0
  2209 ;;Total ram usage:        2 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 2
  2212 ;; This function calls:
  2213 ;;		_LCD_putc
  2214 ;; This function is called by:
  2215 ;;		_LCD_custom_char
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219     00D8                     _LCD_ram_write:	
  2220                           ;psect for function _LCD_ram_write
  2221                           
  2222                           
  2223                           ;incstack = 0
  2224                           ; Regs used in _LCD_ram_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2225                           ;LCD_ram_write@data stored from wreg
  2226     00D8  00F7               	movwf	LCD_ram_write@data
  2227     00D9                     l1485:
  2228                           
  2229                           ;lcd.c: 150:     LCD_putc(data);
  2230     00D9  0877               	movf	LCD_ram_write@data,w
  2231     00DA  120A  118A  223F  120A  118A  	fcall	_LCD_putc
  2232     00DF                     l1487:
  2233                           
  2234                           ;lcd.c: 151:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2235     00DF  30C7               	movlw	199
  2236     00E0  00F6               	movwf	??_LCD_ram_write
  2237     00E1                     u2637:
  2238     00E1  28E2               	nop2
  2239     00E2  0BF6               	decfsz	??_LCD_ram_write,f
  2240     00E3  28E1               	goto	u2637
  2241     00E4  28E5               	nop2
  2242     00E5  28E6               	nop2
  2243     00E6                     l423:
  2244     00E6  0008               	return
  2245     00E7                     __end_of_LCD_ram_write:
  2246                           
  2247                           	psect	text9
  2248     023F                     __ptext9:	
  2249 ;; *************** function _LCD_putc *****************
  2250 ;; Defined at:
  2251 ;;		line 110 in file "lcd.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  c               1    wreg     unsigned char 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  c               1    5[COMMON] unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2265 ;;      Params:         0       0       0       0       0
  2266 ;;      Locals:         1       0       0       0       0
  2267 ;;      Temps:          2       0       0       0       0
  2268 ;;      Totals:         3       0       0       0       0
  2269 ;;Total ram usage:        3 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 1
  2272 ;; This function calls:
  2273 ;;		_LCD_Out
  2274 ;; This function is called by:
  2275 ;;		_main
  2276 ;;		_pot_x
  2277 ;;		_pot_y
  2278 ;;		_dibujar_suelo
  2279 ;;		_LCD_putrs
  2280 ;;		_LCD_ram_write
  2281 ;;		_disparar
  2282 ;;		_mover_nubes
  2283 ;;		_LCD_puts
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287     023F                     _LCD_putc:	
  2288                           ;psect for function _LCD_putc
  2289                           
  2290                           
  2291                           ;incstack = 0
  2292                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2293                           ;LCD_putc@c stored from wreg
  2294     023F  00F5               	movwf	LCD_putc@c
  2295     0240                     l1465:
  2296                           
  2297                           ;lcd.c: 112:    *(lcd.PORT) |= 1 << lcd.RS;
  2298     0240  1283               	bcf	3,5	;RP0=0, select bank0
  2299     0241  1303               	bcf	3,6	;RP1=0, select bank0
  2300     0242  0820               	movf	_lcd,w
  2301     0243  0084               	movwf	4
  2302     0244  1783               	bsf	3,7
  2303     0245  1C21               	btfss	_lcd+1,0
  2304     0246  1383               	bcf	3,7
  2305     0247  3001               	movlw	1
  2306     0248  00F3               	movwf	??_LCD_putc
  2307     0249  0822               	movf	_lcd+2,w
  2308     024A  3907               	andlw	7
  2309     024B  3E01               	addlw	1
  2310     024C  2A4F               	goto	u1454
  2311     024D                     u1455:
  2312     024D  1003               	clrc
  2313     024E  0DF3               	rlf	??_LCD_putc,f
  2314     024F                     u1454:
  2315     024F  3EFF               	addlw	-1
  2316     0250  1D03               	skipz
  2317     0251  2A4D               	goto	u1455
  2318     0252  0873               	movf	??_LCD_putc,w
  2319     0253  0480               	iorwf	0,f
  2320     0254                     l1467:
  2321                           
  2322                           ;lcd.c: 113:     LCD_Out((c & 0xF0) >> 4);
  2323     0254  0875               	movf	LCD_putc@c,w
  2324     0255  00F3               	movwf	??_LCD_putc
  2325     0256  3004               	movlw	4
  2326     0257                     u1465:
  2327     0257  1003               	clrc
  2328     0258  0CF3               	rrf	??_LCD_putc,f
  2329     0259  3EFF               	addlw	-1
  2330     025A  1D03               	skipz
  2331     025B  2A57               	goto	u1465
  2332     025C  0873               	movf	??_LCD_putc,w
  2333     025D  390F               	andlw	15
  2334     025E  120A  118A  237D  120A  118A  	fcall	_LCD_Out
  2335     0263                     l1469:
  2336                           
  2337                           ;lcd.c: 115:     *(lcd.PORT) |= 1 << lcd.EN;
  2338     0263  1283               	bcf	3,5	;RP0=0, select bank0
  2339     0264  1303               	bcf	3,6	;RP1=0, select bank0
  2340     0265  0820               	movf	_lcd,w
  2341     0266  0084               	movwf	4
  2342     0267  1783               	bsf	3,7
  2343     0268  1C21               	btfss	_lcd+1,0
  2344     0269  1383               	bcf	3,7
  2345     026A  3001               	movlw	1
  2346     026B  00F3               	movwf	??_LCD_putc
  2347     026C  0C22               	rrf	_lcd+2,w
  2348     026D  00F4               	movwf	??_LCD_putc+1
  2349     026E  0CF4               	rrf	??_LCD_putc+1,f
  2350     026F  0C74               	rrf	??_LCD_putc+1,w
  2351     0270  3907               	andlw	7
  2352     0271  3E01               	addlw	1
  2353     0272  2A75               	goto	u1474
  2354     0273                     u1475:
  2355     0273  1003               	clrc
  2356     0274  0DF3               	rlf	??_LCD_putc,f
  2357     0275                     u1474:
  2358     0275  3EFF               	addlw	-1
  2359     0276  1D03               	skipz
  2360     0277  2A73               	goto	u1475
  2361     0278  0873               	movf	??_LCD_putc,w
  2362     0279  0480               	iorwf	0,f
  2363     027A                     l1471:
  2364                           
  2365                           ;lcd.c: 116:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2366     027A  300D               	movlw	13
  2367     027B  00F3               	movwf	??_LCD_putc
  2368     027C                     u2647:
  2369     027C  0BF3               	decfsz	??_LCD_putc,f
  2370     027D  2A7C               	goto	u2647
  2371     027E                     l1473:
  2372                           
  2373                           ;lcd.c: 117:     *(lcd.PORT) &= ~(1 << lcd.EN);
  2374     027E  1283               	bcf	3,5	;RP0=0, select bank0
  2375     027F  1303               	bcf	3,6	;RP1=0, select bank0
  2376     0280  0820               	movf	_lcd,w
  2377     0281  0084               	movwf	4
  2378     0282  1783               	bsf	3,7
  2379     0283  1C21               	btfss	_lcd+1,0
  2380     0284  1383               	bcf	3,7
  2381     0285  3001               	movlw	1
  2382     0286  00F3               	movwf	??_LCD_putc
  2383     0287  0C22               	rrf	_lcd+2,w
  2384     0288  00F4               	movwf	??_LCD_putc+1
  2385     0289  0CF4               	rrf	??_LCD_putc+1,f
  2386     028A  0C74               	rrf	??_LCD_putc+1,w
  2387     028B  3907               	andlw	7
  2388     028C  3E01               	addlw	1
  2389     028D  2A90               	goto	u1484
  2390     028E                     u1485:
  2391     028E  1003               	clrc
  2392     028F  0DF3               	rlf	??_LCD_putc,f
  2393     0290                     u1484:
  2394     0290  3EFF               	addlw	-1
  2395     0291  1D03               	skipz
  2396     0292  2A8E               	goto	u1485
  2397     0293  0873               	movf	??_LCD_putc,w
  2398     0294  3AFF               	xorlw	255
  2399     0295  0580               	andwf	0,f
  2400     0296                     l1475:
  2401                           
  2402                           ;lcd.c: 119:     LCD_Out(c & 0x0F);
  2403     0296  0875               	movf	LCD_putc@c,w
  2404     0297  390F               	andlw	15
  2405     0298  120A  118A  237D  120A  118A  	fcall	_LCD_Out
  2406     029D                     l1477:
  2407                           
  2408                           ;lcd.c: 121:     *(lcd.PORT) |= 1 << lcd.EN;
  2409     029D  1283               	bcf	3,5	;RP0=0, select bank0
  2410     029E  1303               	bcf	3,6	;RP1=0, select bank0
  2411     029F  0820               	movf	_lcd,w
  2412     02A0  0084               	movwf	4
  2413     02A1  1783               	bsf	3,7
  2414     02A2  1C21               	btfss	_lcd+1,0
  2415     02A3  1383               	bcf	3,7
  2416     02A4  3001               	movlw	1
  2417     02A5  00F3               	movwf	??_LCD_putc
  2418     02A6  0C22               	rrf	_lcd+2,w
  2419     02A7  00F4               	movwf	??_LCD_putc+1
  2420     02A8  0CF4               	rrf	??_LCD_putc+1,f
  2421     02A9  0C74               	rrf	??_LCD_putc+1,w
  2422     02AA  3907               	andlw	7
  2423     02AB  3E01               	addlw	1
  2424     02AC  2AAF               	goto	u1494
  2425     02AD                     u1495:
  2426     02AD  1003               	clrc
  2427     02AE  0DF3               	rlf	??_LCD_putc,f
  2428     02AF                     u1494:
  2429     02AF  3EFF               	addlw	-1
  2430     02B0  1D03               	skipz
  2431     02B1  2AAD               	goto	u1495
  2432     02B2  0873               	movf	??_LCD_putc,w
  2433     02B3  0480               	iorwf	0,f
  2434                           
  2435                           ;lcd.c: 122:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2436     02B4  300D               	movlw	13
  2437     02B5  00F3               	movwf	??_LCD_putc
  2438     02B6                     u2657:
  2439     02B6  0BF3               	decfsz	??_LCD_putc,f
  2440     02B7  2AB6               	goto	u2657
  2441     02B8                     l1479:
  2442                           
  2443                           ;lcd.c: 123:     *(lcd.PORT) &= ~(1 << lcd.EN);
  2444     02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2445     02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2446     02BA  0820               	movf	_lcd,w
  2447     02BB  0084               	movwf	4
  2448     02BC  1783               	bsf	3,7
  2449     02BD  1C21               	btfss	_lcd+1,0
  2450     02BE  1383               	bcf	3,7
  2451     02BF  3001               	movlw	1
  2452     02C0  00F3               	movwf	??_LCD_putc
  2453     02C1  0C22               	rrf	_lcd+2,w
  2454     02C2  00F4               	movwf	??_LCD_putc+1
  2455     02C3  0CF4               	rrf	??_LCD_putc+1,f
  2456     02C4  0C74               	rrf	??_LCD_putc+1,w
  2457     02C5  3907               	andlw	7
  2458     02C6  3E01               	addlw	1
  2459     02C7  2ACA               	goto	u1504
  2460     02C8                     u1505:
  2461     02C8  1003               	clrc
  2462     02C9  0DF3               	rlf	??_LCD_putc,f
  2463     02CA                     u1504:
  2464     02CA  3EFF               	addlw	-1
  2465     02CB  1D03               	skipz
  2466     02CC  2AC8               	goto	u1505
  2467     02CD  0873               	movf	??_LCD_putc,w
  2468     02CE  3AFF               	xorlw	255
  2469     02CF  0580               	andwf	0,f
  2470     02D0                     l403:
  2471     02D0  0008               	return
  2472     02D1                     __end_of_LCD_putc:
  2473                           
  2474                           	psect	text10
  2475     013A                     __ptext10:	
  2476 ;; *************** function _LCD_cg_ram_addr *****************
  2477 ;; Defined at:
  2478 ;;		line 144 in file "lcd.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  addr            1    wreg     unsigned char 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  addr            1   10[COMMON] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2492 ;;      Params:         0       0       0       0       0
  2493 ;;      Locals:         1       0       0       0       0
  2494 ;;      Temps:          4       0       0       0       0
  2495 ;;      Totals:         5       0       0       0       0
  2496 ;;Total ram usage:        5 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 2
  2499 ;; This function calls:
  2500 ;;		_LCD_Write
  2501 ;; This function is called by:
  2502 ;;		_LCD_custom_char
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506     013A                     _LCD_cg_ram_addr:	
  2507                           ;psect for function _LCD_cg_ram_addr
  2508                           
  2509                           
  2510                           ;incstack = 0
  2511                           ; Regs used in _LCD_cg_ram_addr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2512                           ;LCD_cg_ram_addr@addr stored from wreg
  2513     013A  00FA               	movwf	LCD_cg_ram_addr@addr
  2514     013B                     l418:	
  2515                           ;lcd.c: 145:     do { LCD_Write( (0x40 | (addr & 0x3F) & 0xF0) >> 4 ); LCD_Write( 0x40 |
      +                           (addr & 0x3F) & 0x0F); } while ( 0 );
  2516                           
  2517     013B                     l1481:
  2518     013B  3030               	movlw	48
  2519     013C  057A               	andwf	LCD_cg_ram_addr@addr,w
  2520     013D  00F6               	movwf	??_LCD_cg_ram_addr
  2521     013E  3040               	movlw	64
  2522     013F  0476               	iorwf	??_LCD_cg_ram_addr,w
  2523     0140  00F7               	movwf	??_LCD_cg_ram_addr+1
  2524     0141  3000               	movlw	0
  2525     0142  00F8               	movwf	??_LCD_cg_ram_addr+2
  2526     0143  3004               	movlw	4
  2527     0144  00F9               	movwf	??_LCD_cg_ram_addr+3
  2528     0145                     u1515:
  2529     0145  0D78               	rlf	??_LCD_cg_ram_addr+2,w
  2530     0146  0CF8               	rrf	??_LCD_cg_ram_addr+2,f
  2531     0147  0CF7               	rrf	??_LCD_cg_ram_addr+1,f
  2532     0148  0BF9               	decfsz	??_LCD_cg_ram_addr+3,f
  2533     0149  2945               	goto	u1515
  2534     014A  0877               	movf	??_LCD_cg_ram_addr+1,w
  2535     014B  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2536     0150  087A               	movf	LCD_cg_ram_addr@addr,w
  2537     0151  390F               	andlw	15
  2538     0152  3840               	iorlw	64
  2539     0153  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2540     0158                     l1483:
  2541                           
  2542                           ;lcd.c: 146:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2543     0158  30C7               	movlw	199
  2544     0159  00F6               	movwf	??_LCD_cg_ram_addr
  2545     015A                     u2667:
  2546     015A  295B               	nop2
  2547     015B  0BF6               	decfsz	??_LCD_cg_ram_addr,f
  2548     015C  295A               	goto	u2667
  2549     015D  295E               	nop2
  2550     015E  295F               	nop2
  2551     015F                     l420:
  2552     015F  0008               	return
  2553     0160                     __end_of_LCD_cg_ram_addr:
  2554                           
  2555                           	psect	text11
  2556     02D1                     __ptext11:	
  2557 ;; *************** function _LCD_Init *****************
  2558 ;; Defined at:
  2559 ;;		line 52 in file "lcd.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  display         5    6[COMMON] struct .
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  cmd             1   13[COMMON] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      _Bool 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2573 ;;      Params:         5       0       0       0       0
  2574 ;;      Locals:         1       0       0       0       0
  2575 ;;      Temps:          2       0       0       0       0
  2576 ;;      Totals:         8       0       0       0       0
  2577 ;;Total ram usage:        8 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 2
  2580 ;; This function calls:
  2581 ;;		_LCD_Write
  2582 ;; This function is called by:
  2583 ;;		_main
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587     02D1                     _LCD_Init:	
  2588                           ;psect for function _LCD_Init
  2589                           
  2590     02D1                     l1517:	
  2591                           ;incstack = 0
  2592                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2593                           
  2594                           
  2595                           ;lcd.c: 54:     lcd = display;
  2596     02D1  3020               	movlw	_lcd& (0+255)
  2597     02D2  0084               	movwf	4
  2598     02D3  0876               	movf	LCD_Init@display,w
  2599     02D4  1383               	bcf	3,7	;select IRP bank0
  2600     02D5  0080               	movwf	0
  2601     02D6  0A84               	incf	4,f
  2602     02D7  0877               	movf	LCD_Init@display+1,w
  2603     02D8  0080               	movwf	0
  2604     02D9  0A84               	incf	4,f
  2605     02DA  0878               	movf	LCD_Init@display+2,w
  2606     02DB  0080               	movwf	0
  2607     02DC  0A84               	incf	4,f
  2608     02DD  0879               	movf	LCD_Init@display+3,w
  2609     02DE  0080               	movwf	0
  2610     02DF  0A84               	incf	4,f
  2611     02E0  087A               	movf	LCD_Init@display+4,w
  2612     02E1  0080               	movwf	0
  2613     02E2                     l1519:
  2614                           
  2615                           ;lcd.c: 63:     if ( lcd.PORT == &PORTA ) {
  2616     02E2  3000               	movlw	0
  2617     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2618     02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2619     02E5  0621               	xorwf	_lcd+1,w
  2620     02E6  1D03               	skipz
  2621     02E7  2AEA               	goto	u1555
  2622     02E8  3005               	movlw	5
  2623     02E9  0620               	xorwf	_lcd,w
  2624     02EA                     u1555:
  2625     02EA  1D03               	skipz
  2626     02EB  2AED               	goto	u1551
  2627     02EC  2AEE               	goto	u1550
  2628     02ED                     u1551:
  2629     02ED  2AF2               	goto	l1523
  2630     02EE                     u1550:
  2631     02EE                     l1521:
  2632                           
  2633                           ;lcd.c: 64:         TRISA = 0x00;
  2634     02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2635     02EF  1303               	bcf	3,6	;RP1=0, select bank1
  2636     02F0  0185               	clrf	5	;volatile
  2637                           
  2638                           ;lcd.c: 65:     }
  2639     02F1  2B0D               	goto	l1531
  2640     02F2                     l1523:
  2641     02F2  3000               	movlw	0
  2642     02F3  0621               	xorwf	_lcd+1,w
  2643     02F4  1D03               	skipz
  2644     02F5  2AF8               	goto	u1565
  2645     02F6  3006               	movlw	6
  2646     02F7  0620               	xorwf	_lcd,w
  2647     02F8                     u1565:
  2648     02F8  1D03               	skipz
  2649     02F9  2AFB               	goto	u1561
  2650     02FA  2AFC               	goto	u1560
  2651     02FB                     u1561:
  2652     02FB  2B00               	goto	l1527
  2653     02FC                     u1560:
  2654     02FC                     l1525:
  2655                           
  2656                           ;lcd.c: 67:         TRISB = 0x00;
  2657     02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2658     02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2659     02FE  0186               	clrf	6	;volatile
  2660                           
  2661                           ;lcd.c: 68:     }
  2662     02FF  2B0D               	goto	l1531
  2663     0300                     l1527:
  2664     0300  3000               	movlw	0
  2665     0301  0621               	xorwf	_lcd+1,w
  2666     0302  1D03               	skipz
  2667     0303  2B06               	goto	u1575
  2668     0304  3007               	movlw	7
  2669     0305  0620               	xorwf	_lcd,w
  2670     0306                     u1575:
  2671     0306  1D03               	skipz
  2672     0307  2B09               	goto	u1571
  2673     0308  2B0A               	goto	u1570
  2674     0309                     u1571:
  2675     0309  2B7C               	goto	l387
  2676     030A                     u1570:
  2677     030A                     l1529:
  2678                           
  2679                           ;lcd.c: 70:         TRISC = 0x00;
  2680     030A  1683               	bsf	3,5	;RP0=1, select bank1
  2681     030B  1303               	bcf	3,6	;RP1=0, select bank1
  2682     030C  0187               	clrf	7	;volatile
  2683     030D                     l1531:	
  2684                           ;lcd.c: 71:     }
  2685                           
  2686                           
  2687                           ;lcd.c: 85:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2688     030D  301A               	movlw	26
  2689     030E  00FC               	movwf	??_LCD_Init+1
  2690     030F  30F8               	movlw	248
  2691     0310  00FB               	movwf	??_LCD_Init
  2692     0311                     u2677:
  2693     0311  0BFB               	decfsz	??_LCD_Init,f
  2694     0312  2B11               	goto	u2677
  2695     0313  0BFC               	decfsz	??_LCD_Init+1,f
  2696     0314  2B11               	goto	u2677
  2697     0315  0000               	nop
  2698     0316                     l1533:
  2699                           
  2700                           ;lcd.c: 88:     LCD_Write(0x03);
  2701     0316  3003               	movlw	3
  2702     0317  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2703     031C                     l1535:
  2704                           
  2705                           ;lcd.c: 89:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2706     031C  3007               	movlw	7
  2707     031D  00FC               	movwf	??_LCD_Init+1
  2708     031E  307D               	movlw	125
  2709     031F  00FB               	movwf	??_LCD_Init
  2710     0320                     u2687:
  2711     0320  0BFB               	decfsz	??_LCD_Init,f
  2712     0321  2B20               	goto	u2687
  2713     0322  0BFC               	decfsz	??_LCD_Init+1,f
  2714     0323  2B20               	goto	u2687
  2715                           
  2716                           ;lcd.c: 90:     LCD_Write(0x03);
  2717     0324  3003               	movlw	3
  2718     0325  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2719     032A                     l1537:
  2720                           
  2721                           ;lcd.c: 91:     _delay((unsigned long)((16)*(4000000/4000.0)));
  2722     032A  3015               	movlw	21
  2723     032B  00FC               	movwf	??_LCD_Init+1
  2724     032C  30C6               	movlw	198
  2725     032D  00FB               	movwf	??_LCD_Init
  2726     032E                     u2697:
  2727     032E  0BFB               	decfsz	??_LCD_Init,f
  2728     032F  2B2E               	goto	u2697
  2729     0330  0BFC               	decfsz	??_LCD_Init+1,f
  2730     0331  2B2E               	goto	u2697
  2731     0332  0000               	nop
  2732     0333                     l1539:
  2733                           
  2734                           ;lcd.c: 92:     LCD_Write(0x03);
  2735     0333  3003               	movlw	3
  2736     0334  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2737     0339                     l1541:
  2738                           
  2739                           ;lcd.c: 95:     LCD_Write(0x02);
  2740     0339  3002               	movlw	2
  2741     033A  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2742     033F                     l1543:
  2743     033F  3002               	movlw	2
  2744     0340  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2745     0345                     l1545:
  2746     0345  3008               	movlw	8
  2747     0346  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2748     034B                     l1547:
  2749     034B  3000               	movlw	0
  2750     034C  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2751     0351                     l1549:
  2752     0351  3006               	movlw	6
  2753     0352  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2754     0357                     l1551:
  2755     0357  3008               	movlw	8
  2756     0358  00FD               	movwf	LCD_Init@cmd
  2757     0359                     l1553:
  2758     0359  157D               	bsf	LCD_Init@cmd,2
  2759     035A                     l1559:
  2760     035A  087D               	movf	LCD_Init@cmd,w
  2761     035B  00FB               	movwf	??_LCD_Init
  2762     035C  3004               	movlw	4
  2763     035D                     u1585:
  2764     035D  1003               	clrc
  2765     035E  0CFB               	rrf	??_LCD_Init,f
  2766     035F  3EFF               	addlw	-1
  2767     0360  1D03               	skipz
  2768     0361  2B5D               	goto	u1585
  2769     0362  087B               	movf	??_LCD_Init,w
  2770     0363  390F               	andlw	15
  2771     0364  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2772     0369  087D               	movf	LCD_Init@cmd,w
  2773     036A  390F               	andlw	15
  2774     036B  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2775     0370                     l399:	
  2776                           ;lcd.c: 105:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while 
      +                          ( 0 );
  2777                           
  2778     0370  3000               	movlw	0
  2779     0371  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2780     0376  3001               	movlw	1
  2781     0377  120A  118A  21EA  120A  118A  	fcall	_LCD_Write
  2782     037C                     l387:
  2783     037C  0008               	return
  2784     037D                     __end_of_LCD_Init:
  2785                           
  2786                           	psect	text12
  2787     01EA                     __ptext12:	
  2788 ;; *************** function _LCD_Write *****************
  2789 ;; Defined at:
  2790 ;;		line 41 in file "lcd.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  c               1    wreg     unsigned char 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  c               1    5[COMMON] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2804 ;;      Params:         0       0       0       0       0
  2805 ;;      Locals:         1       0       0       0       0
  2806 ;;      Temps:          2       0       0       0       0
  2807 ;;      Totals:         3       0       0       0       0
  2808 ;;Total ram usage:        3 bytes
  2809 ;; Hardware stack levels used: 1
  2810 ;; Hardware stack levels required when called: 1
  2811 ;; This function calls:
  2812 ;;		_LCD_Out
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;;		_pot_x
  2816 ;;		_pot_y
  2817 ;;		_dibujar_suelo
  2818 ;;		_LCD_Init
  2819 ;;		_LCD_cg_ram_addr
  2820 ;;		_disparar
  2821 ;;		_mover_nubes
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825     01EA                     _LCD_Write:	
  2826                           ;psect for function _LCD_Write
  2827                           
  2828                           
  2829                           ;incstack = 0
  2830                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2831                           ;LCD_Write@c stored from wreg
  2832     01EA  00F5               	movwf	LCD_Write@c
  2833     01EB                     l1455:
  2834                           
  2835                           ;lcd.c: 43:     *(lcd.PORT) &= ~(1 << lcd.RS);
  2836     01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2837     01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2838     01ED  0820               	movf	_lcd,w
  2839     01EE  0084               	movwf	4
  2840     01EF  1783               	bsf	3,7
  2841     01F0  1C21               	btfss	_lcd+1,0
  2842     01F1  1383               	bcf	3,7
  2843     01F2  3001               	movlw	1
  2844     01F3  00F3               	movwf	??_LCD_Write
  2845     01F4  0822               	movf	_lcd+2,w
  2846     01F5  3907               	andlw	7
  2847     01F6  3E01               	addlw	1
  2848     01F7  29FA               	goto	u1424
  2849     01F8                     u1425:
  2850     01F8  1003               	clrc
  2851     01F9  0DF3               	rlf	??_LCD_Write,f
  2852     01FA                     u1424:
  2853     01FA  3EFF               	addlw	-1
  2854     01FB  1D03               	skipz
  2855     01FC  29F8               	goto	u1425
  2856     01FD  0873               	movf	??_LCD_Write,w
  2857     01FE  3AFF               	xorlw	255
  2858     01FF  0580               	andwf	0,f
  2859     0200                     l1457:
  2860                           
  2861                           ;lcd.c: 44:     LCD_Out(c);
  2862     0200  0875               	movf	LCD_Write@c,w
  2863     0201  120A  118A  237D  120A  118A  	fcall	_LCD_Out
  2864     0206                     l1459:
  2865                           
  2866                           ;lcd.c: 46:     *(lcd.PORT) |= 1 << lcd.EN;
  2867     0206  1283               	bcf	3,5	;RP0=0, select bank0
  2868     0207  1303               	bcf	3,6	;RP1=0, select bank0
  2869     0208  0820               	movf	_lcd,w
  2870     0209  0084               	movwf	4
  2871     020A  1783               	bsf	3,7
  2872     020B  1C21               	btfss	_lcd+1,0
  2873     020C  1383               	bcf	3,7
  2874     020D  3001               	movlw	1
  2875     020E  00F3               	movwf	??_LCD_Write
  2876     020F  0C22               	rrf	_lcd+2,w
  2877     0210  00F4               	movwf	??_LCD_Write+1
  2878     0211  0CF4               	rrf	??_LCD_Write+1,f
  2879     0212  0C74               	rrf	??_LCD_Write+1,w
  2880     0213  3907               	andlw	7
  2881     0214  3E01               	addlw	1
  2882     0215  2A18               	goto	u1434
  2883     0216                     u1435:
  2884     0216  1003               	clrc
  2885     0217  0DF3               	rlf	??_LCD_Write,f
  2886     0218                     u1434:
  2887     0218  3EFF               	addlw	-1
  2888     0219  1D03               	skipz
  2889     021A  2A16               	goto	u1435
  2890     021B  0873               	movf	??_LCD_Write,w
  2891     021C  0480               	iorwf	0,f
  2892     021D                     l1461:
  2893                           
  2894                           ;lcd.c: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2895     021D  3006               	movlw	6
  2896     021E  00F4               	movwf	??_LCD_Write+1
  2897     021F  3030               	movlw	48
  2898     0220  00F3               	movwf	??_LCD_Write
  2899     0221                     u2707:
  2900     0221  0BF3               	decfsz	??_LCD_Write,f
  2901     0222  2A21               	goto	u2707
  2902     0223  0BF4               	decfsz	??_LCD_Write+1,f
  2903     0224  2A21               	goto	u2707
  2904     0225  0000               	nop
  2905     0226                     l1463:
  2906                           
  2907                           ;lcd.c: 48:     *(lcd.PORT) &= ~(1 << lcd.EN);
  2908     0226  1283               	bcf	3,5	;RP0=0, select bank0
  2909     0227  1303               	bcf	3,6	;RP1=0, select bank0
  2910     0228  0820               	movf	_lcd,w
  2911     0229  0084               	movwf	4
  2912     022A  1783               	bsf	3,7
  2913     022B  1C21               	btfss	_lcd+1,0
  2914     022C  1383               	bcf	3,7
  2915     022D  3001               	movlw	1
  2916     022E  00F3               	movwf	??_LCD_Write
  2917     022F  0C22               	rrf	_lcd+2,w
  2918     0230  00F4               	movwf	??_LCD_Write+1
  2919     0231  0CF4               	rrf	??_LCD_Write+1,f
  2920     0232  0C74               	rrf	??_LCD_Write+1,w
  2921     0233  3907               	andlw	7
  2922     0234  3E01               	addlw	1
  2923     0235  2A38               	goto	u1444
  2924     0236                     u1445:
  2925     0236  1003               	clrc
  2926     0237  0DF3               	rlf	??_LCD_Write,f
  2927     0238                     u1444:
  2928     0238  3EFF               	addlw	-1
  2929     0239  1D03               	skipz
  2930     023A  2A36               	goto	u1445
  2931     023B  0873               	movf	??_LCD_Write,w
  2932     023C  3AFF               	xorlw	255
  2933     023D  0580               	andwf	0,f
  2934     023E                     l378:
  2935     023E  0008               	return
  2936     023F                     __end_of_LCD_Write:
  2937                           
  2938                           	psect	text13
  2939     037D                     __ptext13:	
  2940 ;; *************** function _LCD_Out *****************
  2941 ;; Defined at:
  2942 ;;		line 9 in file "lcd.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  c               1    wreg     unsigned char 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  c               1    2[COMMON] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2956 ;;      Params:         0       0       0       0       0
  2957 ;;      Locals:         1       0       0       0       0
  2958 ;;      Temps:          2       0       0       0       0
  2959 ;;      Totals:         3       0       0       0       0
  2960 ;;Total ram usage:        3 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_LCD_Write
  2966 ;;		_LCD_putc
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970     037D                     _LCD_Out:	
  2971                           ;psect for function _LCD_Out
  2972                           
  2973                           
  2974                           ;incstack = 0
  2975                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  2976                           ;LCD_Out@c stored from wreg
  2977     037D  00F2               	movwf	LCD_Out@c
  2978     037E                     l1431:
  2979                           
  2980                           ;lcd.c: 11:     if ( c & 1 ){
  2981     037E  1C72               	btfss	LCD_Out@c,0
  2982     037F  2B81               	goto	u1301
  2983     0380  2B82               	goto	u1300
  2984     0381                     u1301:
  2985     0381  2B97               	goto	l1435
  2986     0382                     u1300:
  2987     0382                     l1433:
  2988                           
  2989                           ;lcd.c: 12:         *(lcd.PORT) |= 1 << lcd.D4;
  2990     0382  1283               	bcf	3,5	;RP0=0, select bank0
  2991     0383  1303               	bcf	3,6	;RP1=0, select bank0
  2992     0384  0820               	movf	_lcd,w
  2993     0385  0084               	movwf	4
  2994     0386  1783               	bsf	3,7
  2995     0387  1C21               	btfss	_lcd+1,0
  2996     0388  1383               	bcf	3,7
  2997     0389  3001               	movlw	1
  2998     038A  00F0               	movwf	??_LCD_Out
  2999     038B  0823               	movf	_lcd+3,w
  3000     038C  3907               	andlw	7
  3001     038D  3E01               	addlw	1
  3002     038E  2B91               	goto	u1314
  3003     038F                     u1315:
  3004     038F  1003               	clrc
  3005     0390  0DF0               	rlf	??_LCD_Out,f
  3006     0391                     u1314:
  3007     0391  3EFF               	addlw	-1
  3008     0392  1D03               	skipz
  3009     0393  2B8F               	goto	u1315
  3010     0394  0870               	movf	??_LCD_Out,w
  3011     0395  0480               	iorwf	0,f
  3012                           
  3013                           ;lcd.c: 13:     }
  3014     0396  2BAC               	goto	l1437
  3015     0397                     l1435:
  3016                           
  3017                           ;lcd.c: 15:          *(lcd.PORT) &= ~(1 << lcd.D4);
  3018     0397  1283               	bcf	3,5	;RP0=0, select bank0
  3019     0398  1303               	bcf	3,6	;RP1=0, select bank0
  3020     0399  0820               	movf	_lcd,w
  3021     039A  0084               	movwf	4
  3022     039B  1783               	bsf	3,7
  3023     039C  1C21               	btfss	_lcd+1,0
  3024     039D  1383               	bcf	3,7
  3025     039E  3001               	movlw	1
  3026     039F  00F0               	movwf	??_LCD_Out
  3027     03A0  0823               	movf	_lcd+3,w
  3028     03A1  3907               	andlw	7
  3029     03A2  3E01               	addlw	1
  3030     03A3  2BA6               	goto	u1324
  3031     03A4                     u1325:
  3032     03A4  1003               	clrc
  3033     03A5  0DF0               	rlf	??_LCD_Out,f
  3034     03A6                     u1324:
  3035     03A6  3EFF               	addlw	-1
  3036     03A7  1D03               	skipz
  3037     03A8  2BA4               	goto	u1325
  3038     03A9  0870               	movf	??_LCD_Out,w
  3039     03AA  3AFF               	xorlw	255
  3040     03AB  0580               	andwf	0,f
  3041     03AC                     l1437:
  3042                           
  3043                           ;lcd.c: 18:     if ( c & 2 ) {
  3044     03AC  1CF2               	btfss	LCD_Out@c,1
  3045     03AD  2BAF               	goto	u1331
  3046     03AE  2BB0               	goto	u1330
  3047     03AF                     u1331:
  3048     03AF  2BC6               	goto	l1441
  3049     03B0                     u1330:
  3050     03B0                     l1439:
  3051                           
  3052                           ;lcd.c: 19:         *(lcd.PORT) |= 1 << lcd.D5;
  3053     03B0  0820               	movf	_lcd,w
  3054     03B1  0084               	movwf	4
  3055     03B2  1783               	bsf	3,7
  3056     03B3  1C21               	btfss	_lcd+1,0
  3057     03B4  1383               	bcf	3,7
  3058     03B5  3001               	movlw	1
  3059     03B6  00F0               	movwf	??_LCD_Out
  3060     03B7  0C23               	rrf	_lcd+3,w
  3061     03B8  00F1               	movwf	??_LCD_Out+1
  3062     03B9  0CF1               	rrf	??_LCD_Out+1,f
  3063     03BA  0C71               	rrf	??_LCD_Out+1,w
  3064     03BB  3907               	andlw	7
  3065     03BC  3E01               	addlw	1
  3066     03BD  2BC0               	goto	u1344
  3067     03BE                     u1345:
  3068     03BE  1003               	clrc
  3069     03BF  0DF0               	rlf	??_LCD_Out,f
  3070     03C0                     u1344:
  3071     03C0  3EFF               	addlw	-1
  3072     03C1  1D03               	skipz
  3073     03C2  2BBE               	goto	u1345
  3074     03C3  0870               	movf	??_LCD_Out,w
  3075     03C4  0480               	iorwf	0,f
  3076                           
  3077                           ;lcd.c: 20:     }
  3078     03C5  2BDC               	goto	l1443
  3079     03C6                     l1441:
  3080                           
  3081                           ;lcd.c: 22:         *(lcd.PORT) &= ~(1 << lcd.D5);
  3082     03C6  0820               	movf	_lcd,w
  3083     03C7  0084               	movwf	4
  3084     03C8  1783               	bsf	3,7
  3085     03C9  1C21               	btfss	_lcd+1,0
  3086     03CA  1383               	bcf	3,7
  3087     03CB  3001               	movlw	1
  3088     03CC  00F0               	movwf	??_LCD_Out
  3089     03CD  0C23               	rrf	_lcd+3,w
  3090     03CE  00F1               	movwf	??_LCD_Out+1
  3091     03CF  0CF1               	rrf	??_LCD_Out+1,f
  3092     03D0  0C71               	rrf	??_LCD_Out+1,w
  3093     03D1  3907               	andlw	7
  3094     03D2  3E01               	addlw	1
  3095     03D3  2BD6               	goto	u1354
  3096     03D4                     u1355:
  3097     03D4  1003               	clrc
  3098     03D5  0DF0               	rlf	??_LCD_Out,f
  3099     03D6                     u1354:
  3100     03D6  3EFF               	addlw	-1
  3101     03D7  1D03               	skipz
  3102     03D8  2BD4               	goto	u1355
  3103     03D9  0870               	movf	??_LCD_Out,w
  3104     03DA  3AFF               	xorlw	255
  3105     03DB  0580               	andwf	0,f
  3106     03DC                     l1443:
  3107                           
  3108                           ;lcd.c: 25:     if ( c & 4 ) {
  3109     03DC  1D72               	btfss	LCD_Out@c,2
  3110     03DD  2BDF               	goto	u1361
  3111     03DE  2BE0               	goto	u1360
  3112     03DF                     u1361:
  3113     03DF  2BF3               	goto	l1447
  3114     03E0                     u1360:
  3115     03E0                     l1445:
  3116                           
  3117                           ;lcd.c: 26:         *(lcd.PORT) |= 1 << lcd.D6;
  3118     03E0  0820               	movf	_lcd,w
  3119     03E1  0084               	movwf	4
  3120     03E2  1783               	bsf	3,7
  3121     03E3  1C21               	btfss	_lcd+1,0
  3122     03E4  1383               	bcf	3,7
  3123     03E5  3001               	movlw	1
  3124     03E6  00F0               	movwf	??_LCD_Out
  3125     03E7  0824               	movf	_lcd+4,w
  3126     03E8  3907               	andlw	7
  3127     03E9  3E01               	addlw	1
  3128     03EA  2BED               	goto	u1374
  3129     03EB                     u1375:
  3130     03EB  1003               	clrc
  3131     03EC  0DF0               	rlf	??_LCD_Out,f
  3132     03ED                     u1374:
  3133     03ED  3EFF               	addlw	-1
  3134     03EE  1D03               	skipz
  3135     03EF  2BEB               	goto	u1375
  3136     03F0  0870               	movf	??_LCD_Out,w
  3137     03F1  0480               	iorwf	0,f
  3138                           
  3139                           ;lcd.c: 27:     }
  3140     03F2  2C06               	goto	l1449
  3141     03F3                     l1447:
  3142                           
  3143                           ;lcd.c: 29:         *(lcd.PORT) &= ~(1 << lcd.D6);
  3144     03F3  0820               	movf	_lcd,w
  3145     03F4  0084               	movwf	4
  3146     03F5  1783               	bsf	3,7
  3147     03F6  1C21               	btfss	_lcd+1,0
  3148     03F7  1383               	bcf	3,7
  3149     03F8  3001               	movlw	1
  3150     03F9  00F0               	movwf	??_LCD_Out
  3151     03FA  0824               	movf	_lcd+4,w
  3152     03FB  3907               	andlw	7
  3153     03FC  3E01               	addlw	1
  3154     03FD  2C00               	goto	u1384
  3155     03FE                     u1385:
  3156     03FE  1003               	clrc
  3157     03FF  0DF0               	rlf	??_LCD_Out,f
  3158     0400                     u1384:
  3159     0400  3EFF               	addlw	-1
  3160     0401  1D03               	skipz
  3161     0402  2BFE               	goto	u1385
  3162     0403  0870               	movf	??_LCD_Out,w
  3163     0404  3AFF               	xorlw	255
  3164     0405  0580               	andwf	0,f
  3165     0406                     l1449:
  3166                           
  3167                           ;lcd.c: 32:     if ( c & 8 ) {
  3168     0406  1DF2               	btfss	LCD_Out@c,3
  3169     0407  2C09               	goto	u1391
  3170     0408  2C0A               	goto	u1390
  3171     0409                     u1391:
  3172     0409  2C20               	goto	l1453
  3173     040A                     u1390:
  3174     040A                     l1451:
  3175                           
  3176                           ;lcd.c: 33:          *(lcd.PORT) |= 1 << lcd.D7;
  3177     040A  0820               	movf	_lcd,w
  3178     040B  0084               	movwf	4
  3179     040C  1783               	bsf	3,7
  3180     040D  1C21               	btfss	_lcd+1,0
  3181     040E  1383               	bcf	3,7
  3182     040F  3001               	movlw	1
  3183     0410  00F0               	movwf	??_LCD_Out
  3184     0411  0C24               	rrf	_lcd+4,w
  3185     0412  00F1               	movwf	??_LCD_Out+1
  3186     0413  0CF1               	rrf	??_LCD_Out+1,f
  3187     0414  0C71               	rrf	??_LCD_Out+1,w
  3188     0415  3907               	andlw	7
  3189     0416  3E01               	addlw	1
  3190     0417  2C1A               	goto	u1404
  3191     0418                     u1405:
  3192     0418  1003               	clrc
  3193     0419  0DF0               	rlf	??_LCD_Out,f
  3194     041A                     u1404:
  3195     041A  3EFF               	addlw	-1
  3196     041B  1D03               	skipz
  3197     041C  2C18               	goto	u1405
  3198     041D  0870               	movf	??_LCD_Out,w
  3199     041E  0480               	iorwf	0,f
  3200                           
  3201                           ;lcd.c: 34:     }
  3202     041F  2C36               	goto	l375
  3203     0420                     l1453:
  3204                           
  3205                           ;lcd.c: 36:          *(lcd.PORT) &= ~(1 << lcd.D7);
  3206     0420  0820               	movf	_lcd,w
  3207     0421  0084               	movwf	4
  3208     0422  1783               	bsf	3,7
  3209     0423  1C21               	btfss	_lcd+1,0
  3210     0424  1383               	bcf	3,7
  3211     0425  3001               	movlw	1
  3212     0426  00F0               	movwf	??_LCD_Out
  3213     0427  0C24               	rrf	_lcd+4,w
  3214     0428  00F1               	movwf	??_LCD_Out+1
  3215     0429  0CF1               	rrf	??_LCD_Out+1,f
  3216     042A  0C71               	rrf	??_LCD_Out+1,w
  3217     042B  3907               	andlw	7
  3218     042C  3E01               	addlw	1
  3219     042D  2C30               	goto	u1414
  3220     042E                     u1415:
  3221     042E  1003               	clrc
  3222     042F  0DF0               	rlf	??_LCD_Out,f
  3223     0430                     u1414:
  3224     0430  3EFF               	addlw	-1
  3225     0431  1D03               	skipz
  3226     0432  2C2E               	goto	u1415
  3227     0433  0870               	movf	??_LCD_Out,w
  3228     0434  3AFF               	xorlw	255
  3229     0435  0580               	andwf	0,f
  3230     0436                     l375:
  3231     0436  0008               	return
  3232     0437                     __end_of_LCD_Out:
  3233                           
  3234                           	psect	text14
  3235     00CA                     __ptext14:	
  3236 ;; *************** function _ADC_Init *****************
  3237 ;; Defined at:
  3238 ;;		line 125 in file "main.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		status,2
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3252 ;;      Params:         0       0       0       0       0
  3253 ;;      Locals:         0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0
  3255 ;;      Totals:         0       0       0       0       0
  3256 ;;Total ram usage:        0 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265     00CA                     _ADC_Init:	
  3266                           ;psect for function _ADC_Init
  3267                           
  3268     00CA                     l1509:	
  3269                           ;incstack = 0
  3270                           ; Regs used in _ADC_Init: [status,2]
  3271                           
  3272                           
  3273                           ;main.c: 126: 
  3274     00CA  3003               	movlw	3
  3275     00CB  1683               	bsf	3,5	;RP0=1, select bank3
  3276     00CC  1703               	bsf	3,6	;RP1=1, select bank3
  3277     00CD  0088               	movwf	8	;volatile
  3278     00CE                     l1511:
  3279                           
  3280                           ;main.c: 127:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  3281     00CE  0189               	clrf	9	;volatile
  3282     00CF                     l1513:
  3283                           
  3284                           ;main.c: 128:     LCD_putc(sentido_bob);
  3285     00CF  3080               	movlw	128
  3286     00D0  1683               	bsf	3,5	;RP0=1, select bank1
  3287     00D1  1303               	bcf	3,6	;RP1=0, select bank1
  3288     00D2  009F               	movwf	31	;volatile
  3289     00D3                     l1515:
  3290                           
  3291                           ;main.c: 129:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3292     00D3  3001               	movlw	1
  3293     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  3294     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  3295     00D6  009F               	movwf	31	;volatile
  3296     00D7                     l103:
  3297     00D7  0008               	return
  3298     00D8                     __end_of_ADC_Init:
  3299     0002                     ___latbits      equ	2
  3300     007E                     btemp           set	126	;btemp
  3301     007E                     wtemp0          set	126
  3302                           
  3303                           	psect	config
  3304                           
  3305                           ;Config register CONFIG1 @ 0x2007
  3306                           ;	Oscillator Selection bits
  3307                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  3308                           ;	Watchdog Timer Enable bit
  3309                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3310                           ;	Power-up Timer Enable bit
  3311                           ;	PWRTE = OFF, PWRT disabled
  3312                           ;	RE3/MCLR pin function select bit
  3313                           ;	MCLRE = 0x1, unprogrammed default
  3314                           ;	Code Protection bit
  3315                           ;	CP = OFF, Program memory code protection is disabled
  3316                           ;	Data Code Protection bit
  3317                           ;	CPD = OFF, Data memory code protection is disabled
  3318                           ;	Brown Out Reset Selection bits
  3319                           ;	BOREN = ON, BOR enabled
  3320                           ;	Internal External Switchover bit
  3321                           ;	IESO = 0x1, unprogrammed default
  3322                           ;	Fail-Safe Clock Monitor Enabled bit
  3323                           ;	FCMEN = 0x1, unprogrammed default
  3324                           ;	Low Voltage Programming Enable bit
  3325                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3326                           ;	In-Circuit Debugger Mode bit
  3327                           ;	DEBUG = 0x1, unprogrammed default
  3328     2007                     	org	8199
  3329     2007  2FF1               	dw	12273
  3330                           
  3331                           ;Config register CONFIG2 @ 0x2008
  3332                           ;	Brown-out Reset Selection bit
  3333                           ;	BOR4V = 0x1, unprogrammed default
  3334                           ;	Flash Program Memory Self Write Enable bits
  3335                           ;	WRT = OFF, Write protection off
  3336     2008                     	org	8200
  3337     2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    32
    Data        7
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    LCD_custom_char@x	PTR const unsigned char  size(1) Largest target is 8
		 -> bob(CODE[8]), bob_reves(CODE[8]), nube(CODE[8]), suelo(CODE[8]), 

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 
		 -> STR_5(CODE[2]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_custom_char
    _pot_y->_LCD_putrs
    _pot_x->_LCD_putrs
    _LCD_putrs->_LCD_putc
    _dibujar_suelo->_LCD_Write
    _dibujar_suelo->_LCD_putc
    _LCD_custom_char->_LCD_cg_ram_addr
    _LCD_ram_write->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_cg_ram_addr->_LCD_Write
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    _main->_pot_x

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2832
                                              6 BANK0      1     1      0
                           _ADC_Init
                           _LCD_Init
                          _LCD_Write
                    _LCD_custom_char
                           _LCD_putc
                       _checar_boton
                      _dibujar_suelo
                              _pot_x
                              _pot_y
 ---------------------------------------------------------------------------------
 (1) _pot_y                                                4     4      0     662
                                              9 COMMON     4     4      0
                           _ADC_Read
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (1) _pot_x                                                8     8      0     710
                                              9 COMMON     2     2      0
                                              0 BANK0      6     6      0
                           _ADC_Read
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (2) _LCD_putrs                                            3     2      1     269
                                              6 COMMON     3     2      1
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      29
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _dibujar_suelo                                        1     1      0     365
                                              6 COMMON     1     1      0
                          _LCD_Write
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (1) _checar_boton                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_custom_char                                      5     4      1     560
                                             11 COMMON     3     2      1
                                              0 BANK0      2     2      0
                    _LCD_cg_ram_addr
                      _LCD_ram_write
 ---------------------------------------------------------------------------------
 (2) _LCD_ram_write                                        2     2      0     203
                                              6 COMMON     2     2      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (3) _LCD_putc                                             3     3      0     174
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (2) _LCD_cg_ram_addr                                      5     5      0     203
                                              6 COMMON     5     5      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     216
                                              6 COMMON     8     3      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            3     3      0     145
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (4) _LCD_Out                                              3     3      0     116
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
   _LCD_custom_char
     _LCD_cg_ram_addr
       _LCD_Write
     _LCD_ram_write
       _LCD_putc
         _LCD_Out
   _LCD_putc
   _checar_boton
   _dibujar_suelo
     _LCD_Write
     _LCD_putc
   _pot_x
     _ADC_Read
     _LCD_Write
     _LCD_putc
     _LCD_putrs
       _LCD_putc
   _pot_y
     _ADC_Read
     _LCD_Write
     _LCD_putc
     _LCD_putrs

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      7      20     25.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      34      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Jun 25 12:55:15 2025

                           pc 0002                            l91 051D                            l92 0525  
                          fsr 0004          __end_of_checar_boton 0187                           l100 01E9  
                         l103 00D7                           l202 017C                           l106 01A6  
                         l205 0186                           l109 01B0                           l133 0736  
                         l128 0714                           l305 0115                           l403 02D0  
                         l139 0753                           l420 015F                           l156 07D6  
                         l180 05F2                           l157 07E7                           l423 00E6  
                         l415 0139                           l176 05C5                           l418 013B  
                         l196 0675                           l197 0686                           l286 00FA  
                         l375 0436                           l378 023E                           l387 037C  
                         l399 0370               LCD_Init@display 0076                           _bob 0021  
                         _lcd 0020                           fsr0 0004                           indf 0000  
             __end_of_LCD_Out 0437                          l1501 0116                          l1511 00CE  
                        l1431 037E                          l1503 0119                          l1513 00CF  
                        l1441 03C6                          l1433 0382                          l1521 02EE  
                        l1505 0126                          l1601 0687                          l1515 00D3  
                        l1451 040A                          l1443 03DC                          l1435 0397  
                        l1531 030D                          l1523 02F2                          l1507 012C  
                        l1611 06D3                          l1603 0693                          l1509 00CA  
                        l1453 0420                          l1445 03E0                          l1437 03AC  
                        l1461 021D                          l1541 0339                          l1533 0316  
                        l1525 02FC                          l1517 02D1                          l1701 0166  
                        l1621 0726                          l1613 06D9                          l1605 0698  
                        l1447 03F3                          l1439 03B0                          l1463 0226  
                        l1455 01EB                          l1551 0357                          l1543 033F  
                        l1535 031C                          l1527 0300                          l1519 02E2  
                        l1471 027A                          l1703 016B                          l1631 0747  
                        l1623 072C                          l1615 06F4                          l1607 06B3  
                        l1711 0437                          l1449 0406                          l1457 0200  
                        l1553 0359                          l1545 0345                          l1537 032A  
                        l1529 030A                          l1481 013B                          l1473 027E  
                        l1465 0240                          l1705 016D                          l1641 077A  
                        l1633 074C                          l1625 072F                          l1617 06FA  
                        l1609 06B8                          l1721 0463                          l1713 043E  
                        l1459 0206                          l1547 034B                          l1539 0333  
                        l1483 0158                          l1475 0296                          l1467 0254  
                        l1563 01B4                          l1707 0180                          l1491 018B  
                        l1651 07DE                          l1643 0795                          l1635 0755  
                        l1627 0739                          l1619 071B                          l1731 0489  
                        l1723 0469                          l1715 0441                          l1549 0351  
                        l1477 029D                          l1469 0263                          l1485 00D9  
                        l1565 01C0                          l1709 0185                          l1493 019A  
                        l1645 079B                          l1637 075A                          l1629 0742  
                        l1661 0569                          l1653 0538                          l1741 04BC  
                        l1733 048F                          l1725 0471                          l1717 0446  
                        l1559 035A                          l1479 02B8                          l1487 00DF  
                        l1575 01D2                          l1567 01C6                          l1495 01A3  
                        l1647 07B6                          l1639 0775                          l1671 05CC  
                        l1663 0584                          l1655 0542                          l1751 0503  
                        l1743 04C1                          l1735 0495                          l1727 0479  
                        l1719 045D                          l1577 01DF                          l1569 01CF  
                        l1497 01AA                          l1489 0188                          l1649 07BC  
                        l1681 05F0                          l1673 05D5                          l1665 058A  
                        l1657 0549                          l1753 052F                          l1745 04DC  
                        l1737 049A                          l1729 0481                          l1579 01E3  
                        l1595 0107                          l1587 00FA                          l1691 063A  
                        l1683 05F9                          l1675 05DC                          l1667 05A5  
                        l1659 0564                          l1747 04E2                          l1739 04A1  
                        l1597 010D                          l1589 0106                          l1693 0655  
                        l1685 0614                          l1677 05DF                          l1669 05AB  
                        l1749 04FD                          l1599 010F                          l1695 065B  
                        l1687 0619                          l1679 05E8                          l1697 067D  
                        l1689 0634                          l1699 0160                          STR_1 0029  
                        STR_2 0029                          u2000 065B                          u2001 065A  
                        u1300 0382                          u2020 0166                          u2100 04C1  
                        u1301 0381                          u2021 0165                          u2101 04C0  
                        u2030 016B                          u2031 016A                          u2015 065F  
                        u2040 0174                          u2120 04E2                          u2041 0172  
                        u2121 04E1                          u1330 03B0                          u1314 0391  
                        u2050 0175                          u1331 03AF                          u1315 038F  
                        u2115 04C5                          u1404 041A                          u1324 03A6  
                        u2060 0180                          u2140 0503                          u1405 0418  
                        u1325 03A4                          u2061 017F                          u2141 0502  
                        u1414 0430                          u2070 0185                          u1415 042E  
                        u2071 0184                          u2135 04E6                          u1360 03E0  
                        u1344 03C0                          u1424 01FA                          u1504 02CA  
                        u1600 01E9                          u2080 04A1                          u1361 03DF  
                        u1345 03BE                          u1425 01F8                          u1505 02C8  
                        u1601 01E8                          u2081 04A0                          u1354 03D6  
                        u1434 0218                          u1610 0115                          u1530 01AA  
                        u1355 03D4                          u1435 0216                          u1515 0145  
                        u1611 0114                          u1531 01A9                          u2155 0507  
                        u1444 0238                          u1540 0139                          u1700 0726  
                        u1620 0698                          u1445 0236                          u1525 0192  
                        u1541 0138                          u1701 0725                          u1621 0697  
                        u1390 040A                          u1374 03ED                          u1550 02EE  
                        u1454 024F                          u1710 072C                          u1391 0409  
                        u1375 03EB                          u1551 02ED                          u1455 024D  
                        u1711 072B                          u2095 04A5                          u1384 0400  
                        u1560 02FC                          u1800 07BC                          u1720 0742  
                        u1640 06B8                          u1385 03FE                          u1561 02FB  
                        u1465 0257                          u1801 07BB                          u1721 0741  
                        u1641 06B7                          u1570 030A                          u1474 0275  
                        u1730 0747                          u1571 0309                          u1555 02EA  
                        u1475 0273                          u1731 0746                          u1635 069C  
                        u1484 0290                          u1740 075A                          u1660 06D9  
                        u1900 05D5                          u1820 0549                          u1565 02F8  
                        u1485 028E                          u1741 0759                          u1661 06D8  
                        u1901 05D4                          u1821 0548                          u1494 02AF  
                        u1910 05DC                          u1575 0306                          u1495 02AD  
                        u2607 07E2                          u1815 07C0                          u1655 06BC  
                        u1911 05DB                          u1760 077A                          u1680 06FA  
                        u1920 05E8                          u1840 0569                          u1585 035D  
                        u2617 019E                          u1761 0779                          u1681 06F9  
                        u1921 05E7                          u1841 0568                          u1930 05F0  
                        u2707 0221                          u2627 01CA                          u1595 01B8  
                        u1755 075E                          u1675 06DD                          u1931 05EF  
                        u1835 054D                          u1780 079B                          u1940 05F9  
                        u1860 058A                          u2637 00E1                          u1781 079A  
                        u1941 05F8                          u1861 0589                          u2647 027C  
                        u1775 077E                          u1695 06FE                          u1855 056D  
                        u1960 0619                          u1880 05AB                          u2657 02B6  
                        u1961 0618                          u1881 05AA                          u2667 015A  
                        u1795 079F                          u1955 05FD                          u1875 058E  
                        u1980 063A                          u2677 0311                          u2597 0681  
                        u1981 0639                          u2687 0320                          u1975 061D  
                        u1895 05AF                          u2697 032E                          u1995 063E  
                        _main 0437                          _nube 0009                          btemp 007E  
            __end_of_ADC_Init 00D8              __end_of_ADC_Read 01B1             LCD_ram_write@data 0077  
                        start 0000                   LCD_Init@cmd 007D              __end_of_LCD_Init 037D  
            __end_of_LCD_putc 02D1                         ?_main 0070                         _ANSEL 0188  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088             ??_LCD_cg_ram_addr 0076                         _nubes 002E  
                       _pos_x 0026                         _pos_y 0025                         _pot_x 0687  
                       _pot_y 0538                         _suelo 0011                         pclath 000A  
                       status 0003                         wtemp0 007E  checar_boton@boton_presionado 0033  
             __initialization 07E8                  __end_of_main 0538                  __end_of_nube 0011  
               _LCD_ram_write 00D8                        ??_main 002D           LCD_cg_ram_addr@addr 007A  
                   ??_LCD_Out 0070             __end_of_LCD_Write 023F             __end_of_LCD_putrs 013A  
                      _ADCON0 001F                        _ADCON1 009F                        _ADRESH 001E  
                      _ADRESL 009E                        ?_pot_x 0070                        ?_pot_y 0070  
                      _ANSELH 0189                ?_LCD_ram_write 0070               ADC_Read@channel 0074  
                   ?_ADC_Init 0070                     ?_ADC_Read 0070                  _checar_boton 0160  
     __end_of__initialization 07FC                     ?_LCD_Init 0076         __end_of_dibujar_suelo 0116  
                   ?_LCD_putc 0070                __pcstackCOMMON 0070                  __pidataBANK0 00C3  
               __end_of_pot_x 07E8                 __end_of_pot_y 0687                 __end_of_suelo 0019  
                   LCD_putc@c 0075                    ??_ADC_Init 0070                    ??_ADC_Read 0072  
                     ??_pot_x 0079                       ??_pot_y 0079                    __pbssBANK0 002E  
                  ??_LCD_Init 007B             ??_LCD_custom_char 007C                    ??_LCD_putc 0073  
                  __pmaintext 0437               ??_LCD_ram_write 0076               _LCD_cg_ram_addr 013A  
                     _LCD_Out 037D                    __stringtab 0003             __end_of_bob_reves 0021  
            LCD_custom_char@i 0028              LCD_custom_char@x 007B                       __ptext1 0538  
                     __ptext2 0687                       __ptext3 0116                       __ptext4 0187  
                     __ptext5 00FA                       __ptext6 0160                       __ptext7 01B1  
                     __ptext8 00D8                       __ptext9 023F                dibujar_suelo@i 0076  
                   _LCD_Write 01EA          end_of_initialization 07FC                     _LCD_putrs 0116  
     __end_of_LCD_cg_ram_addr 0160                     _PORTAbits 0005                     _TRISAbits 0085  
                  ?_LCD_Write 0070                    ?_LCD_putrs 0076                    LCD_Write@c 0075  
             _LCD_custom_char 01B1           start_initialization 07E8                   __end_of_bob 0029  
                  LCD_putrs@a 0076                    LCD_putrs@i 0077              ?_LCD_cg_ram_addr 0070  
                  init_fetch0 00E7                   __pdataBANK0 0020                      ?_LCD_Out 0070  
                   ___latbits 0002                 __pcstackBANK0 0027                      LCD_Out@c 0072  
                 ??_LCD_Write 0073            LCD_custom_char@pos 0027                   ??_LCD_putrs 0077  
                   _bob_reves 0019         __end_of_LCD_ram_write 00E7       __end_of_LCD_custom_char 01EA  
                   __pstrings 0003                      _ADC_Init 00CA                      _ADC_Read 0187  
                    _LCD_Init 02D1                 _dibujar_suelo 00FA                      _LCD_putc 023F  
                   _pot_x$191 0027                     _pot_x$192 0029                      _GO_nDONE 00F9  
                  pot_x@adc_x 002B                    pot_y@adc_y 007B                   __stringbase 0008  
               ?_checar_boton 0070                ?_dibujar_suelo 0070              ?_LCD_custom_char 007B  
          __end_of__stringtab 0009                      __ptext10 013A                      __ptext11 02D1  
                    __ptext12 01EA                      __ptext13 037D                      __ptext14 00CA  
              ??_checar_boton 0070                      init_ram0 00EB               ??_dibujar_suelo 0076  
                   stringcode 0003                   _sentido_bob 0031                      stringdir 0003  
                    stringtab 0003  
