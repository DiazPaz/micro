

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 09 17:48:13 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 26/03/2025 GMT
    15                           ; 
    16                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     008F                     OSCCON          equ	143	;# 
   101     0090                     OSCTUNE         equ	144	;# 
   102     0091                     SSPCON2         equ	145	;# 
   103     0092                     PR2             equ	146	;# 
   104     0093                     SSPADD          equ	147	;# 
   105     0093                     SSPMSK          equ	147	;# 
   106     0093                     MSK             equ	147	;# 
   107     0094                     SSPSTAT         equ	148	;# 
   108     0095                     WPUB            equ	149	;# 
   109     0096                     IOCB            equ	150	;# 
   110     0097                     VRCON           equ	151	;# 
   111     0098                     TXSTA           equ	152	;# 
   112     0099                     SPBRG           equ	153	;# 
   113     009A                     SPBRGH          equ	154	;# 
   114     009B                     PWM1CON         equ	155	;# 
   115     009C                     ECCPAS          equ	156	;# 
   116     009D                     PSTRCON         equ	157	;# 
   117     009E                     ADRESL          equ	158	;# 
   118     009F                     ADCON1          equ	159	;# 
   119     0105                     WDTCON          equ	261	;# 
   120     0107                     CM1CON0         equ	263	;# 
   121     0108                     CM2CON0         equ	264	;# 
   122     0109                     CM2CON1         equ	265	;# 
   123     010C                     EEDATA          equ	268	;# 
   124     010C                     EEDAT           equ	268	;# 
   125     010D                     EEADR           equ	269	;# 
   126     010E                     EEDATH          equ	270	;# 
   127     010F                     EEADRH          equ	271	;# 
   128     0185                     SRCON           equ	389	;# 
   129     0187                     BAUDCTL         equ	391	;# 
   130     0188                     ANSEL           equ	392	;# 
   131     0189                     ANSELH          equ	393	;# 
   132     018C                     EECON1          equ	396	;# 
   133     018D                     EECON2          equ	397	;# 
   134     0000                     INDF            equ	0	;# 
   135     0001                     TMR0            equ	1	;# 
   136     0002                     PCL             equ	2	;# 
   137     0003                     STATUS          equ	3	;# 
   138     0004                     FSR             equ	4	;# 
   139     0005                     PORTA           equ	5	;# 
   140     0006                     PORTB           equ	6	;# 
   141     0007                     PORTC           equ	7	;# 
   142     0008                     PORTD           equ	8	;# 
   143     0009                     PORTE           equ	9	;# 
   144     000A                     PCLATH          equ	10	;# 
   145     000B                     INTCON          equ	11	;# 
   146     000C                     PIR1            equ	12	;# 
   147     000D                     PIR2            equ	13	;# 
   148     000E                     TMR1            equ	14	;# 
   149     000E                     TMR1L           equ	14	;# 
   150     000F                     TMR1H           equ	15	;# 
   151     0010                     T1CON           equ	16	;# 
   152     0011                     TMR2            equ	17	;# 
   153     0012                     T2CON           equ	18	;# 
   154     0013                     SSPBUF          equ	19	;# 
   155     0014                     SSPCON          equ	20	;# 
   156     0015                     CCPR1           equ	21	;# 
   157     0015                     CCPR1L          equ	21	;# 
   158     0016                     CCPR1H          equ	22	;# 
   159     0017                     CCP1CON         equ	23	;# 
   160     0018                     RCSTA           equ	24	;# 
   161     0019                     TXREG           equ	25	;# 
   162     001A                     RCREG           equ	26	;# 
   163     001B                     CCPR2           equ	27	;# 
   164     001B                     CCPR2L          equ	27	;# 
   165     001C                     CCPR2H          equ	28	;# 
   166     001D                     CCP2CON         equ	29	;# 
   167     001E                     ADRESH          equ	30	;# 
   168     001F                     ADCON0          equ	31	;# 
   169     0081                     OPTION_REG      equ	129	;# 
   170     0085                     TRISA           equ	133	;# 
   171     0086                     TRISB           equ	134	;# 
   172     0087                     TRISC           equ	135	;# 
   173     0088                     TRISD           equ	136	;# 
   174     0089                     TRISE           equ	137	;# 
   175     008C                     PIE1            equ	140	;# 
   176     008D                     PIE2            equ	141	;# 
   177     008E                     PCON            equ	142	;# 
   178     008F                     OSCCON          equ	143	;# 
   179     0090                     OSCTUNE         equ	144	;# 
   180     0091                     SSPCON2         equ	145	;# 
   181     0092                     PR2             equ	146	;# 
   182     0093                     SSPADD          equ	147	;# 
   183     0093                     SSPMSK          equ	147	;# 
   184     0093                     MSK             equ	147	;# 
   185     0094                     SSPSTAT         equ	148	;# 
   186     0095                     WPUB            equ	149	;# 
   187     0096                     IOCB            equ	150	;# 
   188     0097                     VRCON           equ	151	;# 
   189     0098                     TXSTA           equ	152	;# 
   190     0099                     SPBRG           equ	153	;# 
   191     009A                     SPBRGH          equ	154	;# 
   192     009B                     PWM1CON         equ	155	;# 
   193     009C                     ECCPAS          equ	156	;# 
   194     009D                     PSTRCON         equ	157	;# 
   195     009E                     ADRESL          equ	158	;# 
   196     009F                     ADCON1          equ	159	;# 
   197     0105                     WDTCON          equ	261	;# 
   198     0107                     CM1CON0         equ	263	;# 
   199     0108                     CM2CON0         equ	264	;# 
   200     0109                     CM2CON1         equ	265	;# 
   201     010C                     EEDATA          equ	268	;# 
   202     010C                     EEDAT           equ	268	;# 
   203     010D                     EEADR           equ	269	;# 
   204     010E                     EEDATH          equ	270	;# 
   205     010F                     EEADRH          equ	271	;# 
   206     0185                     SRCON           equ	389	;# 
   207     0187                     BAUDCTL         equ	391	;# 
   208     0188                     ANSEL           equ	392	;# 
   209     0189                     ANSELH          equ	393	;# 
   210     018C                     EECON1          equ	396	;# 
   211     018D                     EECON2          equ	397	;# 
   212                           
   213                           	psect	idataBANK0
   214     071F                     __pidataBANK0:
   215                           
   216                           ;initializer for _digito
   217     071F  343F               	retlw	63
   218     0720  3406               	retlw	6
   219     0721  345B               	retlw	91
   220     0722  344F               	retlw	79
   221     0723  3466               	retlw	102
   222     0724  346D               	retlw	109
   223     0725  347D               	retlw	125
   224     0726  3407               	retlw	7
   225     0727  347F               	retlw	127
   226     0728  346F               	retlw	111
   227     0006                     _PORTBbits      set	6
   228     0008                     _PORTD          set	8
   229     0088                     _TRISD          set	136
   230     0086                     _TRISB          set	134
   231     0081                     _OPTION_REG     set	129
   232     0189                     _ANSELH         set	393
   233                           
   234                           	psect	cinit
   235     07EE                     start_initialization:	
   236                           ; #config settings
   237                           
   238     07EE                     __initialization:
   239                           
   240                           ; Initialize objects allocated to BANK0
   241     07EE  1383               	bcf	3,7	;select IRP bank0
   242     07EF  302A               	movlw	low (__pdataBANK0+10)
   243     07F0  00FD               	movwf	btemp+-1
   244     07F1  3007               	movlw	high __pidataBANK0
   245     07F2  00FE               	movwf	btemp
   246     07F3  301F               	movlw	low __pidataBANK0
   247     07F4  00FF               	movwf	btemp+1
   248     07F5  3020               	movlw	low __pdataBANK0
   249     07F6  0084               	movwf	4
   250     07F7  120A  118A  272D  120A  118A  	fcall	init_ram0
   251     07FC                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254     07FC                     __end_of__initialization:
   255     07FC  0183               	clrf	3
   256     07FD  120A  118A  2F74   	ljmp	_main	;jump to C main() function
   257                           
   258                           	psect	dataBANK0
   259     0020                     __pdataBANK0:
   260     0020                     _digito:
   261     0020                     	ds	10
   262                           
   263                           	psect	inittext
   264     0729                     init_fetch0:	
   265                           ;	Called with low address in FSR and high address in W
   266                           
   267     0729  087E               	movf	btemp,w
   268     072A  008A               	movwf	10
   269     072B  087F               	movf	btemp+1,w
   270     072C  0082               	movwf	2
   271     072D                     init_ram0:	
   272                           ;Called with:
   273                           ;	high address of idata address in btemp 
   274                           ;	low address of idata address in btemp+1 
   275                           ;	low address of data in FSR
   276                           ;	high address + 1 of data in btemp-1
   277                           
   278     072D  120A  118A  2729  120A  118A  	fcall	init_fetch0
   279     0732  0080               	movwf	0
   280     0733  0A84               	incf	4,f
   281     0734  0804               	movf	4,w
   282     0735  067D               	xorwf	btemp+-1,w
   283     0736  1903               	btfsc	3,2
   284     0737  3400               	retlw	0
   285     0738  0AFF               	incf	btemp+1,f
   286     0739  1903               	btfsc	3,2
   287     073A  0AFE               	incf	btemp,f
   288     073B  2F2D               	goto	init_ram0
   289                           
   290                           	psect	cstackCOMMON
   291     0070                     __pcstackCOMMON:
   292     0070                     ?_main:
   293     0070                     ?___lwmod:	
   294                           ; 1 bytes @ 0x0
   295                           
   296     0070                     ___lwmod@divisor:	
   297                           ; 2 bytes @ 0x0
   298                           
   299                           
   300                           ; 2 bytes @ 0x0
   301     0070                     	ds	2
   302     0072                     ___lwmod@dividend:
   303                           
   304                           ; 2 bytes @ 0x2
   305     0072                     	ds	2
   306     0074                     ___lwmod@counter:
   307     0074                     ??___lwmod:	
   308                           ; 1 bytes @ 0x4
   309                           
   310                           
   311                           ; 1 bytes @ 0x4
   312     0074                     	ds	1
   313     0075                     ??_main:
   314                           
   315                           ; 1 bytes @ 0x5
   316     0075                     	ds	2
   317     0077                     main@aux1:
   318                           
   319                           ; 2 bytes @ 0x7
   320     0077                     	ds	2
   321     0079                     main@aux2:
   322                           
   323                           ; 2 bytes @ 0x9
   324     0079                     	ds	2
   325     007B                     main@cont:
   326                           
   327                           ; 2 bytes @ 0xB
   328     007B                     	ds	2
   329                           
   330                           	psect	maintext
   331     0774                     __pmaintext:	
   332 ;;
   333 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   334 ;;
   335 ;; *************** function _main *****************
   336 ;; Defined at:
   337 ;;		line 46 in file "main.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;  aux2            2    9[COMMON] unsigned int 
   342 ;;  aux1            2    7[COMMON] unsigned int 
   343 ;;  cont            2   11[COMMON] unsigned int 
   344 ;;  c               2    0        unsigned int 
   345 ;;  b               2    0        unsigned int 
   346 ;;  a               2    0        unsigned int 
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : B00/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   356 ;;      Params:         0       0       0       0       0
   357 ;;      Locals:         6       0       0       0       0
   358 ;;      Temps:          2       0       0       0       0
   359 ;;      Totals:         8       0       0       0       0
   360 ;;Total ram usage:        8 bytes
   361 ;; Hardware stack levels required when called: 1
   362 ;; This function calls:
   363 ;;		___lwmod
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369     0774                     _main:	
   370                           ;psect for function _main
   371                           
   372     0774                     l658:	
   373                           ;incstack = 0
   374                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   375                           
   376                           
   377                           ;main.c: 49:                 cont--;
   378     0774  1683               	bsf	3,5	;RP0=1, select bank3
   379     0775  1703               	bsf	3,6	;RP1=1, select bank3
   380     0776  0189               	clrf	9	;volatile
   381     0777                     l660:
   382                           
   383                           ;main.c: 52:             while(!PORTBbits.RB1);
   384     0777  307F               	movlw	127
   385     0778  1683               	bsf	3,5	;RP0=1, select bank1
   386     0779  1303               	bcf	3,6	;RP1=0, select bank1
   387     077A  0581               	andwf	1,f	;volatile
   388     077B                     l662:
   389                           
   390                           ;main.c: 55:         cont %= 10;
   391     077B  30FF               	movlw	255
   392     077C  0086               	movwf	6	;volatile
   393     077D                     l664:
   394                           
   395                           ;main.c: 56:         PORTD = digito[cont];
   396     077D  0188               	clrf	8	;volatile
   397     077E                     l666:
   398                           
   399                           ;main.c: 57: 
   400     077E  1283               	bcf	3,5	;RP0=0, select bank0
   401     077F  1303               	bcf	3,6	;RP1=0, select bank0
   402     0780  0188               	clrf	8	;volatile
   403     0781                     l668:
   404                           
   405                           ;main.c: 60: }
   406     0781  01FB               	clrf	main@cont
   407     0782  01FC               	clrf	main@cont+1
   408     0783                     l670:
   409     0783                     l672:
   410     0783                     l674:
   411     0783                     l21:
   412     0783  1003               	clrc
   413     0784  1283               	bcf	3,5	;RP0=0, select bank0
   414     0785  1303               	bcf	3,6	;RP1=0, select bank0
   415     0786  1C06               	btfss	6,0	;volatile
   416     0787  1403               	setc
   417     0788  3000               	movlw	0
   418     0789  1803               	skipnc
   419     078A  3001               	movlw	1
   420     078B  00F5               	movwf	??_main
   421     078C  01F6               	clrf	??_main+1
   422     078D  0875               	movf	??_main,w
   423     078E  00F7               	movwf	main@aux1
   424     078F  0876               	movf	??_main+1,w
   425     0790  00F8               	movwf	main@aux1+1
   426     0791  1003               	clrc
   427     0792  1C86               	btfss	6,1	;volatile
   428     0793  1403               	setc
   429     0794  3000               	movlw	0
   430     0795  1803               	skipnc
   431     0796  3001               	movlw	1
   432     0797  00F5               	movwf	??_main
   433     0798  01F6               	clrf	??_main+1
   434     0799  0875               	movf	??_main,w
   435     079A  00F9               	movwf	main@aux2
   436     079B  0876               	movf	??_main+1,w
   437     079C  00FA               	movwf	main@aux2+1
   438     079D                     l676:
   439     079D  0377               	decf	main@aux1,w
   440     079E  0478               	iorwf	main@aux1+1,w
   441     079F  1D03               	btfss	3,2
   442     07A0  2FA2               	goto	u181
   443     07A1  2FA3               	goto	u180
   444     07A2                     u181:
   445     07A2  2FAD               	goto	l680
   446     07A3                     u180:
   447     07A3                     l678:
   448     07A3  3001               	movlw	1
   449     07A4  07FB               	addwf	main@cont,f
   450     07A5  1803               	skipnc
   451     07A6  0AFC               	incf	main@cont+1,f
   452     07A7  3000               	movlw	0
   453     07A8  07FC               	addwf	main@cont+1,f
   454     07A9                     l23:
   455     07A9  1C06               	btfss	6,0	;volatile
   456     07AA  2FAC               	goto	u191
   457     07AB  2FAD               	goto	u190
   458     07AC                     u191:
   459     07AC  2FA9               	goto	l23
   460     07AD                     u190:
   461     07AD                     l680:
   462     07AD  0379               	decf	main@aux2,w
   463     07AE  047A               	iorwf	main@aux2+1,w
   464     07AF  1D03               	btfss	3,2
   465     07B0  2FB2               	goto	u201
   466     07B1  2FB3               	goto	u200
   467     07B2                     u201:
   468     07B2  2FC8               	goto	l688
   469     07B3                     u200:
   470     07B3                     l682:
   471     07B3  087B               	movf	main@cont,w
   472     07B4  047C               	iorwf	main@cont+1,w
   473     07B5  1903               	btfsc	3,2
   474     07B6  2FB8               	goto	u211
   475     07B7  2FB9               	goto	u210
   476     07B8                     u211:
   477     07B8  2FC0               	goto	l686
   478     07B9                     u210:
   479     07B9                     l684:
   480     07B9  3001               	movlw	1
   481     07BA  02FB               	subwf	main@cont,f
   482     07BB  3000               	movlw	0
   483     07BC  1C03               	skipc
   484     07BD  03FC               	decf	main@cont+1,f
   485     07BE  02FC               	subwf	main@cont+1,f
   486     07BF  2FC4               	goto	l29
   487     07C0                     l686:
   488     07C0  3009               	movlw	9
   489     07C1  00FB               	movwf	main@cont
   490     07C2  3000               	movlw	0
   491     07C3  00FC               	movwf	main@cont+1
   492     07C4                     l29:
   493     07C4  1C86               	btfss	6,1	;volatile
   494     07C5  2FC7               	goto	u221
   495     07C6  2FC8               	goto	u220
   496     07C7                     u221:
   497     07C7  2FC4               	goto	l29
   498     07C8                     u220:
   499     07C8                     l688:
   500     07C8  300A               	movlw	10
   501     07C9  00F0               	movwf	___lwmod@divisor
   502     07CA  3000               	movlw	0
   503     07CB  00F1               	movwf	___lwmod@divisor+1
   504     07CC  087C               	movf	main@cont+1,w
   505     07CD  00F3               	movwf	___lwmod@dividend+1
   506     07CE  087B               	movf	main@cont,w
   507     07CF  00F2               	movwf	___lwmod@dividend
   508     07D0  120A  118A  273C  120A  118A  	fcall	___lwmod
   509     07D5  0871               	movf	?___lwmod+1,w
   510     07D6  00FC               	movwf	main@cont+1
   511     07D7  0870               	movf	?___lwmod,w
   512     07D8  00FB               	movwf	main@cont
   513     07D9                     l690:
   514     07D9  087B               	movf	main@cont,w
   515     07DA  3E20               	addlw	(low (_digito| 0))& (0+255)
   516     07DB  0084               	movwf	4
   517     07DC  1383               	bcf	3,7	;select IRP bank0
   518     07DD  0800               	movf	0,w
   519     07DE  1283               	bcf	3,5	;RP0=0, select bank0
   520     07DF  1303               	bcf	3,6	;RP1=0, select bank0
   521     07E0  0088               	movwf	8	;volatile
   522     07E1                     l692:
   523     07E1  301A               	movlw	26
   524     07E2  00F6               	movwf	??_main+1
   525     07E3  30F8               	movlw	248
   526     07E4  00F5               	movwf	??_main
   527     07E5                     u237:
   528     07E5  0BF5               	decfsz	??_main,f
   529     07E6  2FE5               	goto	u237
   530     07E7  0BF6               	decfsz	??_main+1,f
   531     07E8  2FE5               	goto	u237
   532     07E9  0000               	nop
   533     07EA  2F83               	goto	l21
   534     07EB  120A  118A  2800   	ljmp	start
   535     07EE                     __end_of_main:
   536                           
   537                           	psect	text1
   538     073C                     __ptext1:	
   539 ;; *************** function ___lwmod *****************
   540 ;; Defined at:
   541 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;  divisor         2    0[COMMON] unsigned int 
   544 ;;  dividend        2    2[COMMON] unsigned int 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  counter         1    4[COMMON] unsigned char 
   547 ;; Return value:  Size  Location     Type
   548 ;;                  2    0[COMMON] unsigned int 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         4       0       0       0       0
   557 ;;      Locals:         1       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0
   559 ;;      Totals:         5       0       0       0       0
   560 ;;Total ram usage:        5 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569     073C                     ___lwmod:	
   570                           ;psect for function ___lwmod
   571                           
   572     073C                     l636:	
   573                           ;incstack = 0
   574                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   575                           
   576     073C  0870               	movf	___lwmod@divisor,w
   577     073D  0471               	iorwf	___lwmod@divisor+1,w
   578     073E  1903               	btfsc	3,2
   579     073F  2F41               	goto	u121
   580     0740  2F42               	goto	u120
   581     0741                     u121:
   582     0741  2F6F               	goto	l654
   583     0742                     u120:
   584     0742                     l638:
   585     0742  3001               	movlw	1
   586     0743  00F4               	movwf	___lwmod@counter
   587     0744  2F4E               	goto	l644
   588     0745                     l640:
   589     0745  3001               	movlw	1
   590     0746                     u135:
   591     0746  1003               	clrc
   592     0747  0DF0               	rlf	___lwmod@divisor,f
   593     0748  0DF1               	rlf	___lwmod@divisor+1,f
   594     0749  3EFF               	addlw	-1
   595     074A  1D03               	skipz
   596     074B  2F46               	goto	u135
   597     074C                     l642:
   598     074C  3001               	movlw	1
   599     074D  07F4               	addwf	___lwmod@counter,f
   600     074E                     l644:
   601     074E  1FF1               	btfss	___lwmod@divisor+1,7
   602     074F  2F51               	goto	u141
   603     0750  2F52               	goto	u140
   604     0751                     u141:
   605     0751  2F45               	goto	l640
   606     0752                     u140:
   607     0752                     l646:
   608     0752  0871               	movf	___lwmod@divisor+1,w
   609     0753  0273               	subwf	___lwmod@dividend+1,w
   610     0754  1D03               	skipz
   611     0755  2F58               	goto	u155
   612     0756  0870               	movf	___lwmod@divisor,w
   613     0757  0272               	subwf	___lwmod@dividend,w
   614     0758                     u155:
   615     0758  1C03               	skipc
   616     0759  2F5B               	goto	u151
   617     075A  2F5C               	goto	u150
   618     075B                     u151:
   619     075B  2F62               	goto	l650
   620     075C                     u150:
   621     075C                     l648:
   622     075C  0870               	movf	___lwmod@divisor,w
   623     075D  02F2               	subwf	___lwmod@dividend,f
   624     075E  0871               	movf	___lwmod@divisor+1,w
   625     075F  1C03               	skipc
   626     0760  03F3               	decf	___lwmod@dividend+1,f
   627     0761  02F3               	subwf	___lwmod@dividend+1,f
   628     0762                     l650:
   629     0762  3001               	movlw	1
   630     0763                     u165:
   631     0763  1003               	clrc
   632     0764  0CF1               	rrf	___lwmod@divisor+1,f
   633     0765  0CF0               	rrf	___lwmod@divisor,f
   634     0766  3EFF               	addlw	-1
   635     0767  1D03               	skipz
   636     0768  2F63               	goto	u165
   637     0769                     l652:
   638     0769  3001               	movlw	1
   639     076A  02F4               	subwf	___lwmod@counter,f
   640     076B  1D03               	btfss	3,2
   641     076C  2F6E               	goto	u171
   642     076D  2F6F               	goto	u170
   643     076E                     u171:
   644     076E  2F52               	goto	l646
   645     076F                     u170:
   646     076F                     l654:
   647     076F  0873               	movf	___lwmod@dividend+1,w
   648     0770  00F1               	movwf	?___lwmod+1
   649     0771  0872               	movf	___lwmod@dividend,w
   650     0772  00F0               	movwf	?___lwmod
   651     0773                     l410:
   652     0773  0008               	return
   653     0774                     __end_of___lwmod:
   654     0002                     ___latbits      equ	2
   655     007E                     btemp           set	126	;btemp
   656     007E                     wtemp0          set	126
   657                           
   658                           	psect	config
   659                           
   660                           ;Config register CONFIG1 @ 0x2007
   661                           ;	Oscillator Selection bits
   662                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   663                           ;	Watchdog Timer Enable bit
   664                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   665                           ;	Power-up Timer Enable bit
   666                           ;	PWRTE = OFF, PWRT disabled
   667                           ;	RE3/MCLR pin function select bit
   668                           ;	MCLRE = 0x1, unprogrammed default
   669                           ;	Code Protection bit
   670                           ;	CP = OFF, Program memory code protection is disabled
   671                           ;	Data Code Protection bit
   672                           ;	CPD = OFF, Data memory code protection is disabled
   673                           ;	Brown Out Reset Selection bits
   674                           ;	BOREN = ON, BOR enabled
   675                           ;	Internal External Switchover bit
   676                           ;	IESO = 0x1, unprogrammed default
   677                           ;	Fail-Safe Clock Monitor Enabled bit
   678                           ;	FCMEN = 0x1, unprogrammed default
   679                           ;	Low Voltage Programming Enable bit
   680                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   681                           ;	In-Circuit Debugger Mode bit
   682                           ;	DEBUG = 0x1, unprogrammed default
   683     2007                     	org	8199
   684     2007  2FF1               	dw	12273
   685                           
   686                           ;Config register CONFIG2 @ 0x2008
   687                           ;	Brown-out Reset Selection bit
   688                           ;	BOR4V = 0x1, unprogrammed default
   689                           ;	Flash Program Memory Self Write Enable bits
   690                           ;	WRT = OFF, Write protection off
   691     2008                     	org	8200
   692     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     281
                                              5 COMMON     8     8      0
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     161
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwmod

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0      10     12.5%
BITBANK0            80      0       0      0.0%
COMMON              14     13      13     92.9%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      23      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 09 17:48:13 2025

                      pc 0002                       l21 0783                       l23 07A9  
                     l29 07C4                       fsr 0004                      l410 0773  
                    l640 0745                      l650 0762                      l642 074C  
                    l652 0769                      l644 074E                      l636 073C  
                    l660 0777                      l646 0752                      l638 0742  
                    l654 076F                      l670 0783                      l662 077B  
                    l648 075C                      l680 07AD                      l672 0783  
                    l664 077D                      l690 07D9                      l682 07B3  
                    l674 0783                      l666 077E                      l658 0774  
                    l692 07E1                      l684 07B9                      l676 079D  
                    l668 0781                      l686 07C0                      l678 07A3  
                    l688 07C8                      u120 0742                      u200 07B3  
                    u121 0741                      u201 07B2                      u210 07B9  
                    u211 07B8                      u140 0752                      u220 07C8  
                    u141 0751                      u221 07C7                      u150 075C  
                    u151 075B                      u135 0746                      u170 076F  
                    u171 076E                      u155 0758                      u180 07A3  
                    u165 0763                      u237 07E5                      u181 07A2  
                    u190 07AD                      u191 07AC                      fsr0 0004  
                    indf 0000                     _main 0774                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___lwmod 0774  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EE             __end_of_main 07EE                   ??_main 0075  
                 _ANSELH 0189                   _digito 0020                ??___lwmod 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 071F  
             __pmaintext 0774                  ___lwmod 073C                  __ptext1 073C  
   end_of_initialization 07FC                _PORTBbits 0006      start_initialization 07EE  
             init_fetch0 0729              __pdataBANK0 0020                ___latbits 0002  
               ?___lwmod 0070                 main@aux1 0077                 main@aux2 0079  
               main@cont 007B                 init_ram0 072D         ___lwmod@dividend 0072  
             _OPTION_REG 0081          ___lwmod@divisor 0070          ___lwmod@counter 0074  
