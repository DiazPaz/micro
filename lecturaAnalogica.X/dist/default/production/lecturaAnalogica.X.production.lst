

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jun 13 17:11:57 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=3
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32     0000                     
    33                           ; Generated 26/03/2025 GMT
    34                           ; 
    35                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0004                     fsr             equ	4
    68     0004                     fsr0            equ	4
    69     0000                     indf            equ	0
    70     0000                     indf0           equ	0
    71     0002                     pc              equ	2
    72     0002                     pcl             equ	2
    73     000A                     pclath          equ	10
    74     0003                     status          equ	3
    75     0000                     INDF            equ	0	;# 
    76     0001                     TMR0            equ	1	;# 
    77     0002                     PCL             equ	2	;# 
    78     0003                     STATUS          equ	3	;# 
    79     0004                     FSR             equ	4	;# 
    80     0005                     PORTA           equ	5	;# 
    81     0006                     PORTB           equ	6	;# 
    82     0007                     PORTC           equ	7	;# 
    83     0008                     PORTD           equ	8	;# 
    84     0009                     PORTE           equ	9	;# 
    85     000A                     PCLATH          equ	10	;# 
    86     000B                     INTCON          equ	11	;# 
    87     000C                     PIR1            equ	12	;# 
    88     000D                     PIR2            equ	13	;# 
    89     000E                     TMR1            equ	14	;# 
    90     000E                     TMR1L           equ	14	;# 
    91     000F                     TMR1H           equ	15	;# 
    92     0010                     T1CON           equ	16	;# 
    93     0011                     TMR2            equ	17	;# 
    94     0012                     T2CON           equ	18	;# 
    95     0013                     SSPBUF          equ	19	;# 
    96     0014                     SSPCON          equ	20	;# 
    97     0015                     CCPR1           equ	21	;# 
    98     0015                     CCPR1L          equ	21	;# 
    99     0016                     CCPR1H          equ	22	;# 
   100     0017                     CCP1CON         equ	23	;# 
   101     0018                     RCSTA           equ	24	;# 
   102     0019                     TXREG           equ	25	;# 
   103     001A                     RCREG           equ	26	;# 
   104     001B                     CCPR2           equ	27	;# 
   105     001B                     CCPR2L          equ	27	;# 
   106     001C                     CCPR2H          equ	28	;# 
   107     001D                     CCP2CON         equ	29	;# 
   108     001E                     ADRESH          equ	30	;# 
   109     001F                     ADCON0          equ	31	;# 
   110     0081                     OPTION_REG      equ	129	;# 
   111     0085                     TRISA           equ	133	;# 
   112     0086                     TRISB           equ	134	;# 
   113     0087                     TRISC           equ	135	;# 
   114     0088                     TRISD           equ	136	;# 
   115     0089                     TRISE           equ	137	;# 
   116     008C                     PIE1            equ	140	;# 
   117     008D                     PIE2            equ	141	;# 
   118     008E                     PCON            equ	142	;# 
   119     008F                     OSCCON          equ	143	;# 
   120     0090                     OSCTUNE         equ	144	;# 
   121     0091                     SSPCON2         equ	145	;# 
   122     0092                     PR2             equ	146	;# 
   123     0093                     SSPADD          equ	147	;# 
   124     0093                     SSPMSK          equ	147	;# 
   125     0093                     MSK             equ	147	;# 
   126     0094                     SSPSTAT         equ	148	;# 
   127     0095                     WPUB            equ	149	;# 
   128     0096                     IOCB            equ	150	;# 
   129     0097                     VRCON           equ	151	;# 
   130     0098                     TXSTA           equ	152	;# 
   131     0099                     SPBRG           equ	153	;# 
   132     009A                     SPBRGH          equ	154	;# 
   133     009B                     PWM1CON         equ	155	;# 
   134     009C                     ECCPAS          equ	156	;# 
   135     009D                     PSTRCON         equ	157	;# 
   136     009E                     ADRESL          equ	158	;# 
   137     009F                     ADCON1          equ	159	;# 
   138     0105                     WDTCON          equ	261	;# 
   139     0107                     CM1CON0         equ	263	;# 
   140     0108                     CM2CON0         equ	264	;# 
   141     0109                     CM2CON1         equ	265	;# 
   142     010C                     EEDATA          equ	268	;# 
   143     010C                     EEDAT           equ	268	;# 
   144     010D                     EEADR           equ	269	;# 
   145     010E                     EEDATH          equ	270	;# 
   146     010F                     EEADRH          equ	271	;# 
   147     0185                     SRCON           equ	389	;# 
   148     0187                     BAUDCTL         equ	391	;# 
   149     0188                     ANSEL           equ	392	;# 
   150     0189                     ANSELH          equ	393	;# 
   151     018C                     EECON1          equ	396	;# 
   152     018D                     EECON2          equ	397	;# 
   153     0000                     INDF            equ	0	;# 
   154     0001                     TMR0            equ	1	;# 
   155     0002                     PCL             equ	2	;# 
   156     0003                     STATUS          equ	3	;# 
   157     0004                     FSR             equ	4	;# 
   158     0005                     PORTA           equ	5	;# 
   159     0006                     PORTB           equ	6	;# 
   160     0007                     PORTC           equ	7	;# 
   161     0008                     PORTD           equ	8	;# 
   162     0009                     PORTE           equ	9	;# 
   163     000A                     PCLATH          equ	10	;# 
   164     000B                     INTCON          equ	11	;# 
   165     000C                     PIR1            equ	12	;# 
   166     000D                     PIR2            equ	13	;# 
   167     000E                     TMR1            equ	14	;# 
   168     000E                     TMR1L           equ	14	;# 
   169     000F                     TMR1H           equ	15	;# 
   170     0010                     T1CON           equ	16	;# 
   171     0011                     TMR2            equ	17	;# 
   172     0012                     T2CON           equ	18	;# 
   173     0013                     SSPBUF          equ	19	;# 
   174     0014                     SSPCON          equ	20	;# 
   175     0015                     CCPR1           equ	21	;# 
   176     0015                     CCPR1L          equ	21	;# 
   177     0016                     CCPR1H          equ	22	;# 
   178     0017                     CCP1CON         equ	23	;# 
   179     0018                     RCSTA           equ	24	;# 
   180     0019                     TXREG           equ	25	;# 
   181     001A                     RCREG           equ	26	;# 
   182     001B                     CCPR2           equ	27	;# 
   183     001B                     CCPR2L          equ	27	;# 
   184     001C                     CCPR2H          equ	28	;# 
   185     001D                     CCP2CON         equ	29	;# 
   186     001E                     ADRESH          equ	30	;# 
   187     001F                     ADCON0          equ	31	;# 
   188     0081                     OPTION_REG      equ	129	;# 
   189     0085                     TRISA           equ	133	;# 
   190     0086                     TRISB           equ	134	;# 
   191     0087                     TRISC           equ	135	;# 
   192     0088                     TRISD           equ	136	;# 
   193     0089                     TRISE           equ	137	;# 
   194     008C                     PIE1            equ	140	;# 
   195     008D                     PIE2            equ	141	;# 
   196     008E                     PCON            equ	142	;# 
   197     008F                     OSCCON          equ	143	;# 
   198     0090                     OSCTUNE         equ	144	;# 
   199     0091                     SSPCON2         equ	145	;# 
   200     0092                     PR2             equ	146	;# 
   201     0093                     SSPADD          equ	147	;# 
   202     0093                     SSPMSK          equ	147	;# 
   203     0093                     MSK             equ	147	;# 
   204     0094                     SSPSTAT         equ	148	;# 
   205     0095                     WPUB            equ	149	;# 
   206     0096                     IOCB            equ	150	;# 
   207     0097                     VRCON           equ	151	;# 
   208     0098                     TXSTA           equ	152	;# 
   209     0099                     SPBRG           equ	153	;# 
   210     009A                     SPBRGH          equ	154	;# 
   211     009B                     PWM1CON         equ	155	;# 
   212     009C                     ECCPAS          equ	156	;# 
   213     009D                     PSTRCON         equ	157	;# 
   214     009E                     ADRESL          equ	158	;# 
   215     009F                     ADCON1          equ	159	;# 
   216     0105                     WDTCON          equ	261	;# 
   217     0107                     CM1CON0         equ	263	;# 
   218     0108                     CM2CON0         equ	264	;# 
   219     0109                     CM2CON1         equ	265	;# 
   220     010C                     EEDATA          equ	268	;# 
   221     010C                     EEDAT           equ	268	;# 
   222     010D                     EEADR           equ	269	;# 
   223     010E                     EEDATH          equ	270	;# 
   224     010F                     EEADRH          equ	271	;# 
   225     0185                     SRCON           equ	389	;# 
   226     0187                     BAUDCTL         equ	391	;# 
   227     0188                     ANSEL           equ	392	;# 
   228     0189                     ANSELH          equ	393	;# 
   229     018C                     EECON1          equ	396	;# 
   230     018D                     EECON2          equ	397	;# 
   231     0000                     INDF            equ	0	;# 
   232     0001                     TMR0            equ	1	;# 
   233     0002                     PCL             equ	2	;# 
   234     0003                     STATUS          equ	3	;# 
   235     0004                     FSR             equ	4	;# 
   236     0005                     PORTA           equ	5	;# 
   237     0006                     PORTB           equ	6	;# 
   238     0007                     PORTC           equ	7	;# 
   239     0008                     PORTD           equ	8	;# 
   240     0009                     PORTE           equ	9	;# 
   241     000A                     PCLATH          equ	10	;# 
   242     000B                     INTCON          equ	11	;# 
   243     000C                     PIR1            equ	12	;# 
   244     000D                     PIR2            equ	13	;# 
   245     000E                     TMR1            equ	14	;# 
   246     000E                     TMR1L           equ	14	;# 
   247     000F                     TMR1H           equ	15	;# 
   248     0010                     T1CON           equ	16	;# 
   249     0011                     TMR2            equ	17	;# 
   250     0012                     T2CON           equ	18	;# 
   251     0013                     SSPBUF          equ	19	;# 
   252     0014                     SSPCON          equ	20	;# 
   253     0015                     CCPR1           equ	21	;# 
   254     0015                     CCPR1L          equ	21	;# 
   255     0016                     CCPR1H          equ	22	;# 
   256     0017                     CCP1CON         equ	23	;# 
   257     0018                     RCSTA           equ	24	;# 
   258     0019                     TXREG           equ	25	;# 
   259     001A                     RCREG           equ	26	;# 
   260     001B                     CCPR2           equ	27	;# 
   261     001B                     CCPR2L          equ	27	;# 
   262     001C                     CCPR2H          equ	28	;# 
   263     001D                     CCP2CON         equ	29	;# 
   264     001E                     ADRESH          equ	30	;# 
   265     001F                     ADCON0          equ	31	;# 
   266     0081                     OPTION_REG      equ	129	;# 
   267     0085                     TRISA           equ	133	;# 
   268     0086                     TRISB           equ	134	;# 
   269     0087                     TRISC           equ	135	;# 
   270     0088                     TRISD           equ	136	;# 
   271     0089                     TRISE           equ	137	;# 
   272     008C                     PIE1            equ	140	;# 
   273     008D                     PIE2            equ	141	;# 
   274     008E                     PCON            equ	142	;# 
   275     008F                     OSCCON          equ	143	;# 
   276     0090                     OSCTUNE         equ	144	;# 
   277     0091                     SSPCON2         equ	145	;# 
   278     0092                     PR2             equ	146	;# 
   279     0093                     SSPADD          equ	147	;# 
   280     0093                     SSPMSK          equ	147	;# 
   281     0093                     MSK             equ	147	;# 
   282     0094                     SSPSTAT         equ	148	;# 
   283     0095                     WPUB            equ	149	;# 
   284     0096                     IOCB            equ	150	;# 
   285     0097                     VRCON           equ	151	;# 
   286     0098                     TXSTA           equ	152	;# 
   287     0099                     SPBRG           equ	153	;# 
   288     009A                     SPBRGH          equ	154	;# 
   289     009B                     PWM1CON         equ	155	;# 
   290     009C                     ECCPAS          equ	156	;# 
   291     009D                     PSTRCON         equ	157	;# 
   292     009E                     ADRESL          equ	158	;# 
   293     009F                     ADCON1          equ	159	;# 
   294     0105                     WDTCON          equ	261	;# 
   295     0107                     CM1CON0         equ	263	;# 
   296     0108                     CM2CON0         equ	264	;# 
   297     0109                     CM2CON1         equ	265	;# 
   298     010C                     EEDATA          equ	268	;# 
   299     010C                     EEDAT           equ	268	;# 
   300     010D                     EEADR           equ	269	;# 
   301     010E                     EEDATH          equ	270	;# 
   302     010F                     EEADRH          equ	271	;# 
   303     0185                     SRCON           equ	389	;# 
   304     0187                     BAUDCTL         equ	391	;# 
   305     0188                     ANSEL           equ	392	;# 
   306     0189                     ANSELH          equ	393	;# 
   307     018C                     EECON1          equ	396	;# 
   308     018D                     EECON2          equ	397	;# 
   309                           
   310                           	psect	idataBANK0
   311     0140                     __pidataBANK0:
   312                           
   313                           ;initializer for _lcd
   314     0140  3407               	retlw	7
   315     0141  3400               	retlw	0
   316     0142  341A               	retlw	26
   317     0143  342C               	retlw	44
   318     0144  343E               	retlw	62
   319     0006                     _PORTB          set	6
   320     0005                     _PORTA          set	5
   321     001E                     _ADRESH         set	30
   322     001F                     _ADCON0         set	31
   323     0007                     _PORTC          set	7
   324     00F9                     _GO_nDONE       set	249
   325     0087                     _TRISC          set	135
   326     0086                     _TRISB          set	134
   327     0085                     _TRISA          set	133
   328     009E                     _ADRESL         set	158
   329     009F                     _ADCON1         set	159
   330     0188                     _ANSEL          set	392
   331                           
   332                           	psect	strings
   333     0003                     __pstrings:
   334     0003                     stringtab:
   335     0003                     __stringtab:
   336                           
   337                           ;	String table - string pointers are 1 byte each
   338     0003  1BFF               	btfsc	btemp+1,7
   339     0004  280D               	ljmp	stringcode
   340     0005  1383               	bcf	3,7
   341     0006  187F               	btfsc	btemp+1,0
   342     0007  1783               	bsf	3,7
   343     0008  0800               	movf	0,w
   344     0009  0A84               	incf	4,f
   345     000A  1903               	skipnz
   346     000B  0AFF               	incf	btemp+1,f
   347     000C  0008               	return
   348     000D                     stringcode:
   349     000D                     stringdir:
   350     000D  3000               	movlw	high stringdir
   351     000E  008A               	movwf	10
   352     000F  0804               	movf	4,w
   353     0010  0A84               	incf	4,f
   354     0011  0782               	addwf	2,f
   355     0012                     __stringbase:
   356     0012  3400               	retlw	0
   357     0013                     __end_of__stringtab:
   358     0013                     STR_1:
   359     0013  3456               	retlw	86	;'V'
   360     0014  346F               	retlw	111	;'o'
   361     0015  346C               	retlw	108	;'l'
   362     0016  3474               	retlw	116	;'t'
   363     0017  3461               	retlw	97	;'a'
   364     0018  346A               	retlw	106	;'j'
   365     0019  3465               	retlw	101	;'e'
   366     001A  343A               	retlw	58	;':'
   367     001B  3420               	retlw	32	;' '
   368     001C  3400               	retlw	0
   369     001D                     STR_2:
   370     001D  3425               	retlw	37	;'%'
   371     001E  3475               	retlw	117	;'u'
   372     001F  342E               	retlw	46	;'.'
   373     0020  3425               	retlw	37	;'%'
   374     0021  3475               	retlw	117	;'u'
   375     0022  3400               	retlw	0
   376                           
   377                           	psect	cinit
   378     07D0                     start_initialization:	
   379                           ; #config settings
   380                           
   381     07D0                     __initialization:
   382                           
   383                           ; Initialize objects allocated to BANK0
   384     07D0  120A  118A  2140  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   385     07D5  00DD               	movwf	__pdataBANK0& (0+127)
   386     07D6  120A  118A  2141  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   387     07DB  00DE               	movwf	(__pdataBANK0+1)& (0+127)
   388     07DC  120A  118A  2142  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   389     07E1  00DF               	movwf	(__pdataBANK0+2)& (0+127)
   390     07E2  120A  118A  2143  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   391     07E7  00E0               	movwf	(__pdataBANK0+3)& (0+127)
   392     07E8  120A  118A  2144  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   393     07ED  00E1               	movwf	(__pdataBANK0+4)& (0+127)
   394                           
   395                           ; Clear objects allocated to BANK1
   396     07EE  1383               	bcf	3,7	;select IRP bank0
   397     07EF  30A0               	movlw	low __pbssBANK1
   398     07F0  0084               	movwf	4
   399     07F1  30C0               	movlw	low (__pbssBANK1+32)
   400     07F2  120A  118A  2145  120A  118A  	fcall	clear_ram0
   401                           
   402                           ; Clear objects allocated to BANK0
   403     07F7  01D8               	clrf	__pbssBANK0& (0+127)
   404     07F8  01D9               	clrf	(__pbssBANK0+1)& (0+127)
   405     07F9  01DA               	clrf	(__pbssBANK0+2)& (0+127)
   406     07FA  01DB               	clrf	(__pbssBANK0+3)& (0+127)
   407     07FB  01DC               	clrf	(__pbssBANK0+4)& (0+127)
   408     07FC                     end_of_initialization:	
   409                           ;End of C runtime variable initialization code
   410                           
   411     07FC                     __end_of__initialization:
   412     07FC  0183               	clrf	3
   413     07FD  120A  118A  2EF9   	ljmp	_main	;jump to C main() function
   414                           
   415                           	psect	bssBANK0
   416     0058                     __pbssBANK0:
   417     0058                     _width:
   418     0058                     	ds	2
   419     005A                     _prec:
   420     005A                     	ds	2
   421     005C                     _flags:
   422     005C                     	ds	1
   423                           
   424                           	psect	dataBANK0
   425     005D                     __pdataBANK0:
   426     005D                     _lcd:
   427     005D                     	ds	5
   428                           
   429                           	psect	bssBANK1
   430     00A0                     __pbssBANK1:
   431     00A0                     _dbuf:
   432     00A0                     	ds	32
   433                           
   434                           	psect	clrtext
   435     0145                     clear_ram0:	
   436                           ;	Called with FSR containing the base address, and
   437                           ;	W with the last address+1
   438                           
   439     0145  0064               	clrwdt	;clear the watchdog before getting into this loop
   440     0146                     clrloop0:
   441     0146  0180               	clrf	0	;clear RAM location pointed to by FSR
   442     0147  0A84               	incf	4,f	;increment pointer
   443     0148  0604               	xorwf	4,w	;XOR with final address
   444     0149  1903               	btfsc	3,2	;have we reached the end yet?
   445     014A  3400               	retlw	0	;all done for this memory range, return
   446     014B  0604               	xorwf	4,w	;XOR again to restore value
   447     014C  2946               	goto	clrloop0	;do the next byte
   448                           
   449                           	psect	cstackCOMMON
   450     0070                     __pcstackCOMMON:
   451     0070                     ?_LCD_Write:
   452     0070                     ?_putch:	
   453                           ; 1 bytes @ 0x0
   454                           
   455     0070                     ?_ADC_initialize:	
   456                           ; 1 bytes @ 0x0
   457                           
   458     0070                     ?_main:	
   459                           ; 1 bytes @ 0x0
   460                           
   461     0070                     ?_LCD_Out:	
   462                           ; 1 bytes @ 0x0
   463                           
   464     0070                     ?_LCD_putc:	
   465                           ; 1 bytes @ 0x0
   466                           
   467     0070                     ?_fputc:	
   468                           ; 1 bytes @ 0x0
   469                           
   470     0070                     ?_ADC_read:	
   471                           ; 2 bytes @ 0x0
   472                           
   473     0070                     ?___lwdiv:	
   474                           ; 2 bytes @ 0x0
   475                           
   476     0070                     ?___lwmod:	
   477                           ; 2 bytes @ 0x0
   478                           
   479     0070                     ?___lmul:	
   480                           ; 2 bytes @ 0x0
   481                           
   482     0070                     putch@c:	
   483                           ; 4 bytes @ 0x0
   484                           
   485     0070                     ___lwdiv@divisor:	
   486                           ; 1 bytes @ 0x0
   487                           
   488     0070                     ___lwmod@divisor:	
   489                           ; 2 bytes @ 0x0
   490                           
   491     0070                     fputc@c:	
   492                           ; 2 bytes @ 0x0
   493                           
   494     0070                     ___lmul@multiplier:	
   495                           ; 2 bytes @ 0x0
   496                           
   497     0070                     ??_putch:	
   498                           ; 4 bytes @ 0x0
   499                           
   500     0070                     ??_ADC_initialize:	
   501                           ; 1 bytes @ 0x0
   502                           
   503     0070                     ??_LCD_Out:	
   504                           ; 1 bytes @ 0x0
   505                           
   506                           
   507                           ; 1 bytes @ 0x0
   508     0070                     	ds	2
   509     0072                     LCD_Out@c:
   510     0072                     ___lwdiv@dividend:	
   511                           ; 1 bytes @ 0x2
   512                           
   513     0072                     ___lwmod@dividend:	
   514                           ; 2 bytes @ 0x2
   515                           
   516     0072                     fputc@fp:	
   517                           ; 2 bytes @ 0x2
   518                           
   519     0072                     ??_ADC_read:	
   520                           ; 2 bytes @ 0x2
   521                           
   522                           
   523                           ; 1 bytes @ 0x2
   524     0072                     	ds	1
   525     0073                     ??_LCD_Write:
   526     0073                     ??_LCD_putc:	
   527                           ; 1 bytes @ 0x3
   528                           
   529                           
   530                           ; 1 bytes @ 0x3
   531     0073                     	ds	1
   532     0074                     ___lwmod@counter:
   533     0074                     ___lwdiv@quotient:	
   534                           ; 1 bytes @ 0x4
   535                           
   536     0074                     ___lmul@multiplicand:	
   537                           ; 2 bytes @ 0x4
   538                           
   539     0074                     ??_fputc:	
   540                           ; 4 bytes @ 0x4
   541                           
   542     0074                     ??___lwdiv:	
   543                           ; 1 bytes @ 0x4
   544                           
   545     0074                     ??___lwmod:	
   546                           ; 1 bytes @ 0x4
   547                           
   548                           
   549                           ; 1 bytes @ 0x4
   550     0074                     	ds	1
   551     0075                     LCD_Write@c:
   552     0075                     LCD_putc@c:	
   553                           ; 1 bytes @ 0x5
   554                           
   555                           
   556                           ; 1 bytes @ 0x5
   557     0075                     	ds	1
   558     0076                     ?_LCD_Init:
   559     0076                     ?_LCD_putrs:	
   560                           ; 1 bytes @ 0x6
   561                           
   562     0076                     ___lwdiv@counter:	
   563                           ; 1 bytes @ 0x6
   564                           
   565     0076                     LCD_putrs@a:	
   566                           ; 1 bytes @ 0x6
   567                           
   568     0076                     LCD_Init@display:	
   569                           ; 2 bytes @ 0x6
   570                           
   571                           
   572                           ; 5 bytes @ 0x6
   573     0076                     	ds	2
   574     0078                     ??_LCD_putrs:
   575     0078                     ??___lmul:	
   576                           ; 1 bytes @ 0x8
   577                           
   578                           
   579                           ; 1 bytes @ 0x8
   580     0078                     	ds	1
   581     0079                     ___lmul@product:
   582                           
   583                           ; 4 bytes @ 0x9
   584     0079                     	ds	2
   585     007B                     LCD_putrs@i:
   586     007B                     ??_LCD_Init:	
   587                           ; 2 bytes @ 0xB
   588                           
   589                           
   590                           ; 1 bytes @ 0xB
   591     007B                     	ds	2
   592     007D                     LCD_Init@cmd:
   593     007D                     vfprintf@cfmt:	
   594                           ; 1 bytes @ 0xD
   595                           
   596     007D                     ??_vfprintf:	
   597                           ; 1 bytes @ 0xD
   598                           
   599     007D                     ??___aldiv:	
   600                           ; 1 bytes @ 0xD
   601                           
   602                           
   603                           ; 1 bytes @ 0xD
   604     007D                     	ds	1
   605                           
   606                           	psect	cstackBANK0
   607     0020                     __pcstackBANK0:
   608     0020                     ?_vfpfcnvrt:
   609     0020                     ?___aldiv:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0020                     vfpfcnvrt@fp:	
   613                           ; 4 bytes @ 0x0
   614                           
   615     0020                     ___aldiv@divisor:	
   616                           ; 2 bytes @ 0x0
   617                           
   618                           
   619                           ; 4 bytes @ 0x0
   620     0020                     	ds	2
   621     0022                     vfpfcnvrt@fmt:
   622                           
   623                           ; 1 bytes @ 0x2
   624     0022                     	ds	1
   625     0023                     vfpfcnvrt@ap:
   626                           
   627                           ; 1 bytes @ 0x3
   628     0023                     	ds	1
   629     0024                     ___aldiv@dividend:
   630     0024                     ??_vfpfcnvrt:	
   631                           ; 4 bytes @ 0x4
   632                           
   633                           
   634                           ; 1 bytes @ 0x4
   635     0024                     	ds	2
   636     0026                     vfpfcnvrt@convarg:
   637                           
   638                           ; 4 bytes @ 0x6
   639     0026                     	ds	2
   640     0028                     ___aldiv@counter:
   641                           
   642                           ; 1 bytes @ 0x8
   643     0028                     	ds	1
   644     0029                     ___aldiv@sign:
   645                           
   646                           ; 1 bytes @ 0x9
   647     0029                     	ds	1
   648     002A                     vfpfcnvrt@cp:
   649     002A                     ___aldiv@quotient:	
   650                           ; 1 bytes @ 0xA
   651                           
   652                           
   653                           ; 4 bytes @ 0xA
   654     002A                     	ds	1
   655     002B                     vfpfcnvrt@c:
   656                           
   657                           ; 1 bytes @ 0xB
   658     002B                     	ds	1
   659     002C                     ?_vfprintf:
   660     002C                     vfprintf@fp:	
   661                           ; 2 bytes @ 0xC
   662                           
   663                           
   664                           ; 2 bytes @ 0xC
   665     002C                     	ds	2
   666     002E                     vfprintf@fmt:
   667                           
   668                           ; 1 bytes @ 0xE
   669     002E                     	ds	1
   670     002F                     vfprintf@ap:
   671                           
   672                           ; 1 bytes @ 0xF
   673     002F                     	ds	1
   674     0030                     ?_sprintf:
   675     0030                     sprintf@s:	
   676                           ; 2 bytes @ 0x10
   677                           
   678                           
   679                           ; 1 bytes @ 0x10
   680     0030                     	ds	1
   681     0031                     sprintf@fmt:
   682                           
   683                           ; 1 bytes @ 0x11
   684     0031                     	ds	5
   685     0036                     ??_sprintf:
   686                           
   687                           ; 1 bytes @ 0x16
   688     0036                     	ds	1
   689     0037                     sprintf@ap:
   690                           
   691                           ; 1 bytes @ 0x17
   692     0037                     	ds	1
   693     0038                     sprintf@f:
   694                           
   695                           ; 11 bytes @ 0x18
   696     0038                     	ds	11
   697     0043                     ??_main:
   698                           
   699                           ; 1 bytes @ 0x23
   700     0043                     	ds	3
   701     0046                     main@buffer:
   702                           
   703                           ; 10 bytes @ 0x26
   704     0046                     	ds	10
   705     0050                     main@adc_result:
   706                           
   707                           ; 2 bytes @ 0x30
   708     0050                     	ds	2
   709     0052                     main@part_ent:
   710                           
   711                           ; 2 bytes @ 0x32
   712     0052                     	ds	2
   713     0054                     main@part_dec:
   714                           
   715                           ; 2 bytes @ 0x34
   716     0054                     	ds	2
   717     0056                     main@voltaje:
   718                           
   719                           ; 2 bytes @ 0x36
   720     0056                     	ds	2
   721                           
   722                           	psect	maintext
   723     06F9                     __pmaintext:	
   724 ;;
   725 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   726 ;;
   727 ;; *************** function _main *****************
   728 ;; Defined at:
   729 ;;		line 45 in file "main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  voltaje         2   54[BANK0 ] unsigned int 
   734 ;;  part_dec        2   52[BANK0 ] unsigned int 
   735 ;;  part_ent        2   50[BANK0 ] unsigned int 
   736 ;;  adc_result      2   48[BANK0 ] unsigned int 
   737 ;;  buffer         10   38[BANK0 ] unsigned char [10]
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : B00/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0      18       0       0       0
   749 ;;      Temps:          0       3       0       0       0
   750 ;;      Totals:         0      21       0       0       0
   751 ;;Total ram usage:       21 bytes
   752 ;; Hardware stack levels required when called: 5
   753 ;; This function calls:
   754 ;;		_ADC_initialize
   755 ;;		_ADC_read
   756 ;;		_LCD_Init
   757 ;;		_LCD_Write
   758 ;;		_LCD_putrs
   759 ;;		___aldiv
   760 ;;		___lmul
   761 ;;		___lwdiv
   762 ;;		___lwmod
   763 ;;		_sprintf
   764 ;; This function is called by:
   765 ;;		Startup code after reset
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769     06F9                     _main:	
   770                           ;psect for function _main
   771                           
   772     06F9                     l1408:	
   773                           ;incstack = 0
   774                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   775                           
   776     06F9  120A  118A  214D  120A  118A  	fcall	_ADC_initialize
   777     06FE                     l1410:
   778     06FE  3076               	movlw	LCD_Init@display& (0+255)
   779     06FF  0084               	movwf	4
   780     0700  1283               	bcf	3,5	;RP0=0, select bank0
   781     0701  1303               	bcf	3,6	;RP1=0, select bank0
   782     0702  085D               	movf	_lcd,w
   783     0703  0080               	movwf	0
   784     0704  0A84               	incf	4,f
   785     0705  085E               	movf	_lcd+1,w
   786     0706  0080               	movwf	0
   787     0707  0A84               	incf	4,f
   788     0708  085F               	movf	_lcd+2,w
   789     0709  0080               	movwf	0
   790     070A  0A84               	incf	4,f
   791     070B  0860               	movf	_lcd+3,w
   792     070C  0080               	movwf	0
   793     070D  0A84               	incf	4,f
   794     070E  0861               	movf	_lcd+4,w
   795     070F  0080               	movwf	0
   796     0710  120A  118A  24CF  120A  118A  	fcall	_LCD_Init
   797     0715                     l1412:
   798     0715  3000               	movlw	0
   799     0716  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
   800     071B                     l1414:
   801     071B  3001               	movlw	1
   802     071C  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
   803     0721                     l1416:
   804     0721  3008               	movlw	8
   805     0722  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
   806     0727                     l1418:
   807     0727  3000               	movlw	0
   808     0728  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
   809     072D                     l1426:
   810     072D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   811     072E  00F6               	movwf	LCD_putrs@a
   812     072F  3080               	movlw	128
   813     0730  00F7               	movwf	LCD_putrs@a+1
   814     0731  120A  118A  21EB  120A  118A  	fcall	_LCD_putrs
   815     0736                     l1428:
   816     0736  3008               	movlw	8
   817     0737  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
   818     073C                     l1430:
   819     073C  3009               	movlw	9
   820     073D  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
   821     0742                     l1438:
   822                           
   823                           ;main.c: 68:         unsigned int adc_result = ADC_read();
   824     0742  120A  118A  215A  120A  118A  	fcall	_ADC_read
   825     0747  0871               	movf	?_ADC_read+1,w
   826     0748  1283               	bcf	3,5	;RP0=0, select bank0
   827     0749  1303               	bcf	3,6	;RP1=0, select bank0
   828     074A  00D1               	movwf	main@adc_result+1
   829     074B  0870               	movf	?_ADC_read,w
   830     074C  00D0               	movwf	main@adc_result
   831     074D                     l1440:
   832                           
   833                           ;main.c: 69:         unsigned int voltaje = (adc_result * 50000) / 10230;
   834     074D  3000               	movlw	0
   835     074E  00A3               	movwf	___aldiv@divisor+3
   836     074F  3000               	movlw	0
   837     0750  00A2               	movwf	___aldiv@divisor+2
   838     0751  3027               	movlw	39
   839     0752  00A1               	movwf	___aldiv@divisor+1
   840     0753  30F6               	movlw	246
   841     0754  00A0               	movwf	___aldiv@divisor
   842     0755  0850               	movf	main@adc_result,w
   843     0756  00F0               	movwf	___lmul@multiplier
   844     0757  0851               	movf	main@adc_result+1,w
   845     0758  00F1               	movwf	___lmul@multiplier+1
   846     0759  01F2               	clrf	___lmul@multiplier+2
   847     075A  01F3               	clrf	___lmul@multiplier+3
   848     075B  3000               	movlw	0
   849     075C  00F7               	movwf	___lmul@multiplicand+3
   850     075D  3000               	movlw	0
   851     075E  00F6               	movwf	___lmul@multiplicand+2
   852     075F  30C3               	movlw	195
   853     0760  00F5               	movwf	___lmul@multiplicand+1
   854     0761  3050               	movlw	80
   855     0762  00F4               	movwf	___lmul@multiplicand
   856     0763  120A  118A  226F  120A  118A  	fcall	___lmul
   857     0768  0873               	movf	?___lmul+3,w
   858     0769  1283               	bcf	3,5	;RP0=0, select bank0
   859     076A  1303               	bcf	3,6	;RP1=0, select bank0
   860     076B  00A7               	movwf	___aldiv@dividend+3
   861     076C  0872               	movf	?___lmul+2,w
   862     076D  00A6               	movwf	___aldiv@dividend+2
   863     076E  0871               	movf	?___lmul+1,w
   864     076F  00A5               	movwf	___aldiv@dividend+1
   865     0770  0870               	movf	?___lmul,w
   866     0771  00A4               	movwf	___aldiv@dividend
   867     0772  120A  118A  239C  120A  118A  	fcall	___aldiv
   868     0777  1283               	bcf	3,5	;RP0=0, select bank0
   869     0778  1303               	bcf	3,6	;RP1=0, select bank0
   870     0779  0821               	movf	?___aldiv+1,w
   871     077A  00D7               	movwf	main@voltaje+1
   872     077B  0820               	movf	?___aldiv,w
   873     077C  00D6               	movwf	main@voltaje
   874     077D                     l1442:
   875                           
   876                           ;main.c: 70:         unsigned int part_ent = voltaje/1000;
   877     077D  30E8               	movlw	232
   878     077E  00F0               	movwf	___lwdiv@divisor
   879     077F  3003               	movlw	3
   880     0780  00F1               	movwf	___lwdiv@divisor+1
   881     0781  0857               	movf	main@voltaje+1,w
   882     0782  00F3               	movwf	___lwdiv@dividend+1
   883     0783  0856               	movf	main@voltaje,w
   884     0784  00F2               	movwf	___lwdiv@dividend
   885     0785  120A  118A  222D  120A  118A  	fcall	___lwdiv
   886     078A  0871               	movf	?___lwdiv+1,w
   887     078B  1283               	bcf	3,5	;RP0=0, select bank0
   888     078C  1303               	bcf	3,6	;RP1=0, select bank0
   889     078D  00D3               	movwf	main@part_ent+1
   890     078E  0870               	movf	?___lwdiv,w
   891     078F  00D2               	movwf	main@part_ent
   892     0790                     l1444:
   893                           
   894                           ;main.c: 71:         unsigned int part_dec = voltaje%1000;
   895     0790  30E8               	movlw	232
   896     0791  00F0               	movwf	___lwmod@divisor
   897     0792  3003               	movlw	3
   898     0793  00F1               	movwf	___lwmod@divisor+1
   899     0794  0857               	movf	main@voltaje+1,w
   900     0795  00F3               	movwf	___lwmod@dividend+1
   901     0796  0856               	movf	main@voltaje,w
   902     0797  00F2               	movwf	___lwmod@dividend
   903     0798  120A  118A  21B3  120A  118A  	fcall	___lwmod
   904     079D  0871               	movf	?___lwmod+1,w
   905     079E  1283               	bcf	3,5	;RP0=0, select bank0
   906     079F  1303               	bcf	3,6	;RP1=0, select bank0
   907     07A0  00D5               	movwf	main@part_dec+1
   908     07A1  0870               	movf	?___lwmod,w
   909     07A2  00D4               	movwf	main@part_dec
   910     07A3                     l1446:
   911                           
   912                           ;main.c: 73:         sprintf(buffer, "%u.%u", part_ent, part_dec);
   913     07A3  3046               	movlw	(low (main@buffer| 0))& (0+255)
   914     07A4  00B0               	movwf	sprintf@s
   915     07A5  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   916     07A6  00B1               	movwf	sprintf@fmt
   917     07A7  0853               	movf	main@part_ent+1,w
   918     07A8  00B3               	movwf	?_sprintf+3
   919     07A9  0852               	movf	main@part_ent,w
   920     07AA  00B2               	movwf	?_sprintf+2
   921     07AB  0855               	movf	main@part_dec+1,w
   922     07AC  00B5               	movwf	?_sprintf+5
   923     07AD  0854               	movf	main@part_dec,w
   924     07AE  00B4               	movwf	?_sprintf+4
   925     07AF  120A  118A  216B  120A  118A  	fcall	_sprintf
   926     07B4                     l1448:
   927                           
   928                           ;main.c: 74:         LCD_putrs(buffer);
   929     07B4  3046               	movlw	(low (main@buffer| 0))& (0+255)
   930     07B5  00F6               	movwf	LCD_putrs@a
   931     07B6  3000               	movlw	0
   932     07B7  00F7               	movwf	LCD_putrs@a+1
   933     07B8  120A  118A  21EB  120A  118A  	fcall	_LCD_putrs
   934     07BD                     l1450:
   935                           
   936                           ;main.c: 75:         _delay((unsigned long)((200)*(4000000/4000.0)));
   937     07BD  3002               	movlw	2
   938     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   939     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   940     07C0  00C5               	movwf	??_main+2
   941     07C1  3004               	movlw	4
   942     07C2  00C4               	movwf	??_main+1
   943     07C3  30B9               	movlw	185
   944     07C4  00C3               	movwf	??_main
   945     07C5                     u1397:
   946     07C5  0BC3               	decfsz	??_main,f
   947     07C6  2FC5               	goto	u1397
   948     07C7  0BC4               	decfsz	??_main+1,f
   949     07C8  2FC5               	goto	u1397
   950     07C9  0BC5               	decfsz	??_main+2,f
   951     07CA  2FC5               	goto	u1397
   952     07CB  2FCC               	nop2
   953     07CC  2F15               	goto	l1412
   954     07CD  120A  118A  2800   	ljmp	start
   955     07D0                     __end_of_main:
   956                           
   957                           	psect	text1
   958     016B                     __ptext1:	
   959 ;; *************** function _sprintf *****************
   960 ;; Defined at:
   961 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  s               1   16[BANK0 ] PTR unsigned char 
   964 ;;		 -> main@buffer(10), 
   965 ;;  fmt             1   17[BANK0 ] PTR const unsigned char 
   966 ;;		 -> STR_2(6), 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  f              11   24[BANK0 ] struct _IO_FILE
   969 ;;  ret             2    0        int 
   970 ;;  ap              1   23[BANK0 ] PTR void [1]
   971 ;;		 -> ?_sprintf(2), 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  2   16[BANK0 ] int 
   974 ;; Registers used:
   975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   981 ;;      Params:         0       6       0       0       0
   982 ;;      Locals:         0      12       0       0       0
   983 ;;      Temps:          0       1       0       0       0
   984 ;;      Totals:         0      19       0       0       0
   985 ;;Total ram usage:       19 bytes
   986 ;; Hardware stack levels used: 1
   987 ;; Hardware stack levels required when called: 4
   988 ;; This function calls:
   989 ;;		_vfprintf
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995     016B                     _sprintf:	
   996                           ;psect for function _sprintf
   997                           
   998     016B                     l1340:	
   999                           ;incstack = 0
  1000                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1001                           
  1002     016B  3032               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1003     016C  1283               	bcf	3,5	;RP0=0, select bank0
  1004     016D  1303               	bcf	3,6	;RP1=0, select bank0
  1005     016E  00B7               	movwf	sprintf@ap
  1006     016F                     l1342:
  1007     016F  0830               	movf	sprintf@s,w
  1008     0170  00B8               	movwf	sprintf@f
  1009     0171  3000               	movlw	0
  1010     0172  00B9               	movwf	sprintf@f+1
  1011     0173                     l1344:
  1012     0173  01BA               	clrf	sprintf@f+2
  1013     0174  01BB               	clrf	sprintf@f+3
  1014     0175                     l1346:
  1015     0175  01C1               	clrf	sprintf@f+9
  1016     0176  01C2               	clrf	sprintf@f+10
  1017     0177                     l1348:
  1018     0177  3038               	movlw	low sprintf@f
  1019     0178  00AC               	movwf	vfprintf@fp
  1020     0179  3000               	movlw	high sprintf@f
  1021     017A  00AD               	movwf	vfprintf@fp+1
  1022     017B  0831               	movf	sprintf@fmt,w
  1023     017C  00AE               	movwf	vfprintf@fmt
  1024     017D  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  1025     017E  00AF               	movwf	vfprintf@ap
  1026     017F  120A  118A  218E  120A  118A  	fcall	_vfprintf
  1027     0184                     l1350:
  1028     0184  1283               	bcf	3,5	;RP0=0, select bank0
  1029     0185  1303               	bcf	3,6	;RP1=0, select bank0
  1030     0186  083A               	movf	sprintf@f+2,w
  1031     0187  0730               	addwf	sprintf@s,w
  1032     0188  00B6               	movwf	??_sprintf
  1033     0189  0836               	movf	??_sprintf,w
  1034     018A  0084               	movwf	4
  1035     018B  1383               	bcf	3,7	;select IRP bank0
  1036     018C  0180               	clrf	0
  1037     018D                     l695:
  1038     018D  0008               	return
  1039     018E                     __end_of_sprintf:
  1040                           
  1041                           	psect	text2
  1042     018E                     __ptext2:	
  1043 ;; *************** function _vfprintf *****************
  1044 ;; Defined at:
  1045 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  1048 ;;		 -> sprintf@f(11), 
  1049 ;;  fmt             1   14[BANK0 ] PTR const unsigned char 
  1050 ;;		 -> STR_2(6), 
  1051 ;;  ap              1   15[BANK0 ] PTR PTR void 
  1052 ;;		 -> sprintf@ap(1), 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  cfmt            1   13[COMMON] PTR unsigned char 
  1055 ;;		 -> STR_2(6), 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  2   12[BANK0 ] int 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         0       4       0       0       0
  1066 ;;      Locals:         1       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0
  1068 ;;      Totals:         1       4       0       0       0
  1069 ;;Total ram usage:        5 bytes
  1070 ;; Hardware stack levels used: 1
  1071 ;; Hardware stack levels required when called: 3
  1072 ;; This function calls:
  1073 ;;		_vfpfcnvrt
  1074 ;; This function is called by:
  1075 ;;		_sprintf
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079     018E                     _vfprintf:	
  1080                           ;psect for function _vfprintf
  1081                           
  1082     018E                     l1268:	
  1083                           ;incstack = 0
  1084                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1085                           
  1086                           
  1087                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1088     018E  1283               	bcf	3,5	;RP0=0, select bank0
  1089     018F  1303               	bcf	3,6	;RP1=0, select bank0
  1090     0190  082E               	movf	vfprintf@fmt,w
  1091     0191  00FD               	movwf	vfprintf@cfmt
  1092                           
  1093                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1094     0192  29A2               	goto	l1272
  1095     0193                     l1270:
  1096                           
  1097                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1098     0193  1283               	bcf	3,5	;RP0=0, select bank0
  1099     0194  1303               	bcf	3,6	;RP1=0, select bank0
  1100     0195  082C               	movf	vfprintf@fp,w
  1101     0196  00A0               	movwf	vfpfcnvrt@fp
  1102     0197  082D               	movf	vfprintf@fp+1,w
  1103     0198  00A1               	movwf	vfpfcnvrt@fp+1
  1104     0199  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1105     019A  00A2               	movwf	vfpfcnvrt@fmt
  1106     019B  082F               	movf	vfprintf@ap,w
  1107     019C  00A3               	movwf	vfpfcnvrt@ap
  1108     019D  120A  118A  2635  120A  118A  	fcall	_vfpfcnvrt
  1109     01A2                     l1272:
  1110                           
  1111                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1112     01A2  087D               	movf	vfprintf@cfmt,w
  1113     01A3  0084               	movwf	4
  1114     01A4  120A  118A  200D  120A  118A  	fcall	stringdir
  1115     01A9  3A00               	xorlw	0
  1116     01AA  1D03               	skipz
  1117     01AB  29AD               	goto	u1141
  1118     01AC  29AE               	goto	u1140
  1119     01AD                     u1141:
  1120     01AD  2993               	goto	l1270
  1121     01AE                     u1140:
  1122     01AE                     l1274:
  1123                           
  1124                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1125     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1126     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1127     01B0  01AC               	clrf	?_vfprintf
  1128     01B1  01AD               	clrf	?_vfprintf+1
  1129     01B2                     l739:
  1130     01B2  0008               	return
  1131     01B3                     __end_of_vfprintf:
  1132                           
  1133                           	psect	text3
  1134     0635                     __ptext3:	
  1135 ;; *************** function _vfpfcnvrt *****************
  1136 ;; Defined at:
  1137 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1140 ;;		 -> sprintf@f(11), 
  1141 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
  1142 ;;		 -> vfprintf@cfmt(1), 
  1143 ;;  ap              1    3[BANK0 ] PTR PTR void 
  1144 ;;		 -> sprintf@ap(1), 
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  convarg         4    6[BANK0 ] struct .
  1147 ;;  c               1   11[BANK0 ] unsigned char 
  1148 ;;  cp              1   10[BANK0 ] PTR unsigned char 
  1149 ;;		 -> STR_2(6), 
  1150 ;;  done            1    0        _Bool 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       4       0       0       0
  1161 ;;      Locals:         0       6       0       0       0
  1162 ;;      Temps:          0       2       0       0       0
  1163 ;;      Totals:         0      12       0       0       0
  1164 ;;Total ram usage:       12 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; Hardware stack levels required when called: 2
  1167 ;; This function calls:
  1168 ;;		___lwdiv
  1169 ;;		___lwmod
  1170 ;;		_fputc
  1171 ;; This function is called by:
  1172 ;;		_vfprintf
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176     0635                     _vfpfcnvrt:	
  1177                           ;psect for function _vfpfcnvrt
  1178                           
  1179     0635                     l1198:	
  1180                           ;incstack = 0
  1181                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1182                           
  1183                           
  1184                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1185     0635  1283               	bcf	3,5	;RP0=0, select bank0
  1186     0636  1303               	bcf	3,6	;RP1=0, select bank0
  1187     0637  0822               	movf	vfpfcnvrt@fmt,w
  1188     0638  0084               	movwf	4
  1189     0639  0800               	movf	0,w
  1190     063A  0084               	movwf	4
  1191     063B  120A  118A  200D  120A  118A  	fcall	stringdir
  1192     0640  3A25               	xorlw	37
  1193     0641  1D03               	skipz
  1194     0642  2E44               	goto	u1001
  1195     0643  2E45               	goto	u1000
  1196     0644                     u1001:
  1197     0644  2EDF               	goto	l1236
  1198     0645                     u1000:
  1199     0645                     l1200:
  1200                           
  1201                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1202     0645  0822               	movf	vfpfcnvrt@fmt,w
  1203     0646  0084               	movwf	4
  1204     0647  3001               	movlw	1
  1205     0648  0780               	addwf	0,f
  1206     0649                     l1202:
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1209     0649  01D8               	clrf	_width
  1210     064A  01D9               	clrf	_width+1
  1211     064B  3000               	movlw	0
  1212     064C  00DC               	movwf	_flags
  1213     064D                     l1204:
  1214                           
  1215                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1216     064D  30FF               	movlw	255
  1217     064E  00DA               	movwf	_prec
  1218     064F  30FF               	movlw	255
  1219     0650  00DB               	movwf	_prec+1
  1220     0651                     l1206:
  1221                           
  1222                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1223     0651  0822               	movf	vfpfcnvrt@fmt,w
  1224     0652  0084               	movwf	4
  1225     0653  0800               	movf	0,w
  1226     0654  00AA               	movwf	vfpfcnvrt@cp
  1227     0655                     l1208:
  1228     0655  082A               	movf	vfpfcnvrt@cp,w
  1229     0656  0084               	movwf	4
  1230     0657  120A  118A  200D  120A  118A  	fcall	stringdir
  1231     065C  3A75               	xorlw	117
  1232     065D  1D03               	skipz
  1233     065E  2E60               	goto	u1011
  1234     065F  2E61               	goto	u1010
  1235     0660                     u1011:
  1236     0660  2ED8               	goto	l1232
  1237     0661                     u1010:
  1238     0661                     l1210:
  1239                           
  1240                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1241     0661  0823               	movf	vfpfcnvrt@ap,w
  1242     0662  0084               	movwf	4
  1243     0663  1383               	bcf	3,7	;select IRP bank0
  1244     0664  0800               	movf	0,w
  1245     0665  00FF               	movwf	btemp+1
  1246     0666  3002               	movlw	2
  1247     0667  0780               	addwf	0,f
  1248     0668  087F               	movf	btemp+1,w
  1249     0669  0084               	movwf	4
  1250     066A  0800               	movf	0,w
  1251     066B  00A6               	movwf	vfpfcnvrt@convarg
  1252     066C  0A84               	incf	4,f
  1253     066D  0800               	movf	0,w
  1254     066E  00A7               	movwf	vfpfcnvrt@convarg+1
  1255     066F                     l1212:
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1258     066F  0822               	movf	vfpfcnvrt@fmt,w
  1259     0670  0084               	movwf	4
  1260     0671  082A               	movf	vfpfcnvrt@cp,w
  1261     0672  3E01               	addlw	1
  1262     0673  0080               	movwf	0
  1263                           
  1264                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1265     0674  2ECD               	goto	l1230
  1266     0675                     l724:	
  1267                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1523:     case 'u
      +                          ':
  1268                           
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  1271     0675  3020               	movlw	32
  1272     0676  00AB               	movwf	vfpfcnvrt@c
  1273     0677                     l1214:
  1274                           
  1275                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  1276     0677  3001               	movlw	1
  1277     0678  02AB               	subwf	vfpfcnvrt@c,f
  1278     0679  082B               	movf	vfpfcnvrt@c,w
  1279     067A  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1280     067B  0084               	movwf	4
  1281     067C  300A               	movlw	10
  1282     067D  00F0               	movwf	___lwmod@divisor
  1283     067E  3000               	movlw	0
  1284     067F  00F1               	movwf	___lwmod@divisor+1
  1285     0680  0827               	movf	vfpfcnvrt@convarg+1,w
  1286     0681  00F3               	movwf	___lwmod@dividend+1
  1287     0682  0826               	movf	vfpfcnvrt@convarg,w
  1288     0683  00F2               	movwf	___lwmod@dividend
  1289     0684  120A  118A  21B3  120A  118A  	fcall	___lwmod
  1290     0689  0870               	movf	?___lwmod,w
  1291     068A  3E30               	addlw	48
  1292     068B  1383               	bcf	3,7	;select IRP bank1
  1293     068C  0080               	movwf	0
  1294     068D                     l1216:
  1295                           
  1296                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  1297     068D  300A               	movlw	10
  1298     068E  00F0               	movwf	___lwdiv@divisor
  1299     068F  3000               	movlw	0
  1300     0690  00F1               	movwf	___lwdiv@divisor+1
  1301     0691  1283               	bcf	3,5	;RP0=0, select bank0
  1302     0692  1303               	bcf	3,6	;RP1=0, select bank0
  1303     0693  0827               	movf	vfpfcnvrt@convarg+1,w
  1304     0694  00F3               	movwf	___lwdiv@dividend+1
  1305     0695  0826               	movf	vfpfcnvrt@convarg,w
  1306     0696  00F2               	movwf	___lwdiv@dividend
  1307     0697  120A  118A  222D  120A  118A  	fcall	___lwdiv
  1308     069C  0871               	movf	?___lwdiv+1,w
  1309     069D  1283               	bcf	3,5	;RP0=0, select bank0
  1310     069E  1303               	bcf	3,6	;RP1=0, select bank0
  1311     069F  00A7               	movwf	vfpfcnvrt@convarg+1
  1312     06A0  0870               	movf	?___lwdiv,w
  1313     06A1  00A6               	movwf	vfpfcnvrt@convarg
  1314     06A2                     l1218:
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  1317     06A2  0826               	movf	vfpfcnvrt@convarg,w
  1318     06A3  0427               	iorwf	vfpfcnvrt@convarg+1,w
  1319     06A4  1903               	btfsc	3,2
  1320     06A5  2EA7               	goto	u1021
  1321     06A6  2EA8               	goto	u1020
  1322     06A7                     u1021:
  1323     06A7  2EC6               	goto	l1226
  1324     06A8                     u1020:
  1325     06A8                     l1220:
  1326     06A8  082B               	movf	vfpfcnvrt@c,w
  1327     06A9  1D03               	btfss	3,2
  1328     06AA  2EAC               	goto	u1031
  1329     06AB  2EAD               	goto	u1030
  1330     06AC                     u1031:
  1331     06AC  2E77               	goto	l1214
  1332     06AD                     u1030:
  1333     06AD  2EC6               	goto	l1226
  1334     06AE                     l1222:
  1335                           
  1336                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  1337     06AE  082B               	movf	vfpfcnvrt@c,w
  1338     06AF  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1339     06B0  0084               	movwf	4
  1340     06B1  1383               	bcf	3,7	;select IRP bank1
  1341     06B2  0800               	movf	0,w
  1342     06B3  00A4               	movwf	??_vfpfcnvrt
  1343     06B4  01A5               	clrf	??_vfpfcnvrt+1
  1344     06B5  0824               	movf	??_vfpfcnvrt,w
  1345     06B6  00F0               	movwf	fputc@c
  1346     06B7  0825               	movf	??_vfpfcnvrt+1,w
  1347     06B8  00F1               	movwf	fputc@c+1
  1348     06B9  0820               	movf	vfpfcnvrt@fp,w
  1349     06BA  00F2               	movwf	fputc@fp
  1350     06BB  0821               	movf	vfpfcnvrt@fp+1,w
  1351     06BC  00F3               	movwf	fputc@fp+1
  1352     06BD  120A  118A  2435  120A  118A  	fcall	_fputc
  1353     06C2                     l1224:
  1354     06C2  3001               	movlw	1
  1355     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1356     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1357     06C5  07AB               	addwf	vfpfcnvrt@c,f
  1358     06C6                     l1226:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  1361     06C6  3020               	movlw	32
  1362     06C7  062B               	xorwf	vfpfcnvrt@c,w
  1363     06C8  1D03               	btfss	3,2
  1364     06C9  2ECB               	goto	u1041
  1365     06CA  2ECC               	goto	u1040
  1366     06CB                     u1041:
  1367     06CB  2EAE               	goto	l1222
  1368     06CC                     u1040:
  1369     06CC  2EF8               	goto	l732
  1370     06CD                     l1230:
  1371     06CD  082A               	movf	vfpfcnvrt@cp,w
  1372     06CE  0084               	movwf	4
  1373     06CF  120A  118A  200D  120A  118A  	fcall	stringdir
  1374                           
  1375                           ; Switch size 1, requested type "simple"
  1376                           ; Number of cases is 1, Range of values is 117 to 117
  1377                           ; switch strategies available:
  1378                           ; Name         Instructions Cycles
  1379                           ; simple_byte            4     3 (average)
  1380                           ; direct_byte           14    11 (fixed)
  1381                           ; jumptable            263     9 (fixed)
  1382                           ;	Chosen strategy is simple_byte
  1383     06D4  3A75               	xorlw	117	; case 117
  1384     06D5  1903               	skipnz
  1385     06D6  2E75               	goto	l724
  1386     06D7  2ED8               	goto	l1232
  1387     06D8                     l1232:
  1388                           
  1389                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1390     06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1391     06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1392     06DA  0822               	movf	vfpfcnvrt@fmt,w
  1393     06DB  0084               	movwf	4
  1394     06DC  3001               	movlw	1
  1395     06DD  0780               	addwf	0,f
  1396     06DE  2EF8               	goto	l732
  1397     06DF                     l1236:
  1398                           
  1399                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1400     06DF  0822               	movf	vfpfcnvrt@fmt,w
  1401     06E0  0084               	movwf	4
  1402     06E1  0800               	movf	0,w
  1403     06E2  0084               	movwf	4
  1404     06E3  120A  118A  200D  120A  118A  	fcall	stringdir
  1405     06E8  00A4               	movwf	??_vfpfcnvrt
  1406     06E9  01A5               	clrf	??_vfpfcnvrt+1
  1407     06EA  0824               	movf	??_vfpfcnvrt,w
  1408     06EB  00F0               	movwf	fputc@c
  1409     06EC  0825               	movf	??_vfpfcnvrt+1,w
  1410     06ED  00F1               	movwf	fputc@c+1
  1411     06EE  0820               	movf	vfpfcnvrt@fp,w
  1412     06EF  00F2               	movwf	fputc@fp
  1413     06F0  0821               	movf	vfpfcnvrt@fp+1,w
  1414     06F1  00F3               	movwf	fputc@fp+1
  1415     06F2  120A  118A  2435  120A  118A  	fcall	_fputc
  1416     06F7  2ED8               	goto	l1232
  1417     06F8                     l732:
  1418     06F8  0008               	return
  1419     06F9                     __end_of_vfpfcnvrt:
  1420                           
  1421                           	psect	text4
  1422     0435                     __ptext4:	
  1423 ;; *************** function _fputc *****************
  1424 ;; Defined at:
  1425 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  c               2    0[COMMON] int 
  1428 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  1429 ;;		 -> sprintf@f(11), 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  2    0[COMMON] int 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1441 ;;      Params:         4       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0
  1443 ;;      Temps:          9       0       0       0       0
  1444 ;;      Totals:        13       0       0       0       0
  1445 ;;Total ram usage:       13 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 1
  1448 ;; This function calls:
  1449 ;;		_putch
  1450 ;; This function is called by:
  1451 ;;		_vfpfcnvrt
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455     0435                     _fputc:	
  1456                           ;psect for function _fputc
  1457                           
  1458     0435                     l1160:	
  1459                           ;incstack = 0
  1460                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1461                           
  1462     0435  0872               	movf	fputc@fp,w
  1463     0436  0473               	iorwf	fputc@fp+1,w
  1464     0437  1903               	btfsc	3,2
  1465     0438  2C3A               	goto	u831
  1466     0439  2C3B               	goto	u830
  1467     043A                     u831:
  1468     043A  2C41               	goto	l1164
  1469     043B                     u830:
  1470     043B                     l1162:
  1471     043B  0872               	movf	fputc@fp,w
  1472     043C  0473               	iorwf	fputc@fp+1,w
  1473     043D  1D03               	btfss	3,2
  1474     043E  2C40               	goto	u841
  1475     043F  2C41               	goto	u840
  1476     0440                     u841:
  1477     0440  2C48               	goto	l1166
  1478     0441                     u840:
  1479     0441                     l1164:
  1480     0441  0870               	movf	fputc@c,w
  1481     0442  120A  118A  213F  120A  118A  	fcall	_putch
  1482     0447  2CCE               	goto	l751
  1483     0448                     l1166:
  1484     0448  0872               	movf	fputc@fp,w
  1485     0449  3E09               	addlw	9
  1486     044A  00F4               	movwf	??_fputc
  1487     044B  0873               	movf	fputc@fp+1,w
  1488     044C  1803               	skipnc
  1489     044D  3E01               	addlw	1
  1490     044E  3E00               	addlw	0
  1491     044F  00F5               	movwf	??_fputc+1
  1492     0450  0874               	movf	??_fputc,w
  1493     0451  0084               	movwf	4
  1494     0452  1783               	bsf	3,7
  1495     0453  1C75               	btfss	??_fputc+1,0
  1496     0454  1383               	bcf	3,7
  1497     0455  0800               	movf	0,w
  1498     0456  00F6               	movwf	??_fputc+2
  1499     0457  0A84               	incf	4,f
  1500     0458  0800               	movf	0,w
  1501     0459  00F7               	movwf	??_fputc+3
  1502     045A  0876               	movf	??_fputc+2,w
  1503     045B  0477               	iorwf	??_fputc+3,w
  1504     045C  1903               	btfsc	3,2
  1505     045D  2C5F               	goto	u851
  1506     045E  2C60               	goto	u850
  1507     045F                     u851:
  1508     045F  2C92               	goto	l1170
  1509     0460                     u850:
  1510     0460                     l1168:
  1511     0460  0872               	movf	fputc@fp,w
  1512     0461  3E09               	addlw	9
  1513     0462  00F4               	movwf	??_fputc
  1514     0463  0873               	movf	fputc@fp+1,w
  1515     0464  1803               	skipnc
  1516     0465  3E01               	addlw	1
  1517     0466  3E00               	addlw	0
  1518     0467  00F5               	movwf	??_fputc+1
  1519     0468  0874               	movf	??_fputc,w
  1520     0469  0084               	movwf	4
  1521     046A  1783               	bsf	3,7
  1522     046B  1C75               	btfss	??_fputc+1,0
  1523     046C  1383               	bcf	3,7
  1524     046D  0800               	movf	0,w
  1525     046E  00F6               	movwf	??_fputc+2
  1526     046F  0A84               	incf	4,f
  1527     0470  0800               	movf	0,w
  1528     0471  00F7               	movwf	??_fputc+3
  1529     0472  0872               	movf	fputc@fp,w
  1530     0473  3E02               	addlw	2
  1531     0474  00F8               	movwf	??_fputc+4
  1532     0475  0873               	movf	fputc@fp+1,w
  1533     0476  1803               	skipnc
  1534     0477  3E01               	addlw	1
  1535     0478  3E00               	addlw	0
  1536     0479  00F9               	movwf	??_fputc+5
  1537     047A  0878               	movf	??_fputc+4,w
  1538     047B  0084               	movwf	4
  1539     047C  1783               	bsf	3,7
  1540     047D  1C79               	btfss	??_fputc+5,0
  1541     047E  1383               	bcf	3,7
  1542     047F  0800               	movf	0,w
  1543     0480  00FA               	movwf	??_fputc+6
  1544     0481  0A84               	incf	4,f
  1545     0482  0800               	movf	0,w
  1546     0483  00FB               	movwf	??_fputc+7
  1547     0484  087B               	movf	??_fputc+7,w
  1548     0485  3A80               	xorlw	128
  1549     0486  00FC               	movwf	??_fputc+8
  1550     0487  0877               	movf	??_fputc+3,w
  1551     0488  3A80               	xorlw	128
  1552     0489  027C               	subwf	??_fputc+8,w
  1553     048A  1D03               	skipz
  1554     048B  2C8E               	goto	u865
  1555     048C  0876               	movf	??_fputc+2,w
  1556     048D  027A               	subwf	??_fputc+6,w
  1557     048E                     u865:
  1558     048E  1803               	skipnc
  1559     048F  2C91               	goto	u861
  1560     0490  2C92               	goto	u860
  1561     0491                     u861:
  1562     0491  2CCE               	goto	l751
  1563     0492                     u860:
  1564     0492                     l1170:
  1565     0492  0872               	movf	fputc@fp,w
  1566     0493  0084               	movwf	4
  1567     0494  1783               	bsf	3,7
  1568     0495  1C73               	btfss	fputc@fp+1,0
  1569     0496  1383               	bcf	3,7
  1570     0497  0800               	movf	0,w
  1571     0498  00F4               	movwf	??_fputc
  1572     0499  0A84               	incf	4,f
  1573     049A  0800               	movf	0,w
  1574     049B  00F5               	movwf	??_fputc+1
  1575     049C  0872               	movf	fputc@fp,w
  1576     049D  3E02               	addlw	2
  1577     049E  00F6               	movwf	??_fputc+2
  1578     049F  0873               	movf	fputc@fp+1,w
  1579     04A0  1803               	skipnc
  1580     04A1  3E01               	addlw	1
  1581     04A2  3E00               	addlw	0
  1582     04A3  00F7               	movwf	??_fputc+3
  1583     04A4  0876               	movf	??_fputc+2,w
  1584     04A5  0084               	movwf	4
  1585     04A6  1783               	bsf	3,7
  1586     04A7  1C77               	btfss	??_fputc+3,0
  1587     04A8  1383               	bcf	3,7
  1588     04A9  0800               	movf	0,w
  1589     04AA  0774               	addwf	??_fputc,w
  1590     04AB  00F9               	movwf	??_fputc+5
  1591     04AC  0875               	movf	??_fputc+1,w
  1592     04AD  00F8               	movwf	??_fputc+4
  1593     04AE  1803               	skipnc
  1594     04AF  0AF8               	incf	??_fputc+4,f
  1595     04B0  1F80               	btfss	0,7
  1596     04B1  2CB3               	goto	u870
  1597     04B2  03F8               	decf	??_fputc+4,f
  1598     04B3                     u870:
  1599     04B3  0878               	movf	??_fputc+4,w
  1600     04B4  00FA               	movwf	??_fputc+6
  1601     04B5  0879               	movf	??_fputc+5,w
  1602     04B6  0084               	movwf	4
  1603     04B7  1783               	bsf	3,7
  1604     04B8  1C7A               	btfss	??_fputc+6,0
  1605     04B9  1383               	bcf	3,7
  1606     04BA  0870               	movf	fputc@c,w
  1607     04BB  0080               	movwf	0
  1608     04BC  0872               	movf	fputc@fp,w
  1609     04BD  3E02               	addlw	2
  1610     04BE  00F4               	movwf	??_fputc
  1611     04BF  0873               	movf	fputc@fp+1,w
  1612     04C0  1803               	skipnc
  1613     04C1  3E01               	addlw	1
  1614     04C2  3E00               	addlw	0
  1615     04C3  00F5               	movwf	??_fputc+1
  1616     04C4  0874               	movf	??_fputc,w
  1617     04C5  0084               	movwf	4
  1618     04C6  1783               	bsf	3,7
  1619     04C7  1C75               	btfss	??_fputc+1,0
  1620     04C8  1383               	bcf	3,7
  1621     04C9  3001               	movlw	1
  1622     04CA  0780               	addwf	0,f
  1623     04CB  0A84               	incf	4,f
  1624     04CC  1803               	skipnc
  1625     04CD  0A80               	incf	0,f
  1626     04CE                     l751:
  1627     04CE  0008               	return
  1628     04CF                     __end_of_fputc:
  1629                           
  1630                           	psect	text5
  1631     013F                     __ptext5:	
  1632 ;; *************** function _putch *****************
  1633 ;; Defined at:
  1634 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  c               1    wreg     unsigned char 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  c               1    0[COMMON] unsigned char 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1648 ;;      Params:         0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0
  1651 ;;      Totals:         0       0       0       0       0
  1652 ;;Total ram usage:        0 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_fputc
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661     013F                     _putch:	
  1662                           ;psect for function _putch
  1663                           
  1664     013F                     l762:	
  1665                           ;incstack = 0
  1666                           ; Regs used in _putch: [wreg]
  1667                           
  1668     013F  0008               	return
  1669     0140                     __end_of_putch:
  1670                           
  1671                           	psect	text6
  1672     01B3                     __ptext6:	
  1673 ;; *************** function ___lwmod *****************
  1674 ;; Defined at:
  1675 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  divisor         2    0[COMMON] unsigned int 
  1678 ;;  dividend        2    2[COMMON] unsigned int 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  counter         1    4[COMMON] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  2    0[COMMON] unsigned int 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1690 ;;      Params:         4       0       0       0       0
  1691 ;;      Locals:         1       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0
  1693 ;;      Totals:         5       0       0       0       0
  1694 ;;Total ram usage:        5 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;;		_vfpfcnvrt
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704     01B3                     ___lwmod:	
  1705                           ;psect for function ___lwmod
  1706                           
  1707     01B3                     l1138:	
  1708                           ;incstack = 0
  1709                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1710                           
  1711     01B3  0870               	movf	___lwmod@divisor,w
  1712     01B4  0471               	iorwf	___lwmod@divisor+1,w
  1713     01B5  1903               	btfsc	3,2
  1714     01B6  29B8               	goto	u771
  1715     01B7  29B9               	goto	u770
  1716     01B8                     u771:
  1717     01B8  29E6               	goto	l1156
  1718     01B9                     u770:
  1719     01B9                     l1140:
  1720     01B9  3001               	movlw	1
  1721     01BA  00F4               	movwf	___lwmod@counter
  1722     01BB  29C5               	goto	l1146
  1723     01BC                     l1142:
  1724     01BC  3001               	movlw	1
  1725     01BD                     u785:
  1726     01BD  1003               	clrc
  1727     01BE  0DF0               	rlf	___lwmod@divisor,f
  1728     01BF  0DF1               	rlf	___lwmod@divisor+1,f
  1729     01C0  3EFF               	addlw	-1
  1730     01C1  1D03               	skipz
  1731     01C2  29BD               	goto	u785
  1732     01C3                     l1144:
  1733     01C3  3001               	movlw	1
  1734     01C4  07F4               	addwf	___lwmod@counter,f
  1735     01C5                     l1146:
  1736     01C5  1FF1               	btfss	___lwmod@divisor+1,7
  1737     01C6  29C8               	goto	u791
  1738     01C7  29C9               	goto	u790
  1739     01C8                     u791:
  1740     01C8  29BC               	goto	l1142
  1741     01C9                     u790:
  1742     01C9                     l1148:
  1743     01C9  0871               	movf	___lwmod@divisor+1,w
  1744     01CA  0273               	subwf	___lwmod@dividend+1,w
  1745     01CB  1D03               	skipz
  1746     01CC  29CF               	goto	u805
  1747     01CD  0870               	movf	___lwmod@divisor,w
  1748     01CE  0272               	subwf	___lwmod@dividend,w
  1749     01CF                     u805:
  1750     01CF  1C03               	skipc
  1751     01D0  29D2               	goto	u801
  1752     01D1  29D3               	goto	u800
  1753     01D2                     u801:
  1754     01D2  29D9               	goto	l1152
  1755     01D3                     u800:
  1756     01D3                     l1150:
  1757     01D3  0870               	movf	___lwmod@divisor,w
  1758     01D4  02F2               	subwf	___lwmod@dividend,f
  1759     01D5  0871               	movf	___lwmod@divisor+1,w
  1760     01D6  1C03               	skipc
  1761     01D7  03F3               	decf	___lwmod@dividend+1,f
  1762     01D8  02F3               	subwf	___lwmod@dividend+1,f
  1763     01D9                     l1152:
  1764     01D9  3001               	movlw	1
  1765     01DA                     u815:
  1766     01DA  1003               	clrc
  1767     01DB  0CF1               	rrf	___lwmod@divisor+1,f
  1768     01DC  0CF0               	rrf	___lwmod@divisor,f
  1769     01DD  3EFF               	addlw	-1
  1770     01DE  1D03               	skipz
  1771     01DF  29DA               	goto	u815
  1772     01E0                     l1154:
  1773     01E0  3001               	movlw	1
  1774     01E1  02F4               	subwf	___lwmod@counter,f
  1775     01E2  1D03               	btfss	3,2
  1776     01E3  29E5               	goto	u821
  1777     01E4  29E6               	goto	u820
  1778     01E5                     u821:
  1779     01E5  29C9               	goto	l1148
  1780     01E6                     u820:
  1781     01E6                     l1156:
  1782     01E6  0873               	movf	___lwmod@dividend+1,w
  1783     01E7  00F1               	movwf	?___lwmod+1
  1784     01E8  0872               	movf	___lwmod@dividend,w
  1785     01E9  00F0               	movwf	?___lwmod
  1786     01EA                     l522:
  1787     01EA  0008               	return
  1788     01EB                     __end_of___lwmod:
  1789                           
  1790                           	psect	text7
  1791     022D                     __ptext7:	
  1792 ;; *************** function ___lwdiv *****************
  1793 ;; Defined at:
  1794 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  divisor         2    0[COMMON] unsigned int 
  1797 ;;  dividend        2    2[COMMON] unsigned int 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  quotient        2    4[COMMON] unsigned int 
  1800 ;;  counter         1    6[COMMON] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  2    0[COMMON] unsigned int 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1810 ;;      Params:         4       0       0       0       0
  1811 ;;      Locals:         3       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0
  1813 ;;      Totals:         7       0       0       0       0
  1814 ;;Total ram usage:        7 bytes
  1815 ;; Hardware stack levels used: 1
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;;		_vfpfcnvrt
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824     022D                     ___lwdiv:	
  1825                           ;psect for function ___lwdiv
  1826                           
  1827     022D                     l1112:	
  1828                           ;incstack = 0
  1829                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1830                           
  1831     022D  01F4               	clrf	___lwdiv@quotient
  1832     022E  01F5               	clrf	___lwdiv@quotient+1
  1833     022F                     l1114:
  1834     022F  0870               	movf	___lwdiv@divisor,w
  1835     0230  0471               	iorwf	___lwdiv@divisor+1,w
  1836     0231  1903               	btfsc	3,2
  1837     0232  2A34               	goto	u701
  1838     0233  2A35               	goto	u700
  1839     0234                     u701:
  1840     0234  2A6A               	goto	l1134
  1841     0235                     u700:
  1842     0235                     l1116:
  1843     0235  3001               	movlw	1
  1844     0236  00F6               	movwf	___lwdiv@counter
  1845     0237  2A41               	goto	l1122
  1846     0238                     l1118:
  1847     0238  3001               	movlw	1
  1848     0239                     u715:
  1849     0239  1003               	clrc
  1850     023A  0DF0               	rlf	___lwdiv@divisor,f
  1851     023B  0DF1               	rlf	___lwdiv@divisor+1,f
  1852     023C  3EFF               	addlw	-1
  1853     023D  1D03               	skipz
  1854     023E  2A39               	goto	u715
  1855     023F                     l1120:
  1856     023F  3001               	movlw	1
  1857     0240  07F6               	addwf	___lwdiv@counter,f
  1858     0241                     l1122:
  1859     0241  1FF1               	btfss	___lwdiv@divisor+1,7
  1860     0242  2A44               	goto	u721
  1861     0243  2A45               	goto	u720
  1862     0244                     u721:
  1863     0244  2A38               	goto	l1118
  1864     0245                     u720:
  1865     0245                     l1124:
  1866     0245  3001               	movlw	1
  1867     0246                     u735:
  1868     0246  1003               	clrc
  1869     0247  0DF4               	rlf	___lwdiv@quotient,f
  1870     0248  0DF5               	rlf	___lwdiv@quotient+1,f
  1871     0249  3EFF               	addlw	-1
  1872     024A  1D03               	skipz
  1873     024B  2A46               	goto	u735
  1874     024C  0871               	movf	___lwdiv@divisor+1,w
  1875     024D  0273               	subwf	___lwdiv@dividend+1,w
  1876     024E  1D03               	skipz
  1877     024F  2A52               	goto	u745
  1878     0250  0870               	movf	___lwdiv@divisor,w
  1879     0251  0272               	subwf	___lwdiv@dividend,w
  1880     0252                     u745:
  1881     0252  1C03               	skipc
  1882     0253  2A55               	goto	u741
  1883     0254  2A56               	goto	u740
  1884     0255                     u741:
  1885     0255  2A5D               	goto	l1130
  1886     0256                     u740:
  1887     0256                     l1126:
  1888     0256  0870               	movf	___lwdiv@divisor,w
  1889     0257  02F2               	subwf	___lwdiv@dividend,f
  1890     0258  0871               	movf	___lwdiv@divisor+1,w
  1891     0259  1C03               	skipc
  1892     025A  03F3               	decf	___lwdiv@dividend+1,f
  1893     025B  02F3               	subwf	___lwdiv@dividend+1,f
  1894     025C                     l1128:
  1895     025C  1474               	bsf	___lwdiv@quotient,0
  1896     025D                     l1130:
  1897     025D  3001               	movlw	1
  1898     025E                     u755:
  1899     025E  1003               	clrc
  1900     025F  0CF1               	rrf	___lwdiv@divisor+1,f
  1901     0260  0CF0               	rrf	___lwdiv@divisor,f
  1902     0261  3EFF               	addlw	-1
  1903     0262  1D03               	skipz
  1904     0263  2A5E               	goto	u755
  1905     0264                     l1132:
  1906     0264  3001               	movlw	1
  1907     0265  02F6               	subwf	___lwdiv@counter,f
  1908     0266  1D03               	btfss	3,2
  1909     0267  2A69               	goto	u761
  1910     0268  2A6A               	goto	u760
  1911     0269                     u761:
  1912     0269  2A45               	goto	l1124
  1913     026A                     u760:
  1914     026A                     l1134:
  1915     026A  0875               	movf	___lwdiv@quotient+1,w
  1916     026B  00F1               	movwf	?___lwdiv+1
  1917     026C  0874               	movf	___lwdiv@quotient,w
  1918     026D  00F0               	movwf	?___lwdiv
  1919     026E                     l512:
  1920     026E  0008               	return
  1921     026F                     __end_of___lwdiv:
  1922                           
  1923                           	psect	text8
  1924     026F                     __ptext8:	
  1925 ;; *************** function ___lmul *****************
  1926 ;; Defined at:
  1927 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  multiplier      4    0[COMMON] unsigned long 
  1930 ;;  multiplicand    4    4[COMMON] unsigned long 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  product         4    9[COMMON] unsigned long 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  4    0[COMMON] unsigned long 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1942 ;;      Params:         8       0       0       0       0
  1943 ;;      Locals:         4       0       0       0       0
  1944 ;;      Temps:          1       0       0       0       0
  1945 ;;      Totals:        13       0       0       0       0
  1946 ;;Total ram usage:       13 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955     026F                     ___lmul:	
  1956                           ;psect for function ___lmul
  1957                           
  1958     026F                     l1354:	
  1959                           ;incstack = 0
  1960                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1961                           
  1962     026F  3000               	movlw	0
  1963     0270  00FC               	movwf	___lmul@product+3
  1964     0271  3000               	movlw	0
  1965     0272  00FB               	movwf	___lmul@product+2
  1966     0273  3000               	movlw	0
  1967     0274  00FA               	movwf	___lmul@product+1
  1968     0275  3000               	movlw	0
  1969     0276  00F9               	movwf	___lmul@product
  1970     0277                     l1356:
  1971     0277  1C70               	btfss	___lmul@multiplier,0
  1972     0278  2A7A               	goto	u1231
  1973     0279  2A7B               	goto	u1230
  1974     027A                     u1231:
  1975     027A  2A92               	goto	l1360
  1976     027B                     u1230:
  1977     027B                     l1358:
  1978     027B  0874               	movf	___lmul@multiplicand,w
  1979     027C  07F9               	addwf	___lmul@product,f
  1980     027D  0875               	movf	___lmul@multiplicand+1,w
  1981     027E  1103               	clrz
  1982     027F  1803               	skipnc
  1983     0280  3E01               	addlw	1
  1984     0281  1903               	skipnz
  1985     0282  2A84               	goto	u1241
  1986     0283  07FA               	addwf	___lmul@product+1,f
  1987     0284                     u1241:
  1988     0284  0876               	movf	___lmul@multiplicand+2,w
  1989     0285  1103               	clrz
  1990     0286  1803               	skipnc
  1991     0287  3E01               	addlw	1
  1992     0288  1903               	skipnz
  1993     0289  2A8B               	goto	u1242
  1994     028A  07FB               	addwf	___lmul@product+2,f
  1995     028B                     u1242:
  1996     028B  0877               	movf	___lmul@multiplicand+3,w
  1997     028C  1103               	clrz
  1998     028D  1803               	skipnc
  1999     028E  3E01               	addlw	1
  2000     028F  1903               	skipnz
  2001     0290  2A92               	goto	u1243
  2002     0291  07FC               	addwf	___lmul@product+3,f
  2003     0292                     u1243:
  2004     0292                     l1360:
  2005     0292  3001               	movlw	1
  2006     0293  00F8               	movwf	??___lmul
  2007     0294                     u1255:
  2008     0294  1003               	clrc
  2009     0295  0DF4               	rlf	___lmul@multiplicand,f
  2010     0296  0DF5               	rlf	___lmul@multiplicand+1,f
  2011     0297  0DF6               	rlf	___lmul@multiplicand+2,f
  2012     0298  0DF7               	rlf	___lmul@multiplicand+3,f
  2013     0299  0BF8               	decfsz	??___lmul,f
  2014     029A  2A94               	goto	u1255
  2015     029B                     l1362:
  2016     029B  3001               	movlw	1
  2017     029C                     u1265:
  2018     029C  1003               	clrc
  2019     029D  0CF3               	rrf	___lmul@multiplier+3,f
  2020     029E  0CF2               	rrf	___lmul@multiplier+2,f
  2021     029F  0CF1               	rrf	___lmul@multiplier+1,f
  2022     02A0  0CF0               	rrf	___lmul@multiplier,f
  2023     02A1  3EFF               	addlw	-1
  2024     02A2  1D03               	skipz
  2025     02A3  2A9C               	goto	u1265
  2026     02A4  0873               	movf	___lmul@multiplier+3,w
  2027     02A5  0472               	iorwf	___lmul@multiplier+2,w
  2028     02A6  0471               	iorwf	___lmul@multiplier+1,w
  2029     02A7  0470               	iorwf	___lmul@multiplier,w
  2030     02A8  1D03               	skipz
  2031     02A9  2AAB               	goto	u1271
  2032     02AA  2AAC               	goto	u1270
  2033     02AB                     u1271:
  2034     02AB  2A77               	goto	l1356
  2035     02AC                     u1270:
  2036     02AC                     l1364:
  2037     02AC  087C               	movf	___lmul@product+3,w
  2038     02AD  00F3               	movwf	?___lmul+3
  2039     02AE  087B               	movf	___lmul@product+2,w
  2040     02AF  00F2               	movwf	?___lmul+2
  2041     02B0  087A               	movf	___lmul@product+1,w
  2042     02B1  00F1               	movwf	?___lmul+1
  2043     02B2  0879               	movf	___lmul@product,w
  2044     02B3  00F0               	movwf	?___lmul
  2045     02B4                     l246:
  2046     02B4  0008               	return
  2047     02B5                     __end_of___lmul:
  2048                           
  2049                           	psect	text9
  2050     039C                     __ptext9:	
  2051 ;; *************** function ___aldiv *****************
  2052 ;; Defined at:
  2053 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\aldiv.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  divisor         4    0[BANK0 ] long 
  2056 ;;  dividend        4    4[BANK0 ] long 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  quotient        4   10[BANK0 ] long 
  2059 ;;  sign            1    9[BANK0 ] unsigned char 
  2060 ;;  counter         1    8[BANK0 ] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  4    0[BANK0 ] long 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2070 ;;      Params:         0       8       0       0       0
  2071 ;;      Locals:         0       6       0       0       0
  2072 ;;      Temps:          1       0       0       0       0
  2073 ;;      Totals:         1      14       0       0       0
  2074 ;;Total ram usage:       15 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; This function calls:
  2077 ;;		Nothing
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083     039C                     ___aldiv:	
  2084                           ;psect for function ___aldiv
  2085                           
  2086     039C                     l1368:	
  2087                           ;incstack = 0
  2088                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2089                           
  2090     039C  1283               	bcf	3,5	;RP0=0, select bank0
  2091     039D  1303               	bcf	3,6	;RP1=0, select bank0
  2092     039E  01A9               	clrf	___aldiv@sign
  2093     039F                     l1370:
  2094     039F  1FA3               	btfss	___aldiv@divisor+3,7
  2095     03A0  2BA2               	goto	u1281
  2096     03A1  2BA3               	goto	u1280
  2097     03A2                     u1281:
  2098     03A2  2BB0               	goto	l297
  2099     03A3                     u1280:
  2100     03A3                     l1372:
  2101     03A3  09A0               	comf	___aldiv@divisor,f
  2102     03A4  09A1               	comf	___aldiv@divisor+1,f
  2103     03A5  09A2               	comf	___aldiv@divisor+2,f
  2104     03A6  09A3               	comf	___aldiv@divisor+3,f
  2105     03A7  0AA0               	incf	___aldiv@divisor,f
  2106     03A8  1903               	skipnz
  2107     03A9  0AA1               	incf	___aldiv@divisor+1,f
  2108     03AA  1903               	skipnz
  2109     03AB  0AA2               	incf	___aldiv@divisor+2,f
  2110     03AC  1903               	skipnz
  2111     03AD  0AA3               	incf	___aldiv@divisor+3,f
  2112     03AE  3001               	movlw	1
  2113     03AF  00A9               	movwf	___aldiv@sign
  2114     03B0                     l297:
  2115     03B0  1FA7               	btfss	___aldiv@dividend+3,7
  2116     03B1  2BB3               	goto	u1291
  2117     03B2  2BB4               	goto	u1290
  2118     03B3                     u1291:
  2119     03B3  2BC1               	goto	l1378
  2120     03B4                     u1290:
  2121     03B4                     l1374:
  2122     03B4  09A4               	comf	___aldiv@dividend,f
  2123     03B5  09A5               	comf	___aldiv@dividend+1,f
  2124     03B6  09A6               	comf	___aldiv@dividend+2,f
  2125     03B7  09A7               	comf	___aldiv@dividend+3,f
  2126     03B8  0AA4               	incf	___aldiv@dividend,f
  2127     03B9  1903               	skipnz
  2128     03BA  0AA5               	incf	___aldiv@dividend+1,f
  2129     03BB  1903               	skipnz
  2130     03BC  0AA6               	incf	___aldiv@dividend+2,f
  2131     03BD  1903               	skipnz
  2132     03BE  0AA7               	incf	___aldiv@dividend+3,f
  2133     03BF                     l1376:
  2134     03BF  3001               	movlw	1
  2135     03C0  06A9               	xorwf	___aldiv@sign,f
  2136     03C1                     l1378:
  2137     03C1  3000               	movlw	0
  2138     03C2  00AD               	movwf	___aldiv@quotient+3
  2139     03C3  3000               	movlw	0
  2140     03C4  00AC               	movwf	___aldiv@quotient+2
  2141     03C5  3000               	movlw	0
  2142     03C6  00AB               	movwf	___aldiv@quotient+1
  2143     03C7  3000               	movlw	0
  2144     03C8  00AA               	movwf	___aldiv@quotient
  2145     03C9                     l1380:
  2146     03C9  0823               	movf	___aldiv@divisor+3,w
  2147     03CA  0422               	iorwf	___aldiv@divisor+2,w
  2148     03CB  0421               	iorwf	___aldiv@divisor+1,w
  2149     03CC  0420               	iorwf	___aldiv@divisor,w
  2150     03CD  1903               	skipnz
  2151     03CE  2BD0               	goto	u1301
  2152     03CF  2BD1               	goto	u1300
  2153     03D0                     u1301:
  2154     03D0  2C1C               	goto	l1400
  2155     03D1                     u1300:
  2156     03D1                     l1382:
  2157     03D1  3001               	movlw	1
  2158     03D2  00A8               	movwf	___aldiv@counter
  2159     03D3  2BDF               	goto	l1386
  2160     03D4                     l1384:
  2161     03D4  3001               	movlw	1
  2162     03D5  00FD               	movwf	??___aldiv
  2163     03D6                     u1315:
  2164     03D6  1003               	clrc
  2165     03D7  0DA0               	rlf	___aldiv@divisor,f
  2166     03D8  0DA1               	rlf	___aldiv@divisor+1,f
  2167     03D9  0DA2               	rlf	___aldiv@divisor+2,f
  2168     03DA  0DA3               	rlf	___aldiv@divisor+3,f
  2169     03DB  0BFD               	decfsz	??___aldiv,f
  2170     03DC  2BD6               	goto	u1315
  2171     03DD  3001               	movlw	1
  2172     03DE  07A8               	addwf	___aldiv@counter,f
  2173     03DF                     l1386:
  2174     03DF  1FA3               	btfss	___aldiv@divisor+3,7
  2175     03E0  2BE2               	goto	u1321
  2176     03E1  2BE3               	goto	u1320
  2177     03E2                     u1321:
  2178     03E2  2BD4               	goto	l1384
  2179     03E3                     u1320:
  2180     03E3                     l1388:
  2181     03E3  3001               	movlw	1
  2182     03E4  00FD               	movwf	??___aldiv
  2183     03E5                     u1335:
  2184     03E5  1003               	clrc
  2185     03E6  0DAA               	rlf	___aldiv@quotient,f
  2186     03E7  0DAB               	rlf	___aldiv@quotient+1,f
  2187     03E8  0DAC               	rlf	___aldiv@quotient+2,f
  2188     03E9  0DAD               	rlf	___aldiv@quotient+3,f
  2189     03EA  0BFD               	decfsz	??___aldiv,f
  2190     03EB  2BE5               	goto	u1335
  2191     03EC                     l1390:
  2192     03EC  0823               	movf	___aldiv@divisor+3,w
  2193     03ED  0227               	subwf	___aldiv@dividend+3,w
  2194     03EE  1D03               	skipz
  2195     03EF  2BFA               	goto	u1345
  2196     03F0  0822               	movf	___aldiv@divisor+2,w
  2197     03F1  0226               	subwf	___aldiv@dividend+2,w
  2198     03F2  1D03               	skipz
  2199     03F3  2BFA               	goto	u1345
  2200     03F4  0821               	movf	___aldiv@divisor+1,w
  2201     03F5  0225               	subwf	___aldiv@dividend+1,w
  2202     03F6  1D03               	skipz
  2203     03F7  2BFA               	goto	u1345
  2204     03F8  0820               	movf	___aldiv@divisor,w
  2205     03F9  0224               	subwf	___aldiv@dividend,w
  2206     03FA                     u1345:
  2207     03FA  1C03               	skipc
  2208     03FB  2BFD               	goto	u1341
  2209     03FC  2BFE               	goto	u1340
  2210     03FD                     u1341:
  2211     03FD  2C0D               	goto	l1396
  2212     03FE                     u1340:
  2213     03FE                     l1392:
  2214     03FE  0820               	movf	___aldiv@divisor,w
  2215     03FF  02A4               	subwf	___aldiv@dividend,f
  2216     0400  0821               	movf	___aldiv@divisor+1,w
  2217     0401  1C03               	skipc
  2218     0402  0F21               	incfsz	___aldiv@divisor+1,w
  2219     0403  02A5               	subwf	___aldiv@dividend+1,f
  2220     0404  0822               	movf	___aldiv@divisor+2,w
  2221     0405  1C03               	skipc
  2222     0406  0F22               	incfsz	___aldiv@divisor+2,w
  2223     0407  02A6               	subwf	___aldiv@dividend+2,f
  2224     0408  0823               	movf	___aldiv@divisor+3,w
  2225     0409  1C03               	skipc
  2226     040A  0F23               	incfsz	___aldiv@divisor+3,w
  2227     040B  02A7               	subwf	___aldiv@dividend+3,f
  2228     040C                     l1394:
  2229     040C  142A               	bsf	___aldiv@quotient,0
  2230     040D                     l1396:
  2231     040D  3001               	movlw	1
  2232     040E                     u1355:
  2233     040E  1003               	clrc
  2234     040F  0CA3               	rrf	___aldiv@divisor+3,f
  2235     0410  0CA2               	rrf	___aldiv@divisor+2,f
  2236     0411  0CA1               	rrf	___aldiv@divisor+1,f
  2237     0412  0CA0               	rrf	___aldiv@divisor,f
  2238     0413  3EFF               	addlw	-1
  2239     0414  1D03               	skipz
  2240     0415  2C0E               	goto	u1355
  2241     0416                     l1398:
  2242     0416  3001               	movlw	1
  2243     0417  02A8               	subwf	___aldiv@counter,f
  2244     0418  1D03               	btfss	3,2
  2245     0419  2C1B               	goto	u1361
  2246     041A  2C1C               	goto	u1360
  2247     041B                     u1361:
  2248     041B  2BE3               	goto	l1388
  2249     041C                     u1360:
  2250     041C                     l1400:
  2251     041C  0829               	movf	___aldiv@sign,w
  2252     041D  1903               	btfsc	3,2
  2253     041E  2C20               	goto	u1371
  2254     041F  2C21               	goto	u1370
  2255     0420                     u1371:
  2256     0420  2C2C               	goto	l1404
  2257     0421                     u1370:
  2258     0421                     l1402:
  2259     0421  09AA               	comf	___aldiv@quotient,f
  2260     0422  09AB               	comf	___aldiv@quotient+1,f
  2261     0423  09AC               	comf	___aldiv@quotient+2,f
  2262     0424  09AD               	comf	___aldiv@quotient+3,f
  2263     0425  0AAA               	incf	___aldiv@quotient,f
  2264     0426  1903               	skipnz
  2265     0427  0AAB               	incf	___aldiv@quotient+1,f
  2266     0428  1903               	skipnz
  2267     0429  0AAC               	incf	___aldiv@quotient+2,f
  2268     042A  1903               	skipnz
  2269     042B  0AAD               	incf	___aldiv@quotient+3,f
  2270     042C                     l1404:
  2271     042C  082D               	movf	___aldiv@quotient+3,w
  2272     042D  00A3               	movwf	?___aldiv+3
  2273     042E  082C               	movf	___aldiv@quotient+2,w
  2274     042F  00A2               	movwf	?___aldiv+2
  2275     0430  082B               	movf	___aldiv@quotient+1,w
  2276     0431  00A1               	movwf	?___aldiv+1
  2277     0432  082A               	movf	___aldiv@quotient,w
  2278     0433  00A0               	movwf	?___aldiv
  2279     0434                     l307:
  2280     0434  0008               	return
  2281     0435                     __end_of___aldiv:
  2282                           
  2283                           	psect	text10
  2284     01EB                     __ptext10:	
  2285 ;; *************** function _LCD_putrs *****************
  2286 ;; Defined at:
  2287 ;;		line 136 in file "lcd.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  a               2    6[COMMON] PTR const unsigned char 
  2290 ;;		 -> main@buffer(10), STR_1(10), 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  i               2   11[COMMON] int 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2302 ;;      Params:         2       0       0       0       0
  2303 ;;      Locals:         2       0       0       0       0
  2304 ;;      Temps:          3       0       0       0       0
  2305 ;;      Totals:         7       0       0       0       0
  2306 ;;Total ram usage:        7 bytes
  2307 ;; Hardware stack levels used: 1
  2308 ;; Hardware stack levels required when called: 2
  2309 ;; This function calls:
  2310 ;;		_LCD_putc
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316     01EB                     _LCD_putrs:	
  2317                           ;psect for function _LCD_putrs
  2318                           
  2319     01EB                     l1332:	
  2320                           ;incstack = 0
  2321                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2322                           
  2323                           
  2324                           ;lcd.c: 138:     for ( int i = 0; a[i] != '\0'; ++i ) {
  2325     01EB  01FB               	clrf	LCD_putrs@i
  2326     01EC  01FC               	clrf	LCD_putrs@i+1
  2327     01ED  2A10               	goto	l1338
  2328     01EE                     l1334:
  2329                           
  2330                           ;lcd.c: 139:         LCD_putc(a[i]);
  2331     01EE  087B               	movf	LCD_putrs@i,w
  2332     01EF  0776               	addwf	LCD_putrs@a,w
  2333     01F0  00F9               	movwf	??_LCD_putrs+1
  2334     01F1  0877               	movf	LCD_putrs@a+1,w
  2335     01F2  00F8               	movwf	??_LCD_putrs
  2336     01F3  1803               	skipnc
  2337     01F4  0AF8               	incf	??_LCD_putrs,f
  2338     01F5  1FFB               	btfss	LCD_putrs@i,7
  2339     01F6  29F8               	goto	u1200
  2340     01F7  03F8               	decf	??_LCD_putrs,f
  2341     01F8                     u1200:
  2342     01F8  0878               	movf	??_LCD_putrs,w
  2343     01F9  00FA               	movwf	??_LCD_putrs+2
  2344     01FA  087A               	movf	??_LCD_putrs+2,w
  2345     01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2346     01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2347     01FD  00FF               	movwf	btemp+1
  2348     01FE  0879               	movf	??_LCD_putrs+1,w
  2349     01FF  0084               	movwf	4
  2350     0200  120A  118A  2003  120A  118A  	fcall	stringtab
  2351     0205  120A  118A  230A  120A  118A  	fcall	_LCD_putc
  2352     020A                     l1336:
  2353                           
  2354                           ;lcd.c: 140:     }
  2355     020A  3001               	movlw	1
  2356     020B  07FB               	addwf	LCD_putrs@i,f
  2357     020C  1803               	skipnc
  2358     020D  0AFC               	incf	LCD_putrs@i+1,f
  2359     020E  3000               	movlw	0
  2360     020F  07FC               	addwf	LCD_putrs@i+1,f
  2361     0210                     l1338:
  2362     0210  087B               	movf	LCD_putrs@i,w
  2363     0211  0776               	addwf	LCD_putrs@a,w
  2364     0212  00F9               	movwf	??_LCD_putrs+1
  2365     0213  0877               	movf	LCD_putrs@a+1,w
  2366     0214  00F8               	movwf	??_LCD_putrs
  2367     0215  1803               	skipnc
  2368     0216  0AF8               	incf	??_LCD_putrs,f
  2369     0217  1FFB               	btfss	LCD_putrs@i,7
  2370     0218  2A1A               	goto	u1210
  2371     0219  03F8               	decf	??_LCD_putrs,f
  2372     021A                     u1210:
  2373     021A  0878               	movf	??_LCD_putrs,w
  2374     021B  00FA               	movwf	??_LCD_putrs+2
  2375     021C  087A               	movf	??_LCD_putrs+2,w
  2376     021D  1283               	bcf	3,5	;RP0=0, select bank0
  2377     021E  1303               	bcf	3,6	;RP1=0, select bank0
  2378     021F  00FF               	movwf	btemp+1
  2379     0220  0879               	movf	??_LCD_putrs+1,w
  2380     0221  0084               	movwf	4
  2381     0222  120A  118A  2003  120A  118A  	fcall	stringtab
  2382     0227  3A00               	xorlw	0
  2383     0228  1D03               	skipz
  2384     0229  2A2B               	goto	u1221
  2385     022A  2A2C               	goto	u1220
  2386     022B                     u1221:
  2387     022B  29EE               	goto	l1334
  2388     022C                     u1220:
  2389     022C                     l146:
  2390     022C  0008               	return
  2391     022D                     __end_of_LCD_putrs:
  2392                           
  2393                           	psect	text11
  2394     030A                     __ptext11:	
  2395 ;; *************** function _LCD_putc *****************
  2396 ;; Defined at:
  2397 ;;		line 111 in file "lcd.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  c               1    wreg     unsigned char 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  c               1    5[COMMON] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         0       0       0       0       0
  2412 ;;      Locals:         1       0       0       0       0
  2413 ;;      Temps:          2       0       0       0       0
  2414 ;;      Totals:         3       0       0       0       0
  2415 ;;Total ram usage:        3 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 1
  2418 ;; This function calls:
  2419 ;;		_LCD_Out
  2420 ;; This function is called by:
  2421 ;;		_LCD_putrs
  2422 ;;		_LCD_puts
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426     030A                     _LCD_putc:	
  2427                           ;psect for function _LCD_putc
  2428                           
  2429                           
  2430                           ;incstack = 0
  2431                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2432                           ;LCD_putc@c stored from wreg
  2433     030A  00F5               	movwf	LCD_putc@c
  2434     030B                     l1252:
  2435                           
  2436                           ;lcd.c: 113:    *(lcd.PORT) |= 1 << lcd.RS;
  2437     030B  1283               	bcf	3,5	;RP0=0, select bank0
  2438     030C  1303               	bcf	3,6	;RP1=0, select bank0
  2439     030D  085D               	movf	_lcd,w
  2440     030E  0084               	movwf	4
  2441     030F  1783               	bsf	3,7
  2442     0310  1C5E               	btfss	_lcd+1,0
  2443     0311  1383               	bcf	3,7
  2444     0312  3001               	movlw	1
  2445     0313  00F3               	movwf	??_LCD_putc
  2446     0314  085F               	movf	_lcd+2,w
  2447     0315  3907               	andlw	7
  2448     0316  3E01               	addlw	1
  2449     0317  2B1A               	goto	u1084
  2450     0318                     u1085:
  2451     0318  1003               	clrc
  2452     0319  0DF3               	rlf	??_LCD_putc,f
  2453     031A                     u1084:
  2454     031A  3EFF               	addlw	-1
  2455     031B  1D03               	skipz
  2456     031C  2B18               	goto	u1085
  2457     031D  0873               	movf	??_LCD_putc,w
  2458     031E  0480               	iorwf	0,f
  2459     031F                     l1254:
  2460                           
  2461                           ;lcd.c: 114:     LCD_Out((c & 0xF0) >> 4);
  2462     031F  0875               	movf	LCD_putc@c,w
  2463     0320  00F3               	movwf	??_LCD_putc
  2464     0321  3004               	movlw	4
  2465     0322                     u1095:
  2466     0322  1003               	clrc
  2467     0323  0CF3               	rrf	??_LCD_putc,f
  2468     0324  3EFF               	addlw	-1
  2469     0325  1D03               	skipz
  2470     0326  2B22               	goto	u1095
  2471     0327  0873               	movf	??_LCD_putc,w
  2472     0328  390F               	andlw	15
  2473     0329  120A  118A  257B  120A  118A  	fcall	_LCD_Out
  2474     032E                     l1256:
  2475                           
  2476                           ;lcd.c: 116:     *(lcd.PORT) |= 1 << lcd.EN;
  2477     032E  1283               	bcf	3,5	;RP0=0, select bank0
  2478     032F  1303               	bcf	3,6	;RP1=0, select bank0
  2479     0330  085D               	movf	_lcd,w
  2480     0331  0084               	movwf	4
  2481     0332  1783               	bsf	3,7
  2482     0333  1C5E               	btfss	_lcd+1,0
  2483     0334  1383               	bcf	3,7
  2484     0335  3001               	movlw	1
  2485     0336  00F3               	movwf	??_LCD_putc
  2486     0337  0C5F               	rrf	_lcd+2,w
  2487     0338  00F4               	movwf	??_LCD_putc+1
  2488     0339  0CF4               	rrf	??_LCD_putc+1,f
  2489     033A  0C74               	rrf	??_LCD_putc+1,w
  2490     033B  3907               	andlw	7
  2491     033C  3E01               	addlw	1
  2492     033D  2B40               	goto	u1104
  2493     033E                     u1105:
  2494     033E  1003               	clrc
  2495     033F  0DF3               	rlf	??_LCD_putc,f
  2496     0340                     u1104:
  2497     0340  3EFF               	addlw	-1
  2498     0341  1D03               	skipz
  2499     0342  2B3E               	goto	u1105
  2500     0343  0873               	movf	??_LCD_putc,w
  2501     0344  0480               	iorwf	0,f
  2502     0345                     l1258:
  2503                           
  2504                           ;lcd.c: 117:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2505     0345  300D               	movlw	13
  2506     0346  00F3               	movwf	??_LCD_putc
  2507     0347                     u1407:
  2508     0347  0BF3               	decfsz	??_LCD_putc,f
  2509     0348  2B47               	goto	u1407
  2510     0349                     l1260:
  2511                           
  2512                           ;lcd.c: 118:     *(lcd.PORT) &= ~(1 << lcd.EN);
  2513     0349  1283               	bcf	3,5	;RP0=0, select bank0
  2514     034A  1303               	bcf	3,6	;RP1=0, select bank0
  2515     034B  085D               	movf	_lcd,w
  2516     034C  0084               	movwf	4
  2517     034D  1783               	bsf	3,7
  2518     034E  1C5E               	btfss	_lcd+1,0
  2519     034F  1383               	bcf	3,7
  2520     0350  3001               	movlw	1
  2521     0351  00F3               	movwf	??_LCD_putc
  2522     0352  0C5F               	rrf	_lcd+2,w
  2523     0353  00F4               	movwf	??_LCD_putc+1
  2524     0354  0CF4               	rrf	??_LCD_putc+1,f
  2525     0355  0C74               	rrf	??_LCD_putc+1,w
  2526     0356  3907               	andlw	7
  2527     0357  3E01               	addlw	1
  2528     0358  2B5B               	goto	u1114
  2529     0359                     u1115:
  2530     0359  1003               	clrc
  2531     035A  0DF3               	rlf	??_LCD_putc,f
  2532     035B                     u1114:
  2533     035B  3EFF               	addlw	-1
  2534     035C  1D03               	skipz
  2535     035D  2B59               	goto	u1115
  2536     035E  0873               	movf	??_LCD_putc,w
  2537     035F  3AFF               	xorlw	255
  2538     0360  0580               	andwf	0,f
  2539     0361                     l1262:
  2540                           
  2541                           ;lcd.c: 120:     LCD_Out(c & 0x0F);
  2542     0361  0875               	movf	LCD_putc@c,w
  2543     0362  390F               	andlw	15
  2544     0363  120A  118A  257B  120A  118A  	fcall	_LCD_Out
  2545     0368                     l1264:
  2546                           
  2547                           ;lcd.c: 122:     *(lcd.PORT) |= 1 << lcd.EN;
  2548     0368  1283               	bcf	3,5	;RP0=0, select bank0
  2549     0369  1303               	bcf	3,6	;RP1=0, select bank0
  2550     036A  085D               	movf	_lcd,w
  2551     036B  0084               	movwf	4
  2552     036C  1783               	bsf	3,7
  2553     036D  1C5E               	btfss	_lcd+1,0
  2554     036E  1383               	bcf	3,7
  2555     036F  3001               	movlw	1
  2556     0370  00F3               	movwf	??_LCD_putc
  2557     0371  0C5F               	rrf	_lcd+2,w
  2558     0372  00F4               	movwf	??_LCD_putc+1
  2559     0373  0CF4               	rrf	??_LCD_putc+1,f
  2560     0374  0C74               	rrf	??_LCD_putc+1,w
  2561     0375  3907               	andlw	7
  2562     0376  3E01               	addlw	1
  2563     0377  2B7A               	goto	u1124
  2564     0378                     u1125:
  2565     0378  1003               	clrc
  2566     0379  0DF3               	rlf	??_LCD_putc,f
  2567     037A                     u1124:
  2568     037A  3EFF               	addlw	-1
  2569     037B  1D03               	skipz
  2570     037C  2B78               	goto	u1125
  2571     037D  0873               	movf	??_LCD_putc,w
  2572     037E  0480               	iorwf	0,f
  2573                           
  2574                           ;lcd.c: 123:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2575     037F  300D               	movlw	13
  2576     0380  00F3               	movwf	??_LCD_putc
  2577     0381                     u1417:
  2578     0381  0BF3               	decfsz	??_LCD_putc,f
  2579     0382  2B81               	goto	u1417
  2580     0383                     l1266:
  2581                           
  2582                           ;lcd.c: 124:     *(lcd.PORT) &= ~(1 << lcd.EN);
  2583     0383  1283               	bcf	3,5	;RP0=0, select bank0
  2584     0384  1303               	bcf	3,6	;RP1=0, select bank0
  2585     0385  085D               	movf	_lcd,w
  2586     0386  0084               	movwf	4
  2587     0387  1783               	bsf	3,7
  2588     0388  1C5E               	btfss	_lcd+1,0
  2589     0389  1383               	bcf	3,7
  2590     038A  3001               	movlw	1
  2591     038B  00F3               	movwf	??_LCD_putc
  2592     038C  0C5F               	rrf	_lcd+2,w
  2593     038D  00F4               	movwf	??_LCD_putc+1
  2594     038E  0CF4               	rrf	??_LCD_putc+1,f
  2595     038F  0C74               	rrf	??_LCD_putc+1,w
  2596     0390  3907               	andlw	7
  2597     0391  3E01               	addlw	1
  2598     0392  2B95               	goto	u1134
  2599     0393                     u1135:
  2600     0393  1003               	clrc
  2601     0394  0DF3               	rlf	??_LCD_putc,f
  2602     0395                     u1134:
  2603     0395  3EFF               	addlw	-1
  2604     0396  1D03               	skipz
  2605     0397  2B93               	goto	u1135
  2606     0398  0873               	movf	??_LCD_putc,w
  2607     0399  3AFF               	xorlw	255
  2608     039A  0580               	andwf	0,f
  2609     039B                     l134:
  2610     039B  0008               	return
  2611     039C                     __end_of_LCD_putc:
  2612                           
  2613                           	psect	text12
  2614     04CF                     __ptext12:	
  2615 ;; *************** function _LCD_Init *****************
  2616 ;; Defined at:
  2617 ;;		line 53 in file "lcd.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  display         5    6[COMMON] struct .
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  cmd             1   13[COMMON] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      _Bool 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2631 ;;      Params:         5       0       0       0       0
  2632 ;;      Locals:         1       0       0       0       0
  2633 ;;      Temps:          2       0       0       0       0
  2634 ;;      Totals:         8       0       0       0       0
  2635 ;;Total ram usage:        8 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; Hardware stack levels required when called: 2
  2638 ;; This function calls:
  2639 ;;		_LCD_Write
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645     04CF                     _LCD_Init:	
  2646                           ;psect for function _LCD_Init
  2647                           
  2648     04CF                     l1286:	
  2649                           ;incstack = 0
  2650                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2651                           
  2652                           
  2653                           ;lcd.c: 55:     lcd = display;
  2654     04CF  305D               	movlw	_lcd& (0+255)
  2655     04D0  0084               	movwf	4
  2656     04D1  0876               	movf	LCD_Init@display,w
  2657     04D2  1383               	bcf	3,7	;select IRP bank0
  2658     04D3  0080               	movwf	0
  2659     04D4  0A84               	incf	4,f
  2660     04D5  0877               	movf	LCD_Init@display+1,w
  2661     04D6  0080               	movwf	0
  2662     04D7  0A84               	incf	4,f
  2663     04D8  0878               	movf	LCD_Init@display+2,w
  2664     04D9  0080               	movwf	0
  2665     04DA  0A84               	incf	4,f
  2666     04DB  0879               	movf	LCD_Init@display+3,w
  2667     04DC  0080               	movwf	0
  2668     04DD  0A84               	incf	4,f
  2669     04DE  087A               	movf	LCD_Init@display+4,w
  2670     04DF  0080               	movwf	0
  2671     04E0                     l1288:
  2672                           
  2673                           ;lcd.c: 64:     if ( lcd.PORT == &PORTA ) {
  2674     04E0  3000               	movlw	0
  2675     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2676     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2677     04E3  065E               	xorwf	_lcd+1,w
  2678     04E4  1D03               	skipz
  2679     04E5  2CE8               	goto	u1165
  2680     04E6  3005               	movlw	5
  2681     04E7  065D               	xorwf	_lcd,w
  2682     04E8                     u1165:
  2683     04E8  1D03               	skipz
  2684     04E9  2CEB               	goto	u1161
  2685     04EA  2CEC               	goto	u1160
  2686     04EB                     u1161:
  2687     04EB  2CF0               	goto	l1292
  2688     04EC                     u1160:
  2689     04EC                     l1290:
  2690                           
  2691                           ;lcd.c: 65:         TRISA = 0x00;
  2692     04EC  1683               	bsf	3,5	;RP0=1, select bank1
  2693     04ED  1303               	bcf	3,6	;RP1=0, select bank1
  2694     04EE  0185               	clrf	5	;volatile
  2695                           
  2696                           ;lcd.c: 66:     }
  2697     04EF  2D0B               	goto	l1300
  2698     04F0                     l1292:
  2699     04F0  3000               	movlw	0
  2700     04F1  065E               	xorwf	_lcd+1,w
  2701     04F2  1D03               	skipz
  2702     04F3  2CF6               	goto	u1175
  2703     04F4  3006               	movlw	6
  2704     04F5  065D               	xorwf	_lcd,w
  2705     04F6                     u1175:
  2706     04F6  1D03               	skipz
  2707     04F7  2CF9               	goto	u1171
  2708     04F8  2CFA               	goto	u1170
  2709     04F9                     u1171:
  2710     04F9  2CFE               	goto	l1296
  2711     04FA                     u1170:
  2712     04FA                     l1294:
  2713                           
  2714                           ;lcd.c: 68:         TRISB = 0x00;
  2715     04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2716     04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2717     04FC  0186               	clrf	6	;volatile
  2718                           
  2719                           ;lcd.c: 69:     }
  2720     04FD  2D0B               	goto	l1300
  2721     04FE                     l1296:
  2722     04FE  3000               	movlw	0
  2723     04FF  065E               	xorwf	_lcd+1,w
  2724     0500  1D03               	skipz
  2725     0501  2D04               	goto	u1185
  2726     0502  3007               	movlw	7
  2727     0503  065D               	xorwf	_lcd,w
  2728     0504                     u1185:
  2729     0504  1D03               	skipz
  2730     0505  2D07               	goto	u1181
  2731     0506  2D08               	goto	u1180
  2732     0507                     u1181:
  2733     0507  2D7A               	goto	l118
  2734     0508                     u1180:
  2735     0508                     l1298:
  2736                           
  2737                           ;lcd.c: 71:         TRISC = 0x00;
  2738     0508  1683               	bsf	3,5	;RP0=1, select bank1
  2739     0509  1303               	bcf	3,6	;RP1=0, select bank1
  2740     050A  0187               	clrf	7	;volatile
  2741     050B                     l1300:	
  2742                           ;lcd.c: 72:     }
  2743                           
  2744                           
  2745                           ;lcd.c: 86:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2746     050B  301A               	movlw	26
  2747     050C  00FC               	movwf	??_LCD_Init+1
  2748     050D  30F8               	movlw	248
  2749     050E  00FB               	movwf	??_LCD_Init
  2750     050F                     u1427:
  2751     050F  0BFB               	decfsz	??_LCD_Init,f
  2752     0510  2D0F               	goto	u1427
  2753     0511  0BFC               	decfsz	??_LCD_Init+1,f
  2754     0512  2D0F               	goto	u1427
  2755     0513  0000               	nop
  2756     0514                     l1302:
  2757                           
  2758                           ;lcd.c: 89:     LCD_Write(0x03);
  2759     0514  3003               	movlw	3
  2760     0515  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
  2761     051A                     l1304:
  2762                           
  2763                           ;lcd.c: 90:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2764     051A  3007               	movlw	7
  2765     051B  00FC               	movwf	??_LCD_Init+1
  2766     051C  307D               	movlw	125
  2767     051D  00FB               	movwf	??_LCD_Init
  2768     051E                     u1437:
  2769     051E  0BFB               	decfsz	??_LCD_Init,f
  2770     051F  2D1E               	goto	u1437
  2771     0520  0BFC               	decfsz	??_LCD_Init+1,f
  2772     0521  2D1E               	goto	u1437
  2773                           
  2774                           ;lcd.c: 91:     LCD_Write(0x03);
  2775     0522  3003               	movlw	3
  2776     0523  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
  2777     0528                     l1306:
  2778                           
  2779                           ;lcd.c: 92:     _delay((unsigned long)((16)*(4000000/4000.0)));
  2780     0528  3015               	movlw	21
  2781     0529  00FC               	movwf	??_LCD_Init+1
  2782     052A  30C6               	movlw	198
  2783     052B  00FB               	movwf	??_LCD_Init
  2784     052C                     u1447:
  2785     052C  0BFB               	decfsz	??_LCD_Init,f
  2786     052D  2D2C               	goto	u1447
  2787     052E  0BFC               	decfsz	??_LCD_Init+1,f
  2788     052F  2D2C               	goto	u1447
  2789     0530  0000               	nop
  2790     0531                     l1308:
  2791                           
  2792                           ;lcd.c: 93:     LCD_Write(0x03);
  2793     0531  3003               	movlw	3
  2794     0532  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
  2795     0537                     l1310:
  2796                           
  2797                           ;lcd.c: 96:     LCD_Write(0x02);
  2798     0537  3002               	movlw	2
  2799     0538  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
  2800     053D                     l1312:
  2801     053D  3002               	movlw	2
  2802     053E  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
  2803     0543                     l1314:
  2804     0543  3008               	movlw	8
  2805     0544  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
  2806     0549                     l1316:
  2807     0549  3000               	movlw	0
  2808     054A  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
  2809     054F                     l1318:
  2810     054F  3006               	movlw	6
  2811     0550  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
  2812     0555                     l1320:
  2813     0555  3008               	movlw	8
  2814     0556  00FD               	movwf	LCD_Init@cmd
  2815     0557                     l1322:
  2816     0557  157D               	bsf	LCD_Init@cmd,2
  2817     0558                     l1328:
  2818     0558  087D               	movf	LCD_Init@cmd,w
  2819     0559  00FB               	movwf	??_LCD_Init
  2820     055A  3004               	movlw	4
  2821     055B                     u1195:
  2822     055B  1003               	clrc
  2823     055C  0CFB               	rrf	??_LCD_Init,f
  2824     055D  3EFF               	addlw	-1
  2825     055E  1D03               	skipz
  2826     055F  2D5B               	goto	u1195
  2827     0560  087B               	movf	??_LCD_Init,w
  2828     0561  390F               	andlw	15
  2829     0562  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
  2830     0567  087D               	movf	LCD_Init@cmd,w
  2831     0568  390F               	andlw	15
  2832     0569  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
  2833     056E                     l130:	
  2834                           ;lcd.c: 106:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while 
      +                          ( 0 );
  2835                           
  2836     056E  3000               	movlw	0
  2837     056F  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
  2838     0574  3001               	movlw	1
  2839     0575  120A  118A  22B5  120A  118A  	fcall	_LCD_Write
  2840     057A                     l118:
  2841     057A  0008               	return
  2842     057B                     __end_of_LCD_Init:
  2843                           
  2844                           	psect	text13
  2845     02B5                     __ptext13:	
  2846 ;; *************** function _LCD_Write *****************
  2847 ;; Defined at:
  2848 ;;		line 42 in file "lcd.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  c               1    wreg     unsigned char 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  c               1    5[COMMON] unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2862 ;;      Params:         0       0       0       0       0
  2863 ;;      Locals:         1       0       0       0       0
  2864 ;;      Temps:          2       0       0       0       0
  2865 ;;      Totals:         3       0       0       0       0
  2866 ;;Total ram usage:        3 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; Hardware stack levels required when called: 1
  2869 ;; This function calls:
  2870 ;;		_LCD_Out
  2871 ;; This function is called by:
  2872 ;;		_main
  2873 ;;		_LCD_Init
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877     02B5                     _LCD_Write:	
  2878                           ;psect for function _LCD_Write
  2879                           
  2880                           
  2881                           ;incstack = 0
  2882                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2883                           ;LCD_Write@c stored from wreg
  2884     02B5  00F5               	movwf	LCD_Write@c
  2885     02B6                     l1242:
  2886                           
  2887                           ;lcd.c: 44:     *(lcd.PORT) &= ~(1 << lcd.RS);
  2888     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2889     02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2890     02B8  085D               	movf	_lcd,w
  2891     02B9  0084               	movwf	4
  2892     02BA  1783               	bsf	3,7
  2893     02BB  1C5E               	btfss	_lcd+1,0
  2894     02BC  1383               	bcf	3,7
  2895     02BD  3001               	movlw	1
  2896     02BE  00F3               	movwf	??_LCD_Write
  2897     02BF  085F               	movf	_lcd+2,w
  2898     02C0  3907               	andlw	7
  2899     02C1  3E01               	addlw	1
  2900     02C2  2AC5               	goto	u1054
  2901     02C3                     u1055:
  2902     02C3  1003               	clrc
  2903     02C4  0DF3               	rlf	??_LCD_Write,f
  2904     02C5                     u1054:
  2905     02C5  3EFF               	addlw	-1
  2906     02C6  1D03               	skipz
  2907     02C7  2AC3               	goto	u1055
  2908     02C8  0873               	movf	??_LCD_Write,w
  2909     02C9  3AFF               	xorlw	255
  2910     02CA  0580               	andwf	0,f
  2911     02CB                     l1244:
  2912                           
  2913                           ;lcd.c: 45:     LCD_Out(c);
  2914     02CB  0875               	movf	LCD_Write@c,w
  2915     02CC  120A  118A  257B  120A  118A  	fcall	_LCD_Out
  2916     02D1                     l1246:
  2917                           
  2918                           ;lcd.c: 47:     *(lcd.PORT) |= 1 << lcd.EN;
  2919     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2920     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2921     02D3  085D               	movf	_lcd,w
  2922     02D4  0084               	movwf	4
  2923     02D5  1783               	bsf	3,7
  2924     02D6  1C5E               	btfss	_lcd+1,0
  2925     02D7  1383               	bcf	3,7
  2926     02D8  3001               	movlw	1
  2927     02D9  00F3               	movwf	??_LCD_Write
  2928     02DA  0C5F               	rrf	_lcd+2,w
  2929     02DB  00F4               	movwf	??_LCD_Write+1
  2930     02DC  0CF4               	rrf	??_LCD_Write+1,f
  2931     02DD  0C74               	rrf	??_LCD_Write+1,w
  2932     02DE  3907               	andlw	7
  2933     02DF  3E01               	addlw	1
  2934     02E0  2AE3               	goto	u1064
  2935     02E1                     u1065:
  2936     02E1  1003               	clrc
  2937     02E2  0DF3               	rlf	??_LCD_Write,f
  2938     02E3                     u1064:
  2939     02E3  3EFF               	addlw	-1
  2940     02E4  1D03               	skipz
  2941     02E5  2AE1               	goto	u1065
  2942     02E6  0873               	movf	??_LCD_Write,w
  2943     02E7  0480               	iorwf	0,f
  2944     02E8                     l1248:
  2945                           
  2946                           ;lcd.c: 48:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2947     02E8  3006               	movlw	6
  2948     02E9  00F4               	movwf	??_LCD_Write+1
  2949     02EA  3030               	movlw	48
  2950     02EB  00F3               	movwf	??_LCD_Write
  2951     02EC                     u1457:
  2952     02EC  0BF3               	decfsz	??_LCD_Write,f
  2953     02ED  2AEC               	goto	u1457
  2954     02EE  0BF4               	decfsz	??_LCD_Write+1,f
  2955     02EF  2AEC               	goto	u1457
  2956     02F0  0000               	nop
  2957     02F1                     l1250:
  2958                           
  2959                           ;lcd.c: 49:     *(lcd.PORT) &= ~(1 << lcd.EN);
  2960     02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2961     02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2962     02F3  085D               	movf	_lcd,w
  2963     02F4  0084               	movwf	4
  2964     02F5  1783               	bsf	3,7
  2965     02F6  1C5E               	btfss	_lcd+1,0
  2966     02F7  1383               	bcf	3,7
  2967     02F8  3001               	movlw	1
  2968     02F9  00F3               	movwf	??_LCD_Write
  2969     02FA  0C5F               	rrf	_lcd+2,w
  2970     02FB  00F4               	movwf	??_LCD_Write+1
  2971     02FC  0CF4               	rrf	??_LCD_Write+1,f
  2972     02FD  0C74               	rrf	??_LCD_Write+1,w
  2973     02FE  3907               	andlw	7
  2974     02FF  3E01               	addlw	1
  2975     0300  2B03               	goto	u1074
  2976     0301                     u1075:
  2977     0301  1003               	clrc
  2978     0302  0DF3               	rlf	??_LCD_Write,f
  2979     0303                     u1074:
  2980     0303  3EFF               	addlw	-1
  2981     0304  1D03               	skipz
  2982     0305  2B01               	goto	u1075
  2983     0306  0873               	movf	??_LCD_Write,w
  2984     0307  3AFF               	xorlw	255
  2985     0308  0580               	andwf	0,f
  2986     0309                     l109:
  2987     0309  0008               	return
  2988     030A                     __end_of_LCD_Write:
  2989                           
  2990                           	psect	text14
  2991     057B                     __ptext14:	
  2992 ;; *************** function _LCD_Out *****************
  2993 ;; Defined at:
  2994 ;;		line 10 in file "lcd.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  c               1    wreg     unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  c               1    2[COMMON] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3008 ;;      Params:         0       0       0       0       0
  3009 ;;      Locals:         1       0       0       0       0
  3010 ;;      Temps:          2       0       0       0       0
  3011 ;;      Totals:         3       0       0       0       0
  3012 ;;Total ram usage:        3 bytes
  3013 ;; Hardware stack levels used: 1
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_LCD_Write
  3018 ;;		_LCD_putc
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022     057B                     _LCD_Out:	
  3023                           ;psect for function _LCD_Out
  3024                           
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  3028                           ;LCD_Out@c stored from wreg
  3029     057B  00F2               	movwf	LCD_Out@c
  3030     057C                     l1174:
  3031                           
  3032                           ;lcd.c: 12:     if ( c & 1 ){
  3033     057C  1C72               	btfss	LCD_Out@c,0
  3034     057D  2D7F               	goto	u881
  3035     057E  2D80               	goto	u880
  3036     057F                     u881:
  3037     057F  2D95               	goto	l1178
  3038     0580                     u880:
  3039     0580                     l1176:
  3040                           
  3041                           ;lcd.c: 13:         *(lcd.PORT) |= 1 << lcd.D4;
  3042     0580  1283               	bcf	3,5	;RP0=0, select bank0
  3043     0581  1303               	bcf	3,6	;RP1=0, select bank0
  3044     0582  085D               	movf	_lcd,w
  3045     0583  0084               	movwf	4
  3046     0584  1783               	bsf	3,7
  3047     0585  1C5E               	btfss	_lcd+1,0
  3048     0586  1383               	bcf	3,7
  3049     0587  3001               	movlw	1
  3050     0588  00F0               	movwf	??_LCD_Out
  3051     0589  0860               	movf	_lcd+3,w
  3052     058A  3907               	andlw	7
  3053     058B  3E01               	addlw	1
  3054     058C  2D8F               	goto	u894
  3055     058D                     u895:
  3056     058D  1003               	clrc
  3057     058E  0DF0               	rlf	??_LCD_Out,f
  3058     058F                     u894:
  3059     058F  3EFF               	addlw	-1
  3060     0590  1D03               	skipz
  3061     0591  2D8D               	goto	u895
  3062     0592  0870               	movf	??_LCD_Out,w
  3063     0593  0480               	iorwf	0,f
  3064                           
  3065                           ;lcd.c: 14:     }
  3066     0594  2DAA               	goto	l1180
  3067     0595                     l1178:
  3068                           
  3069                           ;lcd.c: 16:          *(lcd.PORT) &= ~(1 << lcd.D4);
  3070     0595  1283               	bcf	3,5	;RP0=0, select bank0
  3071     0596  1303               	bcf	3,6	;RP1=0, select bank0
  3072     0597  085D               	movf	_lcd,w
  3073     0598  0084               	movwf	4
  3074     0599  1783               	bsf	3,7
  3075     059A  1C5E               	btfss	_lcd+1,0
  3076     059B  1383               	bcf	3,7
  3077     059C  3001               	movlw	1
  3078     059D  00F0               	movwf	??_LCD_Out
  3079     059E  0860               	movf	_lcd+3,w
  3080     059F  3907               	andlw	7
  3081     05A0  3E01               	addlw	1
  3082     05A1  2DA4               	goto	u904
  3083     05A2                     u905:
  3084     05A2  1003               	clrc
  3085     05A3  0DF0               	rlf	??_LCD_Out,f
  3086     05A4                     u904:
  3087     05A4  3EFF               	addlw	-1
  3088     05A5  1D03               	skipz
  3089     05A6  2DA2               	goto	u905
  3090     05A7  0870               	movf	??_LCD_Out,w
  3091     05A8  3AFF               	xorlw	255
  3092     05A9  0580               	andwf	0,f
  3093     05AA                     l1180:
  3094                           
  3095                           ;lcd.c: 19:     if ( c & 2 ) {
  3096     05AA  1CF2               	btfss	LCD_Out@c,1
  3097     05AB  2DAD               	goto	u911
  3098     05AC  2DAE               	goto	u910
  3099     05AD                     u911:
  3100     05AD  2DC4               	goto	l1184
  3101     05AE                     u910:
  3102     05AE                     l1182:
  3103                           
  3104                           ;lcd.c: 20:         *(lcd.PORT) |= 1 << lcd.D5;
  3105     05AE  085D               	movf	_lcd,w
  3106     05AF  0084               	movwf	4
  3107     05B0  1783               	bsf	3,7
  3108     05B1  1C5E               	btfss	_lcd+1,0
  3109     05B2  1383               	bcf	3,7
  3110     05B3  3001               	movlw	1
  3111     05B4  00F0               	movwf	??_LCD_Out
  3112     05B5  0C60               	rrf	_lcd+3,w
  3113     05B6  00F1               	movwf	??_LCD_Out+1
  3114     05B7  0CF1               	rrf	??_LCD_Out+1,f
  3115     05B8  0C71               	rrf	??_LCD_Out+1,w
  3116     05B9  3907               	andlw	7
  3117     05BA  3E01               	addlw	1
  3118     05BB  2DBE               	goto	u924
  3119     05BC                     u925:
  3120     05BC  1003               	clrc
  3121     05BD  0DF0               	rlf	??_LCD_Out,f
  3122     05BE                     u924:
  3123     05BE  3EFF               	addlw	-1
  3124     05BF  1D03               	skipz
  3125     05C0  2DBC               	goto	u925
  3126     05C1  0870               	movf	??_LCD_Out,w
  3127     05C2  0480               	iorwf	0,f
  3128                           
  3129                           ;lcd.c: 21:     }
  3130     05C3  2DDA               	goto	l1186
  3131     05C4                     l1184:
  3132                           
  3133                           ;lcd.c: 23:         *(lcd.PORT) &= ~(1 << lcd.D5);
  3134     05C4  085D               	movf	_lcd,w
  3135     05C5  0084               	movwf	4
  3136     05C6  1783               	bsf	3,7
  3137     05C7  1C5E               	btfss	_lcd+1,0
  3138     05C8  1383               	bcf	3,7
  3139     05C9  3001               	movlw	1
  3140     05CA  00F0               	movwf	??_LCD_Out
  3141     05CB  0C60               	rrf	_lcd+3,w
  3142     05CC  00F1               	movwf	??_LCD_Out+1
  3143     05CD  0CF1               	rrf	??_LCD_Out+1,f
  3144     05CE  0C71               	rrf	??_LCD_Out+1,w
  3145     05CF  3907               	andlw	7
  3146     05D0  3E01               	addlw	1
  3147     05D1  2DD4               	goto	u934
  3148     05D2                     u935:
  3149     05D2  1003               	clrc
  3150     05D3  0DF0               	rlf	??_LCD_Out,f
  3151     05D4                     u934:
  3152     05D4  3EFF               	addlw	-1
  3153     05D5  1D03               	skipz
  3154     05D6  2DD2               	goto	u935
  3155     05D7  0870               	movf	??_LCD_Out,w
  3156     05D8  3AFF               	xorlw	255
  3157     05D9  0580               	andwf	0,f
  3158     05DA                     l1186:
  3159                           
  3160                           ;lcd.c: 26:     if ( c & 4 ) {
  3161     05DA  1D72               	btfss	LCD_Out@c,2
  3162     05DB  2DDD               	goto	u941
  3163     05DC  2DDE               	goto	u940
  3164     05DD                     u941:
  3165     05DD  2DF1               	goto	l1190
  3166     05DE                     u940:
  3167     05DE                     l1188:
  3168                           
  3169                           ;lcd.c: 27:         *(lcd.PORT) |= 1 << lcd.D6;
  3170     05DE  085D               	movf	_lcd,w
  3171     05DF  0084               	movwf	4
  3172     05E0  1783               	bsf	3,7
  3173     05E1  1C5E               	btfss	_lcd+1,0
  3174     05E2  1383               	bcf	3,7
  3175     05E3  3001               	movlw	1
  3176     05E4  00F0               	movwf	??_LCD_Out
  3177     05E5  0861               	movf	_lcd+4,w
  3178     05E6  3907               	andlw	7
  3179     05E7  3E01               	addlw	1
  3180     05E8  2DEB               	goto	u954
  3181     05E9                     u955:
  3182     05E9  1003               	clrc
  3183     05EA  0DF0               	rlf	??_LCD_Out,f
  3184     05EB                     u954:
  3185     05EB  3EFF               	addlw	-1
  3186     05EC  1D03               	skipz
  3187     05ED  2DE9               	goto	u955
  3188     05EE  0870               	movf	??_LCD_Out,w
  3189     05EF  0480               	iorwf	0,f
  3190                           
  3191                           ;lcd.c: 28:     }
  3192     05F0  2E04               	goto	l1192
  3193     05F1                     l1190:
  3194                           
  3195                           ;lcd.c: 30:         *(lcd.PORT) &= ~(1 << lcd.D6);
  3196     05F1  085D               	movf	_lcd,w
  3197     05F2  0084               	movwf	4
  3198     05F3  1783               	bsf	3,7
  3199     05F4  1C5E               	btfss	_lcd+1,0
  3200     05F5  1383               	bcf	3,7
  3201     05F6  3001               	movlw	1
  3202     05F7  00F0               	movwf	??_LCD_Out
  3203     05F8  0861               	movf	_lcd+4,w
  3204     05F9  3907               	andlw	7
  3205     05FA  3E01               	addlw	1
  3206     05FB  2DFE               	goto	u964
  3207     05FC                     u965:
  3208     05FC  1003               	clrc
  3209     05FD  0DF0               	rlf	??_LCD_Out,f
  3210     05FE                     u964:
  3211     05FE  3EFF               	addlw	-1
  3212     05FF  1D03               	skipz
  3213     0600  2DFC               	goto	u965
  3214     0601  0870               	movf	??_LCD_Out,w
  3215     0602  3AFF               	xorlw	255
  3216     0603  0580               	andwf	0,f
  3217     0604                     l1192:
  3218                           
  3219                           ;lcd.c: 33:     if ( c & 8 ) {
  3220     0604  1DF2               	btfss	LCD_Out@c,3
  3221     0605  2E07               	goto	u971
  3222     0606  2E08               	goto	u970
  3223     0607                     u971:
  3224     0607  2E1E               	goto	l1196
  3225     0608                     u970:
  3226     0608                     l1194:
  3227                           
  3228                           ;lcd.c: 34:          *(lcd.PORT) |= 1 << lcd.D7;
  3229     0608  085D               	movf	_lcd,w
  3230     0609  0084               	movwf	4
  3231     060A  1783               	bsf	3,7
  3232     060B  1C5E               	btfss	_lcd+1,0
  3233     060C  1383               	bcf	3,7
  3234     060D  3001               	movlw	1
  3235     060E  00F0               	movwf	??_LCD_Out
  3236     060F  0C61               	rrf	_lcd+4,w
  3237     0610  00F1               	movwf	??_LCD_Out+1
  3238     0611  0CF1               	rrf	??_LCD_Out+1,f
  3239     0612  0C71               	rrf	??_LCD_Out+1,w
  3240     0613  3907               	andlw	7
  3241     0614  3E01               	addlw	1
  3242     0615  2E18               	goto	u984
  3243     0616                     u985:
  3244     0616  1003               	clrc
  3245     0617  0DF0               	rlf	??_LCD_Out,f
  3246     0618                     u984:
  3247     0618  3EFF               	addlw	-1
  3248     0619  1D03               	skipz
  3249     061A  2E16               	goto	u985
  3250     061B  0870               	movf	??_LCD_Out,w
  3251     061C  0480               	iorwf	0,f
  3252                           
  3253                           ;lcd.c: 35:     }
  3254     061D  2E34               	goto	l106
  3255     061E                     l1196:
  3256                           
  3257                           ;lcd.c: 37:          *(lcd.PORT) &= ~(1 << lcd.D7);
  3258     061E  085D               	movf	_lcd,w
  3259     061F  0084               	movwf	4
  3260     0620  1783               	bsf	3,7
  3261     0621  1C5E               	btfss	_lcd+1,0
  3262     0622  1383               	bcf	3,7
  3263     0623  3001               	movlw	1
  3264     0624  00F0               	movwf	??_LCD_Out
  3265     0625  0C61               	rrf	_lcd+4,w
  3266     0626  00F1               	movwf	??_LCD_Out+1
  3267     0627  0CF1               	rrf	??_LCD_Out+1,f
  3268     0628  0C71               	rrf	??_LCD_Out+1,w
  3269     0629  3907               	andlw	7
  3270     062A  3E01               	addlw	1
  3271     062B  2E2E               	goto	u994
  3272     062C                     u995:
  3273     062C  1003               	clrc
  3274     062D  0DF0               	rlf	??_LCD_Out,f
  3275     062E                     u994:
  3276     062E  3EFF               	addlw	-1
  3277     062F  1D03               	skipz
  3278     0630  2E2C               	goto	u995
  3279     0631  0870               	movf	??_LCD_Out,w
  3280     0632  3AFF               	xorlw	255
  3281     0633  0580               	andwf	0,f
  3282     0634                     l106:
  3283     0634  0008               	return
  3284     0635                     __end_of_LCD_Out:
  3285                           
  3286                           	psect	text15
  3287     015A                     __ptext15:	
  3288 ;; *************** function _ADC_read *****************
  3289 ;; Defined at:
  3290 ;;		line 37 in file "main.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  2    0[COMMON] unsigned int 
  3297 ;; Registers used:
  3298 ;;		wreg
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         2       0       0       0       0
  3305 ;;      Locals:         0       0       0       0       0
  3306 ;;      Temps:          0       0       0       0       0
  3307 ;;      Totals:         2       0       0       0       0
  3308 ;;Total ram usage:        2 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		_main
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317     015A                     _ADC_read:	
  3318                           ;psect for function _ADC_read
  3319                           
  3320     015A                     l1280:	
  3321                           ;incstack = 0
  3322                           ; Regs used in _ADC_read: [wreg]
  3323                           
  3324     015A  295B               	nop2	;2 cycle nop
  3325     015B  295C               	nop2	;2 cycle nop
  3326     015C  0000               	nop
  3327     015D  1283               	bcf	3,5	;RP0=0, select bank0
  3328     015E  1303               	bcf	3,6	;RP1=0, select bank0
  3329     015F  149F               	bsf	31,1	;volatile
  3330     0160                     l32:
  3331     0160  189F               	btfsc	31,1	;volatile
  3332     0161  2963               	goto	u1151
  3333     0162  2964               	goto	u1150
  3334     0163                     u1151:
  3335     0163  2960               	goto	l32
  3336     0164                     u1150:
  3337     0164                     l1282:
  3338     0164  081E               	movf	30,w	;volatile
  3339     0165  00F1               	movwf	?_ADC_read+1
  3340     0166  1683               	bsf	3,5	;RP0=1, select bank1
  3341     0167  1303               	bcf	3,6	;RP1=0, select bank1
  3342     0168  081E               	movf	30,w	;volatile
  3343     0169  00F0               	movwf	?_ADC_read
  3344     016A                     l35:
  3345     016A  0008               	return
  3346     016B                     __end_of_ADC_read:
  3347                           
  3348                           	psect	text16
  3349     014D                     __ptext16:	
  3350 ;; *************** function _ADC_initialize *****************
  3351 ;; Defined at:
  3352 ;;		line 30 in file "main.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		None
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3366 ;;      Params:         0       0       0       0       0
  3367 ;;      Locals:         0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0
  3369 ;;      Totals:         0       0       0       0       0
  3370 ;;Total ram usage:        0 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379     014D                     _ADC_initialize:	
  3380                           ;psect for function _ADC_initialize
  3381                           
  3382     014D                     l1278:	
  3383                           ;incstack = 0
  3384                           ; Regs used in _ADC_initialize: []
  3385                           
  3386                           
  3387                           ;main.c: 32:         do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } wh
      +                          ile ( 0 );
  3388     014D  3001               	movlw	1
  3389     014E  1683               	bsf	3,5	;RP0=1, select bank3
  3390     014F  1703               	bsf	3,6	;RP1=1, select bank3
  3391     0150  0088               	movwf	8	;volatile
  3392                           
  3393                           ;main.c: 33:         do { if ( 0 == 0 ) { do { LCD_Write( (0x80 + 0 & 0xF0) >> 4 ); LCD_
      +                          Write( 0x80 + 0 & 0x0F); } while ( 0 ); } else if ( 0 == 1 ) { do { LCD_Write( (0xC0 + 0
      +                           & 0xF0) >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F); } while ( 0 ); } else if ( 0 == 2 ) { do {
      +                           LCD_Write( (0x94 + 0 & 0xF0) >> 4 ); LCD_Write( 0x94 + 0 & 0x0F); } while ( 0 ); } else
      +                           if ( 0 == 3 ) { do { LCD_Write( (0xD4 + 0 & 0xF0) >> 4 ); LCD_Write( 0xD4 + 0 & 0x0F); 
      +                          } while ( 0 ); } } while ( 0 );
  3394     0151  3081               	movlw	129
  3395     0152  1283               	bcf	3,5	;RP0=0, select bank0
  3396     0153  1303               	bcf	3,6	;RP1=0, select bank0
  3397     0154  009F               	movwf	31	;volatile
  3398                           
  3399                           ;main.c: 34:         LCD_putrs("Voltaje: ");
  3400     0155  3080               	movlw	128
  3401     0156  1683               	bsf	3,5	;RP0=1, select bank1
  3402     0157  1303               	bcf	3,6	;RP1=0, select bank1
  3403     0158  009F               	movwf	31	;volatile
  3404     0159                     l29:
  3405     0159  0008               	return
  3406     015A                     __end_of_ADC_initialize:
  3407     0002                     ___latbits      equ	2
  3408     007E                     btemp           set	126	;btemp
  3409     007E                     wtemp0          set	126
  3410                           
  3411                           	psect	config
  3412                           
  3413                           ;Config register CONFIG1 @ 0x2007
  3414                           ;	Oscillator Selection bits
  3415                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  3416                           ;	Watchdog Timer Enable bit
  3417                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3418                           ;	Power-up Timer Enable bit
  3419                           ;	PWRTE = OFF, PWRT disabled
  3420                           ;	RE3/MCLR pin function select bit
  3421                           ;	MCLRE = 0x1, unprogrammed default
  3422                           ;	Code Protection bit
  3423                           ;	CP = OFF, Program memory code protection is disabled
  3424                           ;	Data Code Protection bit
  3425                           ;	CPD = OFF, Data memory code protection is disabled
  3426                           ;	Brown Out Reset Selection bits
  3427                           ;	BOREN = ON, BOR enabled
  3428                           ;	Internal External Switchover bit
  3429                           ;	IESO = 0x1, unprogrammed default
  3430                           ;	Fail-Safe Clock Monitor Enabled bit
  3431                           ;	FCMEN = 0x1, unprogrammed default
  3432                           ;	Low Voltage Programming Enable bit
  3433                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3434                           ;	In-Circuit Debugger Mode bit
  3435                           ;	DEBUG = 0x1, unprogrammed default
  3436     2007                     	org	8199
  3437     2007  2FF1               	dw	12273
  3438                           
  3439                           ;Config register CONFIG2 @ 0x2008
  3440                           ;	Brown-out Reset Selection bit
  3441                           ;	BOR4V = 0x1, unprogrammed default
  3442                           ;	Flash Program Memory Self Write Enable bits
  3443                           ;	WRT = OFF, Write protection off
  3444     2008                     	org	8200
  3445     2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        5
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      66
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    lcd$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    LCD_putrs@a	PTR const unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), STR_1(CODE[10]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    S570$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    S570$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->___aldiv
    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    ___aldiv->___lmul
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    2853
                                             35 BANK0     21    21      0
                     _ADC_initialize
                           _ADC_read
                           _LCD_Init
                          _LCD_Write
                          _LCD_putrs
                            ___aldiv
                             ___lmul
                            ___lwdiv
                            ___lwmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    1337
                                             16 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    1132
                                             13 COMMON     1     1      0
                                             12 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4    1007
                                              0 BANK0     12     8      4
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     163
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     166
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8      94
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     302
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_putrs                                            7     5      2     266
                                              6 COMMON     7     5      2
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             3     3      0     174
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     216
                                              6 COMMON     8     3      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            3     3      0     145
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Out                                              3     3      0     116
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_initialize
   _ADC_read
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
   _LCD_putrs
     _LCD_putc
       _LCD_Out
   ___aldiv
     ___lmul (ARG)
   ___lmul
   ___lwdiv
   ___lwmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___lwdiv
         ___lwmod
         _fputc
           _putch

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      32     40.0%
BITBANK1            80      0       0      0.0%
BANK0               80     56      66     82.5%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     112      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jun 13 17:11:57 2025

                      pc 0002                       l32 0160                       l35 016A  
                     l29 0159                       fsr 0004                      l106 0634  
                    l130 056E                      l109 0309                      l118 057A  
                    l134 039B                      l146 022C                      l307 0434  
                    l246 02B4                      l512 026E                      l522 01EA  
                    l297 03B0                      l732 06F8                      l724 0675  
                    l751 04CE                      l762 013F                      l739 01B2  
                    l695 018D                      u700 0235                      u701 0234  
                    u720 0245                      u800 01D3                      u721 0244  
                    u801 01D2                      u715 0239                      u740 0256  
                    u820 01E6                      u741 0255                      u821 01E5  
                    u805 01CF                      u910 05AE                      u830 043B  
                    u911 05AD                      u735 0246                      u815 01DA  
                    u831 043A                      u904 05A4                      u760 026A  
                    u840 0441                      u905 05A2                      u761 0269  
                    u745 0252                      u841 0440                      u770 01B9  
                    u850 0460                      u755 025E                      u771 01B8  
                    u851 045F                      u940 05DE                      u924 05BE  
                    u860 0492                      u941 05DD                      u925 05BC  
                    u861 0491                      u934 05D4                      u790 01C9  
                    u870 04B3                      u935 05D2                      u791 01C8  
                    u880 0580                      u881 057F                      u785 01BD  
                    u865 048E                      u970 0608                      u954 05EB  
                    u971 0607                      u955 05E9                      u964 05FE  
                    u965 05FC                      u894 058F                      u895 058D  
                    u984 0618                      u985 0616                      u994 062E  
                    u995 062C          LCD_Init@display 0076                      _lcd 005D  
                    fsr0 0004                      indf 0000          __end_of_LCD_Out 0635  
                   l1120 023F                     l1112 022D                     l1200 0645  
                   l1130 025D                     l1122 0241                     l1114 022F  
                   l1210 0661                     l1202 0649                     l1300 050B  
                   l1132 0264                     l1124 0245                     l1116 0235  
                   l1140 01B9                     l1220 06A8                     l1212 066F  
                   l1204 064D                     l1310 0537                     l1302 0514  
                   l1126 0256                     l1118 0238                     l1134 026A  
                   l1150 01D3                     l1142 01BC                     l1222 06AE  
                   l1214 0677                     l1230 06CD                     l1206 0651  
                   l1320 0555                     l1312 053D                     l1304 051A  
                   l1400 041C                     l1128 025C                     l1152 01D9  
                   l1144 01C3                     l1160 0435                     l1224 06C2  
                   l1216 068D                     l1232 06D8                     l1208 0655  
                   l1250 02F1                     l1242 02B6                     l1322 0557  
                   l1314 0543                     l1306 0528                     l1402 0421  
                   l1154 01E0                     l1146 01C5                     l1138 01B3  
                   l1170 0492                     l1162 043B                     l1226 06C6  
                   l1218 06A2                     l1410 06FE                     l1180 05AA  
                   l1244 02CB                     l1316 0549                     l1308 0531  
                   l1260 0349                     l1252 030B                     l1332 01EB  
                   l1404 042C                     l1148 01C9                     l1156 01E6  
                   l1164 0441                     l1236 06DF                     l1340 016B  
                   l1412 0715                     l1190 05F1                     l1182 05AE  
                   l1174 057C                     l1246 02D1                     l1318 054F  
                   l1262 0361                     l1254 031F                     l1334 01EE  
                   l1166 0448                     l1270 0193                     l1350 0184  
                   l1342 016F                     l1430 073C                     l1414 071B  
                   l1280 015A                     l1192 0604                     l1184 05C4  
                   l1176 0580                     l1248 02E8                     l1328 0558  
                   l1264 0368                     l1256 032E                     l1336 020A  
                   l1360 0292                     l1168 0460                     l1272 01A2  
                   l1344 0173                     l1440 074D                     l1416 0721  
                   l1408 06F9                     l1282 0164                     l1194 0608  
                   l1186 05DA                     l1178 0595                     l1290 04EC  
                   l1266 0383                     l1258 0345                     l1338 0210  
                   l1370 039F                     l1362 029B                     l1354 026F  
                   l1274 01AE                     l1346 0175                     l1450 07BD  
                   l1442 077D                     l1426 072D                     l1418 0727  
                   l1196 061E                     l1188 05DE                     l1292 04F0  
                   l1380 03C9                     l1372 03A3                     l1364 02AC  
                   l1356 0277                     l1268 018E                     l1348 0177  
                   l1444 0790                     l1428 0736                     l1278 014D  
                   l1294 04FA                     l1286 04CF                     l1390 03EC  
                   l1382 03D1                     l1374 03B4                     l1358 027B  
                   l1198 0635                     l1446 07A3                     l1438 0742  
                   l1296 04FE                     l1288 04E0                     l1392 03FE  
                   l1384 03D4                     l1376 03BF                     l1368 039C  
                   l1448 07B4                     l1298 0508                     l1394 040C  
                   l1386 03DF                     l1378 03C1                     l1396 040D  
                   l1388 03E3                     l1398 0416                     STR_1 0013  
                   STR_2 001D                     u1000 0645                     u1001 0644  
                   u1010 0661                     u1011 0660                     u1020 06A8  
                   u1021 06A7                     u1030 06AD                     u1031 06AC  
                   u1104 0340                     u1200 01F8                     u1040 06CC  
                   u1105 033E                     u1041 06CB                     u1114 035B  
                   u1210 021A                     u1115 0359                     u1124 037A  
                   u1220 022C                     u1300 03D1                     u1140 01AE  
                   u1125 0378                     u1221 022B                     u1301 03D0  
                   u1141 01AD                     u1150 0164                     u1054 02C5  
                   u1134 0395                     u1230 027B                     u1151 0163  
                   u1055 02C3                     u1135 0393                     u1231 027A  
                   u1064 02E3                     u1160 04EC                     u1320 03E3  
                   u1065 02E1                     u1161 04EB                     u1321 03E2  
                   u1241 0284                     u1074 0303                     u1170 04FA  
                   u1242 028B                     u1075 0301                     u1171 04F9  
                   u1315 03D6                     u1243 0292                     u1180 0508  
                   u1084 031A                     u1340 03FE                     u1181 0507  
                   u1165 04E8                     u1085 0318                     u1341 03FD  
                   u1270 02AC                     u1175 04F6                     u1407 0347  
                   u1095 0322                     u1335 03E5                     u1271 02AB  
                   u1255 0294                     u1360 041C                     u1280 03A3  
                   u1185 0504                     u1417 0381                     u1361 041B  
                   u1345 03FA                     u1281 03A2                     u1265 029C  
                   u1370 0421                     u1290 03B4                     u1195 055B  
                   u1427 050F                     u1371 0420                     u1355 040E  
                   u1291 03B3                     u1437 051E                     u1447 052C  
                   u1457 02EC                     u1397 07C5                     _dbuf 00A0  
                   _main 06F9                     _prec 005A                     btemp 007E  
                   start 0000         __end_of_ADC_read 016B              main@voltaje 0056  
            LCD_Init@cmd 007D         __end_of_LCD_Init 057B         __end_of_LCD_putc 039C  
        __end_of___aldiv 0435                    ?_main 0070                    _ANSEL 0188  
        __end_of___lwdiv 026F          __end_of___lwmod 01EB             vfpfcnvrt@fmt 0022  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
    ___lmul@multiplicand 0074             main@part_dec 0054             main@part_ent 0052  
                  _flags 005C                    _fputc 0435                    _width 0058  
                  _putch 013F                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 018E          __initialization 07D0  
           __end_of_main 07D0                   ??_main 0043                ??_LCD_Out 0070  
      __end_of_LCD_Write 030A        __end_of_LCD_putrs 022D                   _ADCON0 001F  
                 _ADCON1 009F                   ?_fputc 0070                   _ADRESH 001E  
                 _ADRESL 009E                   ?_putch 0070         ??_ADC_initialize 0070  
           vfprintf@cfmt 007D                   ___lmul 026F                ??___aldiv 007D  
              ??___lwdiv 0074                ??___lwmod 0074                   fputc@c 0070  
              ?_ADC_read 0070                   putch@c 0070         __end_of_vfprintf 01B3  
              ??_sprintf 0036           main@adc_result 0050  __end_of__initialization 07FC  
              ?_LCD_Init 0076                ?_LCD_putc 0070           __pcstackCOMMON 0070  
           __pidataBANK0 0140            __end_of_fputc 04CF            __end_of_putch 0140  
              LCD_putc@c 0075               ??_ADC_read 0072                  ??_fputc 0074  
                ??_putch 0070               __pbssBANK0 0058               __pbssBANK1 00A0  
             ??_LCD_Init 007B               ??_LCD_putc 0073               __pmaintext 06F9  
                ?___lmul 0070           ___lmul@product 0079                  _LCD_Out 057B  
             __stringtab 0003                  ___aldiv 039C                  ___lwdiv 022D  
                ___lwmod 01B3                ?_vfprintf 002C                  __ptext1 016B  
                __ptext2 018E                  __ptext3 0635                  __ptext4 0435  
                __ptext5 013F                  __ptext6 01B3                  __ptext7 022D  
                __ptext8 026F                  __ptext9 039C         ___aldiv@dividend 0024  
                _sprintf 016B                  clrloop0 0146                _LCD_Write 02B5  
   end_of_initialization 07FC                _LCD_putrs 01EB                  fputc@fp 0072  
      __end_of_vfpfcnvrt 06F9         ___aldiv@quotient 002A         vfpfcnvrt@convarg 0026  
             ??_vfprintf 007D               ?_LCD_Write 0070               ?_LCD_putrs 0076  
             main@buffer 0046           __end_of___lmul 02B5              vfpfcnvrt@ap 0023  
            vfpfcnvrt@cp 002A              vfpfcnvrt@fp 0020               LCD_Write@c 0075  
    start_initialization 07D0               LCD_putrs@a 0076               LCD_putrs@i 007B  
            vfprintf@fmt 002E                 ??___lmul 0078              __pdataBANK0 005D  
               ?_LCD_Out 0070                ___latbits 0002            __pcstackBANK0 0020  
               LCD_Out@c 0072              ??_LCD_Write 0073              ??_LCD_putrs 0078  
       ___lwdiv@dividend 0072                 ?___aldiv 0020                 ?___lwdiv 0070  
               ?___lwmod 0070                __pstrings 0003                 _ADC_read 015A  
       ___lwdiv@quotient 0074                 ?_sprintf 0030          ___aldiv@divisor 0020  
        ___aldiv@counter 0028                 _LCD_Init 04CF                clear_ram0 0145  
               _LCD_putc 030A                 _GO_nDONE 00F9                _vfpfcnvrt 0635  
            __stringbase 0012               vfpfcnvrt@c 002B        ___lmul@multiplier 0070  
             vfprintf@ap 002F               vfprintf@fp 002C               ?_vfpfcnvrt 0020  
     __end_of__stringtab 0013           _ADC_initialize 014D               sprintf@fmt 0031  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076                 __ptext10 01EB  
               __ptext11 030A                 __ptext12 04CF                 __ptext13 02B5  
               __ptext14 057B                 __ptext15 015A                 __ptext16 014D  
               _vfprintf 018E   __end_of_ADC_initialize 015A                sprintf@ap 0037  
       ___lwmod@dividend 0072                stringcode 000D              ??_vfpfcnvrt 0024  
        ?_ADC_initialize 0070                 sprintf@f 0038                 sprintf@s 0030  
        ___lwmod@divisor 0070          ___lwmod@counter 0074                 stringdir 000D  
               stringtab 0003             ___aldiv@sign 0029  
