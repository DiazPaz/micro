

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jun 10 16:19:52 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,space=0,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 26/03/2025 GMT
    19                           ; 
    20                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0004                     fsr             equ	4
    53     0004                     fsr0            equ	4
    54     0000                     indf            equ	0
    55     0000                     indf0           equ	0
    56     0002                     pc              equ	2
    57     0002                     pcl             equ	2
    58     000A                     pclath          equ	10
    59     0003                     status          equ	3
    60     0000                     INDF            equ	0	;# 
    61     0001                     TMR0            equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR             equ	4	;# 
    65     0005                     PORTA           equ	5	;# 
    66     0006                     PORTB           equ	6	;# 
    67     0007                     PORTC           equ	7	;# 
    68     0008                     PORTD           equ	8	;# 
    69     0009                     PORTE           equ	9	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     000C                     PIR1            equ	12	;# 
    73     000D                     PIR2            equ	13	;# 
    74     000E                     TMR1            equ	14	;# 
    75     000E                     TMR1L           equ	14	;# 
    76     000F                     TMR1H           equ	15	;# 
    77     0010                     T1CON           equ	16	;# 
    78     0011                     TMR2            equ	17	;# 
    79     0012                     T2CON           equ	18	;# 
    80     0013                     SSPBUF          equ	19	;# 
    81     0014                     SSPCON          equ	20	;# 
    82     0015                     CCPR1           equ	21	;# 
    83     0015                     CCPR1L          equ	21	;# 
    84     0016                     CCPR1H          equ	22	;# 
    85     0017                     CCP1CON         equ	23	;# 
    86     0018                     RCSTA           equ	24	;# 
    87     0019                     TXREG           equ	25	;# 
    88     001A                     RCREG           equ	26	;# 
    89     001B                     CCPR2           equ	27	;# 
    90     001B                     CCPR2L          equ	27	;# 
    91     001C                     CCPR2H          equ	28	;# 
    92     001D                     CCP2CON         equ	29	;# 
    93     001E                     ADRESH          equ	30	;# 
    94     001F                     ADCON0          equ	31	;# 
    95     0081                     OPTION_REG      equ	129	;# 
    96     0085                     TRISA           equ	133	;# 
    97     0086                     TRISB           equ	134	;# 
    98     0087                     TRISC           equ	135	;# 
    99     0088                     TRISD           equ	136	;# 
   100     0089                     TRISE           equ	137	;# 
   101     008C                     PIE1            equ	140	;# 
   102     008D                     PIE2            equ	141	;# 
   103     008E                     PCON            equ	142	;# 
   104     008F                     OSCCON          equ	143	;# 
   105     0090                     OSCTUNE         equ	144	;# 
   106     0091                     SSPCON2         equ	145	;# 
   107     0092                     PR2             equ	146	;# 
   108     0093                     SSPADD          equ	147	;# 
   109     0093                     SSPMSK          equ	147	;# 
   110     0093                     MSK             equ	147	;# 
   111     0094                     SSPSTAT         equ	148	;# 
   112     0095                     WPUB            equ	149	;# 
   113     0096                     IOCB            equ	150	;# 
   114     0097                     VRCON           equ	151	;# 
   115     0098                     TXSTA           equ	152	;# 
   116     0099                     SPBRG           equ	153	;# 
   117     009A                     SPBRGH          equ	154	;# 
   118     009B                     PWM1CON         equ	155	;# 
   119     009C                     ECCPAS          equ	156	;# 
   120     009D                     PSTRCON         equ	157	;# 
   121     009E                     ADRESL          equ	158	;# 
   122     009F                     ADCON1          equ	159	;# 
   123     0105                     WDTCON          equ	261	;# 
   124     0107                     CM1CON0         equ	263	;# 
   125     0108                     CM2CON0         equ	264	;# 
   126     0109                     CM2CON1         equ	265	;# 
   127     010C                     EEDATA          equ	268	;# 
   128     010C                     EEDAT           equ	268	;# 
   129     010D                     EEADR           equ	269	;# 
   130     010E                     EEDATH          equ	270	;# 
   131     010F                     EEADRH          equ	271	;# 
   132     0185                     SRCON           equ	389	;# 
   133     0187                     BAUDCTL         equ	391	;# 
   134     0188                     ANSEL           equ	392	;# 
   135     0189                     ANSELH          equ	393	;# 
   136     018C                     EECON1          equ	396	;# 
   137     018D                     EECON2          equ	397	;# 
   138     0000                     INDF            equ	0	;# 
   139     0001                     TMR0            equ	1	;# 
   140     0002                     PCL             equ	2	;# 
   141     0003                     STATUS          equ	3	;# 
   142     0004                     FSR             equ	4	;# 
   143     0005                     PORTA           equ	5	;# 
   144     0006                     PORTB           equ	6	;# 
   145     0007                     PORTC           equ	7	;# 
   146     0008                     PORTD           equ	8	;# 
   147     0009                     PORTE           equ	9	;# 
   148     000A                     PCLATH          equ	10	;# 
   149     000B                     INTCON          equ	11	;# 
   150     000C                     PIR1            equ	12	;# 
   151     000D                     PIR2            equ	13	;# 
   152     000E                     TMR1            equ	14	;# 
   153     000E                     TMR1L           equ	14	;# 
   154     000F                     TMR1H           equ	15	;# 
   155     0010                     T1CON           equ	16	;# 
   156     0011                     TMR2            equ	17	;# 
   157     0012                     T2CON           equ	18	;# 
   158     0013                     SSPBUF          equ	19	;# 
   159     0014                     SSPCON          equ	20	;# 
   160     0015                     CCPR1           equ	21	;# 
   161     0015                     CCPR1L          equ	21	;# 
   162     0016                     CCPR1H          equ	22	;# 
   163     0017                     CCP1CON         equ	23	;# 
   164     0018                     RCSTA           equ	24	;# 
   165     0019                     TXREG           equ	25	;# 
   166     001A                     RCREG           equ	26	;# 
   167     001B                     CCPR2           equ	27	;# 
   168     001B                     CCPR2L          equ	27	;# 
   169     001C                     CCPR2H          equ	28	;# 
   170     001D                     CCP2CON         equ	29	;# 
   171     001E                     ADRESH          equ	30	;# 
   172     001F                     ADCON0          equ	31	;# 
   173     0081                     OPTION_REG      equ	129	;# 
   174     0085                     TRISA           equ	133	;# 
   175     0086                     TRISB           equ	134	;# 
   176     0087                     TRISC           equ	135	;# 
   177     0088                     TRISD           equ	136	;# 
   178     0089                     TRISE           equ	137	;# 
   179     008C                     PIE1            equ	140	;# 
   180     008D                     PIE2            equ	141	;# 
   181     008E                     PCON            equ	142	;# 
   182     008F                     OSCCON          equ	143	;# 
   183     0090                     OSCTUNE         equ	144	;# 
   184     0091                     SSPCON2         equ	145	;# 
   185     0092                     PR2             equ	146	;# 
   186     0093                     SSPADD          equ	147	;# 
   187     0093                     SSPMSK          equ	147	;# 
   188     0093                     MSK             equ	147	;# 
   189     0094                     SSPSTAT         equ	148	;# 
   190     0095                     WPUB            equ	149	;# 
   191     0096                     IOCB            equ	150	;# 
   192     0097                     VRCON           equ	151	;# 
   193     0098                     TXSTA           equ	152	;# 
   194     0099                     SPBRG           equ	153	;# 
   195     009A                     SPBRGH          equ	154	;# 
   196     009B                     PWM1CON         equ	155	;# 
   197     009C                     ECCPAS          equ	156	;# 
   198     009D                     PSTRCON         equ	157	;# 
   199     009E                     ADRESL          equ	158	;# 
   200     009F                     ADCON1          equ	159	;# 
   201     0105                     WDTCON          equ	261	;# 
   202     0107                     CM1CON0         equ	263	;# 
   203     0108                     CM2CON0         equ	264	;# 
   204     0109                     CM2CON1         equ	265	;# 
   205     010C                     EEDATA          equ	268	;# 
   206     010C                     EEDAT           equ	268	;# 
   207     010D                     EEADR           equ	269	;# 
   208     010E                     EEDATH          equ	270	;# 
   209     010F                     EEADRH          equ	271	;# 
   210     0185                     SRCON           equ	389	;# 
   211     0187                     BAUDCTL         equ	391	;# 
   212     0188                     ANSEL           equ	392	;# 
   213     0189                     ANSELH          equ	393	;# 
   214     018C                     EECON1          equ	396	;# 
   215     018D                     EECON2          equ	397	;# 
   216                           
   217                           	psect	idataBANK0
   218     011A                     __pidataBANK0:
   219                           
   220                           ;initializer for _digito
   221     011A  343F               	retlw	63
   222     011B  3406               	retlw	6
   223     011C  345B               	retlw	91
   224     011D  344F               	retlw	79
   225     011E  3466               	retlw	102
   226     011F  346D               	retlw	109
   227     0120  347D               	retlw	125
   228     0121  3407               	retlw	7
   229     0122  347F               	retlw	127
   230     0123  346F               	retlw	111
   231     0007                     _PORTCbits      set	7
   232     0008                     _PORTD          set	8
   233     0007                     _PORTC          set	7
   234     0059                     _INTF           set	89
   235     005C                     _INTE           set	92
   236     005F                     _GIE            set	95
   237     0086                     _TRISB          set	134
   238     0088                     _TRISD          set	136
   239     0087                     _TRISC          set	135
   240     0081                     _OPTION_REG     set	129
   241     040E                     _INTEDG         set	1038
   242     0189                     _ANSELH         set	393
   243     0188                     _ANSEL          set	392
   244                           
   245                           	psect	cinit
   246     0011                     start_initialization:	
   247                           ; #config settings
   248                           
   249     0011                     __initialization:
   250                           
   251                           ; Initialize objects allocated to BANK0
   252     0011  1383               	bcf	3,7	;select IRP bank0
   253     0012  302A               	movlw	low (__pdataBANK0+10)
   254     0013  00FD               	movwf	btemp+-1
   255     0014  3001               	movlw	high __pidataBANK0
   256     0015  00FE               	movwf	btemp
   257     0016  301A               	movlw	low __pidataBANK0
   258     0017  00FF               	movwf	btemp+1
   259     0018  3020               	movlw	low __pdataBANK0
   260     0019  0084               	movwf	4
   261     001A  120A  118A  210B  120A  118A  	fcall	init_ram0
   262     001F                     end_of_initialization:	
   263                           ;End of C runtime variable initialization code
   264                           
   265     001F                     __end_of__initialization:
   266     001F  0183               	clrf	3
   267     0020  120A  118A  287C   	ljmp	_main	;jump to C main() function
   268                           
   269                           	psect	dataBANK0
   270     0020                     __pdataBANK0:
   271     0020                     _digito:
   272     0020                     	ds	10
   273                           
   274                           	psect	inittext
   275     0107                     init_fetch0:	
   276                           ;	Called with low address in FSR and high address in W
   277                           
   278     0107  087E               	movf	btemp,w
   279     0108  008A               	movwf	10
   280     0109  087F               	movf	btemp+1,w
   281     010A  0082               	movwf	2
   282     010B                     init_ram0:	
   283                           ;Called with:
   284                           ;	high address of idata address in btemp 
   285                           ;	low address of idata address in btemp+1 
   286                           ;	low address of data in FSR
   287                           ;	high address + 1 of data in btemp-1
   288                           
   289     010B  120A  118A  2107  120A  118A  	fcall	init_fetch0
   290     0110  0080               	movwf	0
   291     0111  0A84               	incf	4,f
   292     0112  0804               	movf	4,w
   293     0113  067D               	xorwf	btemp+-1,w
   294     0114  1903               	btfsc	3,2
   295     0115  3400               	retlw	0
   296     0116  0AFF               	incf	btemp+1,f
   297     0117  1903               	btfsc	3,2
   298     0118  0AFE               	incf	btemp,f
   299     0119  290B               	goto	init_ram0
   300                           
   301                           	psect	cstackCOMMON
   302     0070                     __pcstackCOMMON:
   303     0070                     ?_main:
   304     0070                     ?_blink_LED:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ?_ISR:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     ??_blink_LED:	
   311                           ; 1 bytes @ 0x0
   312                           
   313                           
   314                           ; 1 bytes @ 0x0
   315     0070                     	ds	3
   316     0073                     blink_LED@i:
   317                           
   318                           ; 2 bytes @ 0x3
   319     0073                     	ds	2
   320     0075                     ??_ISR:
   321                           
   322                           ; 1 bytes @ 0x5
   323     0075                     	ds	3
   324                           
   325                           	psect	cstackBANK0
   326     002A                     __pcstackBANK0:
   327     002A                     ?___awmod:
   328     002A                     ___awmod@divisor:	
   329                           ; 2 bytes @ 0x0
   330                           
   331                           
   332                           ; 2 bytes @ 0x0
   333     002A                     	ds	2
   334     002C                     ___awmod@dividend:
   335                           
   336                           ; 2 bytes @ 0x2
   337     002C                     	ds	2
   338     002E                     ___awmod@counter:
   339     002E                     ??___awmod:	
   340                           ; 1 bytes @ 0x4
   341                           
   342                           
   343                           ; 1 bytes @ 0x4
   344     002E                     	ds	1
   345     002F                     ___awmod@sign:
   346                           
   347                           ; 1 bytes @ 0x5
   348     002F                     	ds	1
   349     0030                     ??_main:
   350                           
   351                           ; 1 bytes @ 0x6
   352     0030                     	ds	2
   353     0032                     main@cont:
   354                           
   355                           ; 1 bytes @ 0x8
   356     0032                     	ds	1
   357                           
   358                           	psect	maintext
   359     007C                     __pmaintext:	
   360 ;;
   361 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   362 ;;
   363 ;; *************** function _main *****************
   364 ;; Defined at:
   365 ;;		line 46 in file "main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;  cont            1    8[BANK0 ] unsigned char 
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : B00/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   379 ;;      Params:         0       0       0       0       0
   380 ;;      Locals:         0       1       0       0       0
   381 ;;      Temps:          0       2       0       0       0
   382 ;;      Totals:         0       3       0       0       0
   383 ;;Total ram usage:        3 bytes
   384 ;; Hardware stack levels required when called: 3
   385 ;; This function calls:
   386 ;;		___awmod
   387 ;; This function is called by:
   388 ;;		Startup code after reset
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392     007C                     _main:	
   393                           ;psect for function _main
   394                           
   395     007C                     l717:	
   396                           ;incstack = 0
   397                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   398                           
   399                           
   400                           ;main.c: 49:     }
   401     007C  1683               	bsf	3,5	;RP0=1, select bank3
   402     007D  1703               	bsf	3,6	;RP1=1, select bank3
   403     007E  0188               	clrf	8	;volatile
   404                           
   405                           ;main.c: 50: }
   406     007F  0189               	clrf	9	;volatile
   407     0080                     l719:
   408                           
   409                           ;main.c: 53: {
   410     0080  307F               	movlw	127
   411     0081  1683               	bsf	3,5	;RP0=1, select bank1
   412     0082  1303               	bcf	3,6	;RP1=0, select bank1
   413     0083  0581               	andwf	1,f	;volatile
   414     0084                     l721:
   415                           
   416                           ;main.c: 56:         PORTCbits.RC0 = 1;
   417     0084  0187               	clrf	7	;volatile
   418     0085                     l723:
   419                           
   420                           ;main.c: 57:         _delay((unsigned long)((200)*(4000000/4000.0)));
   421     0085  0188               	clrf	8	;volatile
   422     0086                     l725:
   423                           
   424                           ;main.c: 58:         PORTCbits.RC0 = 0;
   425     0086  30FF               	movlw	255
   426     0087  0086               	movwf	6	;volatile
   427     0088                     l727:
   428                           
   429                           ;main.c: 61: }
   430     0088  1283               	bcf	3,5	;RP0=0, select bank0
   431     0089  1303               	bcf	3,6	;RP1=0, select bank0
   432     008A  0187               	clrf	7	;volatile
   433     008B                     l729:
   434                           
   435                           ;main.c: 63: void __attribute__((picinterrupt(("")))) ISR(void)
   436     008B  01B2               	clrf	main@cont
   437     008C                     l731:
   438                           
   439                           ;main.c: 66:     {
   440     008C  178B               	bsf	11,7	;volatile
   441     008D                     l733:
   442                           
   443                           ;main.c: 67:         GIE = 0;
   444     008D  160B               	bsf	11,4	;volatile
   445     008E                     l735:
   446                           
   447                           ;main.c: 68:         blink_LED();
   448     008E  1683               	bsf	3,5	;RP0=1, select bank1
   449     008F  1303               	bcf	3,6	;RP1=0, select bank1
   450     0090  1301               	bcf	1,6	;volatile
   451     0091                     l737:
   452                           
   453                           ;main.c: 71:     };main.c: 72: }
   454     0091  1283               	bcf	3,5	;RP0=0, select bank0
   455     0092  0832               	movf	main@cont,w
   456     0093  3E20               	addlw	(low (_digito| 0))& (0+255)
   457     0094  0084               	movwf	4
   458     0095  1383               	bcf	3,7	;select IRP bank0
   459     0096  0800               	movf	0,w
   460     0097  0088               	movwf	8	;volatile
   461     0098                     l739:
   462     0098  3082               	movlw	130
   463     0099  1283               	bcf	3,5	;RP0=0, select bank0
   464     009A  1303               	bcf	3,6	;RP1=0, select bank0
   465     009B  00B1               	movwf	??_main+1
   466     009C  30DD               	movlw	221
   467     009D  00B0               	movwf	??_main
   468     009E                     u217:
   469     009E  0BB0               	decfsz	??_main,f
   470     009F  289E               	goto	u217
   471     00A0  0BB1               	decfsz	??_main+1,f
   472     00A1  289E               	goto	u217
   473     00A2                     l741:
   474     00A2  300A               	movlw	10
   475     00A3  1283               	bcf	3,5	;RP0=0, select bank0
   476     00A4  1303               	bcf	3,6	;RP1=0, select bank0
   477     00A5  00AA               	movwf	___awmod@divisor
   478     00A6  3000               	movlw	0
   479     00A7  00AB               	movwf	___awmod@divisor+1
   480     00A8  0832               	movf	main@cont,w
   481     00A9  3E01               	addlw	1
   482     00AA  00AC               	movwf	___awmod@dividend
   483     00AB  3000               	movlw	0
   484     00AC  1803               	skipnc
   485     00AD  3001               	movlw	1
   486     00AE  00AD               	movwf	___awmod@dividend+1
   487     00AF  120A  118A  2023  120A  118A  	fcall	___awmod
   488     00B4  1283               	bcf	3,5	;RP0=0, select bank0
   489     00B5  1303               	bcf	3,6	;RP1=0, select bank0
   490     00B6  082A               	movf	?___awmod,w
   491     00B7  00B2               	movwf	main@cont
   492     00B8  2891               	goto	l737
   493     00B9  120A  118A  280E   	ljmp	start
   494     00BC                     __end_of_main:
   495                           
   496                           	psect	text1
   497     0023                     __ptext1:	
   498 ;; *************** function ___awmod *****************
   499 ;; Defined at:
   500 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  divisor         2    0[BANK0 ] int 
   503 ;;  dividend        2    2[BANK0 ] int 
   504 ;; Auto vars:     Size  Location     Type
   505 ;;  sign            1    5[BANK0 ] unsigned char 
   506 ;;  counter         1    4[BANK0 ] unsigned char 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  2    0[BANK0 ] int 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   516 ;;      Params:         0       4       0       0       0
   517 ;;      Locals:         0       2       0       0       0
   518 ;;      Temps:          0       0       0       0       0
   519 ;;      Totals:         0       6       0       0       0
   520 ;;Total ram usage:        6 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; Hardware stack levels required when called: 2
   523 ;; This function calls:
   524 ;;		Nothing
   525 ;; This function is called by:
   526 ;;		_main
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530     0023                     ___awmod:	
   531                           ;psect for function ___awmod
   532                           
   533     0023                     l679:	
   534                           ;incstack = 0
   535                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   536                           
   537     0023  1283               	bcf	3,5	;RP0=0, select bank0
   538     0024  1303               	bcf	3,6	;RP1=0, select bank0
   539     0025  01AF               	clrf	___awmod@sign
   540     0026                     l681:
   541     0026  1FAD               	btfss	___awmod@dividend+1,7
   542     0027  2829               	goto	u121
   543     0028  282A               	goto	u120
   544     0029                     u121:
   545     0029  2831               	goto	l687
   546     002A                     u120:
   547     002A                     l683:
   548     002A  09AC               	comf	___awmod@dividend,f
   549     002B  09AD               	comf	___awmod@dividend+1,f
   550     002C  0AAC               	incf	___awmod@dividend,f
   551     002D  1903               	skipnz
   552     002E  0AAD               	incf	___awmod@dividend+1,f
   553     002F                     l685:
   554     002F  3001               	movlw	1
   555     0030  00AF               	movwf	___awmod@sign
   556     0031                     l687:
   557     0031  1FAB               	btfss	___awmod@divisor+1,7
   558     0032  2834               	goto	u131
   559     0033  2835               	goto	u130
   560     0034                     u131:
   561     0034  283A               	goto	l691
   562     0035                     u130:
   563     0035                     l689:
   564     0035  09AA               	comf	___awmod@divisor,f
   565     0036  09AB               	comf	___awmod@divisor+1,f
   566     0037  0AAA               	incf	___awmod@divisor,f
   567     0038  1903               	skipnz
   568     0039  0AAB               	incf	___awmod@divisor+1,f
   569     003A                     l691:
   570     003A  082A               	movf	___awmod@divisor,w
   571     003B  042B               	iorwf	___awmod@divisor+1,w
   572     003C  1903               	btfsc	3,2
   573     003D  283F               	goto	u141
   574     003E  2840               	goto	u140
   575     003F                     u141:
   576     003F  286D               	goto	l709
   577     0040                     u140:
   578     0040                     l693:
   579     0040  3001               	movlw	1
   580     0041  00AE               	movwf	___awmod@counter
   581     0042  284C               	goto	l699
   582     0043                     l695:
   583     0043  3001               	movlw	1
   584     0044                     u155:
   585     0044  1003               	clrc
   586     0045  0DAA               	rlf	___awmod@divisor,f
   587     0046  0DAB               	rlf	___awmod@divisor+1,f
   588     0047  3EFF               	addlw	-1
   589     0048  1D03               	skipz
   590     0049  2844               	goto	u155
   591     004A                     l697:
   592     004A  3001               	movlw	1
   593     004B  07AE               	addwf	___awmod@counter,f
   594     004C                     l699:
   595     004C  1FAB               	btfss	___awmod@divisor+1,7
   596     004D  284F               	goto	u161
   597     004E  2850               	goto	u160
   598     004F                     u161:
   599     004F  2843               	goto	l695
   600     0050                     u160:
   601     0050                     l701:
   602     0050  082B               	movf	___awmod@divisor+1,w
   603     0051  022D               	subwf	___awmod@dividend+1,w
   604     0052  1D03               	skipz
   605     0053  2856               	goto	u175
   606     0054  082A               	movf	___awmod@divisor,w
   607     0055  022C               	subwf	___awmod@dividend,w
   608     0056                     u175:
   609     0056  1C03               	skipc
   610     0057  2859               	goto	u171
   611     0058  285A               	goto	u170
   612     0059                     u171:
   613     0059  2860               	goto	l705
   614     005A                     u170:
   615     005A                     l703:
   616     005A  082A               	movf	___awmod@divisor,w
   617     005B  02AC               	subwf	___awmod@dividend,f
   618     005C  082B               	movf	___awmod@divisor+1,w
   619     005D  1C03               	skipc
   620     005E  03AD               	decf	___awmod@dividend+1,f
   621     005F  02AD               	subwf	___awmod@dividend+1,f
   622     0060                     l705:
   623     0060  3001               	movlw	1
   624     0061                     u185:
   625     0061  1003               	clrc
   626     0062  0CAB               	rrf	___awmod@divisor+1,f
   627     0063  0CAA               	rrf	___awmod@divisor,f
   628     0064  3EFF               	addlw	-1
   629     0065  1D03               	skipz
   630     0066  2861               	goto	u185
   631     0067                     l707:
   632     0067  3001               	movlw	1
   633     0068  02AE               	subwf	___awmod@counter,f
   634     0069  1D03               	btfss	3,2
   635     006A  286C               	goto	u191
   636     006B  286D               	goto	u190
   637     006C                     u191:
   638     006C  2850               	goto	l701
   639     006D                     u190:
   640     006D                     l709:
   641     006D  082F               	movf	___awmod@sign,w
   642     006E  1903               	btfsc	3,2
   643     006F  2871               	goto	u201
   644     0070  2872               	goto	u200
   645     0071                     u201:
   646     0071  2877               	goto	l713
   647     0072                     u200:
   648     0072                     l711:
   649     0072  09AC               	comf	___awmod@dividend,f
   650     0073  09AD               	comf	___awmod@dividend+1,f
   651     0074  0AAC               	incf	___awmod@dividend,f
   652     0075  1903               	skipnz
   653     0076  0AAD               	incf	___awmod@dividend+1,f
   654     0077                     l713:
   655     0077  082D               	movf	___awmod@dividend+1,w
   656     0078  00AB               	movwf	?___awmod+1
   657     0079  082C               	movf	___awmod@dividend,w
   658     007A  00AA               	movwf	?___awmod
   659     007B                     l301:
   660     007B  0008               	return
   661     007C                     __end_of___awmod:
   662                           
   663                           	psect	text2
   664     00F2                     __ptext2:	
   665 ;; *************** function _ISR *****************
   666 ;; Defined at:
   667 ;;		line 89 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0
   683 ;;      Temps:          3       0       0       0       0
   684 ;;      Totals:         3       0       0       0       0
   685 ;;Total ram usage:        3 bytes
   686 ;; Hardware stack levels used: 1
   687 ;; Hardware stack levels required when called: 1
   688 ;; This function calls:
   689 ;;		_blink_LED
   690 ;; This function is called by:
   691 ;;		Interrupt level 1
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695     00F2                     _ISR:	
   696                           ;psect for function _ISR
   697                           
   698     00F2                     i1l669:
   699     00F2  1C8B               	btfss	11,1	;volatile
   700     00F3  28F5               	goto	u11_21
   701     00F4  28F6               	goto	u11_20
   702     00F5                     u11_21:
   703     00F5  28FE               	goto	i1l49
   704     00F6                     u11_20:
   705     00F6                     i1l671:
   706     00F6  138B               	bcf	11,7	;volatile
   707     00F7                     i1l673:
   708     00F7  120A  118A  20BC  120A  118A  	fcall	_blink_LED
   709     00FC                     i1l675:
   710     00FC  178B               	bsf	11,7	;volatile
   711     00FD                     i1l677:
   712     00FD  108B               	bcf	11,1	;volatile
   713     00FE                     i1l49:
   714     00FE  0877               	movf	??_ISR+2,w
   715     00FF  00FF               	movwf	btemp+1
   716     0100  0876               	movf	??_ISR+1,w
   717     0101  008A               	movwf	10
   718     0102  0E75               	swapf	??_ISR,w
   719     0103  0083               	movwf	3
   720     0104  0EFE               	swapf	btemp,f
   721     0105  0E7E               	swapf	btemp,w
   722     0106  0009               	retfie
   723     0107                     __end_of_ISR:
   724                           
   725                           	psect	intentry
   726     0004                     __pintentry:	
   727                           ;incstack = 0
   728                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   729                           
   730     0004                     interrupt_function:
   731     007E                     saved_w         set	btemp
   732     0004  00FE               	movwf	btemp
   733     0005  0E03               	swapf	3,w
   734     0006  00F5               	movwf	??_ISR
   735     0007  080A               	movf	10,w
   736     0008  00F6               	movwf	??_ISR+1
   737     0009  087F               	movf	btemp+1,w
   738     000A  00F7               	movwf	??_ISR+2
   739     000B  120A  118A  28F2   	ljmp	_ISR
   740                           
   741                           	psect	text3
   742     00BC                     __ptext3:	
   743 ;; *************** function _blink_LED *****************
   744 ;; Defined at:
   745 ;;		line 78 in file "main.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  i               2    3[COMMON] int 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, status,2, btemp+1
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   759 ;;      Params:         0       0       0       0       0
   760 ;;      Locals:         2       0       0       0       0
   761 ;;      Temps:          3       0       0       0       0
   762 ;;      Totals:         5       0       0       0       0
   763 ;;Total ram usage:        5 bytes
   764 ;; Hardware stack levels used: 1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_ISR
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772     00BC                     _blink_LED:	
   773                           ;psect for function _blink_LED
   774                           
   775     00BC                     i1l593:	
   776                           ;incstack = 0
   777                           ; Regs used in _blink_LED: [wreg+status,2+btemp+1]
   778                           
   779     00BC  01F3               	clrf	blink_LED@i
   780     00BD  01F4               	clrf	blink_LED@i+1
   781     00BE                     i1l41:
   782     00BE  1283               	bcf	3,5	;RP0=0, select bank0
   783     00BF  1303               	bcf	3,6	;RP1=0, select bank0
   784     00C0  1407               	bsf	7,0	;volatile
   785     00C1                     i1l599:
   786     00C1  3002               	movlw	2
   787     00C2  00F2               	movwf	??_blink_LED+2
   788     00C3  3004               	movlw	4
   789     00C4  00F1               	movwf	??_blink_LED+1
   790     00C5  30BA               	movlw	186
   791     00C6  00F0               	movwf	??_blink_LED
   792     00C7                     u22_27:
   793     00C7  0BF0               	decfsz	??_blink_LED,f
   794     00C8  28C7               	goto	u22_27
   795     00C9  0BF1               	decfsz	??_blink_LED+1,f
   796     00CA  28C7               	goto	u22_27
   797     00CB  0BF2               	decfsz	??_blink_LED+2,f
   798     00CC  28C7               	goto	u22_27
   799     00CD  0000               	nop
   800     00CE                     i1l601:
   801     00CE  1283               	bcf	3,5	;RP0=0, select bank0
   802     00CF  1303               	bcf	3,6	;RP1=0, select bank0
   803     00D0  1007               	bcf	7,0	;volatile
   804     00D1  3002               	movlw	2
   805     00D2  00F2               	movwf	??_blink_LED+2
   806     00D3  3004               	movlw	4
   807     00D4  00F1               	movwf	??_blink_LED+1
   808     00D5  30BA               	movlw	186
   809     00D6  00F0               	movwf	??_blink_LED
   810     00D7                     u23_27:
   811     00D7  0BF0               	decfsz	??_blink_LED,f
   812     00D8  28D7               	goto	u23_27
   813     00D9  0BF1               	decfsz	??_blink_LED+1,f
   814     00DA  28D7               	goto	u23_27
   815     00DB  0BF2               	decfsz	??_blink_LED+2,f
   816     00DC  28D7               	goto	u23_27
   817     00DD  0000               	nop
   818     00DE  3001               	movlw	1
   819     00DF  07F3               	addwf	blink_LED@i,f
   820     00E0  1803               	skipnc
   821     00E1  0AF4               	incf	blink_LED@i+1,f
   822     00E2  3000               	movlw	0
   823     00E3  07F4               	addwf	blink_LED@i+1,f
   824     00E4                     i1l603:
   825     00E4  0874               	movf	blink_LED@i+1,w
   826     00E5  3A80               	xorlw	128
   827     00E6  00FF               	movwf	btemp+1
   828     00E7  3080               	movlw	128
   829     00E8  027F               	subwf	btemp+1,w
   830     00E9  1D03               	skipz
   831     00EA  28ED               	goto	u1_25
   832     00EB  3004               	movlw	4
   833     00EC  0273               	subwf	blink_LED@i,w
   834     00ED                     u1_25:
   835     00ED  1C03               	skipc
   836     00EE  28F0               	goto	u1_21
   837     00EF  28F1               	goto	u1_20
   838     00F0                     u1_21:
   839     00F0  28BE               	goto	i1l41
   840     00F1                     u1_20:
   841     00F1                     i1l43:
   842     00F1  0008               	return
   843     00F2                     __end_of_blink_LED:
   844     0002                     ___latbits      equ	2
   845     007E                     btemp           set	126	;btemp
   846     007E                     wtemp0          set	126
   847                           
   848                           	psect	config
   849                           
   850                           ;Config register CONFIG1 @ 0x2007
   851                           ;	Oscillator Selection bits
   852                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   853                           ;	Watchdog Timer Enable bit
   854                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   855                           ;	Power-up Timer Enable bit
   856                           ;	PWRTE = OFF, PWRT disabled
   857                           ;	RE3/MCLR pin function select bit
   858                           ;	MCLRE = 0x1, unprogrammed default
   859                           ;	Code Protection bit
   860                           ;	CP = OFF, Program memory code protection is disabled
   861                           ;	Data Code Protection bit
   862                           ;	CPD = OFF, Data memory code protection is disabled
   863                           ;	Brown Out Reset Selection bits
   864                           ;	BOREN = ON, BOR enabled
   865                           ;	Internal External Switchover bit
   866                           ;	IESO = 0x1, unprogrammed default
   867                           ;	Fail-Safe Clock Monitor Enabled bit
   868                           ;	FCMEN = 0x1, unprogrammed default
   869                           ;	Low Voltage Programming Enable bit
   870                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   871                           ;	In-Circuit Debugger Mode bit
   872                           ;	DEBUG = 0x1, unprogrammed default
   873     2007                     	org	8199
   874     2007  2FF1               	dw	12273
   875                           
   876                           ;Config register CONFIG2 @ 0x2008
   877                           ;	Brown-out Reset Selection bit
   878                           ;	BOR4V = 0x1, unprogrammed default
   879                           ;	Flash Program Memory Self Write Enable bits
   880                           ;	WRT = OFF, Write protection off
   881     2008                     	org	8200
   882     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      9      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_blink_LED

Critical Paths under _main in BANK0

    _main->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     344
                                              6 BANK0      3     3      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     298
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      30
                                              5 COMMON     3     3      0
                          _blink_LED
 ---------------------------------------------------------------------------------
 (3) _blink_LED                                            5     5      0      30
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod

 _ISR (ROOT)
   _blink_LED

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      9      19     23.8%
BITBANK0            80      0       0      0.0%
COMMON              14      8       8     57.1%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      27      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jun 10 16:19:52 2025

                      pc 0002                       fsr 0004                      l301 007B  
                    l701 0050                      l711 0072                      l703 005A  
                    l713 0077                      l705 0060                      l721 0084  
                    l707 0067                      l731 008C                      l723 0085  
                    l709 006D                      l741 00A2                      l733 008D  
                    l725 0086                      l717 007C                      l735 008E  
                    l727 0088                      l719 0080                      l681 0026  
                    l737 0091                      l729 008B                      l691 003A  
                    l683 002A                      l739 0098                      l693 0040  
                    l685 002F                      l695 0043                      l687 0031  
                    l679 0023                      l697 004A                      l689 0035  
                    l699 004C                      _GIE 005F                      u200 0072  
                    u120 002A                      u201 0071                      u121 0029  
                    u130 0035                      u131 0034                      u140 0040  
                    u141 003F                      u160 0050                      u161 004F  
                    u217 009E                      u170 005A                      u171 0059  
                    u155 0044                      u190 006D                      u191 006C  
                    u175 0056                      u185 0061                      _ISR 00F2  
                    fsr0 0004                      indf 0000             ___awmod@sign 002F  
                   ?_ISR 0070                     _INTE 005C                     _INTF 0059  
                   i1l41 00BE                     i1l43 00F1                     i1l49 00FE  
                   u1_20 00F1                     u1_21 00F0                     u1_25 00ED  
                   _main 007C                     btemp 007E                     start 000E  
                  ??_ISR 0075                    ?_main 0070          __end_of___awmod 007C  
                  _ANSEL 0188                    i1l601 00CE                    i1l603 00E4  
                  i1l671 00F6                    i1l593 00BC                    i1l673 00F7  
                  i1l675 00FC                    i1l677 00FD                    i1l669 00F2  
                  i1l599 00C1                    u11_20 00F6                    u11_21 00F5  
                  u22_27 00C7                    u23_27 00D7                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 00BC  
                 ??_main 0030                   _ANSELH 0189                   _INTEDG 040E  
              ??___awmod 002E                   _digito 0020          ___awmod@divisor 002A  
        ___awmod@counter 002E                   saved_w 007E  __end_of__initialization 001F  
         __pcstackCOMMON 0070             __pidataBANK0 011A               __pmaintext 007C  
             __pintentry 0004        __end_of_blink_LED 00F2                  ___awmod 0023  
                __ptext1 0023                  __ptext2 00F2                  __ptext3 00BC  
       ___awmod@dividend 002C     end_of_initialization 001F               blink_LED@i 0073  
              _PORTCbits 0007      start_initialization 0011              __end_of_ISR 0107  
             init_fetch0 0107              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 002A                _blink_LED 00BC                 ?___awmod 002A  
      interrupt_function 0004               ?_blink_LED 0070              ??_blink_LED 0070  
               main@cont 0032                 init_ram0 010B                 intlevel1 0000  
             _OPTION_REG 0081  
