

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jun 06 18:15:19 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0004                     fsr             equ	4
    51     0004                     fsr0            equ	4
    52     0000                     indf            equ	0
    53     0000                     indf0           equ	0
    54     0002                     pc              equ	2
    55     0002                     pcl             equ	2
    56     000A                     pclath          equ	10
    57     0003                     status          equ	3
    58     0000                     INDF            equ	0	;# 
    59     0001                     TMR0            equ	1	;# 
    60     0002                     PCL             equ	2	;# 
    61     0003                     STATUS          equ	3	;# 
    62     0004                     FSR             equ	4	;# 
    63     0005                     PORTA           equ	5	;# 
    64     0006                     PORTB           equ	6	;# 
    65     0007                     PORTC           equ	7	;# 
    66     0008                     PORTD           equ	8	;# 
    67     0009                     PORTE           equ	9	;# 
    68     000A                     PCLATH          equ	10	;# 
    69     000B                     INTCON          equ	11	;# 
    70     000C                     PIR1            equ	12	;# 
    71     000D                     PIR2            equ	13	;# 
    72     000E                     TMR1            equ	14	;# 
    73     000E                     TMR1L           equ	14	;# 
    74     000F                     TMR1H           equ	15	;# 
    75     0010                     T1CON           equ	16	;# 
    76     0011                     TMR2            equ	17	;# 
    77     0012                     T2CON           equ	18	;# 
    78     0013                     SSPBUF          equ	19	;# 
    79     0014                     SSPCON          equ	20	;# 
    80     0015                     CCPR1           equ	21	;# 
    81     0015                     CCPR1L          equ	21	;# 
    82     0016                     CCPR1H          equ	22	;# 
    83     0017                     CCP1CON         equ	23	;# 
    84     0018                     RCSTA           equ	24	;# 
    85     0019                     TXREG           equ	25	;# 
    86     001A                     RCREG           equ	26	;# 
    87     001B                     CCPR2           equ	27	;# 
    88     001B                     CCPR2L          equ	27	;# 
    89     001C                     CCPR2H          equ	28	;# 
    90     001D                     CCP2CON         equ	29	;# 
    91     001E                     ADRESH          equ	30	;# 
    92     001F                     ADCON0          equ	31	;# 
    93     0081                     OPTION_REG      equ	129	;# 
    94     0085                     TRISA           equ	133	;# 
    95     0086                     TRISB           equ	134	;# 
    96     0087                     TRISC           equ	135	;# 
    97     0088                     TRISD           equ	136	;# 
    98     0089                     TRISE           equ	137	;# 
    99     008C                     PIE1            equ	140	;# 
   100     008D                     PIE2            equ	141	;# 
   101     008E                     PCON            equ	142	;# 
   102     008F                     OSCCON          equ	143	;# 
   103     0090                     OSCTUNE         equ	144	;# 
   104     0091                     SSPCON2         equ	145	;# 
   105     0092                     PR2             equ	146	;# 
   106     0093                     SSPADD          equ	147	;# 
   107     0093                     SSPMSK          equ	147	;# 
   108     0093                     MSK             equ	147	;# 
   109     0094                     SSPSTAT         equ	148	;# 
   110     0095                     WPUB            equ	149	;# 
   111     0096                     IOCB            equ	150	;# 
   112     0097                     VRCON           equ	151	;# 
   113     0098                     TXSTA           equ	152	;# 
   114     0099                     SPBRG           equ	153	;# 
   115     009A                     SPBRGH          equ	154	;# 
   116     009B                     PWM1CON         equ	155	;# 
   117     009C                     ECCPAS          equ	156	;# 
   118     009D                     PSTRCON         equ	157	;# 
   119     009E                     ADRESL          equ	158	;# 
   120     009F                     ADCON1          equ	159	;# 
   121     0105                     WDTCON          equ	261	;# 
   122     0107                     CM1CON0         equ	263	;# 
   123     0108                     CM2CON0         equ	264	;# 
   124     0109                     CM2CON1         equ	265	;# 
   125     010C                     EEDATA          equ	268	;# 
   126     010C                     EEDAT           equ	268	;# 
   127     010D                     EEADR           equ	269	;# 
   128     010E                     EEDATH          equ	270	;# 
   129     010F                     EEADRH          equ	271	;# 
   130     0185                     SRCON           equ	389	;# 
   131     0187                     BAUDCTL         equ	391	;# 
   132     0188                     ANSEL           equ	392	;# 
   133     0189                     ANSELH          equ	393	;# 
   134     018C                     EECON1          equ	396	;# 
   135     018D                     EECON2          equ	397	;# 
   136     0000                     INDF            equ	0	;# 
   137     0001                     TMR0            equ	1	;# 
   138     0002                     PCL             equ	2	;# 
   139     0003                     STATUS          equ	3	;# 
   140     0004                     FSR             equ	4	;# 
   141     0005                     PORTA           equ	5	;# 
   142     0006                     PORTB           equ	6	;# 
   143     0007                     PORTC           equ	7	;# 
   144     0008                     PORTD           equ	8	;# 
   145     0009                     PORTE           equ	9	;# 
   146     000A                     PCLATH          equ	10	;# 
   147     000B                     INTCON          equ	11	;# 
   148     000C                     PIR1            equ	12	;# 
   149     000D                     PIR2            equ	13	;# 
   150     000E                     TMR1            equ	14	;# 
   151     000E                     TMR1L           equ	14	;# 
   152     000F                     TMR1H           equ	15	;# 
   153     0010                     T1CON           equ	16	;# 
   154     0011                     TMR2            equ	17	;# 
   155     0012                     T2CON           equ	18	;# 
   156     0013                     SSPBUF          equ	19	;# 
   157     0014                     SSPCON          equ	20	;# 
   158     0015                     CCPR1           equ	21	;# 
   159     0015                     CCPR1L          equ	21	;# 
   160     0016                     CCPR1H          equ	22	;# 
   161     0017                     CCP1CON         equ	23	;# 
   162     0018                     RCSTA           equ	24	;# 
   163     0019                     TXREG           equ	25	;# 
   164     001A                     RCREG           equ	26	;# 
   165     001B                     CCPR2           equ	27	;# 
   166     001B                     CCPR2L          equ	27	;# 
   167     001C                     CCPR2H          equ	28	;# 
   168     001D                     CCP2CON         equ	29	;# 
   169     001E                     ADRESH          equ	30	;# 
   170     001F                     ADCON0          equ	31	;# 
   171     0081                     OPTION_REG      equ	129	;# 
   172     0085                     TRISA           equ	133	;# 
   173     0086                     TRISB           equ	134	;# 
   174     0087                     TRISC           equ	135	;# 
   175     0088                     TRISD           equ	136	;# 
   176     0089                     TRISE           equ	137	;# 
   177     008C                     PIE1            equ	140	;# 
   178     008D                     PIE2            equ	141	;# 
   179     008E                     PCON            equ	142	;# 
   180     008F                     OSCCON          equ	143	;# 
   181     0090                     OSCTUNE         equ	144	;# 
   182     0091                     SSPCON2         equ	145	;# 
   183     0092                     PR2             equ	146	;# 
   184     0093                     SSPADD          equ	147	;# 
   185     0093                     SSPMSK          equ	147	;# 
   186     0093                     MSK             equ	147	;# 
   187     0094                     SSPSTAT         equ	148	;# 
   188     0095                     WPUB            equ	149	;# 
   189     0096                     IOCB            equ	150	;# 
   190     0097                     VRCON           equ	151	;# 
   191     0098                     TXSTA           equ	152	;# 
   192     0099                     SPBRG           equ	153	;# 
   193     009A                     SPBRGH          equ	154	;# 
   194     009B                     PWM1CON         equ	155	;# 
   195     009C                     ECCPAS          equ	156	;# 
   196     009D                     PSTRCON         equ	157	;# 
   197     009E                     ADRESL          equ	158	;# 
   198     009F                     ADCON1          equ	159	;# 
   199     0105                     WDTCON          equ	261	;# 
   200     0107                     CM1CON0         equ	263	;# 
   201     0108                     CM2CON0         equ	264	;# 
   202     0109                     CM2CON1         equ	265	;# 
   203     010C                     EEDATA          equ	268	;# 
   204     010C                     EEDAT           equ	268	;# 
   205     010D                     EEADR           equ	269	;# 
   206     010E                     EEDATH          equ	270	;# 
   207     010F                     EEADRH          equ	271	;# 
   208     0185                     SRCON           equ	389	;# 
   209     0187                     BAUDCTL         equ	391	;# 
   210     0188                     ANSEL           equ	392	;# 
   211     0189                     ANSELH          equ	393	;# 
   212     018C                     EECON1          equ	396	;# 
   213     018D                     EECON2          equ	397	;# 
   214                           
   215                           	psect	idataBANK0
   216     05C2                     __pidataBANK0:
   217                           
   218                           ;initializer for _digito
   219     05C2  343F               	retlw	63
   220     05C3  3406               	retlw	6
   221     05C4  345B               	retlw	91
   222     05C5  344F               	retlw	79
   223     05C6  3466               	retlw	102
   224     05C7  346D               	retlw	109
   225     05C8  347D               	retlw	125
   226     05C9  3407               	retlw	7
   227     05CA  347F               	retlw	127
   228     05CB  346F               	retlw	111
   229     0008                     _PORTD          set	8
   230     0006                     _PORTB          set	6
   231     0086                     _TRISB          set	134
   232     0088                     _TRISD          set	136
   233                           
   234                           	psect	cinit
   235     07EE                     start_initialization:	
   236                           ; #config settings
   237                           
   238     07EE                     __initialization:
   239                           
   240                           ; Initialize objects allocated to BANK0
   241     07EE  1383               	bcf	3,7	;select IRP bank0
   242     07EF  3036               	movlw	low (__pdataBANK0+10)
   243     07F0  00FD               	movwf	btemp+-1
   244     07F1  3005               	movlw	high __pidataBANK0
   245     07F2  00FE               	movwf	btemp
   246     07F3  30C2               	movlw	low __pidataBANK0
   247     07F4  00FF               	movwf	btemp+1
   248     07F5  302C               	movlw	low __pdataBANK0
   249     07F6  0084               	movwf	4
   250     07F7  120A  118A  25D0  120A  118A  	fcall	init_ram0
   251     07FC                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254     07FC                     __end_of__initialization:
   255     07FC  0183               	clrf	3
   256     07FD  120A  118A  2E99   	ljmp	_main	;jump to C main() function
   257                           
   258                           	psect	dataBANK0
   259     002C                     __pdataBANK0:
   260     002C                     _digito:
   261     002C                     	ds	10
   262                           
   263                           	psect	inittext
   264     05CC                     init_fetch0:	
   265                           ;	Called with low address in FSR and high address in W
   266                           
   267     05CC  087E               	movf	btemp,w
   268     05CD  008A               	movwf	10
   269     05CE  087F               	movf	btemp+1,w
   270     05CF  0082               	movwf	2
   271     05D0                     init_ram0:	
   272                           ;Called with:
   273                           ;	high address of idata address in btemp 
   274                           ;	low address of idata address in btemp+1 
   275                           ;	low address of data in FSR
   276                           ;	high address + 1 of data in btemp-1
   277                           
   278     05D0  120A  118A  25CC  120A  118A  	fcall	init_fetch0
   279     05D5  0080               	movwf	0
   280     05D6  0A84               	incf	4,f
   281     05D7  0804               	movf	4,w
   282     05D8  067D               	xorwf	btemp+-1,w
   283     05D9  1903               	btfsc	3,2
   284     05DA  3400               	retlw	0
   285     05DB  0AFF               	incf	btemp+1,f
   286     05DC  1903               	btfsc	3,2
   287     05DD  0AFE               	incf	btemp,f
   288     05DE  2DD0               	goto	init_ram0
   289                           
   290                           	psect	cstackCOMMON
   291     0070                     __pcstackCOMMON:
   292     0070                     ?_main:
   293     0070                     ?___awdiv:	
   294                           ; 1 bytes @ 0x0
   295                           
   296     0070                     ?___awmod:	
   297                           ; 2 bytes @ 0x0
   298                           
   299     0070                     ___awdiv@divisor:	
   300                           ; 2 bytes @ 0x0
   301                           
   302     0070                     ___awmod@divisor:	
   303                           ; 2 bytes @ 0x0
   304                           
   305                           
   306                           ; 2 bytes @ 0x0
   307     0070                     	ds	2
   308     0072                     ___awdiv@dividend:
   309     0072                     ___awmod@dividend:	
   310                           ; 2 bytes @ 0x2
   311                           
   312                           
   313                           ; 2 bytes @ 0x2
   314     0072                     	ds	2
   315     0074                     ___awdiv@counter:
   316     0074                     ___awmod@counter:	
   317                           ; 1 bytes @ 0x4
   318                           
   319     0074                     ??___awdiv:	
   320                           ; 1 bytes @ 0x4
   321                           
   322     0074                     ??___awmod:	
   323                           ; 1 bytes @ 0x4
   324                           
   325                           
   326                           ; 1 bytes @ 0x4
   327     0074                     	ds	1
   328     0075                     ___awdiv@sign:
   329     0075                     ___awmod@sign:	
   330                           ; 1 bytes @ 0x5
   331                           
   332                           
   333                           ; 1 bytes @ 0x5
   334     0075                     	ds	1
   335     0076                     ___awdiv@quotient:
   336                           
   337                           ; 2 bytes @ 0x6
   338     0076                     	ds	2
   339     0078                     ??_main:
   340                           
   341                           ; 1 bytes @ 0x8
   342     0078                     	ds	1
   343                           
   344                           	psect	cstackBANK0
   345     0020                     __pcstackBANK0:
   346     0020                     main@i:
   347                           
   348                           ; 2 bytes @ 0x0
   349     0020                     	ds	2
   350     0022                     main@mil:
   351                           
   352                           ; 2 bytes @ 0x2
   353     0022                     	ds	2
   354     0024                     main@dec:
   355                           
   356                           ; 2 bytes @ 0x4
   357     0024                     	ds	2
   358     0026                     main@uni:
   359                           
   360                           ; 2 bytes @ 0x6
   361     0026                     	ds	2
   362     0028                     main@num:
   363                           
   364                           ; 2 bytes @ 0x8
   365     0028                     	ds	2
   366     002A                     main@cent:
   367                           
   368                           ; 2 bytes @ 0xA
   369     002A                     	ds	2
   370                           
   371                           	psect	maintext
   372     0699                     __pmaintext:	
   373 ;;
   374 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   375 ;;
   376 ;; *************** function _main *****************
   377 ;; Defined at:
   378 ;;		line 46 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;  i               2    0[BANK0 ] int 
   383 ;;  uni             2    6[BANK0 ] int 
   384 ;;  dec             2    4[BANK0 ] int 
   385 ;;  cent            2   10[BANK0 ] int 
   386 ;;  num             2    8[BANK0 ] int 
   387 ;;  mil             2    2[BANK0 ] int 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : B00/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0      12       0       0       0
   399 ;;      Temps:          1       0       0       0       0
   400 ;;      Totals:         1      12       0       0       0
   401 ;;Total ram usage:       13 bytes
   402 ;; Hardware stack levels required when called: 1
   403 ;; This function calls:
   404 ;;		___awdiv
   405 ;;		___awmod
   406 ;; This function is called by:
   407 ;;		Startup code after reset
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411     0699                     _main:	
   412                           ;psect for function _main
   413                           
   414     0699                     l831:	
   415                           ;incstack = 0
   416                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   417                           
   418                           
   419                           ;main.c: 47: 
   420     0699  1683               	bsf	3,5	;RP0=1, select bank1
   421     069A  1303               	bcf	3,6	;RP1=0, select bank1
   422     069B  0188               	clrf	8	;volatile
   423                           
   424                           ;main.c: 48:                 PORTB = 0b11111110;
   425     069C  0186               	clrf	6	;volatile
   426                           
   427                           ;main.c: 50:                 _delay((unsigned long)((1)*(4000000/4000.0)));
   428     069D  1283               	bcf	3,5	;RP0=0, select bank0
   429     069E  1303               	bcf	3,6	;RP1=0, select bank0
   430     069F  01A8               	clrf	main@num
   431     06A0  01A9               	clrf	main@num+1
   432                           
   433                           ;main.c: 51:             }
   434     06A1  01AA               	clrf	main@cent
   435     06A2  01AB               	clrf	main@cent+1
   436                           
   437                           ;main.c: 52: 
   438     06A3  01A2               	clrf	main@mil
   439     06A4  01A3               	clrf	main@mil+1
   440     06A5                     l833:
   441                           
   442                           ;main.c: 55:                 PORTB = 0b11110111;
   443     06A5  300A               	movlw	10
   444     06A6  00F0               	movwf	___awdiv@divisor
   445     06A7  3000               	movlw	0
   446     06A8  00F1               	movwf	___awdiv@divisor+1
   447     06A9  0829               	movf	main@num+1,w
   448     06AA  00F3               	movwf	___awdiv@dividend+1
   449     06AB  0828               	movf	main@num,w
   450     06AC  00F2               	movwf	___awdiv@dividend
   451     06AD  120A  118A  2636  120A  118A  	fcall	___awdiv
   452     06B2  0871               	movf	?___awdiv+1,w
   453     06B3  1283               	bcf	3,5	;RP0=0, select bank0
   454     06B4  1303               	bcf	3,6	;RP1=0, select bank0
   455     06B5  00A5               	movwf	main@dec+1
   456     06B6  0870               	movf	?___awdiv,w
   457     06B7  00A4               	movwf	main@dec
   458     06B8                     l835:
   459                           
   460                           ;main.c: 56:                 PORTD = digito[cent];
   461     06B8  300A               	movlw	10
   462     06B9  00F0               	movwf	___awmod@divisor
   463     06BA  3000               	movlw	0
   464     06BB  00F1               	movwf	___awmod@divisor+1
   465     06BC  0829               	movf	main@num+1,w
   466     06BD  00F3               	movwf	___awmod@dividend+1
   467     06BE  0828               	movf	main@num,w
   468     06BF  00F2               	movwf	___awmod@dividend
   469     06C0  120A  118A  25DF  120A  118A  	fcall	___awmod
   470     06C5  0871               	movf	?___awmod+1,w
   471     06C6  1283               	bcf	3,5	;RP0=0, select bank0
   472     06C7  1303               	bcf	3,6	;RP1=0, select bank0
   473     06C8  00A7               	movwf	main@uni+1
   474     06C9  0870               	movf	?___awmod,w
   475     06CA  00A6               	movwf	main@uni
   476                           
   477                           ;main.c: 61: 
   478     06CB  01A0               	clrf	main@i
   479     06CC  01A1               	clrf	main@i+1
   480     06CD                     l841:
   481                           
   482                           ;main.c: 63:                 PORTD = digito[uni];
   483     06CD  1283               	bcf	3,5	;RP0=0, select bank0
   484     06CE  1303               	bcf	3,6	;RP1=0, select bank0
   485     06CF  0823               	movf	main@mil+1,w
   486     06D0  3A80               	xorlw	128
   487     06D1  00FF               	movwf	btemp+1
   488     06D2  3080               	movlw	128
   489     06D3  027F               	subwf	btemp+1,w
   490     06D4  1D03               	skipz
   491     06D5  2ED8               	goto	u485
   492     06D6  3001               	movlw	1
   493     06D7  0222               	subwf	main@mil,w
   494     06D8                     u485:
   495     06D8  1C03               	skipc
   496     06D9  2EDB               	goto	u481
   497     06DA  2EDC               	goto	u480
   498     06DB                     u481:
   499     06DB  2F21               	goto	l863
   500     06DC                     u480:
   501     06DC                     l843:
   502                           
   503                           ;main.c: 64:                 _delay((unsigned long)((1)*(4000000/4000.0)));;main.c: 65: 
      +                                      }
   504     06DC  30F7               	movlw	247
   505     06DD  1283               	bcf	3,5	;RP0=0, select bank0
   506     06DE  1303               	bcf	3,6	;RP1=0, select bank0
   507     06DF  0086               	movwf	6	;volatile
   508     06E0                     l845:
   509                           
   510                           ;main.c: 66: 
   511     06E0  0822               	movf	main@mil,w
   512     06E1  3E2C               	addlw	(low (_digito| 0))& (0+255)
   513     06E2  0084               	movwf	4
   514     06E3  1383               	bcf	3,7	;select IRP bank0
   515     06E4  0800               	movf	0,w
   516     06E5  0088               	movwf	8	;volatile
   517     06E6                     l847:
   518                           
   519                           ;main.c: 67:             else if(dec>0)
   520     06E6  30C7               	movlw	199
   521     06E7  00F8               	movwf	??_main
   522     06E8                     u577:
   523     06E8  2EE9               	nop2
   524     06E9  0BF8               	decfsz	??_main,f
   525     06EA  2EE8               	goto	u577
   526     06EB  2EEC               	nop2
   527     06EC  2EED               	nop2
   528     06ED                     l849:
   529                           
   530                           ;main.c: 68:             {
   531     06ED  30FB               	movlw	251
   532     06EE  1283               	bcf	3,5	;RP0=0, select bank0
   533     06EF  1303               	bcf	3,6	;RP1=0, select bank0
   534     06F0  0086               	movwf	6	;volatile
   535     06F1                     l851:
   536                           
   537                           ;main.c: 69:                 PORTB = 0b11110111;
   538     06F1  082A               	movf	main@cent,w
   539     06F2  3E2C               	addlw	(low (_digito| 0))& (0+255)
   540     06F3  0084               	movwf	4
   541     06F4  1383               	bcf	3,7	;select IRP bank0
   542     06F5  0800               	movf	0,w
   543     06F6  0088               	movwf	8	;volatile
   544                           
   545                           ;main.c: 70:                 PORTD = digito[dec];
   546     06F7  30C7               	movlw	199
   547     06F8  00F8               	movwf	??_main
   548     06F9                     u587:
   549     06F9  2EFA               	nop2
   550     06FA  0BF8               	decfsz	??_main,f
   551     06FB  2EF9               	goto	u587
   552     06FC  2EFD               	nop2
   553     06FD  2EFE               	nop2
   554     06FE                     l853:
   555                           
   556                           ;main.c: 71:                 _delay((unsigned long)((1)*(4000000/4000.0)));
   557     06FE  30FD               	movlw	253
   558     06FF  1283               	bcf	3,5	;RP0=0, select bank0
   559     0700  1303               	bcf	3,6	;RP1=0, select bank0
   560     0701  0086               	movwf	6	;volatile
   561     0702                     l855:
   562                           
   563                           ;main.c: 72: 
   564     0702  0824               	movf	main@dec,w
   565     0703  3E2C               	addlw	(low (_digito| 0))& (0+255)
   566     0704  0084               	movwf	4
   567     0705  1383               	bcf	3,7	;select IRP bank0
   568     0706  0800               	movf	0,w
   569     0707  0088               	movwf	8	;volatile
   570     0708                     l857:
   571                           
   572                           ;main.c: 73:                 PORTB = 0b11111011;
   573     0708  30C7               	movlw	199
   574     0709  00F8               	movwf	??_main
   575     070A                     u597:
   576     070A  2F0B               	nop2
   577     070B  0BF8               	decfsz	??_main,f
   578     070C  2F0A               	goto	u597
   579     070D  2F0E               	nop2
   580     070E  2F0F               	nop2
   581     070F                     l859:
   582                           
   583                           ;main.c: 75:                 _delay((unsigned long)((1)*(4000000/4000.0)));
   584     070F  30FE               	movlw	254
   585     0710  1283               	bcf	3,5	;RP0=0, select bank0
   586     0711  1303               	bcf	3,6	;RP1=0, select bank0
   587     0712  0086               	movwf	6	;volatile
   588                           
   589                           ;main.c: 76:             }
   590     0713  0826               	movf	main@uni,w
   591     0714  3E2C               	addlw	(low (_digito| 0))& (0+255)
   592     0715  0084               	movwf	4
   593     0716  1383               	bcf	3,7	;select IRP bank0
   594     0717  0800               	movf	0,w
   595     0718  0088               	movwf	8	;volatile
   596     0719                     l861:
   597                           
   598                           ;main.c: 77: 
   599     0719  30C7               	movlw	199
   600     071A  00F8               	movwf	??_main
   601     071B                     u607:
   602     071B  2F1C               	nop2
   603     071C  0BF8               	decfsz	??_main,f
   604     071D  2F1B               	goto	u607
   605     071E  2F1F               	nop2
   606     071F  2F20               	nop2
   607                           
   608                           ;main.c: 78:             else
   609     0720  2F94               	goto	l897
   610     0721                     l863:
   611     0721  1283               	bcf	3,5	;RP0=0, select bank0
   612     0722  1303               	bcf	3,6	;RP1=0, select bank0
   613     0723  082B               	movf	main@cent+1,w
   614     0724  3A80               	xorlw	128
   615     0725  00FF               	movwf	btemp+1
   616     0726  3080               	movlw	128
   617     0727  027F               	subwf	btemp+1,w
   618     0728  1D03               	skipz
   619     0729  2F2C               	goto	u495
   620     072A  3001               	movlw	1
   621     072B  022A               	subwf	main@cent,w
   622     072C                     u495:
   623     072C  1C03               	skipc
   624     072D  2F2F               	goto	u491
   625     072E  2F30               	goto	u490
   626     072F                     u491:
   627     072F  2F5D               	goto	l881
   628     0730                     u490:
   629     0730                     l865:
   630                           
   631                           ;main.c: 81:                 PORTD = digito[uni];;main.c: 82:                 _delay((un
      +                          signed long)((1)*(4000000/4000.0)));
   632     0730  30F7               	movlw	247
   633     0731  1283               	bcf	3,5	;RP0=0, select bank0
   634     0732  1303               	bcf	3,6	;RP1=0, select bank0
   635     0733  0086               	movwf	6	;volatile
   636     0734                     l867:
   637                           
   638                           ;main.c: 83:             }
   639     0734  082A               	movf	main@cent,w
   640     0735  3E2C               	addlw	(low (_digito| 0))& (0+255)
   641     0736  0084               	movwf	4
   642     0737  1383               	bcf	3,7	;select IRP bank0
   643     0738  0800               	movf	0,w
   644     0739  0088               	movwf	8	;volatile
   645     073A                     l869:
   646                           
   647                           ;main.c: 84: 
   648     073A  30C7               	movlw	199
   649     073B  00F8               	movwf	??_main
   650     073C                     u617:
   651     073C  2F3D               	nop2
   652     073D  0BF8               	decfsz	??_main,f
   653     073E  2F3C               	goto	u617
   654     073F  2F40               	nop2
   655     0740  2F41               	nop2
   656     0741                     l871:
   657                           
   658                           ;main.c: 85:         }
   659     0741  30FB               	movlw	251
   660     0742  1283               	bcf	3,5	;RP0=0, select bank0
   661     0743  1303               	bcf	3,6	;RP1=0, select bank0
   662     0744  0086               	movwf	6	;volatile
   663     0745                     l873:
   664                           
   665                           ;main.c: 86:         num++;
   666     0745  0824               	movf	main@dec,w
   667     0746  3E2C               	addlw	(low (_digito| 0))& (0+255)
   668     0747  0084               	movwf	4
   669     0748  1383               	bcf	3,7	;select IRP bank0
   670     0749  0800               	movf	0,w
   671     074A  0088               	movwf	8	;volatile
   672                           
   673                           ;main.c: 87: 
   674     074B  30C7               	movlw	199
   675     074C  00F8               	movwf	??_main
   676     074D                     u627:
   677     074D  2F4E               	nop2
   678     074E  0BF8               	decfsz	??_main,f
   679     074F  2F4D               	goto	u627
   680     0750  2F51               	nop2
   681     0751  2F52               	nop2
   682     0752                     l875:
   683                           
   684                           ;main.c: 89:             cent++;
   685     0752  30FD               	movlw	253
   686     0753  1283               	bcf	3,5	;RP0=0, select bank0
   687     0754  1303               	bcf	3,6	;RP1=0, select bank0
   688     0755  0086               	movwf	6	;volatile
   689     0756                     l877:
   690                           
   691                           ;main.c: 90:             num = 0;
   692     0756  0826               	movf	main@uni,w
   693     0757  3E2C               	addlw	(low (_digito| 0))& (0+255)
   694     0758  0084               	movwf	4
   695     0759  1383               	bcf	3,7	;select IRP bank0
   696     075A  0800               	movf	0,w
   697     075B  0088               	movwf	8	;volatile
   698     075C  2F19               	goto	l861
   699     075D                     l881:
   700     075D  1283               	bcf	3,5	;RP0=0, select bank0
   701     075E  1303               	bcf	3,6	;RP1=0, select bank0
   702     075F  0825               	movf	main@dec+1,w
   703     0760  3A80               	xorlw	128
   704     0761  00FF               	movwf	btemp+1
   705     0762  3080               	movlw	128
   706     0763  027F               	subwf	btemp+1,w
   707     0764  1D03               	skipz
   708     0765  2F68               	goto	u505
   709     0766  3001               	movlw	1
   710     0767  0224               	subwf	main@dec,w
   711     0768                     u505:
   712     0768  1C03               	skipc
   713     0769  2F6B               	goto	u501
   714     076A  2F6C               	goto	u500
   715     076B                     u501:
   716     076B  2F8F               	goto	l24
   717     076C                     u500:
   718     076C                     l883:
   719                           
   720                           ;main.c: 95:         };main.c: 96:         if(mil == 9 && cent == 9 && num == 9){
   721     076C  30F7               	movlw	247
   722     076D  1283               	bcf	3,5	;RP0=0, select bank0
   723     076E  1303               	bcf	3,6	;RP1=0, select bank0
   724     076F  0086               	movwf	6	;volatile
   725     0770                     l885:
   726                           
   727                           ;main.c: 97:                 num = 0;
   728     0770  0824               	movf	main@dec,w
   729     0771  3E2C               	addlw	(low (_digito| 0))& (0+255)
   730     0772  0084               	movwf	4
   731     0773  1383               	bcf	3,7	;select IRP bank0
   732     0774  0800               	movf	0,w
   733     0775  0088               	movwf	8	;volatile
   734     0776                     l887:
   735                           
   736                           ;main.c: 98:                 cent = 0;
   737     0776  30C7               	movlw	199
   738     0777  00F8               	movwf	??_main
   739     0778                     u637:
   740     0778  2F79               	nop2
   741     0779  0BF8               	decfsz	??_main,f
   742     077A  2F78               	goto	u637
   743     077B  2F7C               	nop2
   744     077C  2F7D               	nop2
   745     077D                     l889:
   746                           
   747                           ;main.c: 100:         }
   748     077D  30FB               	movlw	251
   749     077E  1283               	bcf	3,5	;RP0=0, select bank0
   750     077F  1303               	bcf	3,6	;RP1=0, select bank0
   751     0780  0086               	movwf	6	;volatile
   752     0781                     l891:
   753                           
   754                           ;main.c: 101:     }
   755     0781  0826               	movf	main@uni,w
   756     0782  3E2C               	addlw	(low (_digito| 0))& (0+255)
   757     0783  0084               	movwf	4
   758     0784  1383               	bcf	3,7	;select IRP bank0
   759     0785  0800               	movf	0,w
   760     0786  0088               	movwf	8	;volatile
   761                           
   762                           ;main.c: 102: }
   763     0787  30C7               	movlw	199
   764     0788  00F8               	movwf	??_main
   765     0789                     u647:
   766     0789  2F8A               	nop2
   767     078A  0BF8               	decfsz	??_main,f
   768     078B  2F89               	goto	u647
   769     078C  2F8D               	nop2
   770     078D  2F8E               	nop2
   771     078E  2F94               	goto	l897
   772     078F                     l24:
   773     078F  30F7               	movlw	247
   774     0790  1283               	bcf	3,5	;RP0=0, select bank0
   775     0791  1303               	bcf	3,6	;RP1=0, select bank0
   776     0792  0086               	movwf	6	;volatile
   777     0793  2F56               	goto	l877
   778     0794                     l897:
   779     0794  3001               	movlw	1
   780     0795  1283               	bcf	3,5	;RP0=0, select bank0
   781     0796  1303               	bcf	3,6	;RP1=0, select bank0
   782     0797  07A0               	addwf	main@i,f
   783     0798  1803               	skipnc
   784     0799  0AA1               	incf	main@i+1,f
   785     079A  3000               	movlw	0
   786     079B  07A1               	addwf	main@i+1,f
   787     079C                     l899:
   788     079C  0821               	movf	main@i+1,w
   789     079D  3A80               	xorlw	128
   790     079E  00FF               	movwf	btemp+1
   791     079F  3080               	movlw	128
   792     07A0  027F               	subwf	btemp+1,w
   793     07A1  1D03               	skipz
   794     07A2  2FA5               	goto	u515
   795     07A3  3002               	movlw	2
   796     07A4  0220               	subwf	main@i,w
   797     07A5                     u515:
   798     07A5  1C03               	skipc
   799     07A6  2FA8               	goto	u511
   800     07A7  2FA9               	goto	u510
   801     07A8                     u511:
   802     07A8  2ECD               	goto	l841
   803     07A9                     u510:
   804     07A9                     l901:
   805     07A9  3001               	movlw	1
   806     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   807     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   808     07AC  07A8               	addwf	main@num,f
   809     07AD  1803               	skipnc
   810     07AE  0AA9               	incf	main@num+1,f
   811     07AF  3000               	movlw	0
   812     07B0  07A9               	addwf	main@num+1,f
   813     07B1                     l903:
   814     07B1  3064               	movlw	100
   815     07B2  0628               	xorwf	main@num,w
   816     07B3  0429               	iorwf	main@num+1,w
   817     07B4  1D03               	btfss	3,2
   818     07B5  2FB7               	goto	u521
   819     07B6  2FB8               	goto	u520
   820     07B7                     u521:
   821     07B7  2FC0               	goto	l909
   822     07B8                     u520:
   823     07B8                     l905:
   824     07B8  3001               	movlw	1
   825     07B9  07AA               	addwf	main@cent,f
   826     07BA  1803               	skipnc
   827     07BB  0AAB               	incf	main@cent+1,f
   828     07BC  3000               	movlw	0
   829     07BD  07AB               	addwf	main@cent+1,f
   830     07BE                     l907:
   831     07BE  01A8               	clrf	main@num
   832     07BF  01A9               	clrf	main@num+1
   833     07C0                     l909:
   834     07C0  300A               	movlw	10
   835     07C1  062A               	xorwf	main@cent,w
   836     07C2  042B               	iorwf	main@cent+1,w
   837     07C3  1D03               	btfss	3,2
   838     07C4  2FC6               	goto	u531
   839     07C5  2FC7               	goto	u530
   840     07C6                     u531:
   841     07C6  2FCF               	goto	l915
   842     07C7                     u530:
   843     07C7                     l911:
   844     07C7  3001               	movlw	1
   845     07C8  07A2               	addwf	main@mil,f
   846     07C9  1803               	skipnc
   847     07CA  0AA3               	incf	main@mil+1,f
   848     07CB  3000               	movlw	0
   849     07CC  07A3               	addwf	main@mil+1,f
   850     07CD                     l913:
   851     07CD  01AA               	clrf	main@cent
   852     07CE  01AB               	clrf	main@cent+1
   853     07CF                     l915:
   854     07CF  3009               	movlw	9
   855     07D0  0622               	xorwf	main@mil,w
   856     07D1  0423               	iorwf	main@mil+1,w
   857     07D2  1D03               	btfss	3,2
   858     07D3  2FD5               	goto	u541
   859     07D4  2FD6               	goto	u540
   860     07D5                     u541:
   861     07D5  2EA5               	goto	l833
   862     07D6                     u540:
   863     07D6                     l917:
   864     07D6  3009               	movlw	9
   865     07D7  062A               	xorwf	main@cent,w
   866     07D8  042B               	iorwf	main@cent+1,w
   867     07D9  1D03               	btfss	3,2
   868     07DA  2FDC               	goto	u551
   869     07DB  2FDD               	goto	u550
   870     07DC                     u551:
   871     07DC  2EA5               	goto	l833
   872     07DD                     u550:
   873     07DD                     l919:
   874     07DD  3009               	movlw	9
   875     07DE  0628               	xorwf	main@num,w
   876     07DF  0429               	iorwf	main@num+1,w
   877     07E0  1D03               	btfss	3,2
   878     07E1  2FE3               	goto	u561
   879     07E2  2FE4               	goto	u560
   880     07E3                     u561:
   881     07E3  2EA5               	goto	l833
   882     07E4                     u560:
   883     07E4                     l921:
   884     07E4  01A8               	clrf	main@num
   885     07E5  01A9               	clrf	main@num+1
   886     07E6  01AA               	clrf	main@cent
   887     07E7  01AB               	clrf	main@cent+1
   888     07E8  01A2               	clrf	main@mil
   889     07E9  01A3               	clrf	main@mil+1
   890     07EA  2EA5               	goto	l833
   891     07EB  120A  118A  2800   	ljmp	start
   892     07EE                     __end_of_main:
   893                           
   894                           	psect	text1
   895     05DF                     __ptext1:	
   896 ;; *************** function ___awmod *****************
   897 ;; Defined at:
   898 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  divisor         2    0[COMMON] int 
   901 ;;  dividend        2    2[COMMON] int 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  sign            1    5[COMMON] unsigned char 
   904 ;;  counter         1    4[COMMON] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  2    0[COMMON] int 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         4       0       0       0       0
   915 ;;      Locals:         2       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0
   917 ;;      Totals:         6       0       0       0       0
   918 ;;Total ram usage:        6 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927     05DF                     ___awmod:	
   928                           ;psect for function ___awmod
   929                           
   930     05DF                     l793:	
   931                           ;incstack = 0
   932                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   933                           
   934     05DF  01F5               	clrf	___awmod@sign
   935     05E0                     l795:
   936     05E0  1FF3               	btfss	___awmod@dividend+1,7
   937     05E1  2DE3               	goto	u391
   938     05E2  2DE4               	goto	u390
   939     05E3                     u391:
   940     05E3  2DEB               	goto	l801
   941     05E4                     u390:
   942     05E4                     l797:
   943     05E4  09F2               	comf	___awmod@dividend,f
   944     05E5  09F3               	comf	___awmod@dividend+1,f
   945     05E6  0AF2               	incf	___awmod@dividend,f
   946     05E7  1903               	skipnz
   947     05E8  0AF3               	incf	___awmod@dividend+1,f
   948     05E9                     l799:
   949     05E9  3001               	movlw	1
   950     05EA  00F5               	movwf	___awmod@sign
   951     05EB                     l801:
   952     05EB  1FF1               	btfss	___awmod@divisor+1,7
   953     05EC  2DEE               	goto	u401
   954     05ED  2DEF               	goto	u400
   955     05EE                     u401:
   956     05EE  2DF4               	goto	l805
   957     05EF                     u400:
   958     05EF                     l803:
   959     05EF  09F0               	comf	___awmod@divisor,f
   960     05F0  09F1               	comf	___awmod@divisor+1,f
   961     05F1  0AF0               	incf	___awmod@divisor,f
   962     05F2  1903               	skipnz
   963     05F3  0AF1               	incf	___awmod@divisor+1,f
   964     05F4                     l805:
   965     05F4  0870               	movf	___awmod@divisor,w
   966     05F5  0471               	iorwf	___awmod@divisor+1,w
   967     05F6  1903               	btfsc	3,2
   968     05F7  2DF9               	goto	u411
   969     05F8  2DFA               	goto	u410
   970     05F9                     u411:
   971     05F9  2E27               	goto	l823
   972     05FA                     u410:
   973     05FA                     l807:
   974     05FA  3001               	movlw	1
   975     05FB  00F4               	movwf	___awmod@counter
   976     05FC  2E06               	goto	l813
   977     05FD                     l809:
   978     05FD  3001               	movlw	1
   979     05FE                     u425:
   980     05FE  1003               	clrc
   981     05FF  0DF0               	rlf	___awmod@divisor,f
   982     0600  0DF1               	rlf	___awmod@divisor+1,f
   983     0601  3EFF               	addlw	-1
   984     0602  1D03               	skipz
   985     0603  2DFE               	goto	u425
   986     0604                     l811:
   987     0604  3001               	movlw	1
   988     0605  07F4               	addwf	___awmod@counter,f
   989     0606                     l813:
   990     0606  1FF1               	btfss	___awmod@divisor+1,7
   991     0607  2E09               	goto	u431
   992     0608  2E0A               	goto	u430
   993     0609                     u431:
   994     0609  2DFD               	goto	l809
   995     060A                     u430:
   996     060A                     l815:
   997     060A  0871               	movf	___awmod@divisor+1,w
   998     060B  0273               	subwf	___awmod@dividend+1,w
   999     060C  1D03               	skipz
  1000     060D  2E10               	goto	u445
  1001     060E  0870               	movf	___awmod@divisor,w
  1002     060F  0272               	subwf	___awmod@dividend,w
  1003     0610                     u445:
  1004     0610  1C03               	skipc
  1005     0611  2E13               	goto	u441
  1006     0612  2E14               	goto	u440
  1007     0613                     u441:
  1008     0613  2E1A               	goto	l819
  1009     0614                     u440:
  1010     0614                     l817:
  1011     0614  0870               	movf	___awmod@divisor,w
  1012     0615  02F2               	subwf	___awmod@dividend,f
  1013     0616  0871               	movf	___awmod@divisor+1,w
  1014     0617  1C03               	skipc
  1015     0618  03F3               	decf	___awmod@dividend+1,f
  1016     0619  02F3               	subwf	___awmod@dividend+1,f
  1017     061A                     l819:
  1018     061A  3001               	movlw	1
  1019     061B                     u455:
  1020     061B  1003               	clrc
  1021     061C  0CF1               	rrf	___awmod@divisor+1,f
  1022     061D  0CF0               	rrf	___awmod@divisor,f
  1023     061E  3EFF               	addlw	-1
  1024     061F  1D03               	skipz
  1025     0620  2E1B               	goto	u455
  1026     0621                     l821:
  1027     0621  3001               	movlw	1
  1028     0622  02F4               	subwf	___awmod@counter,f
  1029     0623  1D03               	btfss	3,2
  1030     0624  2E26               	goto	u461
  1031     0625  2E27               	goto	u460
  1032     0626                     u461:
  1033     0626  2E0A               	goto	l815
  1034     0627                     u460:
  1035     0627                     l823:
  1036     0627  0875               	movf	___awmod@sign,w
  1037     0628  1903               	btfsc	3,2
  1038     0629  2E2B               	goto	u471
  1039     062A  2E2C               	goto	u470
  1040     062B                     u471:
  1041     062B  2E31               	goto	l827
  1042     062C                     u470:
  1043     062C                     l825:
  1044     062C  09F2               	comf	___awmod@dividend,f
  1045     062D  09F3               	comf	___awmod@dividend+1,f
  1046     062E  0AF2               	incf	___awmod@dividend,f
  1047     062F  1903               	skipnz
  1048     0630  0AF3               	incf	___awmod@dividend+1,f
  1049     0631                     l827:
  1050     0631  0873               	movf	___awmod@dividend+1,w
  1051     0632  00F1               	movwf	?___awmod+1
  1052     0633  0872               	movf	___awmod@dividend,w
  1053     0634  00F0               	movwf	?___awmod
  1054     0635                     l283:
  1055     0635  0008               	return
  1056     0636                     __end_of___awmod:
  1057                           
  1058                           	psect	text2
  1059     0636                     __ptext2:	
  1060 ;; *************** function ___awdiv *****************
  1061 ;; Defined at:
  1062 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  divisor         2    0[COMMON] int 
  1065 ;;  dividend        2    2[COMMON] int 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  quotient        2    6[COMMON] int 
  1068 ;;  sign            1    5[COMMON] unsigned char 
  1069 ;;  counter         1    4[COMMON] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  2    0[COMMON] int 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1079 ;;      Params:         4       0       0       0       0
  1080 ;;      Locals:         4       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0
  1082 ;;      Totals:         8       0       0       0       0
  1083 ;;Total ram usage:        8 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092     0636                     ___awdiv:	
  1093                           ;psect for function ___awdiv
  1094                           
  1095     0636                     l749:	
  1096                           ;incstack = 0
  1097                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1098                           
  1099     0636  01F5               	clrf	___awdiv@sign
  1100     0637                     l751:
  1101     0637  1FF1               	btfss	___awdiv@divisor+1,7
  1102     0638  2E3A               	goto	u291
  1103     0639  2E3B               	goto	u290
  1104     063A                     u291:
  1105     063A  2E42               	goto	l757
  1106     063B                     u290:
  1107     063B                     l753:
  1108     063B  09F0               	comf	___awdiv@divisor,f
  1109     063C  09F1               	comf	___awdiv@divisor+1,f
  1110     063D  0AF0               	incf	___awdiv@divisor,f
  1111     063E  1903               	skipnz
  1112     063F  0AF1               	incf	___awdiv@divisor+1,f
  1113     0640                     l755:
  1114     0640  3001               	movlw	1
  1115     0641  00F5               	movwf	___awdiv@sign
  1116     0642                     l757:
  1117     0642  1FF3               	btfss	___awdiv@dividend+1,7
  1118     0643  2E45               	goto	u301
  1119     0644  2E46               	goto	u300
  1120     0645                     u301:
  1121     0645  2E4D               	goto	l763
  1122     0646                     u300:
  1123     0646                     l759:
  1124     0646  09F2               	comf	___awdiv@dividend,f
  1125     0647  09F3               	comf	___awdiv@dividend+1,f
  1126     0648  0AF2               	incf	___awdiv@dividend,f
  1127     0649  1903               	skipnz
  1128     064A  0AF3               	incf	___awdiv@dividend+1,f
  1129     064B                     l761:
  1130     064B  3001               	movlw	1
  1131     064C  06F5               	xorwf	___awdiv@sign,f
  1132     064D                     l763:
  1133     064D  01F6               	clrf	___awdiv@quotient
  1134     064E  01F7               	clrf	___awdiv@quotient+1
  1135     064F                     l765:
  1136     064F  0870               	movf	___awdiv@divisor,w
  1137     0650  0471               	iorwf	___awdiv@divisor+1,w
  1138     0651  1903               	btfsc	3,2
  1139     0652  2E54               	goto	u311
  1140     0653  2E55               	goto	u310
  1141     0654                     u311:
  1142     0654  2E8A               	goto	l785
  1143     0655                     u310:
  1144     0655                     l767:
  1145     0655  3001               	movlw	1
  1146     0656  00F4               	movwf	___awdiv@counter
  1147     0657  2E61               	goto	l773
  1148     0658                     l769:
  1149     0658  3001               	movlw	1
  1150     0659                     u325:
  1151     0659  1003               	clrc
  1152     065A  0DF0               	rlf	___awdiv@divisor,f
  1153     065B  0DF1               	rlf	___awdiv@divisor+1,f
  1154     065C  3EFF               	addlw	-1
  1155     065D  1D03               	skipz
  1156     065E  2E59               	goto	u325
  1157     065F                     l771:
  1158     065F  3001               	movlw	1
  1159     0660  07F4               	addwf	___awdiv@counter,f
  1160     0661                     l773:
  1161     0661  1FF1               	btfss	___awdiv@divisor+1,7
  1162     0662  2E64               	goto	u331
  1163     0663  2E65               	goto	u330
  1164     0664                     u331:
  1165     0664  2E58               	goto	l769
  1166     0665                     u330:
  1167     0665                     l775:
  1168     0665  3001               	movlw	1
  1169     0666                     u345:
  1170     0666  1003               	clrc
  1171     0667  0DF6               	rlf	___awdiv@quotient,f
  1172     0668  0DF7               	rlf	___awdiv@quotient+1,f
  1173     0669  3EFF               	addlw	-1
  1174     066A  1D03               	skipz
  1175     066B  2E66               	goto	u345
  1176     066C  0871               	movf	___awdiv@divisor+1,w
  1177     066D  0273               	subwf	___awdiv@dividend+1,w
  1178     066E  1D03               	skipz
  1179     066F  2E72               	goto	u355
  1180     0670  0870               	movf	___awdiv@divisor,w
  1181     0671  0272               	subwf	___awdiv@dividend,w
  1182     0672                     u355:
  1183     0672  1C03               	skipc
  1184     0673  2E75               	goto	u351
  1185     0674  2E76               	goto	u350
  1186     0675                     u351:
  1187     0675  2E7D               	goto	l781
  1188     0676                     u350:
  1189     0676                     l777:
  1190     0676  0870               	movf	___awdiv@divisor,w
  1191     0677  02F2               	subwf	___awdiv@dividend,f
  1192     0678  0871               	movf	___awdiv@divisor+1,w
  1193     0679  1C03               	skipc
  1194     067A  03F3               	decf	___awdiv@dividend+1,f
  1195     067B  02F3               	subwf	___awdiv@dividend+1,f
  1196     067C                     l779:
  1197     067C  1476               	bsf	___awdiv@quotient,0
  1198     067D                     l781:
  1199     067D  3001               	movlw	1
  1200     067E                     u365:
  1201     067E  1003               	clrc
  1202     067F  0CF1               	rrf	___awdiv@divisor+1,f
  1203     0680  0CF0               	rrf	___awdiv@divisor,f
  1204     0681  3EFF               	addlw	-1
  1205     0682  1D03               	skipz
  1206     0683  2E7E               	goto	u365
  1207     0684                     l783:
  1208     0684  3001               	movlw	1
  1209     0685  02F4               	subwf	___awdiv@counter,f
  1210     0686  1D03               	btfss	3,2
  1211     0687  2E89               	goto	u371
  1212     0688  2E8A               	goto	u370
  1213     0689                     u371:
  1214     0689  2E65               	goto	l775
  1215     068A                     u370:
  1216     068A                     l785:
  1217     068A  0875               	movf	___awdiv@sign,w
  1218     068B  1903               	btfsc	3,2
  1219     068C  2E8E               	goto	u381
  1220     068D  2E8F               	goto	u380
  1221     068E                     u381:
  1222     068E  2E94               	goto	l789
  1223     068F                     u380:
  1224     068F                     l787:
  1225     068F  09F6               	comf	___awdiv@quotient,f
  1226     0690  09F7               	comf	___awdiv@quotient+1,f
  1227     0691  0AF6               	incf	___awdiv@quotient,f
  1228     0692  1903               	skipnz
  1229     0693  0AF7               	incf	___awdiv@quotient+1,f
  1230     0694                     l789:
  1231     0694  0877               	movf	___awdiv@quotient+1,w
  1232     0695  00F1               	movwf	?___awdiv+1
  1233     0696  0876               	movf	___awdiv@quotient,w
  1234     0697  00F0               	movwf	?___awdiv
  1235     0698                     l270:
  1236     0698  0008               	return
  1237     0699                     __end_of___awdiv:
  1238     0002                     ___latbits      equ	2
  1239     007E                     btemp           set	126	;btemp
  1240     007E                     wtemp0          set	126
  1241                           
  1242                           	psect	config
  1243                           
  1244                           ;Config register CONFIG1 @ 0x2007
  1245                           ;	Oscillator Selection bits
  1246                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1247                           ;	Watchdog Timer Enable bit
  1248                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1249                           ;	Power-up Timer Enable bit
  1250                           ;	PWRTE = OFF, PWRT disabled
  1251                           ;	RE3/MCLR pin function select bit
  1252                           ;	MCLRE = 0x1, unprogrammed default
  1253                           ;	Code Protection bit
  1254                           ;	CP = OFF, Program memory code protection is disabled
  1255                           ;	Data Code Protection bit
  1256                           ;	CPD = OFF, Data memory code protection is disabled
  1257                           ;	Brown Out Reset Selection bits
  1258                           ;	BOREN = ON, BOR enabled
  1259                           ;	Internal External Switchover bit
  1260                           ;	IESO = 0x1, unprogrammed default
  1261                           ;	Fail-Safe Clock Monitor Enabled bit
  1262                           ;	FCMEN = 0x1, unprogrammed default
  1263                           ;	Low Voltage Programming Enable bit
  1264                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1265                           ;	In-Circuit Debugger Mode bit
  1266                           ;	DEBUG = 0x1, unprogrammed default
  1267     2007                     	org	8199
  1268     2007  2FF1               	dw	12273
  1269                           
  1270                           ;Config register CONFIG2 @ 0x2008
  1271                           ;	Brown-out Reset Selection bit
  1272                           ;	BOR4V = 0x1, unprogrammed default
  1273                           ;	Flash Program Memory Self Write Enable bits
  1274                           ;	WRT = OFF, Write protection off
  1275     2008                     	org	8200
  1276     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     12      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    1099
                                              8 COMMON     1     1      0
                                              0 BANK0     12    12      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     12      22     27.5%
BITBANK0            80      0       0      0.0%
COMMON              14      9       9     64.3%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      31      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jun 06 18:15:19 2025

                      pc 0002                       l24 078F             ___awdiv@sign 0075  
                     fsr 0004                      l270 0698                      l283 0635  
                    l801 05EB                      l811 0604                      l803 05EF  
                    l821 0621                      l813 0606                      l805 05F4  
                    l901 07A9                      l751 0637                      l815 060A  
                    l807 05FA                      l823 0627                      l911 07C7  
                    l903 07B1                      l831 0699                      l761 064B  
                    l753 063B                      l825 062C                      l817 0614  
                    l809 05FD                      l921 07E4                      l913 07CD  
                    l905 07B8                      l841 06CD                      l833 06A5  
                    l771 065F                      l763 064D                      l755 0640  
                    l827 0631                      l819 061A                      l915 07CF  
                    l907 07BE                      l851 06F1                      l843 06DC  
                    l835 06B8                      l781 067D                      l773 0661  
                    l765 064F                      l757 0642                      l749 0636  
                    l917 07D6                      l909 07C0                      l861 0719  
                    l853 06FE                      l845 06E0                      l783 0684  
                    l775 0665                      l767 0655                      l759 0646  
                    l919 07DD                      l871 0741                      l855 0702  
                    l847 06E6                      l863 0721                      l777 0676  
                    l769 0658                      l785 068A                      l793 05DF  
                    l873 0745                      l865 0730                      l881 075D  
                    l857 0708                      l849 06ED                      l787 068F  
                    l779 067C                      l795 05E0                      l891 0781  
                    l883 076C                      l875 0752                      l867 0734  
                    l859 070F                      l789 0694                      l797 05E4  
                    l885 0770                      l877 0756                      l869 073A  
                    l799 05E9                      l887 0776                      l889 077D  
                    l897 0794                      l899 079C                      u300 0646  
                    u301 0645                      u310 0655                      u311 0654  
                    u400 05EF                      u401 05EE                      u330 0665  
                    u410 05FA                      u331 0664                      u411 05F9  
                    u500 076C                      u325 0659                      u501 076B  
                    u350 0676                      u430 060A                      u510 07A9  
                    u351 0675                      u431 0609                      u511 07A8  
                    u440 0614                      u520 07B8                      u345 0666  
                    u441 0613                      u425 05FE                      u521 07B7  
                    u505 0768                      u370 068A                      u290 063B  
                    u530 07C7                      u371 0689                      u355 0672  
                    u291 063A                      u531 07C6                      u515 07A5  
                    u380 068F                      u460 0627                      u540 07D6  
                    u381 068E                      u365 067E                      u461 0626  
                    u445 0610                      u541 07D5                      u470 062C  
                    u390 05E4                      u550 07DD                      u471 062B  
                    u455 061B                      u391 05E3                      u551 07DC  
                    u607 071B                      u560 07E4                      u480 06DC  
                    u561 07E3                      u617 073C                      u481 06DB  
                    u490 0730                      u627 074D                      u491 072F  
                    u637 0778                      u485 06D8                      u647 0789  
                    u495 072C                      u577 06E8                      u587 06F9  
                    u597 070A                      fsr0 0004                      indf 0000  
           ___awmod@sign 0075                     _main 0699                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___awdiv 0699  
        __end_of___awmod 0636          ___awdiv@divisor 0070          ___awdiv@counter 0074  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    main@i 0020                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0078         ___awdiv@dividend 0072  
              ??___awdiv 0074                ??___awmod 0074                   _digito 002C  
       ___awdiv@quotient 0076          ___awmod@divisor 0070          ___awmod@counter 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 05C2  
             __pmaintext 0699                  ___awdiv 0636                  ___awmod 05DF  
                __ptext1 05DF                  __ptext2 0636         ___awmod@dividend 0072  
                main@dec 0024                  main@mil 0022                  main@num 0028  
                main@uni 0026     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 05CC              __pdataBANK0 002C                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0070                 ?___awmod 0070  
               main@cent 002A                 init_ram0 05D0  
