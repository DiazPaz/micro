

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 23 14:17:33 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Generated 26/03/2025 GMT
    27                           ; 
    28                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0004                     fsr             equ	4
    61     0004                     fsr0            equ	4
    62     0000                     indf            equ	0
    63     0000                     indf0           equ	0
    64     0002                     pc              equ	2
    65     0002                     pcl             equ	2
    66     000A                     pclath          equ	10
    67     0003                     status          equ	3
    68     0000                     INDF            equ	0	;# 
    69     0001                     TMR0            equ	1	;# 
    70     0002                     PCL             equ	2	;# 
    71     0003                     STATUS          equ	3	;# 
    72     0004                     FSR             equ	4	;# 
    73     0005                     PORTA           equ	5	;# 
    74     0006                     PORTB           equ	6	;# 
    75     0007                     PORTC           equ	7	;# 
    76     0008                     PORTD           equ	8	;# 
    77     0009                     PORTE           equ	9	;# 
    78     000A                     PCLATH          equ	10	;# 
    79     000B                     INTCON          equ	11	;# 
    80     000C                     PIR1            equ	12	;# 
    81     000D                     PIR2            equ	13	;# 
    82     000E                     TMR1            equ	14	;# 
    83     000E                     TMR1L           equ	14	;# 
    84     000F                     TMR1H           equ	15	;# 
    85     0010                     T1CON           equ	16	;# 
    86     0011                     TMR2            equ	17	;# 
    87     0012                     T2CON           equ	18	;# 
    88     0013                     SSPBUF          equ	19	;# 
    89     0014                     SSPCON          equ	20	;# 
    90     0015                     CCPR1           equ	21	;# 
    91     0015                     CCPR1L          equ	21	;# 
    92     0016                     CCPR1H          equ	22	;# 
    93     0017                     CCP1CON         equ	23	;# 
    94     0018                     RCSTA           equ	24	;# 
    95     0019                     TXREG           equ	25	;# 
    96     001A                     RCREG           equ	26	;# 
    97     001B                     CCPR2           equ	27	;# 
    98     001B                     CCPR2L          equ	27	;# 
    99     001C                     CCPR2H          equ	28	;# 
   100     001D                     CCP2CON         equ	29	;# 
   101     001E                     ADRESH          equ	30	;# 
   102     001F                     ADCON0          equ	31	;# 
   103     0081                     OPTION_REG      equ	129	;# 
   104     0085                     TRISA           equ	133	;# 
   105     0086                     TRISB           equ	134	;# 
   106     0087                     TRISC           equ	135	;# 
   107     0088                     TRISD           equ	136	;# 
   108     0089                     TRISE           equ	137	;# 
   109     008C                     PIE1            equ	140	;# 
   110     008D                     PIE2            equ	141	;# 
   111     008E                     PCON            equ	142	;# 
   112     008F                     OSCCON          equ	143	;# 
   113     0090                     OSCTUNE         equ	144	;# 
   114     0091                     SSPCON2         equ	145	;# 
   115     0092                     PR2             equ	146	;# 
   116     0093                     SSPADD          equ	147	;# 
   117     0093                     SSPMSK          equ	147	;# 
   118     0093                     MSK             equ	147	;# 
   119     0094                     SSPSTAT         equ	148	;# 
   120     0095                     WPUB            equ	149	;# 
   121     0096                     IOCB            equ	150	;# 
   122     0097                     VRCON           equ	151	;# 
   123     0098                     TXSTA           equ	152	;# 
   124     0099                     SPBRG           equ	153	;# 
   125     009A                     SPBRGH          equ	154	;# 
   126     009B                     PWM1CON         equ	155	;# 
   127     009C                     ECCPAS          equ	156	;# 
   128     009D                     PSTRCON         equ	157	;# 
   129     009E                     ADRESL          equ	158	;# 
   130     009F                     ADCON1          equ	159	;# 
   131     0105                     WDTCON          equ	261	;# 
   132     0107                     CM1CON0         equ	263	;# 
   133     0108                     CM2CON0         equ	264	;# 
   134     0109                     CM2CON1         equ	265	;# 
   135     010C                     EEDATA          equ	268	;# 
   136     010C                     EEDAT           equ	268	;# 
   137     010D                     EEADR           equ	269	;# 
   138     010E                     EEDATH          equ	270	;# 
   139     010F                     EEADRH          equ	271	;# 
   140     0185                     SRCON           equ	389	;# 
   141     0187                     BAUDCTL         equ	391	;# 
   142     0188                     ANSEL           equ	392	;# 
   143     0189                     ANSELH          equ	393	;# 
   144     018C                     EECON1          equ	396	;# 
   145     018D                     EECON2          equ	397	;# 
   146     0000                     INDF            equ	0	;# 
   147     0001                     TMR0            equ	1	;# 
   148     0002                     PCL             equ	2	;# 
   149     0003                     STATUS          equ	3	;# 
   150     0004                     FSR             equ	4	;# 
   151     0005                     PORTA           equ	5	;# 
   152     0006                     PORTB           equ	6	;# 
   153     0007                     PORTC           equ	7	;# 
   154     0008                     PORTD           equ	8	;# 
   155     0009                     PORTE           equ	9	;# 
   156     000A                     PCLATH          equ	10	;# 
   157     000B                     INTCON          equ	11	;# 
   158     000C                     PIR1            equ	12	;# 
   159     000D                     PIR2            equ	13	;# 
   160     000E                     TMR1            equ	14	;# 
   161     000E                     TMR1L           equ	14	;# 
   162     000F                     TMR1H           equ	15	;# 
   163     0010                     T1CON           equ	16	;# 
   164     0011                     TMR2            equ	17	;# 
   165     0012                     T2CON           equ	18	;# 
   166     0013                     SSPBUF          equ	19	;# 
   167     0014                     SSPCON          equ	20	;# 
   168     0015                     CCPR1           equ	21	;# 
   169     0015                     CCPR1L          equ	21	;# 
   170     0016                     CCPR1H          equ	22	;# 
   171     0017                     CCP1CON         equ	23	;# 
   172     0018                     RCSTA           equ	24	;# 
   173     0019                     TXREG           equ	25	;# 
   174     001A                     RCREG           equ	26	;# 
   175     001B                     CCPR2           equ	27	;# 
   176     001B                     CCPR2L          equ	27	;# 
   177     001C                     CCPR2H          equ	28	;# 
   178     001D                     CCP2CON         equ	29	;# 
   179     001E                     ADRESH          equ	30	;# 
   180     001F                     ADCON0          equ	31	;# 
   181     0081                     OPTION_REG      equ	129	;# 
   182     0085                     TRISA           equ	133	;# 
   183     0086                     TRISB           equ	134	;# 
   184     0087                     TRISC           equ	135	;# 
   185     0088                     TRISD           equ	136	;# 
   186     0089                     TRISE           equ	137	;# 
   187     008C                     PIE1            equ	140	;# 
   188     008D                     PIE2            equ	141	;# 
   189     008E                     PCON            equ	142	;# 
   190     008F                     OSCCON          equ	143	;# 
   191     0090                     OSCTUNE         equ	144	;# 
   192     0091                     SSPCON2         equ	145	;# 
   193     0092                     PR2             equ	146	;# 
   194     0093                     SSPADD          equ	147	;# 
   195     0093                     SSPMSK          equ	147	;# 
   196     0093                     MSK             equ	147	;# 
   197     0094                     SSPSTAT         equ	148	;# 
   198     0095                     WPUB            equ	149	;# 
   199     0096                     IOCB            equ	150	;# 
   200     0097                     VRCON           equ	151	;# 
   201     0098                     TXSTA           equ	152	;# 
   202     0099                     SPBRG           equ	153	;# 
   203     009A                     SPBRGH          equ	154	;# 
   204     009B                     PWM1CON         equ	155	;# 
   205     009C                     ECCPAS          equ	156	;# 
   206     009D                     PSTRCON         equ	157	;# 
   207     009E                     ADRESL          equ	158	;# 
   208     009F                     ADCON1          equ	159	;# 
   209     0105                     WDTCON          equ	261	;# 
   210     0107                     CM1CON0         equ	263	;# 
   211     0108                     CM2CON0         equ	264	;# 
   212     0109                     CM2CON1         equ	265	;# 
   213     010C                     EEDATA          equ	268	;# 
   214     010C                     EEDAT           equ	268	;# 
   215     010D                     EEADR           equ	269	;# 
   216     010E                     EEDATH          equ	270	;# 
   217     010F                     EEADRH          equ	271	;# 
   218     0185                     SRCON           equ	389	;# 
   219     0187                     BAUDCTL         equ	391	;# 
   220     0188                     ANSEL           equ	392	;# 
   221     0189                     ANSELH          equ	393	;# 
   222     018C                     EECON1          equ	396	;# 
   223     018D                     EECON2          equ	397	;# 
   224     0000                     INDF            equ	0	;# 
   225     0001                     TMR0            equ	1	;# 
   226     0002                     PCL             equ	2	;# 
   227     0003                     STATUS          equ	3	;# 
   228     0004                     FSR             equ	4	;# 
   229     0005                     PORTA           equ	5	;# 
   230     0006                     PORTB           equ	6	;# 
   231     0007                     PORTC           equ	7	;# 
   232     0008                     PORTD           equ	8	;# 
   233     0009                     PORTE           equ	9	;# 
   234     000A                     PCLATH          equ	10	;# 
   235     000B                     INTCON          equ	11	;# 
   236     000C                     PIR1            equ	12	;# 
   237     000D                     PIR2            equ	13	;# 
   238     000E                     TMR1            equ	14	;# 
   239     000E                     TMR1L           equ	14	;# 
   240     000F                     TMR1H           equ	15	;# 
   241     0010                     T1CON           equ	16	;# 
   242     0011                     TMR2            equ	17	;# 
   243     0012                     T2CON           equ	18	;# 
   244     0013                     SSPBUF          equ	19	;# 
   245     0014                     SSPCON          equ	20	;# 
   246     0015                     CCPR1           equ	21	;# 
   247     0015                     CCPR1L          equ	21	;# 
   248     0016                     CCPR1H          equ	22	;# 
   249     0017                     CCP1CON         equ	23	;# 
   250     0018                     RCSTA           equ	24	;# 
   251     0019                     TXREG           equ	25	;# 
   252     001A                     RCREG           equ	26	;# 
   253     001B                     CCPR2           equ	27	;# 
   254     001B                     CCPR2L          equ	27	;# 
   255     001C                     CCPR2H          equ	28	;# 
   256     001D                     CCP2CON         equ	29	;# 
   257     001E                     ADRESH          equ	30	;# 
   258     001F                     ADCON0          equ	31	;# 
   259     0081                     OPTION_REG      equ	129	;# 
   260     0085                     TRISA           equ	133	;# 
   261     0086                     TRISB           equ	134	;# 
   262     0087                     TRISC           equ	135	;# 
   263     0088                     TRISD           equ	136	;# 
   264     0089                     TRISE           equ	137	;# 
   265     008C                     PIE1            equ	140	;# 
   266     008D                     PIE2            equ	141	;# 
   267     008E                     PCON            equ	142	;# 
   268     008F                     OSCCON          equ	143	;# 
   269     0090                     OSCTUNE         equ	144	;# 
   270     0091                     SSPCON2         equ	145	;# 
   271     0092                     PR2             equ	146	;# 
   272     0093                     SSPADD          equ	147	;# 
   273     0093                     SSPMSK          equ	147	;# 
   274     0093                     MSK             equ	147	;# 
   275     0094                     SSPSTAT         equ	148	;# 
   276     0095                     WPUB            equ	149	;# 
   277     0096                     IOCB            equ	150	;# 
   278     0097                     VRCON           equ	151	;# 
   279     0098                     TXSTA           equ	152	;# 
   280     0099                     SPBRG           equ	153	;# 
   281     009A                     SPBRGH          equ	154	;# 
   282     009B                     PWM1CON         equ	155	;# 
   283     009C                     ECCPAS          equ	156	;# 
   284     009D                     PSTRCON         equ	157	;# 
   285     009E                     ADRESL          equ	158	;# 
   286     009F                     ADCON1          equ	159	;# 
   287     0105                     WDTCON          equ	261	;# 
   288     0107                     CM1CON0         equ	263	;# 
   289     0108                     CM2CON0         equ	264	;# 
   290     0109                     CM2CON1         equ	265	;# 
   291     010C                     EEDATA          equ	268	;# 
   292     010C                     EEDAT           equ	268	;# 
   293     010D                     EEADR           equ	269	;# 
   294     010E                     EEDATH          equ	270	;# 
   295     010F                     EEADRH          equ	271	;# 
   296     0185                     SRCON           equ	389	;# 
   297     0187                     BAUDCTL         equ	391	;# 
   298     0188                     ANSEL           equ	392	;# 
   299     0189                     ANSELH          equ	393	;# 
   300     018C                     EECON1          equ	396	;# 
   301     018D                     EECON2          equ	397	;# 
   302                           
   303                           	psect	idataBANK0
   304     0D2E                     __pidataBANK0:
   305                           
   306                           ;initializer for _lcd
   307     0D2E  3407               	retlw	7
   308     0D2F  3400               	retlw	0
   309     0D30  341A               	retlw	26
   310     0D31  342C               	retlw	44
   311     0D32  343E               	retlw	62
   312                           
   313                           ;initializer for _pos_y
   314     0D33  3402               	retlw	2
   315                           
   316                           ;initializer for _pos_x
   317     0D34  3408               	retlw	8
   318     0006                     _PORTB          set	6
   319     0005                     _PORTA          set	5
   320     0005                     _PORTAbits      set	5
   321     001E                     _ADRESH         set	30
   322     001F                     _ADCON0         set	31
   323     0007                     _PORTC          set	7
   324     00F9                     _GO_nDONE       set	249
   325     0087                     _TRISC          set	135
   326     0086                     _TRISB          set	134
   327     0085                     _TRISA          set	133
   328     0085                     _TRISAbits      set	133
   329     009E                     _ADRESL         set	158
   330     009F                     _ADCON1         set	159
   331     0189                     _ANSELH         set	393
   332     0188                     _ANSEL          set	392
   333                           
   334                           	psect	strings
   335     0800                     __pstrings:
   336     0800                     stringtab:
   337     0800                     __stringtab:
   338     0800                     stringcode:	
   339                           ;	String table - string pointers are 1 byte each
   340                           
   341     0800                     stringdir:
   342     0800  3008               	movlw	high stringdir
   343     0801  008A               	movwf	10
   344     0802  0804               	movf	4,w
   345     0803  0A84               	incf	4,f
   346     0804  0782               	addwf	2,f
   347     0805                     __stringbase:
   348     0805  3400               	retlw	0
   349     0806                     __end_of__stringtab:
   350     0806                     STR_1:
   351     0806  3420               	retlw	32	;' '
   352     0807  3400               	retlw	0
   353     0806                     STR_2           equ	STR_1
   354     0806                     STR_3           equ	STR_1
   355     0806                     STR_4           equ	STR_1
   356                           
   357                           	psect	cinit
   358     07EE                     start_initialization:	
   359                           ; #config settings
   360                           
   361     07EE                     __initialization:
   362                           
   363                           ; Initialize objects allocated to BANK0
   364     07EE  1383               	bcf	3,7	;select IRP bank0
   365     07EF  302F               	movlw	low (__pdataBANK0+7)
   366     07F0  00FD               	movwf	btemp+-1
   367     07F1  300D               	movlw	high __pidataBANK0
   368     07F2  00FE               	movwf	btemp
   369     07F3  302E               	movlw	low __pidataBANK0
   370     07F4  00FF               	movwf	btemp+1
   371     07F5  3028               	movlw	low __pdataBANK0
   372     07F6  0084               	movwf	4
   373     07F7  120A  158A  2545  120A  118A  	fcall	init_ram0
   374     07FC                     end_of_initialization:	
   375                           ;End of C runtime variable initialization code
   376                           
   377     07FC                     __end_of__initialization:
   378     07FC  0183               	clrf	3
   379     07FD  120A  158A  2F35   	ljmp	_main	;jump to C main() function
   380                           
   381                           	psect	dataBANK0
   382     0028                     __pdataBANK0:
   383     0028                     _lcd:
   384     0028                     	ds	5
   385     002D                     _pos_y:
   386     002D                     	ds	1
   387     002E                     _pos_x:
   388     002E                     	ds	1
   389                           
   390                           	psect	inittext
   391     0D41                     init_fetch0:	
   392                           ;	Called with low address in FSR and high address in W
   393                           
   394     0D41  087E               	movf	btemp,w
   395     0D42  008A               	movwf	10
   396     0D43  087F               	movf	btemp+1,w
   397     0D44  0082               	movwf	2
   398     0D45                     init_ram0:	
   399                           ;Called with:
   400                           ;	high address of idata address in btemp 
   401                           ;	low address of idata address in btemp+1 
   402                           ;	low address of data in FSR
   403                           ;	high address + 1 of data in btemp-1
   404                           
   405     0D45  120A  158A  2541  120A  158A  	fcall	init_fetch0
   406     0D4A  0080               	movwf	0
   407     0D4B  0A84               	incf	4,f
   408     0D4C  0804               	movf	4,w
   409     0D4D  067D               	xorwf	btemp+-1,w
   410     0D4E  1903               	btfsc	3,2
   411     0D4F  3400               	retlw	0
   412     0D50  0AFF               	incf	btemp+1,f
   413     0D51  1903               	btfsc	3,2
   414     0D52  0AFE               	incf	btemp,f
   415     0D53  2D45               	goto	init_ram0
   416                           
   417                           	psect	cstackCOMMON
   418     0070                     __pcstackCOMMON:
   419     0070                     ?_LCD_Write:
   420     0070                     ?_LCD_putc:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0070                     ?_pot_x:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0070                     ?_pot_y:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     ?_checar_boton:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ?_disparar:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?_ADC_Init:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ?_main:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ?_LCD_Out:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_ADC_Read:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ??_ADC_Init:	
   448                           ; 2 bytes @ 0x0
   449                           
   450     0070                     ??_LCD_Out:	
   451                           ; 1 bytes @ 0x0
   452                           
   453                           
   454                           ; 1 bytes @ 0x0
   455     0070                     	ds	2
   456     0072                     LCD_Out@c:
   457     0072                     ??_ADC_Read:	
   458                           ; 1 bytes @ 0x2
   459                           
   460                           
   461                           ; 1 bytes @ 0x2
   462     0072                     	ds	1
   463     0073                     ??_LCD_Write:
   464     0073                     ??_LCD_putc:	
   465                           ; 1 bytes @ 0x3
   466                           
   467                           
   468                           ; 1 bytes @ 0x3
   469     0073                     	ds	1
   470     0074                     ADC_Read@channel:
   471                           
   472                           ; 1 bytes @ 0x4
   473     0074                     	ds	1
   474     0075                     LCD_Write@c:
   475     0075                     LCD_putc@c:	
   476                           ; 1 bytes @ 0x5
   477                           
   478                           
   479                           ; 1 bytes @ 0x5
   480     0075                     	ds	1
   481     0076                     ?_LCD_Init:
   482     0076                     ?_LCD_putrs:	
   483                           ; 1 bytes @ 0x6
   484                           
   485     0076                     LCD_putrs@a:	
   486                           ; 1 bytes @ 0x6
   487                           
   488     0076                     LCD_Init@display:	
   489                           ; 1 bytes @ 0x6
   490                           
   491                           
   492                           ; 5 bytes @ 0x6
   493     0076                     	ds	1
   494     0077                     LCD_putrs@i:
   495     0077                     ??_LCD_putrs:	
   496                           ; 2 bytes @ 0x7
   497                           
   498                           
   499                           ; 1 bytes @ 0x7
   500     0077                     	ds	2
   501     0079                     disparar@moved:
   502     0079                     ??_pot_x:	
   503                           ; 1 bytes @ 0x9
   504                           
   505     0079                     ??_pot_y:	
   506                           ; 1 bytes @ 0x9
   507                           
   508                           
   509                           ; 1 bytes @ 0x9
   510     0079                     	ds	1
   511     007A                     disparar@offset:
   512                           
   513                           ; 1 bytes @ 0xA
   514     007A                     	ds	1
   515     007B                     pot_y@adc_y:
   516     007B                     ??_LCD_Init:	
   517                           ; 2 bytes @ 0xB
   518                           
   519     007B                     ??_checar_boton:	
   520                           ; 1 bytes @ 0xB
   521                           
   522                           
   523                           ; 1 bytes @ 0xB
   524     007B                     	ds	2
   525     007D                     LCD_Init@cmd:
   526                           
   527                           ; 1 bytes @ 0xD
   528     007D                     	ds	1
   529                           
   530                           	psect	cstackBANK0
   531     0020                     __pcstackBANK0:
   532     0020                     _pot_x$162:
   533     0020                     ??_disparar:	
   534                           ; 2 bytes @ 0x0
   535                           
   536                           
   537                           ; 1 bytes @ 0x0
   538     0020                     	ds	2
   539     0022                     _pot_x$163:
   540                           
   541                           ; 2 bytes @ 0x2
   542     0022                     	ds	2
   543     0024                     pot_x@adc_x:
   544                           
   545                           ; 2 bytes @ 0x4
   546     0024                     	ds	3
   547     0027                     ??_main:
   548                           
   549                           ; 1 bytes @ 0x7
   550     0027                     	ds	1
   551                           
   552                           	psect	maintext
   553     0F35                     __pmaintext:	
   554 ;;
   555 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   556 ;;
   557 ;; *************** function _main *****************
   558 ;; Defined at:
   559 ;;		line 50 in file "main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : B00/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0
   575 ;;      Temps:          0       1       0       0       0
   576 ;;      Totals:         0       1       0       0       0
   577 ;;Total ram usage:        1 bytes
   578 ;; Hardware stack levels required when called: 5
   579 ;; This function calls:
   580 ;;		_ADC_Init
   581 ;;		_LCD_Init
   582 ;;		_LCD_Write
   583 ;;		_LCD_putc
   584 ;;		_checar_boton
   585 ;;		_pot_x
   586 ;;		_pot_y
   587 ;; This function is called by:
   588 ;;		Startup code after reset
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592     0F35                     _main:	
   593                           ;psect for function _main
   594                           
   595     0F35                     l1639:	
   596                           ;incstack = 0
   597                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   598                           
   599                           
   600                           ;main.c: 51: void pot_x(void){
   601     0F35  1683               	bsf	3,5	;RP0=1, select bank1
   602     0F36  1303               	bcf	3,6	;RP1=0, select bank1
   603     0F37  1505               	bsf	5,2	;volatile
   604                           
   605                           ;main.c: 52:     unsigned int adc_x = ADC_Read(0);
   606     0F38  1185               	bcf	5,3	;volatile
   607                           
   608                           ;main.c: 53:     uint8_t prev_x = pos_x;
   609     0F39  1283               	bcf	3,5	;RP0=0, select bank0
   610     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
   611     0F3B  1185               	bcf	5,3	;volatile
   612     0F3C                     l1641:
   613                           
   614                           ;main.c: 55:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 ); 
      +                          LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Writ
      +                          e( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else 
      +                          if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos_
      +                          x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0xF
      +                          0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
   615     0F3C  120A  118A  2005  120A  158A  	fcall	_ADC_Init
   616     0F41                     l1643:
   617                           
   618                           ;main.c: 56:     LCD_putrs(" ");
   619     0F41  3076               	movlw	LCD_Init@display& (0+255)
   620     0F42  0084               	movwf	4
   621     0F43  1283               	bcf	3,5	;RP0=0, select bank0
   622     0F44  1303               	bcf	3,6	;RP1=0, select bank0
   623     0F45  0828               	movf	_lcd,w
   624     0F46  0080               	movwf	0
   625     0F47  0A84               	incf	4,f
   626     0F48  0829               	movf	_lcd+1,w
   627     0F49  0080               	movwf	0
   628     0F4A  0A84               	incf	4,f
   629     0F4B  082A               	movf	_lcd+2,w
   630     0F4C  0080               	movwf	0
   631     0F4D  0A84               	incf	4,f
   632     0F4E  082B               	movf	_lcd+3,w
   633     0F4F  0080               	movwf	0
   634     0F50  0A84               	incf	4,f
   635     0F51  082C               	movf	_lcd+4,w
   636     0F52  0080               	movwf	0
   637     0F53  120A  158A  2689  120A  158A  	fcall	_LCD_Init
   638     0F58                     l1645:
   639     0F58  3000               	movlw	0
   640     0F59  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
   641     0F5E                     l1647:
   642     0F5E  3001               	movlw	1
   643     0F5F  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
   644     0F64                     l1649:
   645     0F64  1283               	bcf	3,5	;RP0=0, select bank0
   646     0F65  1303               	bcf	3,6	;RP1=0, select bank0
   647     0F66  082D               	movf	_pos_y,w
   648     0F67  1D03               	btfss	3,2
   649     0F68  2F6A               	goto	u2561
   650     0F69  2F6B               	goto	u2560
   651     0F6A                     u2561:
   652     0F6A  2F86               	goto	l1653
   653     0F6B                     u2560:
   654     0F6B                     l1651:
   655     0F6B  082E               	movf	_pos_x,w
   656     0F6C  3E80               	addlw	128
   657     0F6D  00A7               	movwf	??_main
   658     0F6E  3004               	movlw	4
   659     0F6F                     u2575:
   660     0F6F  1003               	clrc
   661     0F70  0CA7               	rrf	??_main,f
   662     0F71  3EFF               	addlw	-1
   663     0F72  1D03               	skipz
   664     0F73  2F6F               	goto	u2575
   665     0F74  0827               	movf	??_main,w
   666     0F75  390F               	andlw	15
   667     0F76  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
   668     0F7B  1283               	bcf	3,5	;RP0=0, select bank0
   669     0F7C  1303               	bcf	3,6	;RP1=0, select bank0
   670     0F7D  082E               	movf	_pos_x,w
   671     0F7E  3E80               	addlw	128
   672     0F7F  390F               	andlw	15
   673     0F80  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
   674     0F85  2FE7               	goto	l76
   675     0F86                     l1653:
   676     0F86  032D               	decf	_pos_y,w
   677     0F87  1D03               	btfss	3,2
   678     0F88  2F8A               	goto	u2581
   679     0F89  2F8B               	goto	u2580
   680     0F8A                     u2581:
   681     0F8A  2FA6               	goto	l1657
   682     0F8B                     u2580:
   683     0F8B                     l1655:
   684     0F8B  082E               	movf	_pos_x,w
   685     0F8C  3EC0               	addlw	192
   686     0F8D  00A7               	movwf	??_main
   687     0F8E  3004               	movlw	4
   688     0F8F                     u2595:
   689     0F8F  1003               	clrc
   690     0F90  0CA7               	rrf	??_main,f
   691     0F91  3EFF               	addlw	-1
   692     0F92  1D03               	skipz
   693     0F93  2F8F               	goto	u2595
   694     0F94  0827               	movf	??_main,w
   695     0F95  390F               	andlw	15
   696     0F96  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
   697     0F9B  1283               	bcf	3,5	;RP0=0, select bank0
   698     0F9C  1303               	bcf	3,6	;RP1=0, select bank0
   699     0F9D  082E               	movf	_pos_x,w
   700     0F9E  3EC0               	addlw	192
   701     0F9F  390F               	andlw	15
   702     0FA0  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
   703     0FA5  2FE7               	goto	l76
   704     0FA6                     l1657:
   705     0FA6  3002               	movlw	2
   706     0FA7  062D               	xorwf	_pos_y,w
   707     0FA8  1D03               	btfss	3,2
   708     0FA9  2FAB               	goto	u2601
   709     0FAA  2FAC               	goto	u2600
   710     0FAB                     u2601:
   711     0FAB  2FC7               	goto	l1661
   712     0FAC                     u2600:
   713     0FAC                     l1659:
   714     0FAC  082E               	movf	_pos_x,w
   715     0FAD  3E94               	addlw	148
   716     0FAE  00A7               	movwf	??_main
   717     0FAF  3004               	movlw	4
   718     0FB0                     u2615:
   719     0FB0  1003               	clrc
   720     0FB1  0CA7               	rrf	??_main,f
   721     0FB2  3EFF               	addlw	-1
   722     0FB3  1D03               	skipz
   723     0FB4  2FB0               	goto	u2615
   724     0FB5  0827               	movf	??_main,w
   725     0FB6  390F               	andlw	15
   726     0FB7  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
   727     0FBC  1283               	bcf	3,5	;RP0=0, select bank0
   728     0FBD  1303               	bcf	3,6	;RP1=0, select bank0
   729     0FBE  082E               	movf	_pos_x,w
   730     0FBF  3E94               	addlw	148
   731     0FC0  390F               	andlw	15
   732     0FC1  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
   733     0FC6  2FE7               	goto	l76
   734     0FC7                     l1661:
   735     0FC7  3003               	movlw	3
   736     0FC8  062D               	xorwf	_pos_y,w
   737     0FC9  1D03               	btfss	3,2
   738     0FCA  2FCC               	goto	u2621
   739     0FCB  2FCD               	goto	u2620
   740     0FCC                     u2621:
   741     0FCC  2FE7               	goto	l76
   742     0FCD                     u2620:
   743     0FCD                     l1663:
   744     0FCD  082E               	movf	_pos_x,w
   745     0FCE  3ED4               	addlw	212
   746     0FCF  00A7               	movwf	??_main
   747     0FD0  3004               	movlw	4
   748     0FD1                     u2635:
   749     0FD1  1003               	clrc
   750     0FD2  0CA7               	rrf	??_main,f
   751     0FD3  3EFF               	addlw	-1
   752     0FD4  1D03               	skipz
   753     0FD5  2FD1               	goto	u2635
   754     0FD6  0827               	movf	??_main,w
   755     0FD7  390F               	andlw	15
   756     0FD8  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
   757     0FDD  1283               	bcf	3,5	;RP0=0, select bank0
   758     0FDE  1303               	bcf	3,6	;RP1=0, select bank0
   759     0FDF  082E               	movf	_pos_x,w
   760     0FE0  3ED4               	addlw	212
   761     0FE1  390F               	andlw	15
   762     0FE2  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
   763     0FE7                     l76:
   764                           
   765                           ;main.c: 60:     } else if(adc_x < 400){
   766     0FE7  307C               	movlw	124
   767     0FE8  120A  158A  25F7  120A  158A  	fcall	_LCD_putc
   768     0FED                     l77:	
   769                           ;main.c: 62:     }
   770                           
   771                           
   772                           ;main.c: 63: 
   773     0FED  120A  118A  221A  120A  158A  	fcall	_pot_x
   774                           
   775                           ;main.c: 64:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 ); 
      +                          LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Writ
      +                          e( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else 
      +                          if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos_
      +                          x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0xF
      +                          0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
   776     0FF2  120A  118A  20CD  120A  158A  	fcall	_pot_y
   777     0FF7                     l1665:
   778                           
   779                           ;main.c: 65:     LCD_putc('|');
   780     0FF7  120A  158A  2535  120A  158A  	fcall	_checar_boton
   781     0FFC  2FED               	goto	l77
   782     0FFD  120A  118A  2800   	ljmp	start
   783     1000                     __end_of_main:
   784                           
   785                           	psect	text1
   786     00CD                     __ptext1:	
   787 ;; *************** function _pot_y *****************
   788 ;; Defined at:
   789 ;;		line 93 in file "main.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  adc_y           2   11[COMMON] unsigned int 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         2       0       0       0       0
   805 ;;      Temps:          2       0       0       0       0
   806 ;;      Totals:         4       0       0       0       0
   807 ;;Total ram usage:        4 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; Hardware stack levels required when called: 3
   810 ;; This function calls:
   811 ;;		_ADC_Read
   812 ;;		_LCD_Write
   813 ;;		_LCD_putc
   814 ;;		_LCD_putrs
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820     00CD                     _pot_y:	
   821                           ;psect for function _pot_y
   822                           
   823     00CD                     l1589:	
   824                           ;incstack = 0
   825                           ; Regs used in _pot_y: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   826                           
   827                           
   828                           ;main.c: 94:         disparar();
   829     00CD  3001               	movlw	1
   830     00CE  120A  158A  2578  120A  118A  	fcall	_ADC_Read
   831     00D3  0871               	movf	?_ADC_Read+1,w
   832     00D4  00FC               	movwf	pot_y@adc_y+1
   833     00D5  0870               	movf	?_ADC_Read,w
   834     00D6  00FB               	movwf	pot_y@adc_y
   835     00D7                     l1591:
   836     00D7  1283               	bcf	3,5	;RP0=0, select bank0
   837     00D8  1303               	bcf	3,6	;RP1=0, select bank0
   838     00D9  082D               	movf	_pos_y,w
   839     00DA  1D03               	btfss	3,2
   840     00DB  28DD               	goto	u2351
   841     00DC  28DE               	goto	u2350
   842     00DD                     u2351:
   843     00DD  28F9               	goto	l1595
   844     00DE                     u2350:
   845     00DE                     l1593:
   846     00DE  082E               	movf	_pos_x,w
   847     00DF  3E80               	addlw	128
   848     00E0  00F9               	movwf	??_pot_y
   849     00E1  3004               	movlw	4
   850     00E2                     u2365:
   851     00E2  1003               	clrc
   852     00E3  0CF9               	rrf	??_pot_y,f
   853     00E4  3EFF               	addlw	-1
   854     00E5  1D03               	skipz
   855     00E6  28E2               	goto	u2365
   856     00E7  0879               	movf	??_pot_y,w
   857     00E8  390F               	andlw	15
   858     00E9  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
   859     00EE  1283               	bcf	3,5	;RP0=0, select bank0
   860     00EF  1303               	bcf	3,6	;RP1=0, select bank0
   861     00F0  082E               	movf	_pos_x,w
   862     00F1  3E80               	addlw	128
   863     00F2  390F               	andlw	15
   864     00F3  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
   865     00F8  295A               	goto	l147
   866     00F9                     l1595:
   867     00F9  032D               	decf	_pos_y,w
   868     00FA  1D03               	btfss	3,2
   869     00FB  28FD               	goto	u2371
   870     00FC  28FE               	goto	u2370
   871     00FD                     u2371:
   872     00FD  2919               	goto	l1599
   873     00FE                     u2370:
   874     00FE                     l1597:
   875     00FE  082E               	movf	_pos_x,w
   876     00FF  3EC0               	addlw	192
   877     0100  00F9               	movwf	??_pot_y
   878     0101  3004               	movlw	4
   879     0102                     u2385:
   880     0102  1003               	clrc
   881     0103  0CF9               	rrf	??_pot_y,f
   882     0104  3EFF               	addlw	-1
   883     0105  1D03               	skipz
   884     0106  2902               	goto	u2385
   885     0107  0879               	movf	??_pot_y,w
   886     0108  390F               	andlw	15
   887     0109  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
   888     010E  1283               	bcf	3,5	;RP0=0, select bank0
   889     010F  1303               	bcf	3,6	;RP1=0, select bank0
   890     0110  082E               	movf	_pos_x,w
   891     0111  3EC0               	addlw	192
   892     0112  390F               	andlw	15
   893     0113  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
   894     0118  295A               	goto	l147
   895     0119                     l1599:
   896     0119  3002               	movlw	2
   897     011A  062D               	xorwf	_pos_y,w
   898     011B  1D03               	btfss	3,2
   899     011C  291E               	goto	u2391
   900     011D  291F               	goto	u2390
   901     011E                     u2391:
   902     011E  293A               	goto	l1603
   903     011F                     u2390:
   904     011F                     l1601:
   905     011F  082E               	movf	_pos_x,w
   906     0120  3E94               	addlw	148
   907     0121  00F9               	movwf	??_pot_y
   908     0122  3004               	movlw	4
   909     0123                     u2405:
   910     0123  1003               	clrc
   911     0124  0CF9               	rrf	??_pot_y,f
   912     0125  3EFF               	addlw	-1
   913     0126  1D03               	skipz
   914     0127  2923               	goto	u2405
   915     0128  0879               	movf	??_pot_y,w
   916     0129  390F               	andlw	15
   917     012A  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
   918     012F  1283               	bcf	3,5	;RP0=0, select bank0
   919     0130  1303               	bcf	3,6	;RP1=0, select bank0
   920     0131  082E               	movf	_pos_x,w
   921     0132  3E94               	addlw	148
   922     0133  390F               	andlw	15
   923     0134  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
   924     0139  295A               	goto	l147
   925     013A                     l1603:
   926     013A  3003               	movlw	3
   927     013B  062D               	xorwf	_pos_y,w
   928     013C  1D03               	btfss	3,2
   929     013D  293F               	goto	u2411
   930     013E  2940               	goto	u2410
   931     013F                     u2411:
   932     013F  295A               	goto	l147
   933     0140                     u2410:
   934     0140                     l1605:
   935     0140  082E               	movf	_pos_x,w
   936     0141  3ED4               	addlw	212
   937     0142  00F9               	movwf	??_pot_y
   938     0143  3004               	movlw	4
   939     0144                     u2425:
   940     0144  1003               	clrc
   941     0145  0CF9               	rrf	??_pot_y,f
   942     0146  3EFF               	addlw	-1
   943     0147  1D03               	skipz
   944     0148  2944               	goto	u2425
   945     0149  0879               	movf	??_pot_y,w
   946     014A  390F               	andlw	15
   947     014B  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
   948     0150  1283               	bcf	3,5	;RP0=0, select bank0
   949     0151  1303               	bcf	3,6	;RP1=0, select bank0
   950     0152  082E               	movf	_pos_x,w
   951     0153  3ED4               	addlw	212
   952     0154  390F               	andlw	15
   953     0155  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
   954     015A                     l147:
   955                           
   956                           ;main.c: 97: 
   957     015A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   958     015B  00F6               	movwf	LCD_putrs@a
   959     015C  120A  158A  2554  120A  118A  	fcall	_LCD_putrs
   960     0161                     l1607:
   961                           
   962                           ;main.c: 99: 
   963     0161  3002               	movlw	2
   964     0162  027C               	subwf	pot_y@adc_y+1,w
   965     0163  3059               	movlw	89
   966     0164  1903               	skipnz
   967     0165  027B               	subwf	pot_y@adc_y,w
   968     0166  1C03               	skipc
   969     0167  2969               	goto	u2431
   970     0168  296A               	goto	u2430
   971     0169                     u2431:
   972     0169  2974               	goto	l1613
   973     016A                     u2430:
   974     016A                     l1609:
   975     016A  1283               	bcf	3,5	;RP0=0, select bank0
   976     016B  1303               	bcf	3,6	;RP1=0, select bank0
   977     016C  082D               	movf	_pos_y,w
   978     016D  1903               	btfsc	3,2
   979     016E  2970               	goto	u2441
   980     016F  2971               	goto	u2440
   981     0170                     u2441:
   982     0170  2974               	goto	l1613
   983     0171                     u2440:
   984     0171                     l1611:
   985                           
   986                           ;main.c: 100:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
   987     0171  3001               	movlw	1
   988     0172  02AD               	subwf	_pos_y,f
   989                           
   990                           ;main.c: 101:     LCD_putc('/');
   991     0173  2987               	goto	l151
   992     0174                     l1613:
   993     0174  3001               	movlw	1
   994     0175  027C               	subwf	pot_y@adc_y+1,w
   995     0176  3090               	movlw	144
   996     0177  1903               	skipnz
   997     0178  027B               	subwf	pot_y@adc_y,w
   998     0179  1803               	skipnc
   999     017A  297C               	goto	u2451
  1000     017B  297D               	goto	u2450
  1001     017C                     u2451:
  1002     017C  2987               	goto	l151
  1003     017D                     u2450:
  1004     017D                     l1615:
  1005     017D  3003               	movlw	3
  1006     017E  1283               	bcf	3,5	;RP0=0, select bank0
  1007     017F  1303               	bcf	3,6	;RP1=0, select bank0
  1008     0180  022D               	subwf	_pos_y,w
  1009     0181  1803               	skipnc
  1010     0182  2984               	goto	u2461
  1011     0183  2985               	goto	u2460
  1012     0184                     u2461:
  1013     0184  2987               	goto	l151
  1014     0185                     u2460:
  1015     0185                     l1617:
  1016                           
  1017                           ;main.c: 102: 
  1018     0185  3001               	movlw	1
  1019     0186  07AD               	addwf	_pos_y,f
  1020     0187                     l151:	
  1021                           ;main.c: 105:         _Bool moved = 0;
  1022                           
  1023     0187  1283               	bcf	3,5	;RP0=0, select bank0
  1024     0188  1303               	bcf	3,6	;RP1=0, select bank0
  1025     0189  082D               	movf	_pos_y,w
  1026     018A  1D03               	btfss	3,2
  1027     018B  298D               	goto	u2471
  1028     018C  298E               	goto	u2470
  1029     018D                     u2471:
  1030     018D  29A9               	goto	l1621
  1031     018E                     u2470:
  1032     018E                     l1619:
  1033     018E  082E               	movf	_pos_x,w
  1034     018F  3E80               	addlw	128
  1035     0190  00F9               	movwf	??_pot_y
  1036     0191  3004               	movlw	4
  1037     0192                     u2485:
  1038     0192  1003               	clrc
  1039     0193  0CF9               	rrf	??_pot_y,f
  1040     0194  3EFF               	addlw	-1
  1041     0195  1D03               	skipz
  1042     0196  2992               	goto	u2485
  1043     0197  0879               	movf	??_pot_y,w
  1044     0198  390F               	andlw	15
  1045     0199  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1046     019E  1283               	bcf	3,5	;RP0=0, select bank0
  1047     019F  1303               	bcf	3,6	;RP1=0, select bank0
  1048     01A0  082E               	movf	_pos_x,w
  1049     01A1  3E80               	addlw	128
  1050     01A2  390F               	andlw	15
  1051     01A3  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1052     01A8  2A0A               	goto	l167
  1053     01A9                     l1621:
  1054     01A9  032D               	decf	_pos_y,w
  1055     01AA  1D03               	btfss	3,2
  1056     01AB  29AD               	goto	u2491
  1057     01AC  29AE               	goto	u2490
  1058     01AD                     u2491:
  1059     01AD  29C9               	goto	l1625
  1060     01AE                     u2490:
  1061     01AE                     l1623:
  1062     01AE  082E               	movf	_pos_x,w
  1063     01AF  3EC0               	addlw	192
  1064     01B0  00F9               	movwf	??_pot_y
  1065     01B1  3004               	movlw	4
  1066     01B2                     u2505:
  1067     01B2  1003               	clrc
  1068     01B3  0CF9               	rrf	??_pot_y,f
  1069     01B4  3EFF               	addlw	-1
  1070     01B5  1D03               	skipz
  1071     01B6  29B2               	goto	u2505
  1072     01B7  0879               	movf	??_pot_y,w
  1073     01B8  390F               	andlw	15
  1074     01B9  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1075     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1076     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1077     01C0  082E               	movf	_pos_x,w
  1078     01C1  3EC0               	addlw	192
  1079     01C2  390F               	andlw	15
  1080     01C3  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1081     01C8  2A0A               	goto	l167
  1082     01C9                     l1625:
  1083     01C9  3002               	movlw	2
  1084     01CA  062D               	xorwf	_pos_y,w
  1085     01CB  1D03               	btfss	3,2
  1086     01CC  29CE               	goto	u2511
  1087     01CD  29CF               	goto	u2510
  1088     01CE                     u2511:
  1089     01CE  29EA               	goto	l1629
  1090     01CF                     u2510:
  1091     01CF                     l1627:
  1092     01CF  082E               	movf	_pos_x,w
  1093     01D0  3E94               	addlw	148
  1094     01D1  00F9               	movwf	??_pot_y
  1095     01D2  3004               	movlw	4
  1096     01D3                     u2525:
  1097     01D3  1003               	clrc
  1098     01D4  0CF9               	rrf	??_pot_y,f
  1099     01D5  3EFF               	addlw	-1
  1100     01D6  1D03               	skipz
  1101     01D7  29D3               	goto	u2525
  1102     01D8  0879               	movf	??_pot_y,w
  1103     01D9  390F               	andlw	15
  1104     01DA  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1105     01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1106     01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1107     01E1  082E               	movf	_pos_x,w
  1108     01E2  3E94               	addlw	148
  1109     01E3  390F               	andlw	15
  1110     01E4  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1111     01E9  2A0A               	goto	l167
  1112     01EA                     l1629:
  1113     01EA  3003               	movlw	3
  1114     01EB  062D               	xorwf	_pos_y,w
  1115     01EC  1D03               	btfss	3,2
  1116     01ED  29EF               	goto	u2531
  1117     01EE  29F0               	goto	u2530
  1118     01EF                     u2531:
  1119     01EF  2A0A               	goto	l167
  1120     01F0                     u2530:
  1121     01F0                     l1631:
  1122     01F0  082E               	movf	_pos_x,w
  1123     01F1  3ED4               	addlw	212
  1124     01F2  00F9               	movwf	??_pot_y
  1125     01F3  3004               	movlw	4
  1126     01F4                     u2545:
  1127     01F4  1003               	clrc
  1128     01F5  0CF9               	rrf	??_pot_y,f
  1129     01F6  3EFF               	addlw	-1
  1130     01F7  1D03               	skipz
  1131     01F8  29F4               	goto	u2545
  1132     01F9  0879               	movf	??_pot_y,w
  1133     01FA  390F               	andlw	15
  1134     01FB  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1135     0200  1283               	bcf	3,5	;RP0=0, select bank0
  1136     0201  1303               	bcf	3,6	;RP1=0, select bank0
  1137     0202  082E               	movf	_pos_x,w
  1138     0203  3ED4               	addlw	212
  1139     0204  390F               	andlw	15
  1140     0205  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1141     020A                     l167:
  1142                           
  1143                           ;main.c: 106: 
  1144     020A  307C               	movlw	124
  1145     020B  120A  158A  25F7  120A  118A  	fcall	_LCD_putc
  1146     0210                     l1633:
  1147                           
  1148                           ;main.c: 107: 
  1149     0210  300D               	movlw	13
  1150     0211  00FA               	movwf	??_pot_y+1
  1151     0212  30FB               	movlw	251
  1152     0213  00F9               	movwf	??_pot_y
  1153     0214                     u2657:
  1154     0214  0BF9               	decfsz	??_pot_y,f
  1155     0215  2A14               	goto	u2657
  1156     0216  0BFA               	decfsz	??_pot_y+1,f
  1157     0217  2A14               	goto	u2657
  1158     0218  2A19               	nop2
  1159     0219                     l168:
  1160     0219  0008               	return
  1161     021A                     __end_of_pot_y:
  1162                           
  1163                           	psect	text2
  1164     021A                     __ptext2:	
  1165 ;; *************** function _pot_x *****************
  1166 ;; Defined at:
  1167 ;;		line 72 in file "main.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  adc_x           2    4[BANK0 ] unsigned int 
  1172 ;;  prev_x          1    0        unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1182 ;;      Params:         0       0       0       0       0
  1183 ;;      Locals:         0       6       0       0       0
  1184 ;;      Temps:          2       0       0       0       0
  1185 ;;      Totals:         2       6       0       0       0
  1186 ;;Total ram usage:        8 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 3
  1189 ;; This function calls:
  1190 ;;		_ADC_Read
  1191 ;;		_LCD_Write
  1192 ;;		_LCD_putc
  1193 ;;		_LCD_putrs
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199     021A                     _pot_x:	
  1200                           ;psect for function _pot_x
  1201                           
  1202     021A                     l1535:	
  1203                           ;incstack = 0
  1204                           ; Regs used in _pot_x: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1205                           
  1206                           
  1207                           ;main.c: 73:     unsigned int adc_y = ADC_Read(1);
  1208     021A  3000               	movlw	0
  1209     021B  120A  158A  2578  120A  118A  	fcall	_ADC_Read
  1210     0220  0871               	movf	?_ADC_Read+1,w
  1211     0221  1283               	bcf	3,5	;RP0=0, select bank0
  1212     0222  1303               	bcf	3,6	;RP1=0, select bank0
  1213     0223  00A5               	movwf	pot_x@adc_x+1
  1214     0224  0870               	movf	?_ADC_Read,w
  1215     0225  00A4               	movwf	pot_x@adc_x
  1216     0226                     l1537:
  1217     0226                     l1539:
  1218     0226  082D               	movf	_pos_y,w
  1219     0227  1D03               	btfss	3,2
  1220     0228  2A2A               	goto	u2151
  1221     0229  2A2B               	goto	u2150
  1222     022A                     u2151:
  1223     022A  2A46               	goto	l1543
  1224     022B                     u2150:
  1225     022B                     l1541:
  1226     022B  082E               	movf	_pos_x,w
  1227     022C  3E80               	addlw	128
  1228     022D  00F9               	movwf	??_pot_x
  1229     022E  3004               	movlw	4
  1230     022F                     u2165:
  1231     022F  1003               	clrc
  1232     0230  0CF9               	rrf	??_pot_x,f
  1233     0231  3EFF               	addlw	-1
  1234     0232  1D03               	skipz
  1235     0233  2A2F               	goto	u2165
  1236     0234  0879               	movf	??_pot_x,w
  1237     0235  390F               	andlw	15
  1238     0236  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1239     023B  1283               	bcf	3,5	;RP0=0, select bank0
  1240     023C  1303               	bcf	3,6	;RP1=0, select bank0
  1241     023D  082E               	movf	_pos_x,w
  1242     023E  3E80               	addlw	128
  1243     023F  390F               	andlw	15
  1244     0240  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1245     0245  2AA7               	goto	l99
  1246     0246                     l1543:
  1247     0246  032D               	decf	_pos_y,w
  1248     0247  1D03               	btfss	3,2
  1249     0248  2A4A               	goto	u2171
  1250     0249  2A4B               	goto	u2170
  1251     024A                     u2171:
  1252     024A  2A66               	goto	l1547
  1253     024B                     u2170:
  1254     024B                     l1545:
  1255     024B  082E               	movf	_pos_x,w
  1256     024C  3EC0               	addlw	192
  1257     024D  00F9               	movwf	??_pot_x
  1258     024E  3004               	movlw	4
  1259     024F                     u2185:
  1260     024F  1003               	clrc
  1261     0250  0CF9               	rrf	??_pot_x,f
  1262     0251  3EFF               	addlw	-1
  1263     0252  1D03               	skipz
  1264     0253  2A4F               	goto	u2185
  1265     0254  0879               	movf	??_pot_x,w
  1266     0255  390F               	andlw	15
  1267     0256  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1268     025B  1283               	bcf	3,5	;RP0=0, select bank0
  1269     025C  1303               	bcf	3,6	;RP1=0, select bank0
  1270     025D  082E               	movf	_pos_x,w
  1271     025E  3EC0               	addlw	192
  1272     025F  390F               	andlw	15
  1273     0260  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1274     0265  2AA7               	goto	l99
  1275     0266                     l1547:
  1276     0266  3002               	movlw	2
  1277     0267  062D               	xorwf	_pos_y,w
  1278     0268  1D03               	btfss	3,2
  1279     0269  2A6B               	goto	u2191
  1280     026A  2A6C               	goto	u2190
  1281     026B                     u2191:
  1282     026B  2A87               	goto	l1551
  1283     026C                     u2190:
  1284     026C                     l1549:
  1285     026C  082E               	movf	_pos_x,w
  1286     026D  3E94               	addlw	148
  1287     026E  00F9               	movwf	??_pot_x
  1288     026F  3004               	movlw	4
  1289     0270                     u2205:
  1290     0270  1003               	clrc
  1291     0271  0CF9               	rrf	??_pot_x,f
  1292     0272  3EFF               	addlw	-1
  1293     0273  1D03               	skipz
  1294     0274  2A70               	goto	u2205
  1295     0275  0879               	movf	??_pot_x,w
  1296     0276  390F               	andlw	15
  1297     0277  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1298     027C  1283               	bcf	3,5	;RP0=0, select bank0
  1299     027D  1303               	bcf	3,6	;RP1=0, select bank0
  1300     027E  082E               	movf	_pos_x,w
  1301     027F  3E94               	addlw	148
  1302     0280  390F               	andlw	15
  1303     0281  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1304     0286  2AA7               	goto	l99
  1305     0287                     l1551:
  1306     0287  3003               	movlw	3
  1307     0288  062D               	xorwf	_pos_y,w
  1308     0289  1D03               	btfss	3,2
  1309     028A  2A8C               	goto	u2211
  1310     028B  2A8D               	goto	u2210
  1311     028C                     u2211:
  1312     028C  2AA7               	goto	l99
  1313     028D                     u2210:
  1314     028D                     l1553:
  1315     028D  082E               	movf	_pos_x,w
  1316     028E  3ED4               	addlw	212
  1317     028F  00F9               	movwf	??_pot_x
  1318     0290  3004               	movlw	4
  1319     0291                     u2225:
  1320     0291  1003               	clrc
  1321     0292  0CF9               	rrf	??_pot_x,f
  1322     0293  3EFF               	addlw	-1
  1323     0294  1D03               	skipz
  1324     0295  2A91               	goto	u2225
  1325     0296  0879               	movf	??_pot_x,w
  1326     0297  390F               	andlw	15
  1327     0298  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1328     029D  1283               	bcf	3,5	;RP0=0, select bank0
  1329     029E  1303               	bcf	3,6	;RP1=0, select bank0
  1330     029F  082E               	movf	_pos_x,w
  1331     02A0  3ED4               	addlw	212
  1332     02A1  390F               	andlw	15
  1333     02A2  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1334     02A7                     l99:
  1335                           
  1336                           ;main.c: 77: 
  1337     02A7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1338     02A8  00F6               	movwf	LCD_putrs@a
  1339     02A9  120A  158A  2554  120A  118A  	fcall	_LCD_putrs
  1340     02AE                     l1555:
  1341                           
  1342                           ;main.c: 79:         pos_y--;
  1343     02AE  3002               	movlw	2
  1344     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1345     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1346     02B1  0225               	subwf	pot_x@adc_x+1,w
  1347     02B2  3059               	movlw	89
  1348     02B3  1903               	skipnz
  1349     02B4  0224               	subwf	pot_x@adc_x,w
  1350     02B5  1C03               	skipc
  1351     02B6  2AB8               	goto	u2231
  1352     02B7  2AB9               	goto	u2230
  1353     02B8                     u2231:
  1354     02B8  2ACC               	goto	l1563
  1355     02B9                     u2230:
  1356     02B9                     l1557:
  1357                           
  1358                           ;main.c: 80:     } else if(adc_y < 400 && pos_y < 3){
  1359     02B9  3013               	movlw	19
  1360     02BA  022E               	subwf	_pos_x,w
  1361     02BB  1C03               	skipc
  1362     02BC  2ABE               	goto	u2241
  1363     02BD  2ABF               	goto	u2240
  1364     02BE                     u2241:
  1365     02BE  2AC2               	goto	l1561
  1366     02BF                     u2240:
  1367     02BF                     l1559:
  1368     02BF  01A0               	clrf	_pot_x$162
  1369     02C0  01A1               	clrf	_pot_x$162+1
  1370     02C1  2AC9               	goto	l104
  1371     02C2                     l1561:
  1372     02C2  082E               	movf	_pos_x,w
  1373     02C3  3E01               	addlw	1
  1374     02C4  00A0               	movwf	_pot_x$162
  1375     02C5  3000               	movlw	0
  1376     02C6  1803               	skipnc
  1377     02C7  3001               	movlw	1
  1378     02C8  00A1               	movwf	_pot_x$162+1
  1379     02C9                     l104:
  1380     02C9  0820               	movf	_pot_x$162,w
  1381     02CA  00AE               	movwf	_pos_x
  1382                           
  1383                           ;main.c: 81:         pos_y++;
  1384     02CB  2AE8               	goto	l1571
  1385     02CC                     l1563:
  1386     02CC  3001               	movlw	1
  1387     02CD  0225               	subwf	pot_x@adc_x+1,w
  1388     02CE  3090               	movlw	144
  1389     02CF  1903               	skipnz
  1390     02D0  0224               	subwf	pot_x@adc_x,w
  1391     02D1  1803               	skipnc
  1392     02D2  2AD4               	goto	u2251
  1393     02D3  2AD5               	goto	u2250
  1394     02D4                     u2251:
  1395     02D4  2AE8               	goto	l1571
  1396     02D5                     u2250:
  1397     02D5                     l1565:
  1398                           
  1399                           ;main.c: 82:     }
  1400     02D5  082E               	movf	_pos_x,w
  1401     02D6  1D03               	btfss	3,2
  1402     02D7  2AD9               	goto	u2261
  1403     02D8  2ADA               	goto	u2260
  1404     02D9                     u2261:
  1405     02D9  2ADF               	goto	l1569
  1406     02DA                     u2260:
  1407     02DA                     l1567:
  1408     02DA  3013               	movlw	19
  1409     02DB  00A2               	movwf	_pot_x$163
  1410     02DC  3000               	movlw	0
  1411     02DD  00A3               	movwf	_pot_x$163+1
  1412     02DE  2AE6               	goto	l110
  1413     02DF                     l1569:
  1414     02DF  082E               	movf	_pos_x,w
  1415     02E0  3EFF               	addlw	255
  1416     02E1  00A2               	movwf	_pot_x$163
  1417     02E2  30FF               	movlw	255
  1418     02E3  1803               	skipnc
  1419     02E4  3000               	movlw	0
  1420     02E5  00A3               	movwf	_pot_x$163+1
  1421     02E6                     l110:
  1422     02E6  0822               	movf	_pot_x$163,w
  1423     02E7  00AE               	movwf	_pos_x
  1424     02E8                     l1571:
  1425     02E8  082D               	movf	_pos_y,w
  1426     02E9  1D03               	btfss	3,2
  1427     02EA  2AEC               	goto	u2271
  1428     02EB  2AED               	goto	u2270
  1429     02EC                     u2271:
  1430     02EC  2B08               	goto	l1575
  1431     02ED                     u2270:
  1432     02ED                     l1573:
  1433     02ED  082E               	movf	_pos_x,w
  1434     02EE  3E80               	addlw	128
  1435     02EF  00F9               	movwf	??_pot_x
  1436     02F0  3004               	movlw	4
  1437     02F1                     u2285:
  1438     02F1  1003               	clrc
  1439     02F2  0CF9               	rrf	??_pot_x,f
  1440     02F3  3EFF               	addlw	-1
  1441     02F4  1D03               	skipz
  1442     02F5  2AF1               	goto	u2285
  1443     02F6  0879               	movf	??_pot_x,w
  1444     02F7  390F               	andlw	15
  1445     02F8  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1446     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1447     02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1448     02FF  082E               	movf	_pos_x,w
  1449     0300  3E80               	addlw	128
  1450     0301  390F               	andlw	15
  1451     0302  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1452     0307  2B69               	goto	l127
  1453     0308                     l1575:
  1454     0308  032D               	decf	_pos_y,w
  1455     0309  1D03               	btfss	3,2
  1456     030A  2B0C               	goto	u2291
  1457     030B  2B0D               	goto	u2290
  1458     030C                     u2291:
  1459     030C  2B28               	goto	l1579
  1460     030D                     u2290:
  1461     030D                     l1577:
  1462     030D  082E               	movf	_pos_x,w
  1463     030E  3EC0               	addlw	192
  1464     030F  00F9               	movwf	??_pot_x
  1465     0310  3004               	movlw	4
  1466     0311                     u2305:
  1467     0311  1003               	clrc
  1468     0312  0CF9               	rrf	??_pot_x,f
  1469     0313  3EFF               	addlw	-1
  1470     0314  1D03               	skipz
  1471     0315  2B11               	goto	u2305
  1472     0316  0879               	movf	??_pot_x,w
  1473     0317  390F               	andlw	15
  1474     0318  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1475     031D  1283               	bcf	3,5	;RP0=0, select bank0
  1476     031E  1303               	bcf	3,6	;RP1=0, select bank0
  1477     031F  082E               	movf	_pos_x,w
  1478     0320  3EC0               	addlw	192
  1479     0321  390F               	andlw	15
  1480     0322  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1481     0327  2B69               	goto	l127
  1482     0328                     l1579:
  1483     0328  3002               	movlw	2
  1484     0329  062D               	xorwf	_pos_y,w
  1485     032A  1D03               	btfss	3,2
  1486     032B  2B2D               	goto	u2311
  1487     032C  2B2E               	goto	u2310
  1488     032D                     u2311:
  1489     032D  2B49               	goto	l1583
  1490     032E                     u2310:
  1491     032E                     l1581:
  1492     032E  082E               	movf	_pos_x,w
  1493     032F  3E94               	addlw	148
  1494     0330  00F9               	movwf	??_pot_x
  1495     0331  3004               	movlw	4
  1496     0332                     u2325:
  1497     0332  1003               	clrc
  1498     0333  0CF9               	rrf	??_pot_x,f
  1499     0334  3EFF               	addlw	-1
  1500     0335  1D03               	skipz
  1501     0336  2B32               	goto	u2325
  1502     0337  0879               	movf	??_pot_x,w
  1503     0338  390F               	andlw	15
  1504     0339  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1505     033E  1283               	bcf	3,5	;RP0=0, select bank0
  1506     033F  1303               	bcf	3,6	;RP1=0, select bank0
  1507     0340  082E               	movf	_pos_x,w
  1508     0341  3E94               	addlw	148
  1509     0342  390F               	andlw	15
  1510     0343  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1511     0348  2B69               	goto	l127
  1512     0349                     l1583:
  1513     0349  3003               	movlw	3
  1514     034A  062D               	xorwf	_pos_y,w
  1515     034B  1D03               	btfss	3,2
  1516     034C  2B4E               	goto	u2331
  1517     034D  2B4F               	goto	u2330
  1518     034E                     u2331:
  1519     034E  2B69               	goto	l127
  1520     034F                     u2330:
  1521     034F                     l1585:
  1522     034F  082E               	movf	_pos_x,w
  1523     0350  3ED4               	addlw	212
  1524     0351  00F9               	movwf	??_pot_x
  1525     0352  3004               	movlw	4
  1526     0353                     u2345:
  1527     0353  1003               	clrc
  1528     0354  0CF9               	rrf	??_pot_x,f
  1529     0355  3EFF               	addlw	-1
  1530     0356  1D03               	skipz
  1531     0357  2B53               	goto	u2345
  1532     0358  0879               	movf	??_pot_x,w
  1533     0359  390F               	andlw	15
  1534     035A  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1535     035F  1283               	bcf	3,5	;RP0=0, select bank0
  1536     0360  1303               	bcf	3,6	;RP1=0, select bank0
  1537     0361  082E               	movf	_pos_x,w
  1538     0362  3ED4               	addlw	212
  1539     0363  390F               	andlw	15
  1540     0364  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1541     0369                     l127:
  1542                           
  1543                           ;main.c: 86:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1544     0369  307C               	movlw	124
  1545     036A  120A  158A  25F7  120A  118A  	fcall	_LCD_putc
  1546     036F                     l1587:
  1547                           
  1548                           ;main.c: 87: }
  1549     036F  300D               	movlw	13
  1550     0370  00FA               	movwf	??_pot_x+1
  1551     0371  30FB               	movlw	251
  1552     0372  00F9               	movwf	??_pot_x
  1553     0373                     u2667:
  1554     0373  0BF9               	decfsz	??_pot_x,f
  1555     0374  2B73               	goto	u2667
  1556     0375  0BFA               	decfsz	??_pot_x+1,f
  1557     0376  2B73               	goto	u2667
  1558     0377  2B78               	nop2
  1559     0378                     l128:
  1560     0378  0008               	return
  1561     0379                     __end_of_pot_x:
  1562                           
  1563                           	psect	text3
  1564     0D78                     __ptext3:	
  1565 ;; *************** function _ADC_Read *****************
  1566 ;; Defined at:
  1567 ;;		line 37 in file "main.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  channel         1    wreg     unsigned char 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  channel         1    4[COMMON] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  2    0[COMMON] unsigned int 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1581 ;;      Params:         2       0       0       0       0
  1582 ;;      Locals:         1       0       0       0       0
  1583 ;;      Temps:          2       0       0       0       0
  1584 ;;      Totals:         5       0       0       0       0
  1585 ;;Total ram usage:        5 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_pot_x
  1591 ;;		_pot_y
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595     0D78                     _ADC_Read:	
  1596                           ;psect for function _ADC_Read
  1597                           
  1598                           
  1599                           ;incstack = 0
  1600                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  1601                           ;ADC_Read@channel stored from wreg
  1602     0D78  00F4               	movwf	ADC_Read@channel
  1603     0D79                     l1343:
  1604                           
  1605                           ;main.c: 38:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 ); 
      +                          LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Writ
      +                          e( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else 
      +                          if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos_
      +                          x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0xF
      +                          0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  1606     0D79  2D7A               	nop2	;2 cycle nop
  1607     0D7A  2D7B               	nop2	;2 cycle nop
  1608     0D7B  0000               	nop
  1609     0D7C                     l1345:
  1610                           
  1611                           ;main.c: 39:     LCD_putc('|');
  1612     0D7C  3083               	movlw	131
  1613     0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  1614     0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  1615     0D7F  059F               	andwf	31,f	;volatile
  1616                           
  1617                           ;main.c: 40: 
  1618     0D80  0874               	movf	ADC_Read@channel,w	;volatile
  1619     0D81  00F2               	movwf	??_ADC_Read
  1620     0D82  3001               	movlw	1
  1621     0D83                     u1555:
  1622     0D83  1003               	clrc
  1623     0D84  0DF2               	rlf	??_ADC_Read,f
  1624     0D85  3EFF               	addlw	-1
  1625     0D86  1D03               	skipz
  1626     0D87  2D83               	goto	u1555
  1627     0D88  1003               	clrc
  1628     0D89  0D72               	rlf	??_ADC_Read,w
  1629     0D8A  049F               	iorwf	31,f	;volatile
  1630     0D8B                     l1347:
  1631                           
  1632                           ;main.c: 41:     while(1){
  1633     0D8B  3003               	movlw	3
  1634     0D8C  00F3               	movwf	??_ADC_Read+1
  1635     0D8D  3097               	movlw	151
  1636     0D8E  00F2               	movwf	??_ADC_Read
  1637     0D8F                     u2677:
  1638     0D8F  0BF2               	decfsz	??_ADC_Read,f
  1639     0D90  2D8F               	goto	u2677
  1640     0D91  0BF3               	decfsz	??_ADC_Read+1,f
  1641     0D92  2D8F               	goto	u2677
  1642     0D93  2D94               	nop2
  1643     0D94                     l1349:
  1644                           
  1645                           ;main.c: 42:         pot_x();
  1646     0D94  1283               	bcf	3,5	;RP0=0, select bank0
  1647     0D95  1303               	bcf	3,6	;RP1=0, select bank0
  1648     0D96  149F               	bsf	31,1	;volatile
  1649     0D97                     l46:	
  1650                           ;main.c: 43:         pot_y();
  1651                           
  1652     0D97  189F               	btfsc	31,1	;volatile
  1653     0D98  2D9A               	goto	u1561
  1654     0D99  2D9B               	goto	u1560
  1655     0D9A                     u1561:
  1656     0D9A  2D97               	goto	l46
  1657     0D9B                     u1560:
  1658     0D9B                     l1351:
  1659                           
  1660                           ;main.c: 44:         checar_boton();
  1661     0D9B  081E               	movf	30,w	;volatile
  1662     0D9C  00F1               	movwf	?_ADC_Read+1
  1663     0D9D  1683               	bsf	3,5	;RP0=1, select bank1
  1664     0D9E  1303               	bcf	3,6	;RP1=0, select bank1
  1665     0D9F  081E               	movf	30,w	;volatile
  1666     0DA0  00F0               	movwf	?_ADC_Read
  1667     0DA1                     l49:
  1668     0DA1  0008               	return
  1669     0DA2                     __end_of_ADC_Read:
  1670                           
  1671                           	psect	text4
  1672     0D35                     __ptext4:	
  1673 ;; *************** function _checar_boton *****************
  1674 ;; Defined at:
  1675 ;;		line 113 in file "main.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;		None
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1689 ;;      Params:         0       0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0
  1692 ;;      Totals:         0       0       0       0       0
  1693 ;;Total ram usage:        0 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 4
  1696 ;; This function calls:
  1697 ;;		_disparar
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703     0D35                     _checar_boton:	
  1704                           ;psect for function _checar_boton
  1705                           
  1706     0D35                     l1635:	
  1707                           ;incstack = 0
  1708                           ; Regs used in _checar_boton: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1709                           
  1710                           
  1711                           ;main.c: 114: 
  1712     0D35  1283               	bcf	3,5	;RP0=0, select bank0
  1713     0D36  1303               	bcf	3,6	;RP1=0, select bank0
  1714     0D37  1905               	btfsc	5,2	;volatile
  1715     0D38  2D3A               	goto	u2551
  1716     0D39  2D3B               	goto	u2550
  1717     0D3A                     u2551:
  1718     0D3A  2D40               	goto	l172
  1719     0D3B                     u2550:
  1720     0D3B                     l1637:
  1721                           
  1722                           ;main.c: 115:         if(pos_x >= offset){
  1723     0D3B  120A  118A  2379  120A  158A  	fcall	_disparar
  1724     0D40                     l172:
  1725     0D40  0008               	return
  1726     0D41                     __end_of_checar_boton:
  1727                           
  1728                           	psect	text5
  1729     0379                     __ptext5:	
  1730 ;; *************** function _disparar *****************
  1731 ;; Defined at:
  1732 ;;		line 119 in file "main.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  moved           1    9[COMMON] _Bool 
  1737 ;;  offset          1   10[COMMON] unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       0       0       0       0
  1748 ;;      Locals:         2       0       0       0       0
  1749 ;;      Temps:          0       7       0       0       0
  1750 ;;      Totals:         2       7       0       0       0
  1751 ;;Total ram usage:        9 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 3
  1754 ;; This function calls:
  1755 ;;		_LCD_Write
  1756 ;;		_LCD_putc
  1757 ;;		_LCD_putrs
  1758 ;; This function is called by:
  1759 ;;		_checar_boton
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763     0379                     _disparar:	
  1764                           ;psect for function _disparar
  1765                           
  1766     0379                     l175:	
  1767                           ;incstack = 0
  1768                           ; Regs used in _disparar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1769                           ;main.c: 121:         _delay((unsigned long)((20)*(4000000/4000.0)));
  1770                           
  1771     0379                     l1355:
  1772     0379  1283               	bcf	3,5	;RP0=0, select bank0
  1773     037A  1303               	bcf	3,6	;RP1=0, select bank0
  1774     037B  082D               	movf	_pos_y,w
  1775     037C  1D03               	btfss	3,2
  1776     037D  2B7F               	goto	u1571
  1777     037E  2B80               	goto	u1570
  1778     037F                     u1571:
  1779     037F  2B9B               	goto	l1359
  1780     0380                     u1570:
  1781     0380                     l1357:
  1782     0380  082E               	movf	_pos_x,w
  1783     0381  3E80               	addlw	128
  1784     0382  00A0               	movwf	??_disparar
  1785     0383  3004               	movlw	4
  1786     0384                     u1585:
  1787     0384  1003               	clrc
  1788     0385  0CA0               	rrf	??_disparar,f
  1789     0386  3EFF               	addlw	-1
  1790     0387  1D03               	skipz
  1791     0388  2B84               	goto	u1585
  1792     0389  0820               	movf	??_disparar,w
  1793     038A  390F               	andlw	15
  1794     038B  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1795     0390  1283               	bcf	3,5	;RP0=0, select bank0
  1796     0391  1303               	bcf	3,6	;RP1=0, select bank0
  1797     0392  082E               	movf	_pos_x,w
  1798     0393  3E80               	addlw	128
  1799     0394  390F               	andlw	15
  1800     0395  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1801     039A  2BFC               	goto	l191
  1802     039B                     l1359:
  1803     039B  032D               	decf	_pos_y,w
  1804     039C  1D03               	btfss	3,2
  1805     039D  2B9F               	goto	u1591
  1806     039E  2BA0               	goto	u1590
  1807     039F                     u1591:
  1808     039F  2BBB               	goto	l1363
  1809     03A0                     u1590:
  1810     03A0                     l1361:
  1811     03A0  082E               	movf	_pos_x,w
  1812     03A1  3EC0               	addlw	192
  1813     03A2  00A0               	movwf	??_disparar
  1814     03A3  3004               	movlw	4
  1815     03A4                     u1605:
  1816     03A4  1003               	clrc
  1817     03A5  0CA0               	rrf	??_disparar,f
  1818     03A6  3EFF               	addlw	-1
  1819     03A7  1D03               	skipz
  1820     03A8  2BA4               	goto	u1605
  1821     03A9  0820               	movf	??_disparar,w
  1822     03AA  390F               	andlw	15
  1823     03AB  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1824     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1825     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1826     03B2  082E               	movf	_pos_x,w
  1827     03B3  3EC0               	addlw	192
  1828     03B4  390F               	andlw	15
  1829     03B5  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1830     03BA  2BFC               	goto	l191
  1831     03BB                     l1363:
  1832     03BB  3002               	movlw	2
  1833     03BC  062D               	xorwf	_pos_y,w
  1834     03BD  1D03               	btfss	3,2
  1835     03BE  2BC0               	goto	u1611
  1836     03BF  2BC1               	goto	u1610
  1837     03C0                     u1611:
  1838     03C0  2BDC               	goto	l1367
  1839     03C1                     u1610:
  1840     03C1                     l1365:
  1841     03C1  082E               	movf	_pos_x,w
  1842     03C2  3E94               	addlw	148
  1843     03C3  00A0               	movwf	??_disparar
  1844     03C4  3004               	movlw	4
  1845     03C5                     u1625:
  1846     03C5  1003               	clrc
  1847     03C6  0CA0               	rrf	??_disparar,f
  1848     03C7  3EFF               	addlw	-1
  1849     03C8  1D03               	skipz
  1850     03C9  2BC5               	goto	u1625
  1851     03CA  0820               	movf	??_disparar,w
  1852     03CB  390F               	andlw	15
  1853     03CC  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1854     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1855     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1856     03D3  082E               	movf	_pos_x,w
  1857     03D4  3E94               	addlw	148
  1858     03D5  390F               	andlw	15
  1859     03D6  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1860     03DB  2BFC               	goto	l191
  1861     03DC                     l1367:
  1862     03DC  3003               	movlw	3
  1863     03DD  062D               	xorwf	_pos_y,w
  1864     03DE  1D03               	btfss	3,2
  1865     03DF  2BE1               	goto	u1631
  1866     03E0  2BE2               	goto	u1630
  1867     03E1                     u1631:
  1868     03E1  2BFC               	goto	l191
  1869     03E2                     u1630:
  1870     03E2                     l1369:
  1871     03E2  082E               	movf	_pos_x,w
  1872     03E3  3ED4               	addlw	212
  1873     03E4  00A0               	movwf	??_disparar
  1874     03E5  3004               	movlw	4
  1875     03E6                     u1645:
  1876     03E6  1003               	clrc
  1877     03E7  0CA0               	rrf	??_disparar,f
  1878     03E8  3EFF               	addlw	-1
  1879     03E9  1D03               	skipz
  1880     03EA  2BE6               	goto	u1645
  1881     03EB  0820               	movf	??_disparar,w
  1882     03EC  390F               	andlw	15
  1883     03ED  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1884     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1885     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1886     03F4  082E               	movf	_pos_x,w
  1887     03F5  3ED4               	addlw	212
  1888     03F6  390F               	andlw	15
  1889     03F7  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1890     03FC                     l191:
  1891                           
  1892                           ;main.c: 122: 
  1893     03FC  302F               	movlw	47
  1894     03FD  120A  158A  25F7  120A  118A  	fcall	_LCD_putc
  1895     0402                     l1371:
  1896                           
  1897                           ;main.c: 125:             do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x + offse
      +                          t & 0xF0) >> 4 ); LCD_Write( 0x80 + pos_x + offset & 0x0F); } while ( 0 ); } else if ( p
      +                          os_y == 1 ) { do { LCD_Write( (0xC0 + pos_x + offset & 0xF0) >> 4 ); LCD_Write( 0xC0 + p
      +                          os_x + offset & 0x0F); } while ( 0 ); } else if ( pos_y == 2 ) { do { LCD_Write( (0x94 +
      +                           pos_x + offset & 0xF0) >> 4 ); LCD_Write( 0x94 + pos_x + offset & 0x0F); } while ( 0 );
      +                           } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x + offset & 0xF0) >> 4 ); LCD_W
      +                          rite( 0xD4 + pos_x + offset & 0x0F); } while ( 0 ); } } while ( 0 );
  1898     0402  3001               	movlw	1
  1899     0403  00FA               	movwf	disparar@offset
  1900     0404                     l1377:
  1901                           
  1902                           ;main.c: 126:             LCD_putrs(" ");
  1903     0404  01F9               	clrf	disparar@moved
  1904     0405                     l1379:
  1905                           
  1906                           ;main.c: 129:         if(pos_x >= offset){
  1907     0405  1283               	bcf	3,5	;RP0=0, select bank0
  1908     0406  1303               	bcf	3,6	;RP1=0, select bank0
  1909     0407  082E               	movf	_pos_x,w
  1910     0408  077A               	addwf	disparar@offset,w
  1911     0409  00A0               	movwf	??_disparar
  1912     040A  01A1               	clrf	??_disparar+1
  1913     040B  0DA1               	rlf	??_disparar+1,f
  1914     040C  0821               	movf	??_disparar+1,w
  1915     040D  3A80               	xorlw	128
  1916     040E  00FF               	movwf	btemp+1
  1917     040F  3080               	movlw	128
  1918     0410  027F               	subwf	btemp+1,w
  1919     0411  1D03               	skipz
  1920     0412  2C15               	goto	u1655
  1921     0413  3014               	movlw	20
  1922     0414  0220               	subwf	??_disparar,w
  1923     0415                     u1655:
  1924     0415  1803               	skipnc
  1925     0416  2C18               	goto	u1651
  1926     0417  2C19               	goto	u1650
  1927     0418                     u1651:
  1928     0418  2CD4               	goto	l1399
  1929     0419                     u1650:
  1930     0419                     l1381:
  1931     0419  1283               	bcf	3,5	;RP0=0, select bank0
  1932     041A  1303               	bcf	3,6	;RP1=0, select bank0
  1933     041B  082D               	movf	_pos_y,w
  1934     041C  1D03               	btfss	3,2
  1935     041D  2C1F               	goto	u1661
  1936     041E  2C20               	goto	u1660
  1937     041F                     u1661:
  1938     041F  2C47               	goto	l1385
  1939     0420                     u1660:
  1940     0420                     l1383:
  1941     0420  082E               	movf	_pos_x,w
  1942     0421  077A               	addwf	disparar@offset,w
  1943     0422  00A0               	movwf	??_disparar
  1944     0423  01A1               	clrf	??_disparar+1
  1945     0424  0DA1               	rlf	??_disparar+1,f
  1946     0425  0820               	movf	??_disparar,w
  1947     0426  3E80               	addlw	128
  1948     0427  00A2               	movwf	??_disparar+2
  1949     0428  0821               	movf	??_disparar+1,w
  1950     0429  1803               	skipnc
  1951     042A  3E01               	addlw	1
  1952     042B  3E00               	addlw	0
  1953     042C  00A3               	movwf	??_disparar+3
  1954     042D  3004               	movlw	4
  1955     042E  00A4               	movwf	??_disparar+4
  1956     042F                     u1675:
  1957     042F  0D23               	rlf	??_disparar+3,w
  1958     0430  0CA3               	rrf	??_disparar+3,f
  1959     0431  0CA2               	rrf	??_disparar+2,f
  1960     0432  0BA4               	decfsz	??_disparar+4,f
  1961     0433  2C2F               	goto	u1675
  1962     0434  0822               	movf	??_disparar+2,w
  1963     0435  390F               	andlw	15
  1964     0436  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1965     043B  087A               	movf	disparar@offset,w
  1966     043C  1283               	bcf	3,5	;RP0=0, select bank0
  1967     043D  1303               	bcf	3,6	;RP1=0, select bank0
  1968     043E  072E               	addwf	_pos_x,w
  1969     043F  3E80               	addlw	128
  1970     0440  390F               	andlw	15
  1971     0441  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  1972     0446  2CCC               	goto	l211
  1973     0447                     l1385:
  1974     0447  032D               	decf	_pos_y,w
  1975     0448  1D03               	btfss	3,2
  1976     0449  2C4B               	goto	u1681
  1977     044A  2C4C               	goto	u1680
  1978     044B                     u1681:
  1979     044B  2C73               	goto	l1389
  1980     044C                     u1680:
  1981     044C                     l1387:
  1982     044C  082E               	movf	_pos_x,w
  1983     044D  077A               	addwf	disparar@offset,w
  1984     044E  00A0               	movwf	??_disparar
  1985     044F  01A1               	clrf	??_disparar+1
  1986     0450  0DA1               	rlf	??_disparar+1,f
  1987     0451  0820               	movf	??_disparar,w
  1988     0452  3EC0               	addlw	192
  1989     0453  00A2               	movwf	??_disparar+2
  1990     0454  0821               	movf	??_disparar+1,w
  1991     0455  1803               	skipnc
  1992     0456  3E01               	addlw	1
  1993     0457  3E00               	addlw	0
  1994     0458  00A3               	movwf	??_disparar+3
  1995     0459  3004               	movlw	4
  1996     045A  00A4               	movwf	??_disparar+4
  1997     045B                     u1695:
  1998     045B  0D23               	rlf	??_disparar+3,w
  1999     045C  0CA3               	rrf	??_disparar+3,f
  2000     045D  0CA2               	rrf	??_disparar+2,f
  2001     045E  0BA4               	decfsz	??_disparar+4,f
  2002     045F  2C5B               	goto	u1695
  2003     0460  0822               	movf	??_disparar+2,w
  2004     0461  390F               	andlw	15
  2005     0462  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2006     0467  087A               	movf	disparar@offset,w
  2007     0468  1283               	bcf	3,5	;RP0=0, select bank0
  2008     0469  1303               	bcf	3,6	;RP1=0, select bank0
  2009     046A  072E               	addwf	_pos_x,w
  2010     046B  3EC0               	addlw	192
  2011     046C  390F               	andlw	15
  2012     046D  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2013     0472  2CCC               	goto	l211
  2014     0473                     l1389:
  2015     0473  3002               	movlw	2
  2016     0474  062D               	xorwf	_pos_y,w
  2017     0475  1D03               	btfss	3,2
  2018     0476  2C78               	goto	u1701
  2019     0477  2C79               	goto	u1700
  2020     0478                     u1701:
  2021     0478  2CA0               	goto	l1393
  2022     0479                     u1700:
  2023     0479                     l1391:
  2024     0479  082E               	movf	_pos_x,w
  2025     047A  077A               	addwf	disparar@offset,w
  2026     047B  00A0               	movwf	??_disparar
  2027     047C  01A1               	clrf	??_disparar+1
  2028     047D  0DA1               	rlf	??_disparar+1,f
  2029     047E  0820               	movf	??_disparar,w
  2030     047F  3E94               	addlw	148
  2031     0480  00A2               	movwf	??_disparar+2
  2032     0481  0821               	movf	??_disparar+1,w
  2033     0482  1803               	skipnc
  2034     0483  3E01               	addlw	1
  2035     0484  3E00               	addlw	0
  2036     0485  00A3               	movwf	??_disparar+3
  2037     0486  3004               	movlw	4
  2038     0487  00A4               	movwf	??_disparar+4
  2039     0488                     u1715:
  2040     0488  0D23               	rlf	??_disparar+3,w
  2041     0489  0CA3               	rrf	??_disparar+3,f
  2042     048A  0CA2               	rrf	??_disparar+2,f
  2043     048B  0BA4               	decfsz	??_disparar+4,f
  2044     048C  2C88               	goto	u1715
  2045     048D  0822               	movf	??_disparar+2,w
  2046     048E  390F               	andlw	15
  2047     048F  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2048     0494  087A               	movf	disparar@offset,w
  2049     0495  1283               	bcf	3,5	;RP0=0, select bank0
  2050     0496  1303               	bcf	3,6	;RP1=0, select bank0
  2051     0497  072E               	addwf	_pos_x,w
  2052     0498  3E94               	addlw	148
  2053     0499  390F               	andlw	15
  2054     049A  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2055     049F  2CCC               	goto	l211
  2056     04A0                     l1393:
  2057     04A0  3003               	movlw	3
  2058     04A1  062D               	xorwf	_pos_y,w
  2059     04A2  1D03               	btfss	3,2
  2060     04A3  2CA5               	goto	u1721
  2061     04A4  2CA6               	goto	u1720
  2062     04A5                     u1721:
  2063     04A5  2CCC               	goto	l211
  2064     04A6                     u1720:
  2065     04A6                     l1395:
  2066     04A6  082E               	movf	_pos_x,w
  2067     04A7  077A               	addwf	disparar@offset,w
  2068     04A8  00A0               	movwf	??_disparar
  2069     04A9  01A1               	clrf	??_disparar+1
  2070     04AA  0DA1               	rlf	??_disparar+1,f
  2071     04AB  0820               	movf	??_disparar,w
  2072     04AC  3ED4               	addlw	212
  2073     04AD  00A2               	movwf	??_disparar+2
  2074     04AE  0821               	movf	??_disparar+1,w
  2075     04AF  1803               	skipnc
  2076     04B0  3E01               	addlw	1
  2077     04B1  3E00               	addlw	0
  2078     04B2  00A3               	movwf	??_disparar+3
  2079     04B3  3004               	movlw	4
  2080     04B4  00A4               	movwf	??_disparar+4
  2081     04B5                     u1735:
  2082     04B5  0D23               	rlf	??_disparar+3,w
  2083     04B6  0CA3               	rrf	??_disparar+3,f
  2084     04B7  0CA2               	rrf	??_disparar+2,f
  2085     04B8  0BA4               	decfsz	??_disparar+4,f
  2086     04B9  2CB5               	goto	u1735
  2087     04BA  0822               	movf	??_disparar+2,w
  2088     04BB  390F               	andlw	15
  2089     04BC  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2090     04C1  087A               	movf	disparar@offset,w
  2091     04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2092     04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2093     04C4  072E               	addwf	_pos_x,w
  2094     04C5  3ED4               	addlw	212
  2095     04C6  390F               	andlw	15
  2096     04C7  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2097     04CC                     l211:
  2098                           
  2099                           ;main.c: 131:             LCD_putrs(" ");
  2100     04CC  302D               	movlw	45
  2101     04CD  120A  158A  25F7  120A  118A  	fcall	_LCD_putc
  2102     04D2                     l1397:
  2103                           
  2104                           ;main.c: 132:         }
  2105     04D2  3001               	movlw	1
  2106     04D3  00F9               	movwf	disparar@moved
  2107     04D4                     l1399:
  2108                           
  2109                           ;main.c: 136: 
  2110     04D4  087A               	movf	disparar@offset,w
  2111     04D5  1283               	bcf	3,5	;RP0=0, select bank0
  2112     04D6  1303               	bcf	3,6	;RP1=0, select bank0
  2113     04D7  022E               	subwf	_pos_x,w
  2114     04D8  1C03               	skipc
  2115     04D9  2CDB               	goto	u1741
  2116     04DA  2CDC               	goto	u1740
  2117     04DB                     u1741:
  2118     04DB  2DA9               	goto	l1419
  2119     04DC                     u1740:
  2120     04DC                     l1401:
  2121     04DC  082D               	movf	_pos_y,w
  2122     04DD  1D03               	btfss	3,2
  2123     04DE  2CE0               	goto	u1751
  2124     04DF  2CE1               	goto	u1750
  2125     04E0                     u1751:
  2126     04E0  2D0D               	goto	l1405
  2127     04E1                     u1750:
  2128     04E1                     l1403:
  2129     04E1  082E               	movf	_pos_x,w
  2130     04E2  00A0               	movwf	??_disparar
  2131     04E3  01A1               	clrf	??_disparar+1
  2132     04E4  0821               	movf	??_disparar+1,w
  2133     04E5  00A3               	movwf	??_disparar+3
  2134     04E6  087A               	movf	disparar@offset,w
  2135     04E7  0220               	subwf	??_disparar,w
  2136     04E8  00A2               	movwf	??_disparar+2
  2137     04E9  1C03               	skipc
  2138     04EA  03A3               	decf	??_disparar+3,f
  2139     04EB  0822               	movf	??_disparar+2,w
  2140     04EC  3E80               	addlw	128
  2141     04ED  00A4               	movwf	??_disparar+4
  2142     04EE  0823               	movf	??_disparar+3,w
  2143     04EF  1803               	skipnc
  2144     04F0  3E01               	addlw	1
  2145     04F1  3E00               	addlw	0
  2146     04F2  00A5               	movwf	??_disparar+5
  2147     04F3  3004               	movlw	4
  2148     04F4  00A6               	movwf	??_disparar+6
  2149     04F5                     u1765:
  2150     04F5  0D25               	rlf	??_disparar+5,w
  2151     04F6  0CA5               	rrf	??_disparar+5,f
  2152     04F7  0CA4               	rrf	??_disparar+4,f
  2153     04F8  0BA6               	decfsz	??_disparar+6,f
  2154     04F9  2CF5               	goto	u1765
  2155     04FA  0824               	movf	??_disparar+4,w
  2156     04FB  390F               	andlw	15
  2157     04FC  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2158     0501  087A               	movf	disparar@offset,w
  2159     0502  1283               	bcf	3,5	;RP0=0, select bank0
  2160     0503  1303               	bcf	3,6	;RP1=0, select bank0
  2161     0504  022E               	subwf	_pos_x,w
  2162     0505  3E80               	addlw	128
  2163     0506  390F               	andlw	15
  2164     0507  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2165     050C  2DA1               	goto	l229
  2166     050D                     l1405:
  2167     050D  032D               	decf	_pos_y,w
  2168     050E  1D03               	btfss	3,2
  2169     050F  2D11               	goto	u1771
  2170     0510  2D12               	goto	u1770
  2171     0511                     u1771:
  2172     0511  2D3E               	goto	l1409
  2173     0512                     u1770:
  2174     0512                     l1407:
  2175     0512  082E               	movf	_pos_x,w
  2176     0513  00A0               	movwf	??_disparar
  2177     0514  01A1               	clrf	??_disparar+1
  2178     0515  0821               	movf	??_disparar+1,w
  2179     0516  00A3               	movwf	??_disparar+3
  2180     0517  087A               	movf	disparar@offset,w
  2181     0518  0220               	subwf	??_disparar,w
  2182     0519  00A2               	movwf	??_disparar+2
  2183     051A  1C03               	skipc
  2184     051B  03A3               	decf	??_disparar+3,f
  2185     051C  0822               	movf	??_disparar+2,w
  2186     051D  3EC0               	addlw	192
  2187     051E  00A4               	movwf	??_disparar+4
  2188     051F  0823               	movf	??_disparar+3,w
  2189     0520  1803               	skipnc
  2190     0521  3E01               	addlw	1
  2191     0522  3E00               	addlw	0
  2192     0523  00A5               	movwf	??_disparar+5
  2193     0524  3004               	movlw	4
  2194     0525  00A6               	movwf	??_disparar+6
  2195     0526                     u1785:
  2196     0526  0D25               	rlf	??_disparar+5,w
  2197     0527  0CA5               	rrf	??_disparar+5,f
  2198     0528  0CA4               	rrf	??_disparar+4,f
  2199     0529  0BA6               	decfsz	??_disparar+6,f
  2200     052A  2D26               	goto	u1785
  2201     052B  0824               	movf	??_disparar+4,w
  2202     052C  390F               	andlw	15
  2203     052D  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2204     0532  087A               	movf	disparar@offset,w
  2205     0533  1283               	bcf	3,5	;RP0=0, select bank0
  2206     0534  1303               	bcf	3,6	;RP1=0, select bank0
  2207     0535  022E               	subwf	_pos_x,w
  2208     0536  3EC0               	addlw	192
  2209     0537  390F               	andlw	15
  2210     0538  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2211     053D  2DA1               	goto	l229
  2212     053E                     l1409:
  2213     053E  3002               	movlw	2
  2214     053F  062D               	xorwf	_pos_y,w
  2215     0540  1D03               	btfss	3,2
  2216     0541  2D43               	goto	u1791
  2217     0542  2D44               	goto	u1790
  2218     0543                     u1791:
  2219     0543  2D70               	goto	l1413
  2220     0544                     u1790:
  2221     0544                     l1411:
  2222     0544  082E               	movf	_pos_x,w
  2223     0545  00A0               	movwf	??_disparar
  2224     0546  01A1               	clrf	??_disparar+1
  2225     0547  0821               	movf	??_disparar+1,w
  2226     0548  00A3               	movwf	??_disparar+3
  2227     0549  087A               	movf	disparar@offset,w
  2228     054A  0220               	subwf	??_disparar,w
  2229     054B  00A2               	movwf	??_disparar+2
  2230     054C  1C03               	skipc
  2231     054D  03A3               	decf	??_disparar+3,f
  2232     054E  0822               	movf	??_disparar+2,w
  2233     054F  3E94               	addlw	148
  2234     0550  00A4               	movwf	??_disparar+4
  2235     0551  0823               	movf	??_disparar+3,w
  2236     0552  1803               	skipnc
  2237     0553  3E01               	addlw	1
  2238     0554  3E00               	addlw	0
  2239     0555  00A5               	movwf	??_disparar+5
  2240     0556  3004               	movlw	4
  2241     0557  00A6               	movwf	??_disparar+6
  2242     0558                     u1805:
  2243     0558  0D25               	rlf	??_disparar+5,w
  2244     0559  0CA5               	rrf	??_disparar+5,f
  2245     055A  0CA4               	rrf	??_disparar+4,f
  2246     055B  0BA6               	decfsz	??_disparar+6,f
  2247     055C  2D58               	goto	u1805
  2248     055D  0824               	movf	??_disparar+4,w
  2249     055E  390F               	andlw	15
  2250     055F  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2251     0564  087A               	movf	disparar@offset,w
  2252     0565  1283               	bcf	3,5	;RP0=0, select bank0
  2253     0566  1303               	bcf	3,6	;RP1=0, select bank0
  2254     0567  022E               	subwf	_pos_x,w
  2255     0568  3E94               	addlw	148
  2256     0569  390F               	andlw	15
  2257     056A  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2258     056F  2DA1               	goto	l229
  2259     0570                     l1413:
  2260     0570  3003               	movlw	3
  2261     0571  062D               	xorwf	_pos_y,w
  2262     0572  1D03               	btfss	3,2
  2263     0573  2D75               	goto	u1811
  2264     0574  2D76               	goto	u1810
  2265     0575                     u1811:
  2266     0575  2DA1               	goto	l229
  2267     0576                     u1810:
  2268     0576                     l1415:
  2269     0576  082E               	movf	_pos_x,w
  2270     0577  00A0               	movwf	??_disparar
  2271     0578  01A1               	clrf	??_disparar+1
  2272     0579  0821               	movf	??_disparar+1,w
  2273     057A  00A3               	movwf	??_disparar+3
  2274     057B  087A               	movf	disparar@offset,w
  2275     057C  0220               	subwf	??_disparar,w
  2276     057D  00A2               	movwf	??_disparar+2
  2277     057E  1C03               	skipc
  2278     057F  03A3               	decf	??_disparar+3,f
  2279     0580  0822               	movf	??_disparar+2,w
  2280     0581  3ED4               	addlw	212
  2281     0582  00A4               	movwf	??_disparar+4
  2282     0583  0823               	movf	??_disparar+3,w
  2283     0584  1803               	skipnc
  2284     0585  3E01               	addlw	1
  2285     0586  3E00               	addlw	0
  2286     0587  00A5               	movwf	??_disparar+5
  2287     0588  3004               	movlw	4
  2288     0589  00A6               	movwf	??_disparar+6
  2289     058A                     u1825:
  2290     058A  0D25               	rlf	??_disparar+5,w
  2291     058B  0CA5               	rrf	??_disparar+5,f
  2292     058C  0CA4               	rrf	??_disparar+4,f
  2293     058D  0BA6               	decfsz	??_disparar+6,f
  2294     058E  2D8A               	goto	u1825
  2295     058F  0824               	movf	??_disparar+4,w
  2296     0590  390F               	andlw	15
  2297     0591  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2298     0596  087A               	movf	disparar@offset,w
  2299     0597  1283               	bcf	3,5	;RP0=0, select bank0
  2300     0598  1303               	bcf	3,6	;RP1=0, select bank0
  2301     0599  022E               	subwf	_pos_x,w
  2302     059A  3ED4               	addlw	212
  2303     059B  390F               	andlw	15
  2304     059C  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2305     05A1                     l229:
  2306                           
  2307                           ;main.c: 138:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  2308     05A1  302D               	movlw	45
  2309     05A2  120A  158A  25F7  120A  118A  	fcall	_LCD_putc
  2310     05A7                     l1417:
  2311                           
  2312                           ;main.c: 139:     LCD_putc('|');
  2313     05A7  3001               	movlw	1
  2314     05A8  00F9               	movwf	disparar@moved
  2315     05A9                     l1419:
  2316     05A9  301A               	movlw	26
  2317     05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2318     05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2319     05AC  00A1               	movwf	??_disparar+1
  2320     05AD  30F7               	movlw	247
  2321     05AE  00A0               	movwf	??_disparar
  2322     05AF                     u2687:
  2323     05AF  0BA0               	decfsz	??_disparar,f
  2324     05B0  2DAF               	goto	u2687
  2325     05B1  0BA1               	decfsz	??_disparar+1,f
  2326     05B2  2DAF               	goto	u2687
  2327     05B3  2DB4               	nop2
  2328     05B4                     l1421:
  2329     05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2330     05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2331     05B6  082E               	movf	_pos_x,w
  2332     05B7  077A               	addwf	disparar@offset,w
  2333     05B8  00A0               	movwf	??_disparar
  2334     05B9  01A1               	clrf	??_disparar+1
  2335     05BA  0DA1               	rlf	??_disparar+1,f
  2336     05BB  0821               	movf	??_disparar+1,w
  2337     05BC  3A80               	xorlw	128
  2338     05BD  00FF               	movwf	btemp+1
  2339     05BE  3080               	movlw	128
  2340     05BF  027F               	subwf	btemp+1,w
  2341     05C0  1D03               	skipz
  2342     05C1  2DC4               	goto	u1835
  2343     05C2  3014               	movlw	20
  2344     05C3  0220               	subwf	??_disparar,w
  2345     05C4                     u1835:
  2346     05C4  1803               	skipnc
  2347     05C5  2DC7               	goto	u1831
  2348     05C6  2DC8               	goto	u1830
  2349     05C7                     u1831:
  2350     05C7  2E82               	goto	l1439
  2351     05C8                     u1830:
  2352     05C8                     l1423:
  2353     05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2354     05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2355     05CA  082D               	movf	_pos_y,w
  2356     05CB  1D03               	btfss	3,2
  2357     05CC  2DCE               	goto	u1841
  2358     05CD  2DCF               	goto	u1840
  2359     05CE                     u1841:
  2360     05CE  2DF6               	goto	l1427
  2361     05CF                     u1840:
  2362     05CF                     l1425:
  2363     05CF  082E               	movf	_pos_x,w
  2364     05D0  077A               	addwf	disparar@offset,w
  2365     05D1  00A0               	movwf	??_disparar
  2366     05D2  01A1               	clrf	??_disparar+1
  2367     05D3  0DA1               	rlf	??_disparar+1,f
  2368     05D4  0820               	movf	??_disparar,w
  2369     05D5  3E80               	addlw	128
  2370     05D6  00A2               	movwf	??_disparar+2
  2371     05D7  0821               	movf	??_disparar+1,w
  2372     05D8  1803               	skipnc
  2373     05D9  3E01               	addlw	1
  2374     05DA  3E00               	addlw	0
  2375     05DB  00A3               	movwf	??_disparar+3
  2376     05DC  3004               	movlw	4
  2377     05DD  00A4               	movwf	??_disparar+4
  2378     05DE                     u1855:
  2379     05DE  0D23               	rlf	??_disparar+3,w
  2380     05DF  0CA3               	rrf	??_disparar+3,f
  2381     05E0  0CA2               	rrf	??_disparar+2,f
  2382     05E1  0BA4               	decfsz	??_disparar+4,f
  2383     05E2  2DDE               	goto	u1855
  2384     05E3  0822               	movf	??_disparar+2,w
  2385     05E4  390F               	andlw	15
  2386     05E5  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2387     05EA  087A               	movf	disparar@offset,w
  2388     05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2389     05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2390     05ED  072E               	addwf	_pos_x,w
  2391     05EE  3E80               	addlw	128
  2392     05EF  390F               	andlw	15
  2393     05F0  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2394     05F5  2E7B               	goto	l247
  2395     05F6                     l1427:
  2396     05F6  032D               	decf	_pos_y,w
  2397     05F7  1D03               	btfss	3,2
  2398     05F8  2DFA               	goto	u1861
  2399     05F9  2DFB               	goto	u1860
  2400     05FA                     u1861:
  2401     05FA  2E22               	goto	l1431
  2402     05FB                     u1860:
  2403     05FB                     l1429:
  2404     05FB  082E               	movf	_pos_x,w
  2405     05FC  077A               	addwf	disparar@offset,w
  2406     05FD  00A0               	movwf	??_disparar
  2407     05FE  01A1               	clrf	??_disparar+1
  2408     05FF  0DA1               	rlf	??_disparar+1,f
  2409     0600  0820               	movf	??_disparar,w
  2410     0601  3EC0               	addlw	192
  2411     0602  00A2               	movwf	??_disparar+2
  2412     0603  0821               	movf	??_disparar+1,w
  2413     0604  1803               	skipnc
  2414     0605  3E01               	addlw	1
  2415     0606  3E00               	addlw	0
  2416     0607  00A3               	movwf	??_disparar+3
  2417     0608  3004               	movlw	4
  2418     0609  00A4               	movwf	??_disparar+4
  2419     060A                     u1875:
  2420     060A  0D23               	rlf	??_disparar+3,w
  2421     060B  0CA3               	rrf	??_disparar+3,f
  2422     060C  0CA2               	rrf	??_disparar+2,f
  2423     060D  0BA4               	decfsz	??_disparar+4,f
  2424     060E  2E0A               	goto	u1875
  2425     060F  0822               	movf	??_disparar+2,w
  2426     0610  390F               	andlw	15
  2427     0611  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2428     0616  087A               	movf	disparar@offset,w
  2429     0617  1283               	bcf	3,5	;RP0=0, select bank0
  2430     0618  1303               	bcf	3,6	;RP1=0, select bank0
  2431     0619  072E               	addwf	_pos_x,w
  2432     061A  3EC0               	addlw	192
  2433     061B  390F               	andlw	15
  2434     061C  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2435     0621  2E7B               	goto	l247
  2436     0622                     l1431:
  2437     0622  3002               	movlw	2
  2438     0623  062D               	xorwf	_pos_y,w
  2439     0624  1D03               	btfss	3,2
  2440     0625  2E27               	goto	u1881
  2441     0626  2E28               	goto	u1880
  2442     0627                     u1881:
  2443     0627  2E4F               	goto	l1435
  2444     0628                     u1880:
  2445     0628                     l1433:
  2446     0628  082E               	movf	_pos_x,w
  2447     0629  077A               	addwf	disparar@offset,w
  2448     062A  00A0               	movwf	??_disparar
  2449     062B  01A1               	clrf	??_disparar+1
  2450     062C  0DA1               	rlf	??_disparar+1,f
  2451     062D  0820               	movf	??_disparar,w
  2452     062E  3E94               	addlw	148
  2453     062F  00A2               	movwf	??_disparar+2
  2454     0630  0821               	movf	??_disparar+1,w
  2455     0631  1803               	skipnc
  2456     0632  3E01               	addlw	1
  2457     0633  3E00               	addlw	0
  2458     0634  00A3               	movwf	??_disparar+3
  2459     0635  3004               	movlw	4
  2460     0636  00A4               	movwf	??_disparar+4
  2461     0637                     u1895:
  2462     0637  0D23               	rlf	??_disparar+3,w
  2463     0638  0CA3               	rrf	??_disparar+3,f
  2464     0639  0CA2               	rrf	??_disparar+2,f
  2465     063A  0BA4               	decfsz	??_disparar+4,f
  2466     063B  2E37               	goto	u1895
  2467     063C  0822               	movf	??_disparar+2,w
  2468     063D  390F               	andlw	15
  2469     063E  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2470     0643  087A               	movf	disparar@offset,w
  2471     0644  1283               	bcf	3,5	;RP0=0, select bank0
  2472     0645  1303               	bcf	3,6	;RP1=0, select bank0
  2473     0646  072E               	addwf	_pos_x,w
  2474     0647  3E94               	addlw	148
  2475     0648  390F               	andlw	15
  2476     0649  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2477     064E  2E7B               	goto	l247
  2478     064F                     l1435:
  2479     064F  3003               	movlw	3
  2480     0650  062D               	xorwf	_pos_y,w
  2481     0651  1D03               	btfss	3,2
  2482     0652  2E54               	goto	u1901
  2483     0653  2E55               	goto	u1900
  2484     0654                     u1901:
  2485     0654  2E7B               	goto	l247
  2486     0655                     u1900:
  2487     0655                     l1437:
  2488     0655  082E               	movf	_pos_x,w
  2489     0656  077A               	addwf	disparar@offset,w
  2490     0657  00A0               	movwf	??_disparar
  2491     0658  01A1               	clrf	??_disparar+1
  2492     0659  0DA1               	rlf	??_disparar+1,f
  2493     065A  0820               	movf	??_disparar,w
  2494     065B  3ED4               	addlw	212
  2495     065C  00A2               	movwf	??_disparar+2
  2496     065D  0821               	movf	??_disparar+1,w
  2497     065E  1803               	skipnc
  2498     065F  3E01               	addlw	1
  2499     0660  3E00               	addlw	0
  2500     0661  00A3               	movwf	??_disparar+3
  2501     0662  3004               	movlw	4
  2502     0663  00A4               	movwf	??_disparar+4
  2503     0664                     u1915:
  2504     0664  0D23               	rlf	??_disparar+3,w
  2505     0665  0CA3               	rrf	??_disparar+3,f
  2506     0666  0CA2               	rrf	??_disparar+2,f
  2507     0667  0BA4               	decfsz	??_disparar+4,f
  2508     0668  2E64               	goto	u1915
  2509     0669  0822               	movf	??_disparar+2,w
  2510     066A  390F               	andlw	15
  2511     066B  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2512     0670  087A               	movf	disparar@offset,w
  2513     0671  1283               	bcf	3,5	;RP0=0, select bank0
  2514     0672  1303               	bcf	3,6	;RP1=0, select bank0
  2515     0673  072E               	addwf	_pos_x,w
  2516     0674  3ED4               	addlw	212
  2517     0675  390F               	andlw	15
  2518     0676  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2519     067B                     l247:
  2520     067B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2521     067C  00F6               	movwf	LCD_putrs@a
  2522     067D  120A  158A  2554  120A  118A  	fcall	_LCD_putrs
  2523     0682                     l1439:
  2524     0682  087A               	movf	disparar@offset,w
  2525     0683  1283               	bcf	3,5	;RP0=0, select bank0
  2526     0684  1303               	bcf	3,6	;RP1=0, select bank0
  2527     0685  022E               	subwf	_pos_x,w
  2528     0686  1C03               	skipc
  2529     0687  2E89               	goto	u1921
  2530     0688  2E8A               	goto	u1920
  2531     0689                     u1921:
  2532     0689  2F56               	goto	l1457
  2533     068A                     u1920:
  2534     068A                     l1441:
  2535     068A  082D               	movf	_pos_y,w
  2536     068B  1D03               	btfss	3,2
  2537     068C  2E8E               	goto	u1931
  2538     068D  2E8F               	goto	u1930
  2539     068E                     u1931:
  2540     068E  2EBB               	goto	l1445
  2541     068F                     u1930:
  2542     068F                     l1443:
  2543     068F  082E               	movf	_pos_x,w
  2544     0690  00A0               	movwf	??_disparar
  2545     0691  01A1               	clrf	??_disparar+1
  2546     0692  0821               	movf	??_disparar+1,w
  2547     0693  00A3               	movwf	??_disparar+3
  2548     0694  087A               	movf	disparar@offset,w
  2549     0695  0220               	subwf	??_disparar,w
  2550     0696  00A2               	movwf	??_disparar+2
  2551     0697  1C03               	skipc
  2552     0698  03A3               	decf	??_disparar+3,f
  2553     0699  0822               	movf	??_disparar+2,w
  2554     069A  3E80               	addlw	128
  2555     069B  00A4               	movwf	??_disparar+4
  2556     069C  0823               	movf	??_disparar+3,w
  2557     069D  1803               	skipnc
  2558     069E  3E01               	addlw	1
  2559     069F  3E00               	addlw	0
  2560     06A0  00A5               	movwf	??_disparar+5
  2561     06A1  3004               	movlw	4
  2562     06A2  00A6               	movwf	??_disparar+6
  2563     06A3                     u1945:
  2564     06A3  0D25               	rlf	??_disparar+5,w
  2565     06A4  0CA5               	rrf	??_disparar+5,f
  2566     06A5  0CA4               	rrf	??_disparar+4,f
  2567     06A6  0BA6               	decfsz	??_disparar+6,f
  2568     06A7  2EA3               	goto	u1945
  2569     06A8  0824               	movf	??_disparar+4,w
  2570     06A9  390F               	andlw	15
  2571     06AA  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2572     06AF  087A               	movf	disparar@offset,w
  2573     06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2574     06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2575     06B2  022E               	subwf	_pos_x,w
  2576     06B3  3E80               	addlw	128
  2577     06B4  390F               	andlw	15
  2578     06B5  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2579     06BA  2F4F               	goto	l265
  2580     06BB                     l1445:
  2581     06BB  032D               	decf	_pos_y,w
  2582     06BC  1D03               	btfss	3,2
  2583     06BD  2EBF               	goto	u1951
  2584     06BE  2EC0               	goto	u1950
  2585     06BF                     u1951:
  2586     06BF  2EEC               	goto	l1449
  2587     06C0                     u1950:
  2588     06C0                     l1447:
  2589     06C0  082E               	movf	_pos_x,w
  2590     06C1  00A0               	movwf	??_disparar
  2591     06C2  01A1               	clrf	??_disparar+1
  2592     06C3  0821               	movf	??_disparar+1,w
  2593     06C4  00A3               	movwf	??_disparar+3
  2594     06C5  087A               	movf	disparar@offset,w
  2595     06C6  0220               	subwf	??_disparar,w
  2596     06C7  00A2               	movwf	??_disparar+2
  2597     06C8  1C03               	skipc
  2598     06C9  03A3               	decf	??_disparar+3,f
  2599     06CA  0822               	movf	??_disparar+2,w
  2600     06CB  3EC0               	addlw	192
  2601     06CC  00A4               	movwf	??_disparar+4
  2602     06CD  0823               	movf	??_disparar+3,w
  2603     06CE  1803               	skipnc
  2604     06CF  3E01               	addlw	1
  2605     06D0  3E00               	addlw	0
  2606     06D1  00A5               	movwf	??_disparar+5
  2607     06D2  3004               	movlw	4
  2608     06D3  00A6               	movwf	??_disparar+6
  2609     06D4                     u1965:
  2610     06D4  0D25               	rlf	??_disparar+5,w
  2611     06D5  0CA5               	rrf	??_disparar+5,f
  2612     06D6  0CA4               	rrf	??_disparar+4,f
  2613     06D7  0BA6               	decfsz	??_disparar+6,f
  2614     06D8  2ED4               	goto	u1965
  2615     06D9  0824               	movf	??_disparar+4,w
  2616     06DA  390F               	andlw	15
  2617     06DB  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2618     06E0  087A               	movf	disparar@offset,w
  2619     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2620     06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2621     06E3  022E               	subwf	_pos_x,w
  2622     06E4  3EC0               	addlw	192
  2623     06E5  390F               	andlw	15
  2624     06E6  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2625     06EB  2F4F               	goto	l265
  2626     06EC                     l1449:
  2627     06EC  3002               	movlw	2
  2628     06ED  062D               	xorwf	_pos_y,w
  2629     06EE  1D03               	btfss	3,2
  2630     06EF  2EF1               	goto	u1971
  2631     06F0  2EF2               	goto	u1970
  2632     06F1                     u1971:
  2633     06F1  2F1E               	goto	l1453
  2634     06F2                     u1970:
  2635     06F2                     l1451:
  2636     06F2  082E               	movf	_pos_x,w
  2637     06F3  00A0               	movwf	??_disparar
  2638     06F4  01A1               	clrf	??_disparar+1
  2639     06F5  0821               	movf	??_disparar+1,w
  2640     06F6  00A3               	movwf	??_disparar+3
  2641     06F7  087A               	movf	disparar@offset,w
  2642     06F8  0220               	subwf	??_disparar,w
  2643     06F9  00A2               	movwf	??_disparar+2
  2644     06FA  1C03               	skipc
  2645     06FB  03A3               	decf	??_disparar+3,f
  2646     06FC  0822               	movf	??_disparar+2,w
  2647     06FD  3E94               	addlw	148
  2648     06FE  00A4               	movwf	??_disparar+4
  2649     06FF  0823               	movf	??_disparar+3,w
  2650     0700  1803               	skipnc
  2651     0701  3E01               	addlw	1
  2652     0702  3E00               	addlw	0
  2653     0703  00A5               	movwf	??_disparar+5
  2654     0704  3004               	movlw	4
  2655     0705  00A6               	movwf	??_disparar+6
  2656     0706                     u1985:
  2657     0706  0D25               	rlf	??_disparar+5,w
  2658     0707  0CA5               	rrf	??_disparar+5,f
  2659     0708  0CA4               	rrf	??_disparar+4,f
  2660     0709  0BA6               	decfsz	??_disparar+6,f
  2661     070A  2F06               	goto	u1985
  2662     070B  0824               	movf	??_disparar+4,w
  2663     070C  390F               	andlw	15
  2664     070D  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2665     0712  087A               	movf	disparar@offset,w
  2666     0713  1283               	bcf	3,5	;RP0=0, select bank0
  2667     0714  1303               	bcf	3,6	;RP1=0, select bank0
  2668     0715  022E               	subwf	_pos_x,w
  2669     0716  3E94               	addlw	148
  2670     0717  390F               	andlw	15
  2671     0718  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2672     071D  2F4F               	goto	l265
  2673     071E                     l1453:
  2674     071E  3003               	movlw	3
  2675     071F  062D               	xorwf	_pos_y,w
  2676     0720  1D03               	btfss	3,2
  2677     0721  2F23               	goto	u1991
  2678     0722  2F24               	goto	u1990
  2679     0723                     u1991:
  2680     0723  2F4F               	goto	l265
  2681     0724                     u1990:
  2682     0724                     l1455:
  2683     0724  082E               	movf	_pos_x,w
  2684     0725  00A0               	movwf	??_disparar
  2685     0726  01A1               	clrf	??_disparar+1
  2686     0727  0821               	movf	??_disparar+1,w
  2687     0728  00A3               	movwf	??_disparar+3
  2688     0729  087A               	movf	disparar@offset,w
  2689     072A  0220               	subwf	??_disparar,w
  2690     072B  00A2               	movwf	??_disparar+2
  2691     072C  1C03               	skipc
  2692     072D  03A3               	decf	??_disparar+3,f
  2693     072E  0822               	movf	??_disparar+2,w
  2694     072F  3ED4               	addlw	212
  2695     0730  00A4               	movwf	??_disparar+4
  2696     0731  0823               	movf	??_disparar+3,w
  2697     0732  1803               	skipnc
  2698     0733  3E01               	addlw	1
  2699     0734  3E00               	addlw	0
  2700     0735  00A5               	movwf	??_disparar+5
  2701     0736  3004               	movlw	4
  2702     0737  00A6               	movwf	??_disparar+6
  2703     0738                     u2005:
  2704     0738  0D25               	rlf	??_disparar+5,w
  2705     0739  0CA5               	rrf	??_disparar+5,f
  2706     073A  0CA4               	rrf	??_disparar+4,f
  2707     073B  0BA6               	decfsz	??_disparar+6,f
  2708     073C  2F38               	goto	u2005
  2709     073D  0824               	movf	??_disparar+4,w
  2710     073E  390F               	andlw	15
  2711     073F  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2712     0744  087A               	movf	disparar@offset,w
  2713     0745  1283               	bcf	3,5	;RP0=0, select bank0
  2714     0746  1303               	bcf	3,6	;RP1=0, select bank0
  2715     0747  022E               	subwf	_pos_x,w
  2716     0748  3ED4               	addlw	212
  2717     0749  390F               	andlw	15
  2718     074A  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2719     074F                     l265:
  2720     074F  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2721     0750  00F6               	movwf	LCD_putrs@a
  2722     0751  120A  158A  2554  120A  118A  	fcall	_LCD_putrs
  2723     0756                     l1457:
  2724     0756  0879               	movf	disparar@moved,w
  2725     0757  1D03               	btfss	3,2
  2726     0758  2F5A               	goto	u2011
  2727     0759  2F5B               	goto	u2010
  2728     075A                     u2011:
  2729     075A  2F5C               	goto	l1461
  2730     075B                     u2010:
  2731     075B  2F64               	goto	l1465
  2732     075C                     l1461:
  2733     075C  3001               	movlw	1
  2734     075D  07FA               	addwf	disparar@offset,f
  2735     075E                     l1463:
  2736     075E  3014               	movlw	20
  2737     075F  027A               	subwf	disparar@offset,w
  2738     0760  1C03               	skipc
  2739     0761  2F63               	goto	u2021
  2740     0762  2F64               	goto	u2020
  2741     0763                     u2021:
  2742     0763  2C04               	goto	l1377
  2743     0764                     u2020:
  2744     0764                     l1465:
  2745     0764  1283               	bcf	3,5	;RP0=0, select bank0
  2746     0765  1303               	bcf	3,6	;RP1=0, select bank0
  2747     0766  082D               	movf	_pos_y,w
  2748     0767  1D03               	btfss	3,2
  2749     0768  2F6A               	goto	u2031
  2750     0769  2F6B               	goto	u2030
  2751     076A                     u2031:
  2752     076A  2F86               	goto	l1469
  2753     076B                     u2030:
  2754     076B                     l1467:
  2755     076B  082E               	movf	_pos_x,w
  2756     076C  3E80               	addlw	128
  2757     076D  00A0               	movwf	??_disparar
  2758     076E  3004               	movlw	4
  2759     076F                     u2045:
  2760     076F  1003               	clrc
  2761     0770  0CA0               	rrf	??_disparar,f
  2762     0771  3EFF               	addlw	-1
  2763     0772  1D03               	skipz
  2764     0773  2F6F               	goto	u2045
  2765     0774  0820               	movf	??_disparar,w
  2766     0775  390F               	andlw	15
  2767     0776  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2768     077B  1283               	bcf	3,5	;RP0=0, select bank0
  2769     077C  1303               	bcf	3,6	;RP1=0, select bank0
  2770     077D  082E               	movf	_pos_x,w
  2771     077E  3E80               	addlw	128
  2772     077F  390F               	andlw	15
  2773     0780  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2774     0785  2FE7               	goto	l283
  2775     0786                     l1469:
  2776     0786  032D               	decf	_pos_y,w
  2777     0787  1D03               	btfss	3,2
  2778     0788  2F8A               	goto	u2051
  2779     0789  2F8B               	goto	u2050
  2780     078A                     u2051:
  2781     078A  2FA6               	goto	l1473
  2782     078B                     u2050:
  2783     078B                     l1471:
  2784     078B  082E               	movf	_pos_x,w
  2785     078C  3EC0               	addlw	192
  2786     078D  00A0               	movwf	??_disparar
  2787     078E  3004               	movlw	4
  2788     078F                     u2065:
  2789     078F  1003               	clrc
  2790     0790  0CA0               	rrf	??_disparar,f
  2791     0791  3EFF               	addlw	-1
  2792     0792  1D03               	skipz
  2793     0793  2F8F               	goto	u2065
  2794     0794  0820               	movf	??_disparar,w
  2795     0795  390F               	andlw	15
  2796     0796  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2797     079B  1283               	bcf	3,5	;RP0=0, select bank0
  2798     079C  1303               	bcf	3,6	;RP1=0, select bank0
  2799     079D  082E               	movf	_pos_x,w
  2800     079E  3EC0               	addlw	192
  2801     079F  390F               	andlw	15
  2802     07A0  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2803     07A5  2FE7               	goto	l283
  2804     07A6                     l1473:
  2805     07A6  3002               	movlw	2
  2806     07A7  062D               	xorwf	_pos_y,w
  2807     07A8  1D03               	btfss	3,2
  2808     07A9  2FAB               	goto	u2071
  2809     07AA  2FAC               	goto	u2070
  2810     07AB                     u2071:
  2811     07AB  2FC7               	goto	l1477
  2812     07AC                     u2070:
  2813     07AC                     l1475:
  2814     07AC  082E               	movf	_pos_x,w
  2815     07AD  3E94               	addlw	148
  2816     07AE  00A0               	movwf	??_disparar
  2817     07AF  3004               	movlw	4
  2818     07B0                     u2085:
  2819     07B0  1003               	clrc
  2820     07B1  0CA0               	rrf	??_disparar,f
  2821     07B2  3EFF               	addlw	-1
  2822     07B3  1D03               	skipz
  2823     07B4  2FB0               	goto	u2085
  2824     07B5  0820               	movf	??_disparar,w
  2825     07B6  390F               	andlw	15
  2826     07B7  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2827     07BC  1283               	bcf	3,5	;RP0=0, select bank0
  2828     07BD  1303               	bcf	3,6	;RP1=0, select bank0
  2829     07BE  082E               	movf	_pos_x,w
  2830     07BF  3E94               	addlw	148
  2831     07C0  390F               	andlw	15
  2832     07C1  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2833     07C6  2FE7               	goto	l283
  2834     07C7                     l1477:
  2835     07C7  3003               	movlw	3
  2836     07C8  062D               	xorwf	_pos_y,w
  2837     07C9  1D03               	btfss	3,2
  2838     07CA  2FCC               	goto	u2091
  2839     07CB  2FCD               	goto	u2090
  2840     07CC                     u2091:
  2841     07CC  2FE7               	goto	l283
  2842     07CD                     u2090:
  2843     07CD                     l1479:
  2844     07CD  082E               	movf	_pos_x,w
  2845     07CE  3ED4               	addlw	212
  2846     07CF  00A0               	movwf	??_disparar
  2847     07D0  3004               	movlw	4
  2848     07D1                     u2105:
  2849     07D1  1003               	clrc
  2850     07D2  0CA0               	rrf	??_disparar,f
  2851     07D3  3EFF               	addlw	-1
  2852     07D4  1D03               	skipz
  2853     07D5  2FD1               	goto	u2105
  2854     07D6  0820               	movf	??_disparar,w
  2855     07D7  390F               	andlw	15
  2856     07D8  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2857     07DD  1283               	bcf	3,5	;RP0=0, select bank0
  2858     07DE  1303               	bcf	3,6	;RP1=0, select bank0
  2859     07DF  082E               	movf	_pos_x,w
  2860     07E0  3ED4               	addlw	212
  2861     07E1  390F               	andlw	15
  2862     07E2  120A  158A  25A2  120A  118A  	fcall	_LCD_Write
  2863     07E7                     l283:
  2864     07E7  307C               	movlw	124
  2865     07E8  120A  158A  25F7  120A  118A  	fcall	_LCD_putc
  2866     07ED                     l284:
  2867     07ED  0008               	return
  2868     07EE                     __end_of_disparar:
  2869                           
  2870                           	psect	text6
  2871     0D54                     __ptext6:	
  2872 ;; *************** function _LCD_putrs *****************
  2873 ;; Defined at:
  2874 ;;		line 135 in file "lcd.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  a               1    6[COMMON] PTR const unsigned char 
  2877 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  i               2    7[COMMON] int 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2889 ;;      Params:         1       0       0       0       0
  2890 ;;      Locals:         2       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0
  2892 ;;      Totals:         3       0       0       0       0
  2893 ;;Total ram usage:        3 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; Hardware stack levels required when called: 2
  2896 ;; This function calls:
  2897 ;;		_LCD_putc
  2898 ;; This function is called by:
  2899 ;;		_pot_x
  2900 ;;		_pot_y
  2901 ;;		_disparar
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905     0D54                     _LCD_putrs:	
  2906                           ;psect for function _LCD_putrs
  2907                           
  2908     0D54                     l1335:	
  2909                           ;incstack = 0
  2910                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2911                           
  2912                           
  2913                           ;lcd.c: 137:     for ( int i = 0; a[i] != '\0'; ++i ) {
  2914     0D54  01F7               	clrf	LCD_putrs@i
  2915     0D55  01F8               	clrf	LCD_putrs@i+1
  2916     0D56  2D6A               	goto	l1341
  2917     0D57                     l1337:
  2918                           
  2919                           ;lcd.c: 138:         LCD_putc(a[i]);
  2920     0D57  0877               	movf	LCD_putrs@i,w
  2921     0D58  0776               	addwf	LCD_putrs@a,w
  2922     0D59  0084               	movwf	4
  2923     0D5A  120A  158A  2000  120A  158A  	fcall	stringdir
  2924     0D5F  120A  158A  25F7  120A  158A  	fcall	_LCD_putc
  2925     0D64                     l1339:
  2926                           
  2927                           ;lcd.c: 139:     }
  2928     0D64  3001               	movlw	1
  2929     0D65  07F7               	addwf	LCD_putrs@i,f
  2930     0D66  1803               	skipnc
  2931     0D67  0AF8               	incf	LCD_putrs@i+1,f
  2932     0D68  3000               	movlw	0
  2933     0D69  07F8               	addwf	LCD_putrs@i+1,f
  2934     0D6A                     l1341:
  2935     0D6A  0877               	movf	LCD_putrs@i,w
  2936     0D6B  0776               	addwf	LCD_putrs@a,w
  2937     0D6C  0084               	movwf	4
  2938     0D6D  120A  158A  2000  120A  158A  	fcall	stringdir
  2939     0D72  3A00               	xorlw	0
  2940     0D73  1D03               	skipz
  2941     0D74  2D76               	goto	u1541
  2942     0D75  2D77               	goto	u1540
  2943     0D76                     u1541:
  2944     0D76  2D57               	goto	l1337
  2945     0D77                     u1540:
  2946     0D77                     l351:
  2947     0D77  0008               	return
  2948     0D78                     __end_of_LCD_putrs:
  2949                           
  2950                           	psect	text7
  2951     0DF7                     __ptext7:	
  2952 ;; *************** function _LCD_putc *****************
  2953 ;; Defined at:
  2954 ;;		line 110 in file "lcd.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  c               1    wreg     unsigned char 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  c               1    5[COMMON] unsigned char 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2968 ;;      Params:         0       0       0       0       0
  2969 ;;      Locals:         1       0       0       0       0
  2970 ;;      Temps:          2       0       0       0       0
  2971 ;;      Totals:         3       0       0       0       0
  2972 ;;Total ram usage:        3 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 1
  2975 ;; This function calls:
  2976 ;;		_LCD_Out
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;;		_pot_x
  2980 ;;		_pot_y
  2981 ;;		_disparar
  2982 ;;		_LCD_putrs
  2983 ;;		_LCD_puts
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987     0DF7                     _LCD_putc:	
  2988                           ;psect for function _LCD_putc
  2989                           
  2990                           
  2991                           ;incstack = 0
  2992                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2993                           ;LCD_putc@c stored from wreg
  2994     0DF7  00F5               	movwf	LCD_putc@c
  2995     0DF8                     l1309:
  2996                           
  2997                           ;lcd.c: 112:    *(lcd.PORT) |= 1 << lcd.RS;
  2998     0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  2999     0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  3000     0DFA  0828               	movf	_lcd,w
  3001     0DFB  0084               	movwf	4
  3002     0DFC  1783               	bsf	3,7
  3003     0DFD  1C29               	btfss	_lcd+1,0
  3004     0DFE  1383               	bcf	3,7
  3005     0DFF  3001               	movlw	1
  3006     0E00  00F3               	movwf	??_LCD_putc
  3007     0E01  082A               	movf	_lcd+2,w
  3008     0E02  3907               	andlw	7
  3009     0E03  3E01               	addlw	1
  3010     0E04  2E07               	goto	u1454
  3011     0E05                     u1455:
  3012     0E05  1003               	clrc
  3013     0E06  0DF3               	rlf	??_LCD_putc,f
  3014     0E07                     u1454:
  3015     0E07  3EFF               	addlw	-1
  3016     0E08  1D03               	skipz
  3017     0E09  2E05               	goto	u1455
  3018     0E0A  0873               	movf	??_LCD_putc,w
  3019     0E0B  0480               	iorwf	0,f
  3020     0E0C                     l1311:
  3021                           
  3022                           ;lcd.c: 113:     LCD_Out((c & 0xF0) >> 4);
  3023     0E0C  0875               	movf	LCD_putc@c,w
  3024     0E0D  00F3               	movwf	??_LCD_putc
  3025     0E0E  3004               	movlw	4
  3026     0E0F                     u1465:
  3027     0E0F  1003               	clrc
  3028     0E10  0CF3               	rrf	??_LCD_putc,f
  3029     0E11  3EFF               	addlw	-1
  3030     0E12  1D03               	skipz
  3031     0E13  2E0F               	goto	u1465
  3032     0E14  0873               	movf	??_LCD_putc,w
  3033     0E15  390F               	andlw	15
  3034     0E16  120A  118A  2013  120A  158A  	fcall	_LCD_Out
  3035     0E1B                     l1313:
  3036                           
  3037                           ;lcd.c: 115:     *(lcd.PORT) |= 1 << lcd.EN;
  3038     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3039     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3040     0E1D  0828               	movf	_lcd,w
  3041     0E1E  0084               	movwf	4
  3042     0E1F  1783               	bsf	3,7
  3043     0E20  1C29               	btfss	_lcd+1,0
  3044     0E21  1383               	bcf	3,7
  3045     0E22  3001               	movlw	1
  3046     0E23  00F3               	movwf	??_LCD_putc
  3047     0E24  0C2A               	rrf	_lcd+2,w
  3048     0E25  00F4               	movwf	??_LCD_putc+1
  3049     0E26  0CF4               	rrf	??_LCD_putc+1,f
  3050     0E27  0C74               	rrf	??_LCD_putc+1,w
  3051     0E28  3907               	andlw	7
  3052     0E29  3E01               	addlw	1
  3053     0E2A  2E2D               	goto	u1474
  3054     0E2B                     u1475:
  3055     0E2B  1003               	clrc
  3056     0E2C  0DF3               	rlf	??_LCD_putc,f
  3057     0E2D                     u1474:
  3058     0E2D  3EFF               	addlw	-1
  3059     0E2E  1D03               	skipz
  3060     0E2F  2E2B               	goto	u1475
  3061     0E30  0873               	movf	??_LCD_putc,w
  3062     0E31  0480               	iorwf	0,f
  3063     0E32                     l1315:
  3064                           
  3065                           ;lcd.c: 116:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3066     0E32  300D               	movlw	13
  3067     0E33  00F3               	movwf	??_LCD_putc
  3068     0E34                     u2697:
  3069     0E34  0BF3               	decfsz	??_LCD_putc,f
  3070     0E35  2E34               	goto	u2697
  3071     0E36                     l1317:
  3072                           
  3073                           ;lcd.c: 117:     *(lcd.PORT) &= ~(1 << lcd.EN);
  3074     0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3075     0E37  1303               	bcf	3,6	;RP1=0, select bank0
  3076     0E38  0828               	movf	_lcd,w
  3077     0E39  0084               	movwf	4
  3078     0E3A  1783               	bsf	3,7
  3079     0E3B  1C29               	btfss	_lcd+1,0
  3080     0E3C  1383               	bcf	3,7
  3081     0E3D  3001               	movlw	1
  3082     0E3E  00F3               	movwf	??_LCD_putc
  3083     0E3F  0C2A               	rrf	_lcd+2,w
  3084     0E40  00F4               	movwf	??_LCD_putc+1
  3085     0E41  0CF4               	rrf	??_LCD_putc+1,f
  3086     0E42  0C74               	rrf	??_LCD_putc+1,w
  3087     0E43  3907               	andlw	7
  3088     0E44  3E01               	addlw	1
  3089     0E45  2E48               	goto	u1484
  3090     0E46                     u1485:
  3091     0E46  1003               	clrc
  3092     0E47  0DF3               	rlf	??_LCD_putc,f
  3093     0E48                     u1484:
  3094     0E48  3EFF               	addlw	-1
  3095     0E49  1D03               	skipz
  3096     0E4A  2E46               	goto	u1485
  3097     0E4B  0873               	movf	??_LCD_putc,w
  3098     0E4C  3AFF               	xorlw	255
  3099     0E4D  0580               	andwf	0,f
  3100     0E4E                     l1319:
  3101                           
  3102                           ;lcd.c: 119:     LCD_Out(c & 0x0F);
  3103     0E4E  0875               	movf	LCD_putc@c,w
  3104     0E4F  390F               	andlw	15
  3105     0E50  120A  118A  2013  120A  158A  	fcall	_LCD_Out
  3106     0E55                     l1321:
  3107                           
  3108                           ;lcd.c: 121:     *(lcd.PORT) |= 1 << lcd.EN;
  3109     0E55  1283               	bcf	3,5	;RP0=0, select bank0
  3110     0E56  1303               	bcf	3,6	;RP1=0, select bank0
  3111     0E57  0828               	movf	_lcd,w
  3112     0E58  0084               	movwf	4
  3113     0E59  1783               	bsf	3,7
  3114     0E5A  1C29               	btfss	_lcd+1,0
  3115     0E5B  1383               	bcf	3,7
  3116     0E5C  3001               	movlw	1
  3117     0E5D  00F3               	movwf	??_LCD_putc
  3118     0E5E  0C2A               	rrf	_lcd+2,w
  3119     0E5F  00F4               	movwf	??_LCD_putc+1
  3120     0E60  0CF4               	rrf	??_LCD_putc+1,f
  3121     0E61  0C74               	rrf	??_LCD_putc+1,w
  3122     0E62  3907               	andlw	7
  3123     0E63  3E01               	addlw	1
  3124     0E64  2E67               	goto	u1494
  3125     0E65                     u1495:
  3126     0E65  1003               	clrc
  3127     0E66  0DF3               	rlf	??_LCD_putc,f
  3128     0E67                     u1494:
  3129     0E67  3EFF               	addlw	-1
  3130     0E68  1D03               	skipz
  3131     0E69  2E65               	goto	u1495
  3132     0E6A  0873               	movf	??_LCD_putc,w
  3133     0E6B  0480               	iorwf	0,f
  3134                           
  3135                           ;lcd.c: 122:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3136     0E6C  300D               	movlw	13
  3137     0E6D  00F3               	movwf	??_LCD_putc
  3138     0E6E                     u2707:
  3139     0E6E  0BF3               	decfsz	??_LCD_putc,f
  3140     0E6F  2E6E               	goto	u2707
  3141     0E70                     l1323:
  3142                           
  3143                           ;lcd.c: 123:     *(lcd.PORT) &= ~(1 << lcd.EN);
  3144     0E70  1283               	bcf	3,5	;RP0=0, select bank0
  3145     0E71  1303               	bcf	3,6	;RP1=0, select bank0
  3146     0E72  0828               	movf	_lcd,w
  3147     0E73  0084               	movwf	4
  3148     0E74  1783               	bsf	3,7
  3149     0E75  1C29               	btfss	_lcd+1,0
  3150     0E76  1383               	bcf	3,7
  3151     0E77  3001               	movlw	1
  3152     0E78  00F3               	movwf	??_LCD_putc
  3153     0E79  0C2A               	rrf	_lcd+2,w
  3154     0E7A  00F4               	movwf	??_LCD_putc+1
  3155     0E7B  0CF4               	rrf	??_LCD_putc+1,f
  3156     0E7C  0C74               	rrf	??_LCD_putc+1,w
  3157     0E7D  3907               	andlw	7
  3158     0E7E  3E01               	addlw	1
  3159     0E7F  2E82               	goto	u1504
  3160     0E80                     u1505:
  3161     0E80  1003               	clrc
  3162     0E81  0DF3               	rlf	??_LCD_putc,f
  3163     0E82                     u1504:
  3164     0E82  3EFF               	addlw	-1
  3165     0E83  1D03               	skipz
  3166     0E84  2E80               	goto	u1505
  3167     0E85  0873               	movf	??_LCD_putc,w
  3168     0E86  3AFF               	xorlw	255
  3169     0E87  0580               	andwf	0,f
  3170     0E88                     l339:
  3171     0E88  0008               	return
  3172     0E89                     __end_of_LCD_putc:
  3173                           
  3174                           	psect	text8
  3175     0E89                     __ptext8:	
  3176 ;; *************** function _LCD_Init *****************
  3177 ;; Defined at:
  3178 ;;		line 52 in file "lcd.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  display         5    6[COMMON] struct .
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  cmd             1   13[COMMON] unsigned char 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      _Bool 
  3185 ;; Registers used:
  3186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3192 ;;      Params:         5       0       0       0       0
  3193 ;;      Locals:         1       0       0       0       0
  3194 ;;      Temps:          2       0       0       0       0
  3195 ;;      Totals:         8       0       0       0       0
  3196 ;;Total ram usage:        8 bytes
  3197 ;; Hardware stack levels used: 1
  3198 ;; Hardware stack levels required when called: 2
  3199 ;; This function calls:
  3200 ;;		_LCD_Write
  3201 ;; This function is called by:
  3202 ;;		_main
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206     0E89                     _LCD_Init:	
  3207                           ;psect for function _LCD_Init
  3208                           
  3209     0E89                     l1489:	
  3210                           ;incstack = 0
  3211                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3212                           
  3213                           
  3214                           ;lcd.c: 54:     lcd = display;
  3215     0E89  3028               	movlw	_lcd& (0+255)
  3216     0E8A  0084               	movwf	4
  3217     0E8B  0876               	movf	LCD_Init@display,w
  3218     0E8C  1383               	bcf	3,7	;select IRP bank0
  3219     0E8D  0080               	movwf	0
  3220     0E8E  0A84               	incf	4,f
  3221     0E8F  0877               	movf	LCD_Init@display+1,w
  3222     0E90  0080               	movwf	0
  3223     0E91  0A84               	incf	4,f
  3224     0E92  0878               	movf	LCD_Init@display+2,w
  3225     0E93  0080               	movwf	0
  3226     0E94  0A84               	incf	4,f
  3227     0E95  0879               	movf	LCD_Init@display+3,w
  3228     0E96  0080               	movwf	0
  3229     0E97  0A84               	incf	4,f
  3230     0E98  087A               	movf	LCD_Init@display+4,w
  3231     0E99  0080               	movwf	0
  3232     0E9A                     l1491:
  3233                           
  3234                           ;lcd.c: 63:     if ( lcd.PORT == &PORTA ) {
  3235     0E9A  3000               	movlw	0
  3236     0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  3237     0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  3238     0E9D  0629               	xorwf	_lcd+1,w
  3239     0E9E  1D03               	skipz
  3240     0E9F  2EA2               	goto	u2115
  3241     0EA0  3005               	movlw	5
  3242     0EA1  0628               	xorwf	_lcd,w
  3243     0EA2                     u2115:
  3244     0EA2  1D03               	skipz
  3245     0EA3  2EA5               	goto	u2111
  3246     0EA4  2EA6               	goto	u2110
  3247     0EA5                     u2111:
  3248     0EA5  2EAA               	goto	l1495
  3249     0EA6                     u2110:
  3250     0EA6                     l1493:
  3251                           
  3252                           ;lcd.c: 64:         TRISA = 0x00;
  3253     0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  3254     0EA7  1303               	bcf	3,6	;RP1=0, select bank1
  3255     0EA8  0185               	clrf	5	;volatile
  3256                           
  3257                           ;lcd.c: 65:     }
  3258     0EA9  2EC5               	goto	l1503
  3259     0EAA                     l1495:
  3260     0EAA  3000               	movlw	0
  3261     0EAB  0629               	xorwf	_lcd+1,w
  3262     0EAC  1D03               	skipz
  3263     0EAD  2EB0               	goto	u2125
  3264     0EAE  3006               	movlw	6
  3265     0EAF  0628               	xorwf	_lcd,w
  3266     0EB0                     u2125:
  3267     0EB0  1D03               	skipz
  3268     0EB1  2EB3               	goto	u2121
  3269     0EB2  2EB4               	goto	u2120
  3270     0EB3                     u2121:
  3271     0EB3  2EB8               	goto	l1499
  3272     0EB4                     u2120:
  3273     0EB4                     l1497:
  3274                           
  3275                           ;lcd.c: 67:         TRISB = 0x00;
  3276     0EB4  1683               	bsf	3,5	;RP0=1, select bank1
  3277     0EB5  1303               	bcf	3,6	;RP1=0, select bank1
  3278     0EB6  0186               	clrf	6	;volatile
  3279                           
  3280                           ;lcd.c: 68:     }
  3281     0EB7  2EC5               	goto	l1503
  3282     0EB8                     l1499:
  3283     0EB8  3000               	movlw	0
  3284     0EB9  0629               	xorwf	_lcd+1,w
  3285     0EBA  1D03               	skipz
  3286     0EBB  2EBE               	goto	u2135
  3287     0EBC  3007               	movlw	7
  3288     0EBD  0628               	xorwf	_lcd,w
  3289     0EBE                     u2135:
  3290     0EBE  1D03               	skipz
  3291     0EBF  2EC1               	goto	u2131
  3292     0EC0  2EC2               	goto	u2130
  3293     0EC1                     u2131:
  3294     0EC1  2F34               	goto	l323
  3295     0EC2                     u2130:
  3296     0EC2                     l1501:
  3297                           
  3298                           ;lcd.c: 70:         TRISC = 0x00;
  3299     0EC2  1683               	bsf	3,5	;RP0=1, select bank1
  3300     0EC3  1303               	bcf	3,6	;RP1=0, select bank1
  3301     0EC4  0187               	clrf	7	;volatile
  3302     0EC5                     l1503:	
  3303                           ;lcd.c: 71:     }
  3304                           
  3305                           
  3306                           ;lcd.c: 85:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3307     0EC5  301A               	movlw	26
  3308     0EC6  00FC               	movwf	??_LCD_Init+1
  3309     0EC7  30F8               	movlw	248
  3310     0EC8  00FB               	movwf	??_LCD_Init
  3311     0EC9                     u2717:
  3312     0EC9  0BFB               	decfsz	??_LCD_Init,f
  3313     0ECA  2EC9               	goto	u2717
  3314     0ECB  0BFC               	decfsz	??_LCD_Init+1,f
  3315     0ECC  2EC9               	goto	u2717
  3316     0ECD  0000               	nop
  3317     0ECE                     l1505:
  3318                           
  3319                           ;lcd.c: 88:     LCD_Write(0x03);
  3320     0ECE  3003               	movlw	3
  3321     0ECF  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
  3322     0ED4                     l1507:
  3323                           
  3324                           ;lcd.c: 89:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3325     0ED4  3007               	movlw	7
  3326     0ED5  00FC               	movwf	??_LCD_Init+1
  3327     0ED6  307D               	movlw	125
  3328     0ED7  00FB               	movwf	??_LCD_Init
  3329     0ED8                     u2727:
  3330     0ED8  0BFB               	decfsz	??_LCD_Init,f
  3331     0ED9  2ED8               	goto	u2727
  3332     0EDA  0BFC               	decfsz	??_LCD_Init+1,f
  3333     0EDB  2ED8               	goto	u2727
  3334                           
  3335                           ;lcd.c: 90:     LCD_Write(0x03);
  3336     0EDC  3003               	movlw	3
  3337     0EDD  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
  3338     0EE2                     l1509:
  3339                           
  3340                           ;lcd.c: 91:     _delay((unsigned long)((16)*(4000000/4000.0)));
  3341     0EE2  3015               	movlw	21
  3342     0EE3  00FC               	movwf	??_LCD_Init+1
  3343     0EE4  30C6               	movlw	198
  3344     0EE5  00FB               	movwf	??_LCD_Init
  3345     0EE6                     u2737:
  3346     0EE6  0BFB               	decfsz	??_LCD_Init,f
  3347     0EE7  2EE6               	goto	u2737
  3348     0EE8  0BFC               	decfsz	??_LCD_Init+1,f
  3349     0EE9  2EE6               	goto	u2737
  3350     0EEA  0000               	nop
  3351     0EEB                     l1511:
  3352                           
  3353                           ;lcd.c: 92:     LCD_Write(0x03);
  3354     0EEB  3003               	movlw	3
  3355     0EEC  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
  3356     0EF1                     l1513:
  3357                           
  3358                           ;lcd.c: 95:     LCD_Write(0x02);
  3359     0EF1  3002               	movlw	2
  3360     0EF2  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
  3361     0EF7                     l1515:
  3362     0EF7  3002               	movlw	2
  3363     0EF8  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
  3364     0EFD                     l1517:
  3365     0EFD  3008               	movlw	8
  3366     0EFE  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
  3367     0F03                     l1519:
  3368     0F03  3000               	movlw	0
  3369     0F04  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
  3370     0F09                     l1521:
  3371     0F09  3006               	movlw	6
  3372     0F0A  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
  3373     0F0F                     l1523:
  3374     0F0F  3008               	movlw	8
  3375     0F10  00FD               	movwf	LCD_Init@cmd
  3376     0F11                     l1525:
  3377     0F11  157D               	bsf	LCD_Init@cmd,2
  3378     0F12                     l1531:
  3379     0F12  087D               	movf	LCD_Init@cmd,w
  3380     0F13  00FB               	movwf	??_LCD_Init
  3381     0F14  3004               	movlw	4
  3382     0F15                     u2145:
  3383     0F15  1003               	clrc
  3384     0F16  0CFB               	rrf	??_LCD_Init,f
  3385     0F17  3EFF               	addlw	-1
  3386     0F18  1D03               	skipz
  3387     0F19  2F15               	goto	u2145
  3388     0F1A  087B               	movf	??_LCD_Init,w
  3389     0F1B  390F               	andlw	15
  3390     0F1C  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
  3391     0F21  087D               	movf	LCD_Init@cmd,w
  3392     0F22  390F               	andlw	15
  3393     0F23  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
  3394     0F28                     l335:	
  3395                           ;lcd.c: 105:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while 
      +                          ( 0 );
  3396                           
  3397     0F28  3000               	movlw	0
  3398     0F29  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
  3399     0F2E  3001               	movlw	1
  3400     0F2F  120A  158A  25A2  120A  158A  	fcall	_LCD_Write
  3401     0F34                     l323:
  3402     0F34  0008               	return
  3403     0F35                     __end_of_LCD_Init:
  3404                           
  3405                           	psect	text9
  3406     0DA2                     __ptext9:	
  3407 ;; *************** function _LCD_Write *****************
  3408 ;; Defined at:
  3409 ;;		line 41 in file "lcd.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  c               1    wreg     unsigned char 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  c               1    5[COMMON] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3423 ;;      Params:         0       0       0       0       0
  3424 ;;      Locals:         1       0       0       0       0
  3425 ;;      Temps:          2       0       0       0       0
  3426 ;;      Totals:         3       0       0       0       0
  3427 ;;Total ram usage:        3 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 1
  3430 ;; This function calls:
  3431 ;;		_LCD_Out
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;;		_pot_x
  3435 ;;		_pot_y
  3436 ;;		_disparar
  3437 ;;		_LCD_Init
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441     0DA2                     _LCD_Write:	
  3442                           ;psect for function _LCD_Write
  3443                           
  3444                           
  3445                           ;incstack = 0
  3446                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3447                           ;LCD_Write@c stored from wreg
  3448     0DA2  00F5               	movwf	LCD_Write@c
  3449     0DA3                     l1325:
  3450                           
  3451                           ;lcd.c: 43:     *(lcd.PORT) &= ~(1 << lcd.RS);
  3452     0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  3453     0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  3454     0DA5  0828               	movf	_lcd,w
  3455     0DA6  0084               	movwf	4
  3456     0DA7  1783               	bsf	3,7
  3457     0DA8  1C29               	btfss	_lcd+1,0
  3458     0DA9  1383               	bcf	3,7
  3459     0DAA  3001               	movlw	1
  3460     0DAB  00F3               	movwf	??_LCD_Write
  3461     0DAC  082A               	movf	_lcd+2,w
  3462     0DAD  3907               	andlw	7
  3463     0DAE  3E01               	addlw	1
  3464     0DAF  2DB2               	goto	u1514
  3465     0DB0                     u1515:
  3466     0DB0  1003               	clrc
  3467     0DB1  0DF3               	rlf	??_LCD_Write,f
  3468     0DB2                     u1514:
  3469     0DB2  3EFF               	addlw	-1
  3470     0DB3  1D03               	skipz
  3471     0DB4  2DB0               	goto	u1515
  3472     0DB5  0873               	movf	??_LCD_Write,w
  3473     0DB6  3AFF               	xorlw	255
  3474     0DB7  0580               	andwf	0,f
  3475     0DB8                     l1327:
  3476                           
  3477                           ;lcd.c: 44:     LCD_Out(c);
  3478     0DB8  0875               	movf	LCD_Write@c,w
  3479     0DB9  120A  118A  2013  120A  158A  	fcall	_LCD_Out
  3480     0DBE                     l1329:
  3481                           
  3482                           ;lcd.c: 46:     *(lcd.PORT) |= 1 << lcd.EN;
  3483     0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  3484     0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  3485     0DC0  0828               	movf	_lcd,w
  3486     0DC1  0084               	movwf	4
  3487     0DC2  1783               	bsf	3,7
  3488     0DC3  1C29               	btfss	_lcd+1,0
  3489     0DC4  1383               	bcf	3,7
  3490     0DC5  3001               	movlw	1
  3491     0DC6  00F3               	movwf	??_LCD_Write
  3492     0DC7  0C2A               	rrf	_lcd+2,w
  3493     0DC8  00F4               	movwf	??_LCD_Write+1
  3494     0DC9  0CF4               	rrf	??_LCD_Write+1,f
  3495     0DCA  0C74               	rrf	??_LCD_Write+1,w
  3496     0DCB  3907               	andlw	7
  3497     0DCC  3E01               	addlw	1
  3498     0DCD  2DD0               	goto	u1524
  3499     0DCE                     u1525:
  3500     0DCE  1003               	clrc
  3501     0DCF  0DF3               	rlf	??_LCD_Write,f
  3502     0DD0                     u1524:
  3503     0DD0  3EFF               	addlw	-1
  3504     0DD1  1D03               	skipz
  3505     0DD2  2DCE               	goto	u1525
  3506     0DD3  0873               	movf	??_LCD_Write,w
  3507     0DD4  0480               	iorwf	0,f
  3508     0DD5                     l1331:
  3509                           
  3510                           ;lcd.c: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3511     0DD5  3006               	movlw	6
  3512     0DD6  00F4               	movwf	??_LCD_Write+1
  3513     0DD7  3030               	movlw	48
  3514     0DD8  00F3               	movwf	??_LCD_Write
  3515     0DD9                     u2747:
  3516     0DD9  0BF3               	decfsz	??_LCD_Write,f
  3517     0DDA  2DD9               	goto	u2747
  3518     0DDB  0BF4               	decfsz	??_LCD_Write+1,f
  3519     0DDC  2DD9               	goto	u2747
  3520     0DDD  0000               	nop
  3521     0DDE                     l1333:
  3522                           
  3523                           ;lcd.c: 48:     *(lcd.PORT) &= ~(1 << lcd.EN);
  3524     0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  3525     0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  3526     0DE0  0828               	movf	_lcd,w
  3527     0DE1  0084               	movwf	4
  3528     0DE2  1783               	bsf	3,7
  3529     0DE3  1C29               	btfss	_lcd+1,0
  3530     0DE4  1383               	bcf	3,7
  3531     0DE5  3001               	movlw	1
  3532     0DE6  00F3               	movwf	??_LCD_Write
  3533     0DE7  0C2A               	rrf	_lcd+2,w
  3534     0DE8  00F4               	movwf	??_LCD_Write+1
  3535     0DE9  0CF4               	rrf	??_LCD_Write+1,f
  3536     0DEA  0C74               	rrf	??_LCD_Write+1,w
  3537     0DEB  3907               	andlw	7
  3538     0DEC  3E01               	addlw	1
  3539     0DED  2DF0               	goto	u1534
  3540     0DEE                     u1535:
  3541     0DEE  1003               	clrc
  3542     0DEF  0DF3               	rlf	??_LCD_Write,f
  3543     0DF0                     u1534:
  3544     0DF0  3EFF               	addlw	-1
  3545     0DF1  1D03               	skipz
  3546     0DF2  2DEE               	goto	u1535
  3547     0DF3  0873               	movf	??_LCD_Write,w
  3548     0DF4  3AFF               	xorlw	255
  3549     0DF5  0580               	andwf	0,f
  3550     0DF6                     l314:
  3551     0DF6  0008               	return
  3552     0DF7                     __end_of_LCD_Write:
  3553                           
  3554                           	psect	text10
  3555     0013                     __ptext10:	
  3556 ;; *************** function _LCD_Out *****************
  3557 ;; Defined at:
  3558 ;;		line 9 in file "lcd.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  c               1    wreg     unsigned char 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  c               1    2[COMMON] unsigned char 
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3572 ;;      Params:         0       0       0       0       0
  3573 ;;      Locals:         1       0       0       0       0
  3574 ;;      Temps:          2       0       0       0       0
  3575 ;;      Totals:         3       0       0       0       0
  3576 ;;Total ram usage:        3 bytes
  3577 ;; Hardware stack levels used: 1
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_LCD_Write
  3582 ;;		_LCD_putc
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586     0013                     _LCD_Out:	
  3587                           ;psect for function _LCD_Out
  3588                           
  3589                           
  3590                           ;incstack = 0
  3591                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  3592                           ;LCD_Out@c stored from wreg
  3593     0013  00F2               	movwf	LCD_Out@c
  3594     0014                     l1285:
  3595                           
  3596                           ;lcd.c: 11:     if ( c & 1 ){
  3597     0014  1C72               	btfss	LCD_Out@c,0
  3598     0015  2817               	goto	u1331
  3599     0016  2818               	goto	u1330
  3600     0017                     u1331:
  3601     0017  282D               	goto	l1289
  3602     0018                     u1330:
  3603     0018                     l1287:
  3604                           
  3605                           ;lcd.c: 12:         *(lcd.PORT) |= 1 << lcd.D4;
  3606     0018  1283               	bcf	3,5	;RP0=0, select bank0
  3607     0019  1303               	bcf	3,6	;RP1=0, select bank0
  3608     001A  0828               	movf	_lcd,w
  3609     001B  0084               	movwf	4
  3610     001C  1783               	bsf	3,7
  3611     001D  1C29               	btfss	_lcd+1,0
  3612     001E  1383               	bcf	3,7
  3613     001F  3001               	movlw	1
  3614     0020  00F0               	movwf	??_LCD_Out
  3615     0021  082B               	movf	_lcd+3,w
  3616     0022  3907               	andlw	7
  3617     0023  3E01               	addlw	1
  3618     0024  2827               	goto	u1344
  3619     0025                     u1345:
  3620     0025  1003               	clrc
  3621     0026  0DF0               	rlf	??_LCD_Out,f
  3622     0027                     u1344:
  3623     0027  3EFF               	addlw	-1
  3624     0028  1D03               	skipz
  3625     0029  2825               	goto	u1345
  3626     002A  0870               	movf	??_LCD_Out,w
  3627     002B  0480               	iorwf	0,f
  3628                           
  3629                           ;lcd.c: 13:     }
  3630     002C  2842               	goto	l1291
  3631     002D                     l1289:
  3632                           
  3633                           ;lcd.c: 15:          *(lcd.PORT) &= ~(1 << lcd.D4);
  3634     002D  1283               	bcf	3,5	;RP0=0, select bank0
  3635     002E  1303               	bcf	3,6	;RP1=0, select bank0
  3636     002F  0828               	movf	_lcd,w
  3637     0030  0084               	movwf	4
  3638     0031  1783               	bsf	3,7
  3639     0032  1C29               	btfss	_lcd+1,0
  3640     0033  1383               	bcf	3,7
  3641     0034  3001               	movlw	1
  3642     0035  00F0               	movwf	??_LCD_Out
  3643     0036  082B               	movf	_lcd+3,w
  3644     0037  3907               	andlw	7
  3645     0038  3E01               	addlw	1
  3646     0039  283C               	goto	u1354
  3647     003A                     u1355:
  3648     003A  1003               	clrc
  3649     003B  0DF0               	rlf	??_LCD_Out,f
  3650     003C                     u1354:
  3651     003C  3EFF               	addlw	-1
  3652     003D  1D03               	skipz
  3653     003E  283A               	goto	u1355
  3654     003F  0870               	movf	??_LCD_Out,w
  3655     0040  3AFF               	xorlw	255
  3656     0041  0580               	andwf	0,f
  3657     0042                     l1291:
  3658                           
  3659                           ;lcd.c: 18:     if ( c & 2 ) {
  3660     0042  1CF2               	btfss	LCD_Out@c,1
  3661     0043  2845               	goto	u1361
  3662     0044  2846               	goto	u1360
  3663     0045                     u1361:
  3664     0045  285C               	goto	l1295
  3665     0046                     u1360:
  3666     0046                     l1293:
  3667                           
  3668                           ;lcd.c: 19:         *(lcd.PORT) |= 1 << lcd.D5;
  3669     0046  0828               	movf	_lcd,w
  3670     0047  0084               	movwf	4
  3671     0048  1783               	bsf	3,7
  3672     0049  1C29               	btfss	_lcd+1,0
  3673     004A  1383               	bcf	3,7
  3674     004B  3001               	movlw	1
  3675     004C  00F0               	movwf	??_LCD_Out
  3676     004D  0C2B               	rrf	_lcd+3,w
  3677     004E  00F1               	movwf	??_LCD_Out+1
  3678     004F  0CF1               	rrf	??_LCD_Out+1,f
  3679     0050  0C71               	rrf	??_LCD_Out+1,w
  3680     0051  3907               	andlw	7
  3681     0052  3E01               	addlw	1
  3682     0053  2856               	goto	u1374
  3683     0054                     u1375:
  3684     0054  1003               	clrc
  3685     0055  0DF0               	rlf	??_LCD_Out,f
  3686     0056                     u1374:
  3687     0056  3EFF               	addlw	-1
  3688     0057  1D03               	skipz
  3689     0058  2854               	goto	u1375
  3690     0059  0870               	movf	??_LCD_Out,w
  3691     005A  0480               	iorwf	0,f
  3692                           
  3693                           ;lcd.c: 20:     }
  3694     005B  2872               	goto	l1297
  3695     005C                     l1295:
  3696                           
  3697                           ;lcd.c: 22:         *(lcd.PORT) &= ~(1 << lcd.D5);
  3698     005C  0828               	movf	_lcd,w
  3699     005D  0084               	movwf	4
  3700     005E  1783               	bsf	3,7
  3701     005F  1C29               	btfss	_lcd+1,0
  3702     0060  1383               	bcf	3,7
  3703     0061  3001               	movlw	1
  3704     0062  00F0               	movwf	??_LCD_Out
  3705     0063  0C2B               	rrf	_lcd+3,w
  3706     0064  00F1               	movwf	??_LCD_Out+1
  3707     0065  0CF1               	rrf	??_LCD_Out+1,f
  3708     0066  0C71               	rrf	??_LCD_Out+1,w
  3709     0067  3907               	andlw	7
  3710     0068  3E01               	addlw	1
  3711     0069  286C               	goto	u1384
  3712     006A                     u1385:
  3713     006A  1003               	clrc
  3714     006B  0DF0               	rlf	??_LCD_Out,f
  3715     006C                     u1384:
  3716     006C  3EFF               	addlw	-1
  3717     006D  1D03               	skipz
  3718     006E  286A               	goto	u1385
  3719     006F  0870               	movf	??_LCD_Out,w
  3720     0070  3AFF               	xorlw	255
  3721     0071  0580               	andwf	0,f
  3722     0072                     l1297:
  3723                           
  3724                           ;lcd.c: 25:     if ( c & 4 ) {
  3725     0072  1D72               	btfss	LCD_Out@c,2
  3726     0073  2875               	goto	u1391
  3727     0074  2876               	goto	u1390
  3728     0075                     u1391:
  3729     0075  2889               	goto	l1301
  3730     0076                     u1390:
  3731     0076                     l1299:
  3732                           
  3733                           ;lcd.c: 26:         *(lcd.PORT) |= 1 << lcd.D6;
  3734     0076  0828               	movf	_lcd,w
  3735     0077  0084               	movwf	4
  3736     0078  1783               	bsf	3,7
  3737     0079  1C29               	btfss	_lcd+1,0
  3738     007A  1383               	bcf	3,7
  3739     007B  3001               	movlw	1
  3740     007C  00F0               	movwf	??_LCD_Out
  3741     007D  082C               	movf	_lcd+4,w
  3742     007E  3907               	andlw	7
  3743     007F  3E01               	addlw	1
  3744     0080  2883               	goto	u1404
  3745     0081                     u1405:
  3746     0081  1003               	clrc
  3747     0082  0DF0               	rlf	??_LCD_Out,f
  3748     0083                     u1404:
  3749     0083  3EFF               	addlw	-1
  3750     0084  1D03               	skipz
  3751     0085  2881               	goto	u1405
  3752     0086  0870               	movf	??_LCD_Out,w
  3753     0087  0480               	iorwf	0,f
  3754                           
  3755                           ;lcd.c: 27:     }
  3756     0088  289C               	goto	l1303
  3757     0089                     l1301:
  3758                           
  3759                           ;lcd.c: 29:         *(lcd.PORT) &= ~(1 << lcd.D6);
  3760     0089  0828               	movf	_lcd,w
  3761     008A  0084               	movwf	4
  3762     008B  1783               	bsf	3,7
  3763     008C  1C29               	btfss	_lcd+1,0
  3764     008D  1383               	bcf	3,7
  3765     008E  3001               	movlw	1
  3766     008F  00F0               	movwf	??_LCD_Out
  3767     0090  082C               	movf	_lcd+4,w
  3768     0091  3907               	andlw	7
  3769     0092  3E01               	addlw	1
  3770     0093  2896               	goto	u1414
  3771     0094                     u1415:
  3772     0094  1003               	clrc
  3773     0095  0DF0               	rlf	??_LCD_Out,f
  3774     0096                     u1414:
  3775     0096  3EFF               	addlw	-1
  3776     0097  1D03               	skipz
  3777     0098  2894               	goto	u1415
  3778     0099  0870               	movf	??_LCD_Out,w
  3779     009A  3AFF               	xorlw	255
  3780     009B  0580               	andwf	0,f
  3781     009C                     l1303:
  3782                           
  3783                           ;lcd.c: 32:     if ( c & 8 ) {
  3784     009C  1DF2               	btfss	LCD_Out@c,3
  3785     009D  289F               	goto	u1421
  3786     009E  28A0               	goto	u1420
  3787     009F                     u1421:
  3788     009F  28B6               	goto	l1307
  3789     00A0                     u1420:
  3790     00A0                     l1305:
  3791                           
  3792                           ;lcd.c: 33:          *(lcd.PORT) |= 1 << lcd.D7;
  3793     00A0  0828               	movf	_lcd,w
  3794     00A1  0084               	movwf	4
  3795     00A2  1783               	bsf	3,7
  3796     00A3  1C29               	btfss	_lcd+1,0
  3797     00A4  1383               	bcf	3,7
  3798     00A5  3001               	movlw	1
  3799     00A6  00F0               	movwf	??_LCD_Out
  3800     00A7  0C2C               	rrf	_lcd+4,w
  3801     00A8  00F1               	movwf	??_LCD_Out+1
  3802     00A9  0CF1               	rrf	??_LCD_Out+1,f
  3803     00AA  0C71               	rrf	??_LCD_Out+1,w
  3804     00AB  3907               	andlw	7
  3805     00AC  3E01               	addlw	1
  3806     00AD  28B0               	goto	u1434
  3807     00AE                     u1435:
  3808     00AE  1003               	clrc
  3809     00AF  0DF0               	rlf	??_LCD_Out,f
  3810     00B0                     u1434:
  3811     00B0  3EFF               	addlw	-1
  3812     00B1  1D03               	skipz
  3813     00B2  28AE               	goto	u1435
  3814     00B3  0870               	movf	??_LCD_Out,w
  3815     00B4  0480               	iorwf	0,f
  3816                           
  3817                           ;lcd.c: 34:     }
  3818     00B5  28CC               	goto	l311
  3819     00B6                     l1307:
  3820                           
  3821                           ;lcd.c: 36:          *(lcd.PORT) &= ~(1 << lcd.D7);
  3822     00B6  0828               	movf	_lcd,w
  3823     00B7  0084               	movwf	4
  3824     00B8  1783               	bsf	3,7
  3825     00B9  1C29               	btfss	_lcd+1,0
  3826     00BA  1383               	bcf	3,7
  3827     00BB  3001               	movlw	1
  3828     00BC  00F0               	movwf	??_LCD_Out
  3829     00BD  0C2C               	rrf	_lcd+4,w
  3830     00BE  00F1               	movwf	??_LCD_Out+1
  3831     00BF  0CF1               	rrf	??_LCD_Out+1,f
  3832     00C0  0C71               	rrf	??_LCD_Out+1,w
  3833     00C1  3907               	andlw	7
  3834     00C2  3E01               	addlw	1
  3835     00C3  28C6               	goto	u1444
  3836     00C4                     u1445:
  3837     00C4  1003               	clrc
  3838     00C5  0DF0               	rlf	??_LCD_Out,f
  3839     00C6                     u1444:
  3840     00C6  3EFF               	addlw	-1
  3841     00C7  1D03               	skipz
  3842     00C8  28C4               	goto	u1445
  3843     00C9  0870               	movf	??_LCD_Out,w
  3844     00CA  3AFF               	xorlw	255
  3845     00CB  0580               	andwf	0,f
  3846     00CC                     l311:
  3847     00CC  0008               	return
  3848     00CD                     __end_of_LCD_Out:
  3849                           
  3850                           	psect	text11
  3851     0005                     __ptext11:	
  3852 ;; *************** function _ADC_Init *****************
  3853 ;; Defined at:
  3854 ;;		line 30 in file "main.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		status,2
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3868 ;;      Params:         0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0
  3871 ;;      Totals:         0       0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used: 1
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881     0005                     _ADC_Init:	
  3882                           ;psect for function _ADC_Init
  3883                           
  3884     0005                     l1481:	
  3885                           ;incstack = 0
  3886                           ; Regs used in _ADC_Init: [status,2]
  3887                           
  3888                           
  3889                           ;main.c: 31:     TRISAbits.TRISA3 = 0;
  3890     0005  3003               	movlw	3
  3891     0006  1683               	bsf	3,5	;RP0=1, select bank3
  3892     0007  1703               	bsf	3,6	;RP1=1, select bank3
  3893     0008  0088               	movwf	8	;volatile
  3894     0009                     l1483:
  3895                           
  3896                           ;main.c: 32:     PORTAbits.RA3 = 0;
  3897     0009  0189               	clrf	9	;volatile
  3898     000A                     l1485:
  3899                           
  3900                           ;main.c: 33: 
  3901     000A  3080               	movlw	128
  3902     000B  1683               	bsf	3,5	;RP0=1, select bank1
  3903     000C  1303               	bcf	3,6	;RP1=0, select bank1
  3904     000D  009F               	movwf	31	;volatile
  3905     000E                     l1487:
  3906                           
  3907                           ;main.c: 34:     ADC_Init();
  3908     000E  3001               	movlw	1
  3909     000F  1283               	bcf	3,5	;RP0=0, select bank0
  3910     0010  1303               	bcf	3,6	;RP1=0, select bank0
  3911     0011  009F               	movwf	31	;volatile
  3912     0012                     l43:
  3913     0012  0008               	return
  3914     0013                     __end_of_ADC_Init:
  3915     0002                     ___latbits      equ	2
  3916     007E                     btemp           set	126	;btemp
  3917     007E                     wtemp0          set	126
  3918                           
  3919                           	psect	config
  3920                           
  3921                           ;Config register CONFIG1 @ 0x2007
  3922                           ;	Oscillator Selection bits
  3923                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  3924                           ;	Watchdog Timer Enable bit
  3925                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3926                           ;	Power-up Timer Enable bit
  3927                           ;	PWRTE = OFF, PWRT disabled
  3928                           ;	RE3/MCLR pin function select bit
  3929                           ;	MCLRE = 0x1, unprogrammed default
  3930                           ;	Code Protection bit
  3931                           ;	CP = OFF, Program memory code protection is disabled
  3932                           ;	Data Code Protection bit
  3933                           ;	CPD = OFF, Data memory code protection is disabled
  3934                           ;	Brown Out Reset Selection bits
  3935                           ;	BOREN = ON, BOR enabled
  3936                           ;	Internal External Switchover bit
  3937                           ;	IESO = 0x1, unprogrammed default
  3938                           ;	Fail-Safe Clock Monitor Enabled bit
  3939                           ;	FCMEN = 0x1, unprogrammed default
  3940                           ;	Low Voltage Programming Enable bit
  3941                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3942                           ;	In-Circuit Debugger Mode bit
  3943                           ;	DEBUG = 0x1, unprogrammed default
  3944     2007                     	org	8199
  3945     2007  2FF1               	dw	12273
  3946                           
  3947                           ;Config register CONFIG2 @ 0x2008
  3948                           ;	Brown-out Reset Selection bit
  3949                           ;	BOR4V = 0x1, unprogrammed default
  3950                           ;	Flash Program Memory Self Write Enable bits
  3951                           ;	WRT = OFF, Write protection off
  3952     2008                     	org	8200
  3953     2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    0
    Data        7
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _pot_y->_LCD_putrs
    _pot_x->_LCD_putrs
    _checar_boton->_disparar
    _disparar->_LCD_putrs
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    _checar_boton->_disparar

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3356
                                              7 BANK0      1     1      0
                           _ADC_Init
                           _LCD_Init
                          _LCD_Write
                           _LCD_putc
                       _checar_boton
                              _pot_x
                              _pot_y
 ---------------------------------------------------------------------------------
 (1) _pot_y                                                4     4      0     661
                                              9 COMMON     4     4      0
                           _ADC_Read
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (1) _pot_x                                                9     9      0     710
                                              9 COMMON     2     2      0
                                              0 BANK0      6     6      0
                           _ADC_Read
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      29
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _checar_boton                                         0     0      0    1450
                           _disparar
 ---------------------------------------------------------------------------------
 (2) _disparar                                             9     9      0    1450
                                              9 COMMON     2     2      0
                                              0 BANK0      7     7      0
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (2) _LCD_putrs                                            3     2      1     268
                                              6 COMMON     3     2      1
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (3) _LCD_putc                                             3     3      0     174
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     216
                                              6 COMMON     8     3      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            3     3      0     145
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (4) _LCD_Out                                              3     3      0     116
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
   _LCD_putc
     _LCD_Out
   _checar_boton
     _disparar
       _LCD_Write
       _LCD_putc
       _LCD_putrs
         _LCD_putc
   _pot_x
     _ADC_Read
     _LCD_Write
     _LCD_putc
     _LCD_putrs
   _pot_y
     _ADC_Read
     _LCD_Write
     _LCD_putc
     _LCD_putrs

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      8      15     18.8%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      29      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 23 14:17:33 2025

                      pc 0002                       l43 0012                       l46 0D97  
                     l49 0DA1                       l76 0FE7                       l77 0FED  
                     l99 02A7                       fsr 0004     __end_of_checar_boton 0D41  
                    l110 02E6                      l104 02C9                      l211 04CC  
                    l311 00CC                      l127 0369                      l151 0187  
                    l128 0378                      l314 0DF6                      l323 0F34  
                    l147 015A                      l172 0D40                      l229 05A1  
                    l335 0F28                      l351 0D77                      l247 067B  
                    l191 03FC                      l175 0379                      l167 020A  
                    l168 0219                      l265 074F                      l339 0E88  
                    l283 07E7                      l284 07ED          LCD_Init@display 0076  
                    _lcd 0028                      fsr0 0004                      indf 0000  
        __end_of_LCD_Out 00CD                     l1301 0089                     l1303 009C  
                   l1311 0E0C                     l1305 00A0                     l1321 0E55  
                   l1313 0E1B                     l1401 04DC                     l1307 00B6  
                   l1331 0DD5                     l1323 0E70                     l1315 0E32  
                   l1411 0544                     l1403 04E1                     l1333 0DDE  
                   l1325 0DA3                     l1501 0EC2                     l1317 0E36  
                   l1309 0DF8                     l1341 0D6A                     l1421 05B4  
                   l1413 0570                     l1405 050D                     l1327 0DB8  
                   l1511 0EEB                     l1503 0EC5                     l1319 0E4E  
                   l1335 0D54                     l1431 0622                     l1423 05C8  
                   l1415 0576                     l1407 0512                     l1351 0D9B  
                   l1343 0D79                     l1329 0DBE                     l1521 0F09  
                   l1513 0EF1                     l1505 0ECE                     l1337 0D57  
                   l1441 068A                     l1433 0628                     l1425 05CF  
                   l1417 05A7                     l1409 053E                     l1361 03A0  
                   l1345 0D7C                     l1601 011F                     l1291 0042  
                   l1531 0F12                     l1523 0F0F                     l1515 0EF7  
                   l1507 0ED4                     l1339 0D64                     l1451 06F2  
                   l1443 068F                     l1435 064F                     l1427 05F6  
                   l1419 05A9                     l1371 0402                     l1363 03BB  
                   l1355 0379                     l1347 0D8B                     l1611 0171  
                   l1603 013A                     l1293 0046                     l1285 0014  
                   l1525 0F11                     l1517 0EFD                     l1509 0EE2  
                   l1461 075C                     l1453 071E                     l1445 06BB  
                   l1437 0655                     l1429 05FB                     l1381 0419  
                   l1365 03C1                     l1357 0380                     l1349 0D94  
                   l1541 022B                     l1621 01A9                     l1613 0174  
                   l1605 0140                     l1295 005C                     l1287 0018  
                   l1519 0F03                     l1471 078B                     l1463 075E  
                   l1455 0724                     l1447 06C0                     l1439 0682  
                   l1391 0479                     l1383 0420                     l1367 03DC  
                   l1359 039B                     l1551 0287                     l1543 0246  
                   l1535 021A                     l1631 01F0                     l1623 01AE  
                   l1615 017D                     l1607 0161                     l1481 0005  
                   l1297 0072                     l1289 002D                     l1473 07A6  
                   l1465 0764                     l1449 06EC                     l1457 0756  
                   l1393 04A0                     l1385 0447                     l1377 0404  
                   l1369 03E2                     l1561 02C2                     l1553 028D  
                   l1545 024B                     l1537 0226                     l1633 0210  
                   l1625 01C9                     l1617 0185                     l1609 016A  
                   l1641 0F3C                     l1483 0009                     l1299 0076  
                   l1491 0E9A                     l1475 07AC                     l1467 076B  
                   l1395 04A6                     l1387 044C                     l1379 0405  
                   l1635 0D35                     l1571 02E8                     l1563 02CC  
                   l1555 02AE                     l1547 0266                     l1539 0226  
                   l1627 01CF                     l1619 018E                     l1651 0F6B  
                   l1643 0F41                     l1485 000A                     l1493 0EA6  
                   l1477 07C7                     l1469 0786                     l1397 04D2  
                   l1389 0473                     l1637 0D3B                     l1581 032E  
                   l1573 02ED                     l1565 02D5                     l1557 02B9  
                   l1549 026C                     l1629 01EA                     l1661 0FC7  
                   l1653 0F86                     l1645 0F58                     l1487 000E  
                   l1495 0EAA                     l1479 07CD                     l1399 04D4  
                   l1583 0349                     l1575 0308                     l1567 02DA  
                   l1559 02BF                     l1591 00D7                     l1663 0FCD  
                   l1655 0F8B                     l1647 0F5E                     l1639 0F35  
                   l1497 0EB4                     l1489 0E89                     l1585 034F  
                   l1577 030D                     l1569 02DF                     l1593 00DE  
                   l1665 0FF7                     l1657 0FA6                     l1649 0F64  
                   l1499 0EB8                     l1587 036F                     l1579 0328  
                   l1595 00F9                     l1659 0FAC                     l1597 00FE  
                   l1589 00CD                     l1599 0119                     STR_1 0806  
                   STR_2 0806                     STR_3 0806                     STR_4 0806  
                   u2010 075B                     u2011 075A                     u2020 0764  
                   u2021 0763                     u2005 0738                     u2110 0EA6  
                   u2030 076B                     u2111 0EA5                     u2031 076A  
                   u2120 0EB4                     u2121 0EB3                     u2105 07D1  
                   u1330 0018                     u2130 0EC2                     u2050 078B  
                   u2210 028D                     u1331 0017                     u2131 0EC1  
                   u2115 0EA2                     u2051 078A                     u2211 028C  
                   u1420 00A0                     u1404 0083                     u1421 009F  
                   u1405 0081                     u2125 0EB0                     u2045 076F  
                   u2205 0270                     u1414 0096                     u2070 07AC  
                   u2310 032E                     u2230 02B9                     u2150 022B  
                   u1415 0094                     u2135 0EBE                     u2071 07AB  
                   u2311 032D                     u2231 02B8                     u2151 022A  
                   u1360 0046                     u1344 0027                     u1504 0E82  
                   u2240 02BF                     u1361 0045                     u1345 0025  
                   u2145 0F15                     u1505 0E80                     u2065 078F  
                   u2305 0311                     u2241 02BE                     u2225 0291  
                   u1434 00B0                     u1354 003C                     u1514 0DB2  
                   u2090 07CD                     u1610 03C1                     u2330 034F  
                   u2250 02D5                     u2170 024B                     u2410 0140  
                   u1435 00AE                     u1355 003A                     u1515 0DB0  
                   u2091 07CC                     u1611 03C0                     u2331 034E  
                   u2251 02D4                     u2171 024A                     u2411 013F  
                   u1444 00C6                     u1524 0DD0                     u1540 0D77  
                   u1700 0479                     u2260 02DA                     u1445 00C4  
                   u1525 0DCE                     u1541 0D76                     u2085 07B0  
                   u1701 0478                     u1605 03A4                     u2325 0332  
                   u2261 02D9                     u2165 022F                     u2405 0123  
                   u1390 0076                     u1374 0056                     u1534 0DF0  
                   u1454 0E07                     u1630 03E2                     u2270 02ED  
                   u2190 026C                     u2510 01CF                     u2430 016A  
                   u2350 00DE                     u1391 0075                     u1375 0054  
                   u1535 0DEE                     u1455 0E05                     u1631 03E1  
                   u2271 02EC                     u2191 026B                     u2511 01CE  
                   u2431 0169                     u2351 00DD                     u1384 006C  
                   u1720 04A6                     u1560 0D9B                     u2440 0171  
                   u2600 0FAC                     u1385 006A                     u1465 0E0F  
                   u1721 04A5                     u1625 03C5                     u1561 0D9A  
                   u2345 0353                     u2185 024F                     u2505 01B2  
                   u2441 0170                     u2425 0144                     u2601 0FAB  
                   u1474 0E2D                     u1810 0576                     u1650 0419  
                   u1570 0380                     u2290 030D                     u2530 01F0  
                   u2450 017D                     u2370 00FE                     u1475 0E2B  
                   u1811 0575                     u1715 0488                     u1651 0418  
                   u1571 037F                     u1555 0D83                     u2291 030C  
                   u2531 01EF                     u2451 017C                     u2371 00FD  
                   u1484 0E48                     u1900 0655                     u1740 04DC  
                   u1660 0420                     u2460 0185                     u2620 0FCD  
                   u1485 0E46                     u1901 0654                     u1805 0558  
                   u1741 04DB                     u1661 041F                     u1645 03E6  
                   u2285 02F1                     u2525 01D3                     u2461 0184  
                   u2365 00E2                     u2621 0FCC                     u1494 0E67  
                   u1830 05C8                     u1750 04E1                     u1590 03A0  
                   u2550 0D3B                     u2470 018E                     u2390 011F  
                   u1495 0E65                     u1831 05C7                     u1751 04E0  
                   u1735 04B5                     u1655 0415                     u1591 039F  
                   u2551 0D3A                     u2471 018D                     u2391 011E  
                   u2615 0FB0                     u1920 068A                     u1840 05CF  
                   u1680 044C                     u2560 0F6B                     u1921 0689  
                   u1841 05CE                     u1825 058A                     u1681 044B  
                   u1585 0384                     u2545 01F4                     u2385 0102  
                   u2561 0F6A                     u1930 068F                     u1770 0512  
                   u2490 01AE                     u2707 0E6E                     u1931 068E  
                   u1915 0664                     u1835 05C4                     u1771 0511  
                   u1675 042F                     u2491 01AD                     u2635 0FD1  
                   u1860 05FB                     u2580 0F8B                     u2717 0EC9  
                   u1861 05FA                     u1765 04F5                     u2485 0192  
                   u2581 0F8A                     u1950 06C0                     u1790 0544  
                   u2727 0ED8                     u1951 06BF                     u1855 05DE  
                   u1791 0543                     u1695 045B                     u2575 0F6F  
                   u1880 0628                     u2737 0EE6                     u1945 06A3  
                   u1881 0627                     u1785 0526                     u2657 0214  
                   u1970 06F2                     u2747 0DD9                     u1971 06F1  
                   u1875 060A                     u2667 0373                     u2595 0F8F  
                   u1965 06D4                     u2677 0D8F                     u1990 0724  
                   u1991 0723                     u1895 0637                     u2687 05AF  
                   u2697 0E34                     u1985 0706                     _main 0F35  
                   btemp 007E         __end_of_ADC_Init 0013         __end_of_ADC_Read 0DA2  
                   start 0000              LCD_Init@cmd 007D         __end_of_LCD_Init 0F35  
       __end_of_LCD_putc 0E89                    ?_main 0070                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _pos_x 002E                    _pos_y 002D                    _pot_x 021A  
                  _pot_y 00CD                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 1000  
                 ??_main 0027                ??_LCD_Out 0070            disparar@moved 0079  
      __end_of_LCD_Write 0DF7        __end_of_LCD_putrs 0D78                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 ?_pot_x 0070                   ?_pot_y 0070                   _ANSELH 0189  
       __end_of_disparar 07EE          ADC_Read@channel 0074                ?_ADC_Init 0070  
              ?_ADC_Read 0070             _checar_boton 0D35  __end_of__initialization 07FC  
              ?_LCD_Init 0076                ?_LCD_putc 0070           __pcstackCOMMON 0070  
           __pidataBANK0 0D2E            __end_of_pot_x 0379            __end_of_pot_y 021A  
              LCD_putc@c 0075               ??_ADC_Init 0070               ??_ADC_Read 0072  
                ??_pot_x 0079                  ??_pot_y 0079               ??_LCD_Init 007B  
         disparar@offset 007A               ??_LCD_putc 0073               __pmaintext 0F35  
                _LCD_Out 0013                ?_disparar 0070               __stringtab 0800  
                __ptext1 00CD                  __ptext2 021A                  __ptext3 0D78  
                __ptext4 0D35                  __ptext5 0379                  __ptext6 0D54  
                __ptext7 0DF7                  __ptext8 0E89                  __ptext9 0DA2  
              _LCD_Write 0DA2               ??_disparar 0020     end_of_initialization 07FC  
              _LCD_putrs 0D54                _PORTAbits 0005                _TRISAbits 0085  
             ?_LCD_Write 0070               ?_LCD_putrs 0076               LCD_Write@c 0075  
    start_initialization 07EE               LCD_putrs@a 0076               LCD_putrs@i 0077  
             init_fetch0 0D41              __pdataBANK0 0028                 ?_LCD_Out 0070  
              ___latbits 0002            __pcstackBANK0 0020                 LCD_Out@c 0072  
            ??_LCD_Write 0073              ??_LCD_putrs 0077                __pstrings 0800  
               _ADC_Init 0005                 _ADC_Read 0D78                 _LCD_Init 0E89  
               _LCD_putc 0DF7                _pot_x$162 0020                _pot_x$163 0022  
               _GO_nDONE 00F9               pot_x@adc_x 0024               pot_y@adc_y 007B  
            __stringbase 0805            ?_checar_boton 0070       __end_of__stringtab 0806  
               __ptext10 0013                 __ptext11 0005                 _disparar 0379  
         ??_checar_boton 007B                 init_ram0 0D45                stringcode 0800  
               stringdir 0800                 stringtab 0800  
