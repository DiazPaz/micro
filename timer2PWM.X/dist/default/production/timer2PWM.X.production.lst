

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 19 16:36:38 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 26/03/2025 GMT
    13                           ; 
    14                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0004                     fsr             equ	4
    47     0004                     fsr0            equ	4
    48     0000                     indf            equ	0
    49     0000                     indf0           equ	0
    50     0002                     pc              equ	2
    51     0002                     pcl             equ	2
    52     000A                     pclath          equ	10
    53     0003                     status          equ	3
    54     0000                     INDF            equ	0	;# 
    55     0001                     TMR0            equ	1	;# 
    56     0002                     PCL             equ	2	;# 
    57     0003                     STATUS          equ	3	;# 
    58     0004                     FSR             equ	4	;# 
    59     0005                     PORTA           equ	5	;# 
    60     0006                     PORTB           equ	6	;# 
    61     0007                     PORTC           equ	7	;# 
    62     0008                     PORTD           equ	8	;# 
    63     0009                     PORTE           equ	9	;# 
    64     000A                     PCLATH          equ	10	;# 
    65     000B                     INTCON          equ	11	;# 
    66     000C                     PIR1            equ	12	;# 
    67     000D                     PIR2            equ	13	;# 
    68     000E                     TMR1            equ	14	;# 
    69     000E                     TMR1L           equ	14	;# 
    70     000F                     TMR1H           equ	15	;# 
    71     0010                     T1CON           equ	16	;# 
    72     0011                     TMR2            equ	17	;# 
    73     0012                     T2CON           equ	18	;# 
    74     0013                     SSPBUF          equ	19	;# 
    75     0014                     SSPCON          equ	20	;# 
    76     0015                     CCPR1           equ	21	;# 
    77     0015                     CCPR1L          equ	21	;# 
    78     0016                     CCPR1H          equ	22	;# 
    79     0017                     CCP1CON         equ	23	;# 
    80     0018                     RCSTA           equ	24	;# 
    81     0019                     TXREG           equ	25	;# 
    82     001A                     RCREG           equ	26	;# 
    83     001B                     CCPR2           equ	27	;# 
    84     001B                     CCPR2L          equ	27	;# 
    85     001C                     CCPR2H          equ	28	;# 
    86     001D                     CCP2CON         equ	29	;# 
    87     001E                     ADRESH          equ	30	;# 
    88     001F                     ADCON0          equ	31	;# 
    89     0081                     OPTION_REG      equ	129	;# 
    90     0085                     TRISA           equ	133	;# 
    91     0086                     TRISB           equ	134	;# 
    92     0087                     TRISC           equ	135	;# 
    93     0088                     TRISD           equ	136	;# 
    94     0089                     TRISE           equ	137	;# 
    95     008C                     PIE1            equ	140	;# 
    96     008D                     PIE2            equ	141	;# 
    97     008E                     PCON            equ	142	;# 
    98     008F                     OSCCON          equ	143	;# 
    99     0090                     OSCTUNE         equ	144	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0093                     SSPMSK          equ	147	;# 
   104     0093                     MSK             equ	147	;# 
   105     0094                     SSPSTAT         equ	148	;# 
   106     0095                     WPUB            equ	149	;# 
   107     0096                     IOCB            equ	150	;# 
   108     0097                     VRCON           equ	151	;# 
   109     0098                     TXSTA           equ	152	;# 
   110     0099                     SPBRG           equ	153	;# 
   111     009A                     SPBRGH          equ	154	;# 
   112     009B                     PWM1CON         equ	155	;# 
   113     009C                     ECCPAS          equ	156	;# 
   114     009D                     PSTRCON         equ	157	;# 
   115     009E                     ADRESL          equ	158	;# 
   116     009F                     ADCON1          equ	159	;# 
   117     0105                     WDTCON          equ	261	;# 
   118     0107                     CM1CON0         equ	263	;# 
   119     0108                     CM2CON0         equ	264	;# 
   120     0109                     CM2CON1         equ	265	;# 
   121     010C                     EEDATA          equ	268	;# 
   122     010C                     EEDAT           equ	268	;# 
   123     010D                     EEADR           equ	269	;# 
   124     010E                     EEDATH          equ	270	;# 
   125     010F                     EEADRH          equ	271	;# 
   126     0185                     SRCON           equ	389	;# 
   127     0187                     BAUDCTL         equ	391	;# 
   128     0188                     ANSEL           equ	392	;# 
   129     0189                     ANSELH          equ	393	;# 
   130     018C                     EECON1          equ	396	;# 
   131     018D                     EECON2          equ	397	;# 
   132     0000                     INDF            equ	0	;# 
   133     0001                     TMR0            equ	1	;# 
   134     0002                     PCL             equ	2	;# 
   135     0003                     STATUS          equ	3	;# 
   136     0004                     FSR             equ	4	;# 
   137     0005                     PORTA           equ	5	;# 
   138     0006                     PORTB           equ	6	;# 
   139     0007                     PORTC           equ	7	;# 
   140     0008                     PORTD           equ	8	;# 
   141     0009                     PORTE           equ	9	;# 
   142     000A                     PCLATH          equ	10	;# 
   143     000B                     INTCON          equ	11	;# 
   144     000C                     PIR1            equ	12	;# 
   145     000D                     PIR2            equ	13	;# 
   146     000E                     TMR1            equ	14	;# 
   147     000E                     TMR1L           equ	14	;# 
   148     000F                     TMR1H           equ	15	;# 
   149     0010                     T1CON           equ	16	;# 
   150     0011                     TMR2            equ	17	;# 
   151     0012                     T2CON           equ	18	;# 
   152     0013                     SSPBUF          equ	19	;# 
   153     0014                     SSPCON          equ	20	;# 
   154     0015                     CCPR1           equ	21	;# 
   155     0015                     CCPR1L          equ	21	;# 
   156     0016                     CCPR1H          equ	22	;# 
   157     0017                     CCP1CON         equ	23	;# 
   158     0018                     RCSTA           equ	24	;# 
   159     0019                     TXREG           equ	25	;# 
   160     001A                     RCREG           equ	26	;# 
   161     001B                     CCPR2           equ	27	;# 
   162     001B                     CCPR2L          equ	27	;# 
   163     001C                     CCPR2H          equ	28	;# 
   164     001D                     CCP2CON         equ	29	;# 
   165     001E                     ADRESH          equ	30	;# 
   166     001F                     ADCON0          equ	31	;# 
   167     0081                     OPTION_REG      equ	129	;# 
   168     0085                     TRISA           equ	133	;# 
   169     0086                     TRISB           equ	134	;# 
   170     0087                     TRISC           equ	135	;# 
   171     0088                     TRISD           equ	136	;# 
   172     0089                     TRISE           equ	137	;# 
   173     008C                     PIE1            equ	140	;# 
   174     008D                     PIE2            equ	141	;# 
   175     008E                     PCON            equ	142	;# 
   176     008F                     OSCCON          equ	143	;# 
   177     0090                     OSCTUNE         equ	144	;# 
   178     0091                     SSPCON2         equ	145	;# 
   179     0092                     PR2             equ	146	;# 
   180     0093                     SSPADD          equ	147	;# 
   181     0093                     SSPMSK          equ	147	;# 
   182     0093                     MSK             equ	147	;# 
   183     0094                     SSPSTAT         equ	148	;# 
   184     0095                     WPUB            equ	149	;# 
   185     0096                     IOCB            equ	150	;# 
   186     0097                     VRCON           equ	151	;# 
   187     0098                     TXSTA           equ	152	;# 
   188     0099                     SPBRG           equ	153	;# 
   189     009A                     SPBRGH          equ	154	;# 
   190     009B                     PWM1CON         equ	155	;# 
   191     009C                     ECCPAS          equ	156	;# 
   192     009D                     PSTRCON         equ	157	;# 
   193     009E                     ADRESL          equ	158	;# 
   194     009F                     ADCON1          equ	159	;# 
   195     0105                     WDTCON          equ	261	;# 
   196     0107                     CM1CON0         equ	263	;# 
   197     0108                     CM2CON0         equ	264	;# 
   198     0109                     CM2CON1         equ	265	;# 
   199     010C                     EEDATA          equ	268	;# 
   200     010C                     EEDAT           equ	268	;# 
   201     010D                     EEADR           equ	269	;# 
   202     010E                     EEDATH          equ	270	;# 
   203     010F                     EEADRH          equ	271	;# 
   204     0185                     SRCON           equ	389	;# 
   205     0187                     BAUDCTL         equ	391	;# 
   206     0188                     ANSEL           equ	392	;# 
   207     0189                     ANSELH          equ	393	;# 
   208     018C                     EECON1          equ	396	;# 
   209     018D                     EECON2          equ	397	;# 
   210     0015                     _CCPR1L         set	21
   211     0012                     _T2CONbits      set	18
   212     0017                     _CCP1CONbits    set	23
   213     0087                     _TRISCbits      set	135
   214     0092                     _PR2            set	146
   215                           
   216                           	psect	cinit
   217     07FC                     start_initialization:	
   218                           ; #config settings
   219                           
   220     07FC                     __initialization:
   221     07FC                     end_of_initialization:	
   222                           ;End of C runtime variable initialization code
   223                           
   224     07FC                     __end_of__initialization:
   225     07FC  0183               	clrf	3
   226     07FD  120A  118A  2FB8   	ljmp	_main	;jump to C main() function
   227                           
   228                           	psect	cstackCOMMON
   229     0070                     __pcstackCOMMON:
   230     0070                     ?_PWM_init:
   231     0070                     ?_PWM_val:	
   232                           ; 1 bytes @ 0x0
   233                           
   234     0070                     ?_main:	
   235                           ; 1 bytes @ 0x0
   236                           
   237     0070                     PWM_val@intensidad:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0070                     ??_PWM_init:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0070                     ??_PWM_val:	
   244                           ; 1 bytes @ 0x0
   245                           
   246                           
   247                           ; 1 bytes @ 0x0
   248     0070                     	ds	1
   249     0071                     ??_main:
   250                           
   251                           ; 1 bytes @ 0x1
   252     0071                     	ds	2
   253     0073                     main@i:
   254                           
   255                           ; 1 bytes @ 0x3
   256     0073                     	ds	1
   257     0074                     main@i_143:
   258                           
   259                           ; 1 bytes @ 0x4
   260     0074                     	ds	1
   261                           
   262                           	psect	maintext
   263     07B8                     __pmaintext:	
   264 ;;
   265 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   266 ;;
   267 ;; *************** function _main *****************
   268 ;; Defined at:
   269 ;;		line 35 in file "main.c"
   270 ;; Parameters:    Size  Location     Type
   271 ;;		None
   272 ;; Auto vars:     Size  Location     Type
   273 ;;  i               1    4[COMMON] unsigned char 
   274 ;;  i               1    3[COMMON] unsigned char 
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0, pclath, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : B00/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   284 ;;      Params:         0       0       0       0       0
   285 ;;      Locals:         2       0       0       0       0
   286 ;;      Temps:          2       0       0       0       0
   287 ;;      Totals:         4       0       0       0       0
   288 ;;Total ram usage:        4 bytes
   289 ;; Hardware stack levels required when called: 1
   290 ;; This function calls:
   291 ;;		_PWM_init
   292 ;;		_PWM_val
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298     07B8                     _main:	
   299                           ;psect for function _main
   300                           
   301     07B8                     l582:	
   302                           ;incstack = 0
   303                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   304                           
   305                           
   306                           ;main.c: 37:             _delay((unsigned long)((20)*(4000000/4000.0)));
   307     07B8  1683               	bsf	3,5	;RP0=1, select bank1
   308     07B9  1303               	bcf	3,6	;RP1=0, select bank1
   309     07BA  1107               	bcf	7,2	;volatile
   310     07BB                     l584:
   311                           
   312                           ;main.c: 38:         }
   313     07BB  120A  118A  27A8  120A  118A  	fcall	_PWM_init
   314     07C0                     l586:
   315                           
   316                           ;main.c: 40: }
   317     07C0  30FF               	movlw	255
   318     07C1  00F3               	movwf	main@i
   319     07C2                     l592:
   320     07C2  0873               	movf	main@i,w
   321     07C3  120A  118A  27A2  120A  118A  	fcall	_PWM_val
   322     07C8                     l594:
   323     07C8  301A               	movlw	26
   324     07C9  00F2               	movwf	??_main+1
   325     07CA  30F8               	movlw	248
   326     07CB  00F1               	movwf	??_main
   327     07CC                     u37:
   328     07CC  0BF1               	decfsz	??_main,f
   329     07CD  2FCC               	goto	u37
   330     07CE  0BF2               	decfsz	??_main+1,f
   331     07CF  2FCC               	goto	u37
   332     07D0  0000               	nop
   333     07D1                     l596:
   334     07D1  3001               	movlw	1
   335     07D2  02F3               	subwf	main@i,f
   336     07D3                     l598:
   337     07D3  0873               	movf	main@i,w
   338     07D4  1D03               	btfss	3,2
   339     07D5  2FD7               	goto	u11
   340     07D6  2FD8               	goto	u10
   341     07D7                     u11:
   342     07D7  2FC2               	goto	l592
   343     07D8                     u10:
   344     07D8                     l600:
   345     07D8  301A               	movlw	26
   346     07D9  00F2               	movwf	??_main+1
   347     07DA  30F8               	movlw	248
   348     07DB  00F1               	movwf	??_main
   349     07DC                     u47:
   350     07DC  0BF1               	decfsz	??_main,f
   351     07DD  2FDC               	goto	u47
   352     07DE  0BF2               	decfsz	??_main+1,f
   353     07DF  2FDC               	goto	u47
   354     07E0  0000               	nop
   355     07E1                     l602:
   356     07E1  01F4               	clrf	main@i_143
   357     07E2                     l608:
   358     07E2  0874               	movf	main@i_143,w
   359     07E3  120A  118A  27A2  120A  118A  	fcall	_PWM_val
   360     07E8                     l610:
   361     07E8  301A               	movlw	26
   362     07E9  00F2               	movwf	??_main+1
   363     07EA  30F8               	movlw	248
   364     07EB  00F1               	movwf	??_main
   365     07EC                     u57:
   366     07EC  0BF1               	decfsz	??_main,f
   367     07ED  2FEC               	goto	u57
   368     07EE  0BF2               	decfsz	??_main+1,f
   369     07EF  2FEC               	goto	u57
   370     07F0  0000               	nop
   371     07F1                     l612:
   372     07F1  3001               	movlw	1
   373     07F2  07F4               	addwf	main@i_143,f
   374     07F3                     l614:
   375     07F3  0A74               	incf	main@i_143,w
   376     07F4  1D03               	btfss	3,2
   377     07F5  2FF7               	goto	u21
   378     07F6  2FF8               	goto	u20
   379     07F7                     u21:
   380     07F7  2FE2               	goto	l608
   381     07F8                     u20:
   382     07F8  2FC0               	goto	l586
   383     07F9  120A  118A  2800   	ljmp	start
   384     07FC                     __end_of_main:
   385                           
   386                           	psect	text1
   387     07A2                     __ptext1:	
   388 ;; *************** function _PWM_val *****************
   389 ;; Defined at:
   390 ;;		line 30 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;  intensidad      1    wreg     unsigned char 
   393 ;; Auto vars:     Size  Location     Type
   394 ;;  intensidad      1    0[COMMON] unsigned char 
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         1       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0
   407 ;;      Totals:         1       0       0       0       0
   408 ;;Total ram usage:        1 bytes
   409 ;; Hardware stack levels used: 1
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417     07A2                     _PWM_val:	
   418                           ;psect for function _PWM_val
   419                           
   420                           
   421                           ;incstack = 0
   422                           ; Regs used in _PWM_val: [wreg]
   423                           ;PWM_val@intensidad stored from wreg
   424     07A2  00F0               	movwf	PWM_val@intensidad
   425     07A3                     l580:
   426                           
   427                           ;main.c: 30:             PWM_val(i);;main.c: 31:             _delay((unsigned long)((20)
      +                          *(4000000/4000.0)));;main.c: 32:         }
   428     07A3  0870               	movf	PWM_val@intensidad,w
   429     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   430     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   431     07A6  0095               	movwf	21	;volatile
   432     07A7                     l18:
   433     07A7  0008               	return
   434     07A8                     __end_of_PWM_val:
   435                           
   436                           	psect	text2
   437     07A8                     __ptext2:	
   438 ;; *************** function _PWM_init *****************
   439 ;; Defined at:
   440 ;;		line 15 in file "main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used: 1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467     07A8                     _PWM_init:	
   468                           ;psect for function _PWM_init
   469                           
   470     07A8                     l574:	
   471                           ;incstack = 0
   472                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
   473                           
   474                           
   475                           ;main.c: 17: void PWM_val(unsigned char intensidad)
   476     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   477     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   478     07AA  0817               	movf	23,w	;volatile
   479     07AB  39F0               	andlw	-16
   480     07AC  380C               	iorlw	12
   481     07AD  0097               	movwf	23	;volatile
   482                           
   483                           ;main.c: 18: {
   484     07AE  303F               	movlw	-193
   485     07AF  0597               	andwf	23,f	;volatile
   486                           
   487                           ;main.c: 21: 
   488     07B0  3003               	movlw	3
   489     07B1  0492               	iorwf	18,f	;volatile
   490     07B2                     l576:
   491                           
   492                           ;main.c: 22: void main(void)
   493     07B2  1512               	bsf	18,2	;volatile
   494     07B3                     l578:
   495                           
   496                           ;main.c: 24:     TRISCbits.TRISC2 = 0;
   497     07B3  30FF               	movlw	255
   498     07B4  1683               	bsf	3,5	;RP0=1, select bank1
   499     07B5  1303               	bcf	3,6	;RP1=0, select bank1
   500     07B6  0092               	movwf	18	;volatile
   501     07B7                     l15:
   502     07B7  0008               	return
   503     07B8                     __end_of_PWM_init:
   504     0002                     ___latbits      equ	2
   505     007E                     btemp           set	126	;btemp
   506     007E                     wtemp0          set	126
   507                           
   508                           	psect	config
   509                           
   510                           ;Config register CONFIG1 @ 0x2007
   511                           ;	Oscillator Selection bits
   512                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   513                           ;	Watchdog Timer Enable bit
   514                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   515                           ;	Power-up Timer Enable bit
   516                           ;	PWRTE = OFF, PWRT disabled
   517                           ;	RE3/MCLR pin function select bit
   518                           ;	MCLRE = 0x1, unprogrammed default
   519                           ;	Code Protection bit
   520                           ;	CP = OFF, Program memory code protection is disabled
   521                           ;	Data Code Protection bit
   522                           ;	CPD = OFF, Data memory code protection is disabled
   523                           ;	Brown Out Reset Selection bits
   524                           ;	BOREN = ON, BOR enabled
   525                           ;	Internal External Switchover bit
   526                           ;	IESO = 0x1, unprogrammed default
   527                           ;	Fail-Safe Clock Monitor Enabled bit
   528                           ;	FCMEN = 0x1, unprogrammed default
   529                           ;	Low Voltage Programming Enable bit
   530                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   531                           ;	In-Circuit Debugger Mode bit
   532                           ;	DEBUG = 0x1, unprogrammed default
   533     2007                     	org	8199
   534     2007  2FF1               	dw	12273
   535                           
   536                           ;Config register CONFIG2 @ 0x2008
   537                           ;	Brown-out Reset Selection bit
   538                           ;	BOR4V = 0x1, unprogrammed default
   539                           ;	Flash Program Memory Self Write Enable bits
   540                           ;	WRT = OFF, Write protection off
   541     2008                     	org	8200
   542     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM_val

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     105
                                              1 COMMON     4     4      0
                           _PWM_init
                            _PWM_val
 ---------------------------------------------------------------------------------
 (1) _PWM_val                                              1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_init
   _PWM_val

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      5       5     35.7%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       5      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 19 16:36:38 2025

                     l15 07B7                       l18 07A7                       u10 07D8  
                     u11 07D7                       u20 07F8                       u21 07F7  
                     u37 07CC                       u47 07DC                       u57 07EC  
                    l600 07D8                      l610 07E8                      l602 07E1  
                    l612 07F1                      l614 07F3                      l608 07E2  
                    l580 07A3                      l574 07A8                      l582 07B8  
                    l576 07B2                      l592 07C2                      l584 07BB  
                    l578 07B3                      l594 07C8                      l586 07C0  
                    l596 07D1                      l598 07D3                      _PR2 0092  
                   _main 07B8                     btemp 007E          __end_of_PWM_val 07A8  
                   start 0000                    ?_main 0070                    main@i 0073  
       __end_of_PWM_init 07B8                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC        PWM_val@intensidad 0070  
                 ??_main 0071                   _CCPR1L 0015                ??_PWM_val 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070                ?_PWM_init 0070  
             __pmaintext 07B8               ??_PWM_init 0070                  _PWM_val 07A2  
                __ptext1 07A2                  __ptext2 07A8                _T2CONbits 0012  
   end_of_initialization 07FC                _TRISCbits 0087              _CCP1CONbits 0017  
    start_initialization 07FC                ___latbits 0002                 ?_PWM_val 0070  
              main@i_143 0074                 _PWM_init 07A8  
