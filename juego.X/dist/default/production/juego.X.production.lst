

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 23 13:29:44 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,space=0,delta=2
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=2
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Generated 26/03/2025 GMT
    40                           ; 
    41                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0004                     fsr             equ	4
    74     0004                     fsr0            equ	4
    75     0000                     indf            equ	0
    76     0000                     indf0           equ	0
    77     0002                     pc              equ	2
    78     0002                     pcl             equ	2
    79     000A                     pclath          equ	10
    80     0003                     status          equ	3
    81     0000                     INDF            equ	0	;# 
    82     0001                     TMR0            equ	1	;# 
    83     0002                     PCL             equ	2	;# 
    84     0003                     STATUS          equ	3	;# 
    85     0004                     FSR             equ	4	;# 
    86     0005                     PORTA           equ	5	;# 
    87     0006                     PORTB           equ	6	;# 
    88     0007                     PORTC           equ	7	;# 
    89     0008                     PORTD           equ	8	;# 
    90     0009                     PORTE           equ	9	;# 
    91     000A                     PCLATH          equ	10	;# 
    92     000B                     INTCON          equ	11	;# 
    93     000C                     PIR1            equ	12	;# 
    94     000D                     PIR2            equ	13	;# 
    95     000E                     TMR1            equ	14	;# 
    96     000E                     TMR1L           equ	14	;# 
    97     000F                     TMR1H           equ	15	;# 
    98     0010                     T1CON           equ	16	;# 
    99     0011                     TMR2            equ	17	;# 
   100     0012                     T2CON           equ	18	;# 
   101     0013                     SSPBUF          equ	19	;# 
   102     0014                     SSPCON          equ	20	;# 
   103     0015                     CCPR1           equ	21	;# 
   104     0015                     CCPR1L          equ	21	;# 
   105     0016                     CCPR1H          equ	22	;# 
   106     0017                     CCP1CON         equ	23	;# 
   107     0018                     RCSTA           equ	24	;# 
   108     0019                     TXREG           equ	25	;# 
   109     001A                     RCREG           equ	26	;# 
   110     001B                     CCPR2           equ	27	;# 
   111     001B                     CCPR2L          equ	27	;# 
   112     001C                     CCPR2H          equ	28	;# 
   113     001D                     CCP2CON         equ	29	;# 
   114     001E                     ADRESH          equ	30	;# 
   115     001F                     ADCON0          equ	31	;# 
   116     0081                     OPTION_REG      equ	129	;# 
   117     0085                     TRISA           equ	133	;# 
   118     0086                     TRISB           equ	134	;# 
   119     0087                     TRISC           equ	135	;# 
   120     0088                     TRISD           equ	136	;# 
   121     0089                     TRISE           equ	137	;# 
   122     008C                     PIE1            equ	140	;# 
   123     008D                     PIE2            equ	141	;# 
   124     008E                     PCON            equ	142	;# 
   125     008F                     OSCCON          equ	143	;# 
   126     0090                     OSCTUNE         equ	144	;# 
   127     0091                     SSPCON2         equ	145	;# 
   128     0092                     PR2             equ	146	;# 
   129     0093                     SSPADD          equ	147	;# 
   130     0093                     SSPMSK          equ	147	;# 
   131     0093                     MSK             equ	147	;# 
   132     0094                     SSPSTAT         equ	148	;# 
   133     0095                     WPUB            equ	149	;# 
   134     0096                     IOCB            equ	150	;# 
   135     0097                     VRCON           equ	151	;# 
   136     0098                     TXSTA           equ	152	;# 
   137     0099                     SPBRG           equ	153	;# 
   138     009A                     SPBRGH          equ	154	;# 
   139     009B                     PWM1CON         equ	155	;# 
   140     009C                     ECCPAS          equ	156	;# 
   141     009D                     PSTRCON         equ	157	;# 
   142     009E                     ADRESL          equ	158	;# 
   143     009F                     ADCON1          equ	159	;# 
   144     0105                     WDTCON          equ	261	;# 
   145     0107                     CM1CON0         equ	263	;# 
   146     0108                     CM2CON0         equ	264	;# 
   147     0109                     CM2CON1         equ	265	;# 
   148     010C                     EEDATA          equ	268	;# 
   149     010C                     EEDAT           equ	268	;# 
   150     010D                     EEADR           equ	269	;# 
   151     010E                     EEDATH          equ	270	;# 
   152     010F                     EEADRH          equ	271	;# 
   153     0185                     SRCON           equ	389	;# 
   154     0187                     BAUDCTL         equ	391	;# 
   155     0188                     ANSEL           equ	392	;# 
   156     0189                     ANSELH          equ	393	;# 
   157     018C                     EECON1          equ	396	;# 
   158     018D                     EECON2          equ	397	;# 
   159     0000                     INDF            equ	0	;# 
   160     0001                     TMR0            equ	1	;# 
   161     0002                     PCL             equ	2	;# 
   162     0003                     STATUS          equ	3	;# 
   163     0004                     FSR             equ	4	;# 
   164     0005                     PORTA           equ	5	;# 
   165     0006                     PORTB           equ	6	;# 
   166     0007                     PORTC           equ	7	;# 
   167     0008                     PORTD           equ	8	;# 
   168     0009                     PORTE           equ	9	;# 
   169     000A                     PCLATH          equ	10	;# 
   170     000B                     INTCON          equ	11	;# 
   171     000C                     PIR1            equ	12	;# 
   172     000D                     PIR2            equ	13	;# 
   173     000E                     TMR1            equ	14	;# 
   174     000E                     TMR1L           equ	14	;# 
   175     000F                     TMR1H           equ	15	;# 
   176     0010                     T1CON           equ	16	;# 
   177     0011                     TMR2            equ	17	;# 
   178     0012                     T2CON           equ	18	;# 
   179     0013                     SSPBUF          equ	19	;# 
   180     0014                     SSPCON          equ	20	;# 
   181     0015                     CCPR1           equ	21	;# 
   182     0015                     CCPR1L          equ	21	;# 
   183     0016                     CCPR1H          equ	22	;# 
   184     0017                     CCP1CON         equ	23	;# 
   185     0018                     RCSTA           equ	24	;# 
   186     0019                     TXREG           equ	25	;# 
   187     001A                     RCREG           equ	26	;# 
   188     001B                     CCPR2           equ	27	;# 
   189     001B                     CCPR2L          equ	27	;# 
   190     001C                     CCPR2H          equ	28	;# 
   191     001D                     CCP2CON         equ	29	;# 
   192     001E                     ADRESH          equ	30	;# 
   193     001F                     ADCON0          equ	31	;# 
   194     0081                     OPTION_REG      equ	129	;# 
   195     0085                     TRISA           equ	133	;# 
   196     0086                     TRISB           equ	134	;# 
   197     0087                     TRISC           equ	135	;# 
   198     0088                     TRISD           equ	136	;# 
   199     0089                     TRISE           equ	137	;# 
   200     008C                     PIE1            equ	140	;# 
   201     008D                     PIE2            equ	141	;# 
   202     008E                     PCON            equ	142	;# 
   203     008F                     OSCCON          equ	143	;# 
   204     0090                     OSCTUNE         equ	144	;# 
   205     0091                     SSPCON2         equ	145	;# 
   206     0092                     PR2             equ	146	;# 
   207     0093                     SSPADD          equ	147	;# 
   208     0093                     SSPMSK          equ	147	;# 
   209     0093                     MSK             equ	147	;# 
   210     0094                     SSPSTAT         equ	148	;# 
   211     0095                     WPUB            equ	149	;# 
   212     0096                     IOCB            equ	150	;# 
   213     0097                     VRCON           equ	151	;# 
   214     0098                     TXSTA           equ	152	;# 
   215     0099                     SPBRG           equ	153	;# 
   216     009A                     SPBRGH          equ	154	;# 
   217     009B                     PWM1CON         equ	155	;# 
   218     009C                     ECCPAS          equ	156	;# 
   219     009D                     PSTRCON         equ	157	;# 
   220     009E                     ADRESL          equ	158	;# 
   221     009F                     ADCON1          equ	159	;# 
   222     0105                     WDTCON          equ	261	;# 
   223     0107                     CM1CON0         equ	263	;# 
   224     0108                     CM2CON0         equ	264	;# 
   225     0109                     CM2CON1         equ	265	;# 
   226     010C                     EEDATA          equ	268	;# 
   227     010C                     EEDAT           equ	268	;# 
   228     010D                     EEADR           equ	269	;# 
   229     010E                     EEDATH          equ	270	;# 
   230     010F                     EEADRH          equ	271	;# 
   231     0185                     SRCON           equ	389	;# 
   232     0187                     BAUDCTL         equ	391	;# 
   233     0188                     ANSEL           equ	392	;# 
   234     0189                     ANSELH          equ	393	;# 
   235     018C                     EECON1          equ	396	;# 
   236     018D                     EECON2          equ	397	;# 
   237     0000                     INDF            equ	0	;# 
   238     0001                     TMR0            equ	1	;# 
   239     0002                     PCL             equ	2	;# 
   240     0003                     STATUS          equ	3	;# 
   241     0004                     FSR             equ	4	;# 
   242     0005                     PORTA           equ	5	;# 
   243     0006                     PORTB           equ	6	;# 
   244     0007                     PORTC           equ	7	;# 
   245     0008                     PORTD           equ	8	;# 
   246     0009                     PORTE           equ	9	;# 
   247     000A                     PCLATH          equ	10	;# 
   248     000B                     INTCON          equ	11	;# 
   249     000C                     PIR1            equ	12	;# 
   250     000D                     PIR2            equ	13	;# 
   251     000E                     TMR1            equ	14	;# 
   252     000E                     TMR1L           equ	14	;# 
   253     000F                     TMR1H           equ	15	;# 
   254     0010                     T1CON           equ	16	;# 
   255     0011                     TMR2            equ	17	;# 
   256     0012                     T2CON           equ	18	;# 
   257     0013                     SSPBUF          equ	19	;# 
   258     0014                     SSPCON          equ	20	;# 
   259     0015                     CCPR1           equ	21	;# 
   260     0015                     CCPR1L          equ	21	;# 
   261     0016                     CCPR1H          equ	22	;# 
   262     0017                     CCP1CON         equ	23	;# 
   263     0018                     RCSTA           equ	24	;# 
   264     0019                     TXREG           equ	25	;# 
   265     001A                     RCREG           equ	26	;# 
   266     001B                     CCPR2           equ	27	;# 
   267     001B                     CCPR2L          equ	27	;# 
   268     001C                     CCPR2H          equ	28	;# 
   269     001D                     CCP2CON         equ	29	;# 
   270     001E                     ADRESH          equ	30	;# 
   271     001F                     ADCON0          equ	31	;# 
   272     0081                     OPTION_REG      equ	129	;# 
   273     0085                     TRISA           equ	133	;# 
   274     0086                     TRISB           equ	134	;# 
   275     0087                     TRISC           equ	135	;# 
   276     0088                     TRISD           equ	136	;# 
   277     0089                     TRISE           equ	137	;# 
   278     008C                     PIE1            equ	140	;# 
   279     008D                     PIE2            equ	141	;# 
   280     008E                     PCON            equ	142	;# 
   281     008F                     OSCCON          equ	143	;# 
   282     0090                     OSCTUNE         equ	144	;# 
   283     0091                     SSPCON2         equ	145	;# 
   284     0092                     PR2             equ	146	;# 
   285     0093                     SSPADD          equ	147	;# 
   286     0093                     SSPMSK          equ	147	;# 
   287     0093                     MSK             equ	147	;# 
   288     0094                     SSPSTAT         equ	148	;# 
   289     0095                     WPUB            equ	149	;# 
   290     0096                     IOCB            equ	150	;# 
   291     0097                     VRCON           equ	151	;# 
   292     0098                     TXSTA           equ	152	;# 
   293     0099                     SPBRG           equ	153	;# 
   294     009A                     SPBRGH          equ	154	;# 
   295     009B                     PWM1CON         equ	155	;# 
   296     009C                     ECCPAS          equ	156	;# 
   297     009D                     PSTRCON         equ	157	;# 
   298     009E                     ADRESL          equ	158	;# 
   299     009F                     ADCON1          equ	159	;# 
   300     0105                     WDTCON          equ	261	;# 
   301     0107                     CM1CON0         equ	263	;# 
   302     0108                     CM2CON0         equ	264	;# 
   303     0109                     CM2CON1         equ	265	;# 
   304     010C                     EEDATA          equ	268	;# 
   305     010C                     EEDAT           equ	268	;# 
   306     010D                     EEADR           equ	269	;# 
   307     010E                     EEDATH          equ	270	;# 
   308     010F                     EEADRH          equ	271	;# 
   309     0185                     SRCON           equ	389	;# 
   310     0187                     BAUDCTL         equ	391	;# 
   311     0188                     ANSEL           equ	392	;# 
   312     0189                     ANSELH          equ	393	;# 
   313     018C                     EECON1          equ	396	;# 
   314     018D                     EECON2          equ	397	;# 
   315                           
   316                           	psect	idataBANK0
   317     094F                     __pidataBANK0:
   318                           
   319                           ;initializer for _lcd
   320     094F  3407               	retlw	7
   321     0950  3400               	retlw	0
   322     0951  341A               	retlw	26
   323     0952  342C               	retlw	44
   324     0953  343E               	retlw	62
   325                           
   326                           ;initializer for _pos_y
   327     0954  3402               	retlw	2
   328                           
   329                           ;initializer for _pos_x
   330     0955  3408               	retlw	8
   331                           
   332                           	psect	strings
   333     0800                     __pstrings:
   334     0800                     stringtab:
   335     0800                     __stringtab:
   336     0800                     stringcode:	
   337                           ;	String table - string pointers are 1 byte each
   338                           
   339     0800                     stringdir:
   340     0800  3008               	movlw	high stringdir
   341     0801  008A               	movwf	10
   342     0802  0804               	movf	4,w
   343     0803  0A84               	incf	4,f
   344     0804  0782               	addwf	2,f
   345     0805                     __stringbase:
   346     0805  3400               	retlw	0
   347     0806                     __end_of__stringtab:
   348     0806                     _flor:
   349     0806  340A               	retlw	10
   350     0807  341F               	retlw	31
   351     0808  341F               	retlw	31
   352     0809  340A               	retlw	10
   353     080A  3404               	retlw	4
   354     080B  3404               	retlw	4
   355     080C  3404               	retlw	4
   356     080D  3400               	retlw	0
   357     080E                     __end_of_flor:
   358     080E                     _nube:
   359     080E  3400               	retlw	0
   360     080F  3406               	retlw	6
   361     0810  340F               	retlw	15
   362     0811  341F               	retlw	31
   363     0812  341F               	retlw	31
   364     0813  340E               	retlw	14
   365     0814  3400               	retlw	0
   366     0815  3400               	retlw	0
   367     0816                     __end_of_nube:
   368     0816                     _arbol:
   369     0816  3404               	retlw	4
   370     0817  340E               	retlw	14
   371     0818  340E               	retlw	14
   372     0819  341F               	retlw	31
   373     081A  3404               	retlw	4
   374     081B  3404               	retlw	4
   375     081C  3404               	retlw	4
   376     081D  3400               	retlw	0
   377     081E                     __end_of_arbol:
   378     081E                     _bob_reves:
   379     081E  340A               	retlw	10
   380     081F  340E               	retlw	14
   381     0820  3415               	retlw	21
   382     0821  341F               	retlw	31
   383     0822  340E               	retlw	14
   384     0823  341F               	retlw	31
   385     0824  340E               	retlw	14
   386     0825  3400               	retlw	0
   387     0826                     __end_of_bob_reves:
   388     0826                     _casa2:
   389     0826  3410               	retlw	16
   390     0827  3418               	retlw	24
   391     0828  341C               	retlw	28
   392     0829  341F               	retlw	31
   393     082A  341C               	retlw	28
   394     082B  341C               	retlw	28
   395     082C  340C               	retlw	12
   396     082D  3400               	retlw	0
   397     082E                     __end_of_casa2:
   398     082E                     _casa1:
   399     082E  3401               	retlw	1
   400     082F  3403               	retlw	3
   401     0830  3407               	retlw	7
   402     0831  341F               	retlw	31
   403     0832  3407               	retlw	7
   404     0833  3407               	retlw	7
   405     0834  3406               	retlw	6
   406     0835  3400               	retlw	0
   407     0836                     __end_of_casa1:
   408     0836                     _suelo:
   409     0836  341F               	retlw	31
   410     0837  341F               	retlw	31
   411     0838  341F               	retlw	31
   412     0839  341F               	retlw	31
   413     083A  341F               	retlw	31
   414     083B  341F               	retlw	31
   415     083C  341F               	retlw	31
   416     083D  341F               	retlw	31
   417     083E                     __end_of_suelo:
   418     083E                     _bob:
   419     083E  340E               	retlw	14
   420     083F  341F               	retlw	31
   421     0840  340E               	retlw	14
   422     0841  341F               	retlw	31
   423     0842  3415               	retlw	21
   424     0843  340E               	retlw	14
   425     0844  340A               	retlw	10
   426     0845  3400               	retlw	0
   427     0846                     __end_of_bob:
   428     0006                     _PORTB          set	6
   429     0005                     _PORTA          set	5
   430     0005                     _PORTAbits      set	5
   431     001E                     _ADRESH         set	30
   432     001F                     _ADCON0         set	31
   433     0007                     _PORTC          set	7
   434     00F9                     _GO_nDONE       set	249
   435     0087                     _TRISC          set	135
   436     0086                     _TRISB          set	134
   437     0085                     _TRISA          set	133
   438     0085                     _TRISAbits      set	133
   439     009E                     _ADRESL         set	158
   440     009F                     _ADCON1         set	159
   441     0189                     _ANSELH         set	393
   442     0188                     _ANSEL          set	392
   443     0846                     STR_1:
   444     0846  3420               	retlw	32	;' '
   445     0847  3400               	retlw	0
   446     0846                     STR_2           equ	STR_1
   447     0846                     STR_3           equ	STR_1
   448     0846                     STR_4           equ	STR_1
   449     0846                     STR_5           equ	STR_1
   450     0846                     STR_6           equ	STR_1
   451                           
   452                           	psect	cinit
   453     07E6                     start_initialization:	
   454                           ; #config settings
   455                           
   456     07E6                     __initialization:
   457                           
   458                           ; Initialize objects allocated to BANK0
   459     07E6  1383               	bcf	3,7	;select IRP bank0
   460     07E7  3060               	movlw	low (__pdataBANK0+7)
   461     07E8  00FD               	movwf	btemp+-1
   462     07E9  3009               	movlw	high __pidataBANK0
   463     07EA  00FE               	movwf	btemp
   464     07EB  304F               	movlw	low __pidataBANK0
   465     07EC  00FF               	movwf	btemp+1
   466     07ED  3059               	movlw	low __pdataBANK0
   467     07EE  0084               	movwf	4
   468     07EF  120A  158A  2198  120A  118A  	fcall	init_ram0
   469                           
   470                           ; Clear objects allocated to BANK0
   471     07F4  303E               	movlw	low __pbssBANK0
   472     07F5  0084               	movwf	4
   473     07F6  3059               	movlw	low (__pbssBANK0+27)
   474     07F7  120A  158A  2156  120A  118A  	fcall	clear_ram0
   475     07FC                     end_of_initialization:	
   476                           ;End of C runtime variable initialization code
   477                           
   478     07FC                     __end_of__initialization:
   479     07FC  0183               	clrf	3
   480     07FD  120A  158A  2ECC   	ljmp	_main	;jump to C main() function
   481                           
   482                           	psect	bssBANK0
   483     003E                     __pbssBANK0:
   484     003E                     _fondo:
   485     003E                     	ds	20
   486     0052                     _nubes:
   487     0052                     	ds	3
   488     0055                     _seed:
   489     0055                     	ds	4
   490                           
   491                           	psect	dataBANK0
   492     0059                     __pdataBANK0:
   493     0059                     _lcd:
   494     0059                     	ds	5
   495     005E                     _pos_y:
   496     005E                     	ds	1
   497     005F                     _pos_x:
   498     005F                     	ds	1
   499                           
   500                           	psect	inittext
   501     0994                     init_fetch0:	
   502                           ;	Called with low address in FSR and high address in W
   503                           
   504     0994  087E               	movf	btemp,w
   505     0995  008A               	movwf	10
   506     0996  087F               	movf	btemp+1,w
   507     0997  0082               	movwf	2
   508     0998                     init_ram0:	
   509                           ;Called with:
   510                           ;	high address of idata address in btemp 
   511                           ;	low address of idata address in btemp+1 
   512                           ;	low address of data in FSR
   513                           ;	high address + 1 of data in btemp-1
   514                           
   515     0998  120A  158A  2194  120A  158A  	fcall	init_fetch0
   516     099D  0080               	movwf	0
   517     099E  0A84               	incf	4,f
   518     099F  0804               	movf	4,w
   519     09A0  067D               	xorwf	btemp+-1,w
   520     09A1  1903               	btfsc	3,2
   521     09A2  3400               	retlw	0
   522     09A3  0AFF               	incf	btemp+1,f
   523     09A4  1903               	btfsc	3,2
   524     09A5  0AFE               	incf	btemp,f
   525     09A6  2998               	goto	init_ram0
   526                           
   527                           	psect	clrtext
   528     0956                     clear_ram0:	
   529                           ;	Called with FSR containing the base address, and
   530                           ;	W with the last address+1
   531                           
   532     0956  0064               	clrwdt	;clear the watchdog before getting into this loop
   533     0957                     clrloop0:
   534     0957  0180               	clrf	0	;clear RAM location pointed to by FSR
   535     0958  0A84               	incf	4,f	;increment pointer
   536     0959  0604               	xorwf	4,w	;XOR with final address
   537     095A  1903               	btfsc	3,2	;have we reached the end yet?
   538     095B  3400               	retlw	0	;all done for this memory range, return
   539     095C  0604               	xorwf	4,w	;XOR again to restore value
   540     095D  2957               	goto	clrloop0	;do the next byte
   541                           
   542                           	psect	cstackCOMMON
   543     0070                     __pcstackCOMMON:
   544     0070                     ?_LCD_cg_ram_addr:
   545     0070                     ?_LCD_ram_write:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?_LCD_Write:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_LCD_putc:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_srand:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ?_generar_fondo:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ?_dibujar_fondo:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ?_pot_x:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0070                     ?_pot_y:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ?_checar_boton:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ?_mover_nubes:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0070                     ?_disparar:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     ?_dibujar_suelo:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     ?_ADC_Init:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0070                     ?_main:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0070                     ?_LCD_Out:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0070                     ?_ADC_Read:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0070                     ?___lmul:	
   594                           ; 2 bytes @ 0x0
   595                           
   596     0070                     srand@s:	
   597                           ; 4 bytes @ 0x0
   598                           
   599     0070                     ___lmul@multiplier:	
   600                           ; 2 bytes @ 0x0
   601                           
   602     0070                     ??_ADC_Init:	
   603                           ; 4 bytes @ 0x0
   604                           
   605     0070                     ??_LCD_Out:	
   606                           ; 1 bytes @ 0x0
   607                           
   608                           
   609                           ; 1 bytes @ 0x0
   610     0070                     	ds	2
   611     0072                     LCD_Out@c:
   612     0072                     ??_srand:	
   613                           ; 1 bytes @ 0x2
   614                           
   615     0072                     ??_ADC_Read:	
   616                           ; 1 bytes @ 0x2
   617                           
   618                           
   619                           ; 1 bytes @ 0x2
   620     0072                     	ds	1
   621     0073                     ??_LCD_Write:
   622     0073                     ??_LCD_putc:	
   623                           ; 1 bytes @ 0x3
   624                           
   625                           
   626                           ; 1 bytes @ 0x3
   627     0073                     	ds	1
   628     0074                     ADC_Read@channel:
   629     0074                     ___lmul@multiplicand:	
   630                           ; 1 bytes @ 0x4
   631                           
   632                           
   633                           ; 4 bytes @ 0x4
   634     0074                     	ds	1
   635     0075                     LCD_Write@c:
   636     0075                     LCD_putc@c:	
   637                           ; 1 bytes @ 0x5
   638                           
   639                           
   640                           ; 1 bytes @ 0x5
   641     0075                     	ds	1
   642     0076                     ?_LCD_Init:
   643     0076                     ?_LCD_putrs:	
   644                           ; 1 bytes @ 0x6
   645                           
   646     0076                     LCD_putrs@a:	
   647                           ; 1 bytes @ 0x6
   648                           
   649     0076                     LCD_Init@display:	
   650                           ; 1 bytes @ 0x6
   651                           
   652     0076                     ??_LCD_cg_ram_addr:	
   653                           ; 5 bytes @ 0x6
   654                           
   655     0076                     ??_LCD_ram_write:	
   656                           ; 1 bytes @ 0x6
   657                           
   658                           
   659                           ; 1 bytes @ 0x6
   660     0076                     	ds	1
   661     0077                     LCD_ram_write@data:
   662     0077                     LCD_putrs@i:	
   663                           ; 1 bytes @ 0x7
   664                           
   665     0077                     ??_LCD_putrs:	
   666                           ; 2 bytes @ 0x7
   667                           
   668                           
   669                           ; 1 bytes @ 0x7
   670     0077                     	ds	1
   671     0078                     ??___lmul:
   672                           
   673                           ; 1 bytes @ 0x8
   674     0078                     	ds	1
   675     0079                     disparar@moved:
   676     0079                     ___lmul@product:	
   677                           ; 1 bytes @ 0x9
   678                           
   679     0079                     ??_dibujar_fondo:	
   680                           ; 4 bytes @ 0x9
   681                           
   682     0079                     ??_pot_y:	
   683                           ; 1 bytes @ 0x9
   684                           
   685     0079                     ??_mover_nubes:	
   686                           ; 1 bytes @ 0x9
   687                           
   688                           
   689                           ; 1 bytes @ 0x9
   690     0079                     	ds	1
   691     007A                     dibujar_fondo@i_233:
   692     007A                     disparar@offset:	
   693                           ; 1 bytes @ 0xA
   694                           
   695     007A                     LCD_cg_ram_addr@addr:	
   696                           ; 1 bytes @ 0xA
   697                           
   698                           
   699                           ; 1 bytes @ 0xA
   700     007A                     	ds	1
   701     007B                     ?_LCD_custom_char:
   702     007B                     LCD_custom_char@x:	
   703                           ; 1 bytes @ 0xB
   704                           
   705     007B                     dibujar_fondo@i:	
   706                           ; 1 bytes @ 0xB
   707                           
   708     007B                     pot_y@adc_y:	
   709                           ; 1 bytes @ 0xB
   710                           
   711     007B                     ??_LCD_Init:	
   712                           ; 2 bytes @ 0xB
   713                           
   714     007B                     ??_checar_boton:	
   715                           ; 1 bytes @ 0xB
   716                           
   717                           
   718                           ; 1 bytes @ 0xB
   719     007B                     	ds	1
   720     007C                     ??_LCD_custom_char:
   721                           
   722                           ; 1 bytes @ 0xC
   723     007C                     	ds	1
   724     007D                     LCD_Init@cmd:
   725     007D                     ??_generar_fondo:	
   726                           ; 1 bytes @ 0xD
   727                           
   728     007D                     ??___awmod:	
   729                           ; 1 bytes @ 0xD
   730                           
   731                           
   732                           ; 1 bytes @ 0xD
   733     007D                     	ds	1
   734     007E                     ??_dibujar_suelo:
   735                           
   736                           	psect	cstackBANK0
   737     0020                     __pcstackBANK0:	
   738                           ; 1 bytes @ 0xE
   739                           
   740     0020                     ?_rand:
   741     0020                     LCD_custom_char@pos:	
   742                           ; 2 bytes @ 0x0
   743                           
   744     0020                     _mover_nubes$220:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     0020                     ??_disparar:	
   748                           ; 2 bytes @ 0x0
   749                           
   750                           
   751                           ; 1 bytes @ 0x0
   752     0020                     	ds	1
   753     0021                     LCD_custom_char@i:
   754                           
   755                           ; 1 bytes @ 0x1
   756     0021                     	ds	1
   757     0022                     dibujar_suelo@i:
   758     0022                     mover_nubes@i:	
   759                           ; 1 bytes @ 0x2
   760                           
   761     0022                     ??_rand:	
   762                           ; 1 bytes @ 0x2
   763                           
   764                           
   765                           ; 1 bytes @ 0x2
   766     0022                     	ds	4
   767     0026                     ?___awmod:
   768     0026                     ___awmod@divisor:	
   769                           ; 2 bytes @ 0x6
   770                           
   771                           
   772                           ; 2 bytes @ 0x6
   773     0026                     	ds	2
   774     0028                     ___awmod@dividend:
   775                           
   776                           ; 2 bytes @ 0x8
   777     0028                     	ds	2
   778     002A                     ___awmod@counter:
   779                           
   780                           ; 1 bytes @ 0xA
   781     002A                     	ds	1
   782     002B                     ___awmod@sign:
   783                           
   784                           ; 1 bytes @ 0xB
   785     002B                     	ds	1
   786     002C                     generar_fondo@p:
   787                           
   788                           ; 1 bytes @ 0xC
   789     002C                     	ds	1
   790     002D                     generar_fondo@p_226:
   791                           
   792                           ; 1 bytes @ 0xD
   793     002D                     	ds	1
   794     002E                     generar_fondo@p_228:
   795                           
   796                           ; 1 bytes @ 0xE
   797     002E                     	ds	1
   798     002F                     generar_fondo@i_223:
   799                           
   800                           ; 1 bytes @ 0xF
   801     002F                     	ds	1
   802     0030                     generar_fondo@i_225:
   803                           
   804                           ; 1 bytes @ 0x10
   805     0030                     	ds	1
   806     0031                     generar_fondo@i_227:
   807                           
   808                           ; 1 bytes @ 0x11
   809     0031                     	ds	1
   810     0032                     generar_fondo@i:
   811                           
   812                           ; 1 bytes @ 0x12
   813     0032                     	ds	1
   814     0033                     generar_fondo@i_229:
   815                           
   816                           ; 1 bytes @ 0x13
   817     0033                     	ds	1
   818     0034                     ??_pot_x:
   819                           
   820                           ; 1 bytes @ 0x14
   821     0034                     	ds	2
   822     0036                     _pot_x$211:
   823                           
   824                           ; 2 bytes @ 0x16
   825     0036                     	ds	2
   826     0038                     _pot_x$212:
   827                           
   828                           ; 2 bytes @ 0x18
   829     0038                     	ds	2
   830     003A                     pot_x@adc_x:
   831                           
   832                           ; 2 bytes @ 0x1A
   833     003A                     	ds	2
   834     003C                     pot_x@prev_x:
   835                           
   836                           ; 1 bytes @ 0x1C
   837     003C                     	ds	1
   838     003D                     ??_main:
   839                           
   840                           ; 1 bytes @ 0x1D
   841     003D                     	ds	1
   842                           
   843                           	psect	maintext
   844     0ECC                     __pmaintext:	
   845 ;;
   846 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   847 ;;
   848 ;; *************** function _main *****************
   849 ;; Defined at:
   850 ;;		line 161 in file "main.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : B00/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0
   866 ;;      Temps:          0       1       0       0       0
   867 ;;      Totals:         0       1       0       0       0
   868 ;;Total ram usage:        1 bytes
   869 ;; Hardware stack levels required when called: 5
   870 ;; This function calls:
   871 ;;		_ADC_Init
   872 ;;		_LCD_Init
   873 ;;		_LCD_Write
   874 ;;		_LCD_custom_char
   875 ;;		_LCD_putc
   876 ;;		_checar_boton
   877 ;;		_dibujar_fondo
   878 ;;		_dibujar_suelo
   879 ;;		_generar_fondo
   880 ;;		_mover_nubes
   881 ;;		_pot_x
   882 ;;		_pot_y
   883 ;;		_srand
   884 ;; This function is called by:
   885 ;;		Startup code after reset
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889     0ECC                     _main:	
   890                           ;psect for function _main
   891                           
   892     0ECC                     l2388:	
   893                           ;incstack = 0
   894                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   895                           
   896                           
   897                           ;main.c: 162:     while(1){
   898     0ECC  1683               	bsf	3,5	;RP0=1, select bank1
   899     0ECD  1303               	bcf	3,6	;RP1=0, select bank1
   900     0ECE  1505               	bsf	5,2	;volatile
   901                           
   902                           ;main.c: 163:         pot_x();
   903     0ECF  1185               	bcf	5,3	;volatile
   904                           
   905                           ;main.c: 164:         pot_y();
   906     0ED0  1283               	bcf	3,5	;RP0=0, select bank0
   907     0ED1  1303               	bcf	3,6	;RP1=0, select bank0
   908     0ED2  1185               	bcf	5,3	;volatile
   909     0ED3                     l2390:
   910                           
   911                           ;main.c: 166:         mover_nubes();
   912     0ED3  120A  158A  2177  120A  158A  	fcall	_ADC_Init
   913     0ED8                     l2392:
   914                           
   915                           ;main.c: 167:     }
   916     0ED8  3076               	movlw	LCD_Init@display& (0+255)
   917     0ED9  0084               	movwf	4
   918     0EDA  1283               	bcf	3,5	;RP0=0, select bank0
   919     0EDB  1303               	bcf	3,6	;RP1=0, select bank0
   920     0EDC  0859               	movf	_lcd,w
   921     0EDD  0080               	movwf	0
   922     0EDE  0A84               	incf	4,f
   923     0EDF  085A               	movf	_lcd+1,w
   924     0EE0  0080               	movwf	0
   925     0EE1  0A84               	incf	4,f
   926     0EE2  085B               	movf	_lcd+2,w
   927     0EE3  0080               	movwf	0
   928     0EE4  0A84               	incf	4,f
   929     0EE5  085C               	movf	_lcd+3,w
   930     0EE6  0080               	movwf	0
   931     0EE7  0A84               	incf	4,f
   932     0EE8  085D               	movf	_lcd+4,w
   933     0EE9  0080               	movwf	0
   934     0EEA  120A  158A  24B5  120A  158A  	fcall	_LCD_Init
   935     0EEF                     l2394:
   936     0EEF  3000               	movlw	0
   937     0EF0  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
   938     0EF5                     l2396:
   939     0EF5  3001               	movlw	1
   940     0EF6  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
   941     0EFB                     l2398:
   942                           
   943                           ;main.c: 171: 
   944     0EFB  3039               	movlw	(low ((_bob-__stringbase)| (0+32768)))& (0+255)
   945     0EFC  00FB               	movwf	LCD_custom_char@x
   946     0EFD  3000               	movlw	0
   947     0EFE  120A  158A  2243  120A  158A  	fcall	_LCD_custom_char
   948     0F03                     l2400:
   949                           
   950                           ;main.c: 172: 
   951     0F03  3031               	movlw	(low ((_suelo-__stringbase)| (0+32768)))& (0+255)
   952     0F04  00FB               	movwf	LCD_custom_char@x
   953     0F05  3001               	movlw	1
   954     0F06  120A  158A  2243  120A  158A  	fcall	_LCD_custom_char
   955     0F0B                     l2402:
   956                           
   957                           ;main.c: 173: void pot_x(void){
   958     0F0B  3029               	movlw	(low ((_casa1-__stringbase)| (0+32768)))& (0+255)
   959     0F0C  00FB               	movwf	LCD_custom_char@x
   960     0F0D  3002               	movlw	2
   961     0F0E  120A  158A  2243  120A  158A  	fcall	_LCD_custom_char
   962     0F13                     l2404:
   963                           
   964                           ;main.c: 174:     unsigned int adc_x = ADC_Read(0);
   965     0F13  3021               	movlw	(low ((_casa2-__stringbase)| (0+32768)))& (0+255)
   966     0F14  00FB               	movwf	LCD_custom_char@x
   967     0F15  3003               	movlw	3
   968     0F16  120A  158A  2243  120A  158A  	fcall	_LCD_custom_char
   969     0F1B                     l2406:
   970                           
   971                           ;main.c: 175:     uint8_t prev_x = pos_x;
   972     0F1B  3019               	movlw	(low ((_bob_reves-__stringbase)| (0+32768)))& (0+255)
   973     0F1C  00FB               	movwf	LCD_custom_char@x
   974     0F1D  3004               	movlw	4
   975     0F1E  120A  158A  2243  120A  158A  	fcall	_LCD_custom_char
   976     0F23                     l2408:
   977                           
   978                           ;main.c: 176: 
   979     0F23  3011               	movlw	(low ((_arbol-__stringbase)| (0+32768)))& (0+255)
   980     0F24  00FB               	movwf	LCD_custom_char@x
   981     0F25  3005               	movlw	5
   982     0F26  120A  158A  2243  120A  158A  	fcall	_LCD_custom_char
   983     0F2B                     l2410:
   984                           
   985                           ;main.c: 177:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
   986     0F2B  3009               	movlw	(low ((_nube-__stringbase)| (0+32768)))& (0+255)
   987     0F2C  00FB               	movwf	LCD_custom_char@x
   988     0F2D  3006               	movlw	6
   989     0F2E  120A  158A  2243  120A  158A  	fcall	_LCD_custom_char
   990     0F33                     l2412:
   991                           
   992                           ;main.c: 178:     LCD_putrs(" ");
   993     0F33  3001               	movlw	(low ((_flor-__stringbase)| (0+32768)))& (0+255)
   994     0F34  00FB               	movwf	LCD_custom_char@x
   995     0F35  3007               	movlw	7
   996     0F36  120A  158A  2243  120A  158A  	fcall	_LCD_custom_char
   997     0F3B                     l2414:
   998                           
   999                           ;main.c: 180:     if(adc_x > 600){
  1000     0F3B  307B               	movlw	123
  1001     0F3C  00F0               	movwf	srand@s
  1002     0F3D  3000               	movlw	0
  1003     0F3E  00F1               	movwf	srand@s+1
  1004     0F3F  120A  158A  216A  120A  158A  	fcall	_srand
  1005     0F44                     l2416:
  1006     0F44  3000               	movlw	0
  1007     0F45  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1008     0F4A                     l2418:
  1009     0F4A  3001               	movlw	1
  1010     0F4B  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1011     0F50                     l2420:
  1012                           
  1013                           ;main.c: 183:         pos_x = (pos_x > 0) ? pos_x - 1 : 19;
  1014     0F50  120A  158A  21F1  120A  158A  	fcall	_dibujar_suelo
  1015     0F55                     l2422:
  1016                           
  1017                           ;main.c: 184:     }
  1018     0F55  120A  158A  2561  120A  158A  	fcall	_generar_fondo
  1019     0F5A                     l2424:
  1020                           
  1021                           ;main.c: 185: 
  1022     0F5A  120A  158A  23BC  120A  158A  	fcall	_dibujar_fondo
  1023     0F5F                     l2426:
  1024     0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  1025     0F60  1303               	bcf	3,6	;RP1=0, select bank0
  1026     0F61  085E               	movf	_pos_y,w
  1027     0F62  1D03               	btfss	3,2
  1028     0F63  2F65               	goto	u3321
  1029     0F64  2F66               	goto	u3320
  1030     0F65                     u3321:
  1031     0F65  2F81               	goto	l2430
  1032     0F66                     u3320:
  1033     0F66                     l2428:
  1034     0F66  085F               	movf	_pos_x,w
  1035     0F67  3E80               	addlw	128
  1036     0F68  00BD               	movwf	??_main
  1037     0F69  3004               	movlw	4
  1038     0F6A                     u3335:
  1039     0F6A  1003               	clrc
  1040     0F6B  0CBD               	rrf	??_main,f
  1041     0F6C  3EFF               	addlw	-1
  1042     0F6D  1D03               	skipz
  1043     0F6E  2F6A               	goto	u3335
  1044     0F6F  083D               	movf	??_main,w
  1045     0F70  390F               	andlw	15
  1046     0F71  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1047     0F76  1283               	bcf	3,5	;RP0=0, select bank0
  1048     0F77  1303               	bcf	3,6	;RP1=0, select bank0
  1049     0F78  085F               	movf	_pos_x,w
  1050     0F79  3E80               	addlw	128
  1051     0F7A  390F               	andlw	15
  1052     0F7B  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1053     0F80  2FE2               	goto	l139
  1054     0F81                     l2430:
  1055     0F81  035E               	decf	_pos_y,w
  1056     0F82  1D03               	btfss	3,2
  1057     0F83  2F85               	goto	u3341
  1058     0F84  2F86               	goto	u3340
  1059     0F85                     u3341:
  1060     0F85  2FA1               	goto	l2434
  1061     0F86                     u3340:
  1062     0F86                     l2432:
  1063     0F86  085F               	movf	_pos_x,w
  1064     0F87  3EC0               	addlw	192
  1065     0F88  00BD               	movwf	??_main
  1066     0F89  3004               	movlw	4
  1067     0F8A                     u3355:
  1068     0F8A  1003               	clrc
  1069     0F8B  0CBD               	rrf	??_main,f
  1070     0F8C  3EFF               	addlw	-1
  1071     0F8D  1D03               	skipz
  1072     0F8E  2F8A               	goto	u3355
  1073     0F8F  083D               	movf	??_main,w
  1074     0F90  390F               	andlw	15
  1075     0F91  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1076     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  1077     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  1078     0F98  085F               	movf	_pos_x,w
  1079     0F99  3EC0               	addlw	192
  1080     0F9A  390F               	andlw	15
  1081     0F9B  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1082     0FA0  2FE2               	goto	l139
  1083     0FA1                     l2434:
  1084     0FA1  3002               	movlw	2
  1085     0FA2  065E               	xorwf	_pos_y,w
  1086     0FA3  1D03               	btfss	3,2
  1087     0FA4  2FA6               	goto	u3361
  1088     0FA5  2FA7               	goto	u3360
  1089     0FA6                     u3361:
  1090     0FA6  2FC2               	goto	l2438
  1091     0FA7                     u3360:
  1092     0FA7                     l2436:
  1093     0FA7  085F               	movf	_pos_x,w
  1094     0FA8  3E94               	addlw	148
  1095     0FA9  00BD               	movwf	??_main
  1096     0FAA  3004               	movlw	4
  1097     0FAB                     u3375:
  1098     0FAB  1003               	clrc
  1099     0FAC  0CBD               	rrf	??_main,f
  1100     0FAD  3EFF               	addlw	-1
  1101     0FAE  1D03               	skipz
  1102     0FAF  2FAB               	goto	u3375
  1103     0FB0  083D               	movf	??_main,w
  1104     0FB1  390F               	andlw	15
  1105     0FB2  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1106     0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  1107     0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  1108     0FB9  085F               	movf	_pos_x,w
  1109     0FBA  3E94               	addlw	148
  1110     0FBB  390F               	andlw	15
  1111     0FBC  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1112     0FC1  2FE2               	goto	l139
  1113     0FC2                     l2438:
  1114     0FC2  3003               	movlw	3
  1115     0FC3  065E               	xorwf	_pos_y,w
  1116     0FC4  1D03               	btfss	3,2
  1117     0FC5  2FC7               	goto	u3381
  1118     0FC6  2FC8               	goto	u3380
  1119     0FC7                     u3381:
  1120     0FC7  2FE2               	goto	l139
  1121     0FC8                     u3380:
  1122     0FC8                     l2440:
  1123     0FC8  085F               	movf	_pos_x,w
  1124     0FC9  3ED4               	addlw	212
  1125     0FCA  00BD               	movwf	??_main
  1126     0FCB  3004               	movlw	4
  1127     0FCC                     u3395:
  1128     0FCC  1003               	clrc
  1129     0FCD  0CBD               	rrf	??_main,f
  1130     0FCE  3EFF               	addlw	-1
  1131     0FCF  1D03               	skipz
  1132     0FD0  2FCC               	goto	u3395
  1133     0FD1  083D               	movf	??_main,w
  1134     0FD2  390F               	andlw	15
  1135     0FD3  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1136     0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  1137     0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  1138     0FDA  085F               	movf	_pos_x,w
  1139     0FDB  3ED4               	addlw	212
  1140     0FDC  390F               	andlw	15
  1141     0FDD  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1142     0FE2                     l139:
  1143                           
  1144                           ;main.c: 188:         dibujar_fondo();
  1145     0FE2  3000               	movlw	0
  1146     0FE3  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  1147     0FE8                     l140:	
  1148                           ;main.c: 190: 
  1149                           
  1150                           
  1151                           ;main.c: 191:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  1152     0FE8  120A  118A  21E7  120A  158A  	fcall	_pot_x
  1153                           
  1154                           ;main.c: 192:     LCD_putc(0);
  1155     0FED  120A  118A  209A  120A  158A  	fcall	_pot_y
  1156     0FF2                     l2442:
  1157                           
  1158                           ;main.c: 193:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1159     0FF2  120A  158A  215E  120A  158A  	fcall	_checar_boton
  1160     0FF7                     l2444:
  1161                           
  1162                           ;main.c: 194: }
  1163     0FF7  120A  158A  242A  120A  158A  	fcall	_mover_nubes
  1164     0FFC  2FE8               	goto	l140
  1165     0FFD  120A  118A  2800   	ljmp	start
  1166     1000                     __end_of_main:
  1167                           
  1168                           	psect	text1
  1169     096A                     __ptext1:	
  1170 ;; *************** function _srand *****************
  1171 ;; Defined at:
  1172 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\rand.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  s               2    0[COMMON] unsigned int 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1186 ;;      Params:         2       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0
  1189 ;;      Totals:         2       0       0       0       0
  1190 ;;Total ram usage:        2 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; This function calls:
  1193 ;;		Nothing
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199     096A                     _srand:	
  1200                           ;psect for function _srand
  1201                           
  1202     096A                     l2236:	
  1203                           ;incstack = 0
  1204                           ; Regs used in _srand: [wreg+status,2+status,0]
  1205                           
  1206     096A  0870               	movf	srand@s,w
  1207     096B  3EFF               	addlw	255
  1208     096C  1283               	bcf	3,5	;RP0=0, select bank0
  1209     096D  1303               	bcf	3,6	;RP1=0, select bank0
  1210     096E  00D5               	movwf	_seed
  1211     096F  0871               	movf	srand@s+1,w
  1212     0970  1803               	skipnc
  1213     0971  3E01               	addlw	1
  1214     0972  3EFF               	addlw	255
  1215     0973  00D6               	movwf	_seed+1
  1216     0974  01D7               	clrf	_seed+2
  1217     0975  01D8               	clrf	_seed+3
  1218     0976                     l1073:
  1219     0976  0008               	return
  1220     0977                     __end_of_srand:
  1221                           
  1222                           	psect	text2
  1223     009A                     __ptext2:	
  1224 ;; *************** function _pot_y *****************
  1225 ;; Defined at:
  1226 ;;		line 227 in file "main.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  adc_y           2   11[COMMON] unsigned int 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       0       0       0       0
  1241 ;;      Locals:         2       0       0       0       0
  1242 ;;      Temps:          2       0       0       0       0
  1243 ;;      Totals:         4       0       0       0       0
  1244 ;;Total ram usage:        4 bytes
  1245 ;; Hardware stack levels used: 1
  1246 ;; Hardware stack levels required when called: 3
  1247 ;; This function calls:
  1248 ;;		_ADC_Read
  1249 ;;		_LCD_Write
  1250 ;;		_LCD_putc
  1251 ;;		_LCD_putrs
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257     009A                     _pot_y:	
  1258                           ;psect for function _pot_y
  1259                           
  1260     009A                     l2302:	
  1261                           ;incstack = 0
  1262                           ; Regs used in _pot_y: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1263                           
  1264                           
  1265                           ;main.c: 228: void mover_nubes(void){
  1266     009A  3001               	movlw	1
  1267     009B  120A  158A  2219  120A  118A  	fcall	_ADC_Read
  1268     00A0  0871               	movf	?_ADC_Read+1,w
  1269     00A1  00FC               	movwf	pot_y@adc_y+1
  1270     00A2  0870               	movf	?_ADC_Read,w
  1271     00A3  00FB               	movwf	pot_y@adc_y
  1272     00A4                     l2304:
  1273     00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1274     00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1275     00A6  085E               	movf	_pos_y,w
  1276     00A7  1D03               	btfss	3,2
  1277     00A8  28AA               	goto	u3071
  1278     00A9  28AB               	goto	u3070
  1279     00AA                     u3071:
  1280     00AA  28C6               	goto	l2308
  1281     00AB                     u3070:
  1282     00AB                     l2306:
  1283     00AB  085F               	movf	_pos_x,w
  1284     00AC  3E80               	addlw	128
  1285     00AD  00F9               	movwf	??_pot_y
  1286     00AE  3004               	movlw	4
  1287     00AF                     u3085:
  1288     00AF  1003               	clrc
  1289     00B0  0CF9               	rrf	??_pot_y,f
  1290     00B1  3EFF               	addlw	-1
  1291     00B2  1D03               	skipz
  1292     00B3  28AF               	goto	u3085
  1293     00B4  0879               	movf	??_pot_y,w
  1294     00B5  390F               	andlw	15
  1295     00B6  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1296     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1297     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1298     00BD  085F               	movf	_pos_x,w
  1299     00BE  3E80               	addlw	128
  1300     00BF  390F               	andlw	15
  1301     00C0  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1302     00C5  2927               	goto	l215
  1303     00C6                     l2308:
  1304     00C6  035E               	decf	_pos_y,w
  1305     00C7  1D03               	btfss	3,2
  1306     00C8  28CA               	goto	u3091
  1307     00C9  28CB               	goto	u3090
  1308     00CA                     u3091:
  1309     00CA  28E6               	goto	l2312
  1310     00CB                     u3090:
  1311     00CB                     l2310:
  1312     00CB  085F               	movf	_pos_x,w
  1313     00CC  3EC0               	addlw	192
  1314     00CD  00F9               	movwf	??_pot_y
  1315     00CE  3004               	movlw	4
  1316     00CF                     u3105:
  1317     00CF  1003               	clrc
  1318     00D0  0CF9               	rrf	??_pot_y,f
  1319     00D1  3EFF               	addlw	-1
  1320     00D2  1D03               	skipz
  1321     00D3  28CF               	goto	u3105
  1322     00D4  0879               	movf	??_pot_y,w
  1323     00D5  390F               	andlw	15
  1324     00D6  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1325     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1326     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1327     00DD  085F               	movf	_pos_x,w
  1328     00DE  3EC0               	addlw	192
  1329     00DF  390F               	andlw	15
  1330     00E0  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1331     00E5  2927               	goto	l215
  1332     00E6                     l2312:
  1333     00E6  3002               	movlw	2
  1334     00E7  065E               	xorwf	_pos_y,w
  1335     00E8  1D03               	btfss	3,2
  1336     00E9  28EB               	goto	u3111
  1337     00EA  28EC               	goto	u3110
  1338     00EB                     u3111:
  1339     00EB  2907               	goto	l2316
  1340     00EC                     u3110:
  1341     00EC                     l2314:
  1342     00EC  085F               	movf	_pos_x,w
  1343     00ED  3E94               	addlw	148
  1344     00EE  00F9               	movwf	??_pot_y
  1345     00EF  3004               	movlw	4
  1346     00F0                     u3125:
  1347     00F0  1003               	clrc
  1348     00F1  0CF9               	rrf	??_pot_y,f
  1349     00F2  3EFF               	addlw	-1
  1350     00F3  1D03               	skipz
  1351     00F4  28F0               	goto	u3125
  1352     00F5  0879               	movf	??_pot_y,w
  1353     00F6  390F               	andlw	15
  1354     00F7  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1355     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1356     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1357     00FE  085F               	movf	_pos_x,w
  1358     00FF  3E94               	addlw	148
  1359     0100  390F               	andlw	15
  1360     0101  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1361     0106  2927               	goto	l215
  1362     0107                     l2316:
  1363     0107  3003               	movlw	3
  1364     0108  065E               	xorwf	_pos_y,w
  1365     0109  1D03               	btfss	3,2
  1366     010A  290C               	goto	u3131
  1367     010B  290D               	goto	u3130
  1368     010C                     u3131:
  1369     010C  2927               	goto	l215
  1370     010D                     u3130:
  1371     010D                     l2318:
  1372     010D  085F               	movf	_pos_x,w
  1373     010E  3ED4               	addlw	212
  1374     010F  00F9               	movwf	??_pot_y
  1375     0110  3004               	movlw	4
  1376     0111                     u3145:
  1377     0111  1003               	clrc
  1378     0112  0CF9               	rrf	??_pot_y,f
  1379     0113  3EFF               	addlw	-1
  1380     0114  1D03               	skipz
  1381     0115  2911               	goto	u3145
  1382     0116  0879               	movf	??_pot_y,w
  1383     0117  390F               	andlw	15
  1384     0118  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1385     011D  1283               	bcf	3,5	;RP0=0, select bank0
  1386     011E  1303               	bcf	3,6	;RP1=0, select bank0
  1387     011F  085F               	movf	_pos_x,w
  1388     0120  3ED4               	addlw	212
  1389     0121  390F               	andlw	15
  1390     0122  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1391     0127                     l215:
  1392                           
  1393                           ;main.c: 231:         LCD_putrs(" ");
  1394     0127  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1395     0128  00F6               	movwf	LCD_putrs@a
  1396     0129  120A  158A  21A7  120A  118A  	fcall	_LCD_putrs
  1397     012E                     l2320:
  1398                           
  1399                           ;main.c: 233:         do { if ( 1 == 0 ) { do { LCD_Write( (0x80 + nubes[i] & 0xF0) >> 4
      +                           ); LCD_Write( 0x80 + nubes[i] & 0x0F); } while ( 0 ); } else if ( 1 == 1 ) { do { LCD_W
      +                          rite( (0xC0 + nubes[i] & 0xF0) >> 4 ); LCD_Write( 0xC0 + nubes[i] & 0x0F); } while ( 0 )
      +                          ; } else if ( 1 == 2 ) { do { LCD_Write( (0x94 + nubes[i] & 0xF0) >> 4 ); LCD_Write( 0x9
      +                          4 + nubes[i] & 0x0F); } while ( 0 ); } else if ( 1 == 3 ) { do { LCD_Write( (0xD4 + nube
      +                          s[i] & 0xF0) >> 4 ); LCD_Write( 0xD4 + nubes[i] & 0x0F); } while ( 0 ); } } while ( 0 );
  1400     012E  3002               	movlw	2
  1401     012F  027C               	subwf	pot_y@adc_y+1,w
  1402     0130  3059               	movlw	89
  1403     0131  1903               	skipnz
  1404     0132  027B               	subwf	pot_y@adc_y,w
  1405     0133  1C03               	skipc
  1406     0134  2936               	goto	u3151
  1407     0135  2937               	goto	u3150
  1408     0136                     u3151:
  1409     0136  2941               	goto	l2326
  1410     0137                     u3150:
  1411     0137                     l2322:
  1412     0137  1283               	bcf	3,5	;RP0=0, select bank0
  1413     0138  1303               	bcf	3,6	;RP1=0, select bank0
  1414     0139  085E               	movf	_pos_y,w
  1415     013A  1903               	btfsc	3,2
  1416     013B  293D               	goto	u3161
  1417     013C  293E               	goto	u3160
  1418     013D                     u3161:
  1419     013D  2941               	goto	l2326
  1420     013E                     u3160:
  1421     013E                     l2324:
  1422                           
  1423                           ;main.c: 234:         LCD_putc(6);
  1424     013E  3001               	movlw	1
  1425     013F  02DE               	subwf	_pos_y,f
  1426                           
  1427                           ;main.c: 235:     }
  1428     0140  2954               	goto	l219
  1429     0141                     l2326:
  1430     0141  3001               	movlw	1
  1431     0142  027C               	subwf	pot_y@adc_y+1,w
  1432     0143  3090               	movlw	144
  1433     0144  1903               	skipnz
  1434     0145  027B               	subwf	pot_y@adc_y,w
  1435     0146  1803               	skipnc
  1436     0147  2949               	goto	u3171
  1437     0148  294A               	goto	u3170
  1438     0149                     u3171:
  1439     0149  2954               	goto	l219
  1440     014A                     u3170:
  1441     014A                     l2328:
  1442     014A  3002               	movlw	2
  1443     014B  1283               	bcf	3,5	;RP0=0, select bank0
  1444     014C  1303               	bcf	3,6	;RP1=0, select bank0
  1445     014D  025E               	subwf	_pos_y,w
  1446     014E  1803               	skipnc
  1447     014F  2951               	goto	u3181
  1448     0150  2952               	goto	u3180
  1449     0151                     u3181:
  1450     0151  2954               	goto	l219
  1451     0152                     u3180:
  1452     0152                     l2330:
  1453                           
  1454                           ;main.c: 236:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1455     0152  3001               	movlw	1
  1456     0153  07DE               	addwf	_pos_y,f
  1457     0154                     l219:	
  1458                           ;main.c: 239: 
  1459                           
  1460     0154  1283               	bcf	3,5	;RP0=0, select bank0
  1461     0155  1303               	bcf	3,6	;RP1=0, select bank0
  1462     0156  085E               	movf	_pos_y,w
  1463     0157  1D03               	btfss	3,2
  1464     0158  295A               	goto	u3191
  1465     0159  295B               	goto	u3190
  1466     015A                     u3191:
  1467     015A  2976               	goto	l2334
  1468     015B                     u3190:
  1469     015B                     l2332:
  1470     015B  085F               	movf	_pos_x,w
  1471     015C  3E80               	addlw	128
  1472     015D  00F9               	movwf	??_pot_y
  1473     015E  3004               	movlw	4
  1474     015F                     u3205:
  1475     015F  1003               	clrc
  1476     0160  0CF9               	rrf	??_pot_y,f
  1477     0161  3EFF               	addlw	-1
  1478     0162  1D03               	skipz
  1479     0163  295F               	goto	u3205
  1480     0164  0879               	movf	??_pot_y,w
  1481     0165  390F               	andlw	15
  1482     0166  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1483     016B  1283               	bcf	3,5	;RP0=0, select bank0
  1484     016C  1303               	bcf	3,6	;RP1=0, select bank0
  1485     016D  085F               	movf	_pos_x,w
  1486     016E  3E80               	addlw	128
  1487     016F  390F               	andlw	15
  1488     0170  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1489     0175  29D7               	goto	l235
  1490     0176                     l2334:
  1491     0176  035E               	decf	_pos_y,w
  1492     0177  1D03               	btfss	3,2
  1493     0178  297A               	goto	u3211
  1494     0179  297B               	goto	u3210
  1495     017A                     u3211:
  1496     017A  2996               	goto	l2338
  1497     017B                     u3210:
  1498     017B                     l2336:
  1499     017B  085F               	movf	_pos_x,w
  1500     017C  3EC0               	addlw	192
  1501     017D  00F9               	movwf	??_pot_y
  1502     017E  3004               	movlw	4
  1503     017F                     u3225:
  1504     017F  1003               	clrc
  1505     0180  0CF9               	rrf	??_pot_y,f
  1506     0181  3EFF               	addlw	-1
  1507     0182  1D03               	skipz
  1508     0183  297F               	goto	u3225
  1509     0184  0879               	movf	??_pot_y,w
  1510     0185  390F               	andlw	15
  1511     0186  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1512     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1513     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1514     018D  085F               	movf	_pos_x,w
  1515     018E  3EC0               	addlw	192
  1516     018F  390F               	andlw	15
  1517     0190  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1518     0195  29D7               	goto	l235
  1519     0196                     l2338:
  1520     0196  3002               	movlw	2
  1521     0197  065E               	xorwf	_pos_y,w
  1522     0198  1D03               	btfss	3,2
  1523     0199  299B               	goto	u3231
  1524     019A  299C               	goto	u3230
  1525     019B                     u3231:
  1526     019B  29B7               	goto	l2342
  1527     019C                     u3230:
  1528     019C                     l2340:
  1529     019C  085F               	movf	_pos_x,w
  1530     019D  3E94               	addlw	148
  1531     019E  00F9               	movwf	??_pot_y
  1532     019F  3004               	movlw	4
  1533     01A0                     u3245:
  1534     01A0  1003               	clrc
  1535     01A1  0CF9               	rrf	??_pot_y,f
  1536     01A2  3EFF               	addlw	-1
  1537     01A3  1D03               	skipz
  1538     01A4  29A0               	goto	u3245
  1539     01A5  0879               	movf	??_pot_y,w
  1540     01A6  390F               	andlw	15
  1541     01A7  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1542     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1543     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1544     01AE  085F               	movf	_pos_x,w
  1545     01AF  3E94               	addlw	148
  1546     01B0  390F               	andlw	15
  1547     01B1  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1548     01B6  29D7               	goto	l235
  1549     01B7                     l2342:
  1550     01B7  3003               	movlw	3
  1551     01B8  065E               	xorwf	_pos_y,w
  1552     01B9  1D03               	btfss	3,2
  1553     01BA  29BC               	goto	u3251
  1554     01BB  29BD               	goto	u3250
  1555     01BC                     u3251:
  1556     01BC  29D7               	goto	l235
  1557     01BD                     u3250:
  1558     01BD                     l2344:
  1559     01BD  085F               	movf	_pos_x,w
  1560     01BE  3ED4               	addlw	212
  1561     01BF  00F9               	movwf	??_pot_y
  1562     01C0  3004               	movlw	4
  1563     01C1                     u3265:
  1564     01C1  1003               	clrc
  1565     01C2  0CF9               	rrf	??_pot_y,f
  1566     01C3  3EFF               	addlw	-1
  1567     01C4  1D03               	skipz
  1568     01C5  29C1               	goto	u3265
  1569     01C6  0879               	movf	??_pot_y,w
  1570     01C7  390F               	andlw	15
  1571     01C8  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1572     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1573     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1574     01CF  085F               	movf	_pos_x,w
  1575     01D0  3ED4               	addlw	212
  1576     01D1  390F               	andlw	15
  1577     01D2  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1578     01D7                     l235:
  1579                           
  1580                           ;main.c: 240: 
  1581     01D7  3000               	movlw	0
  1582     01D8  120A  118A  2008  120A  118A  	fcall	_LCD_putc
  1583     01DD                     l2346:
  1584                           
  1585                           ;main.c: 241: 
  1586     01DD  300D               	movlw	13
  1587     01DE  00FA               	movwf	??_pot_y+1
  1588     01DF  30FB               	movlw	251
  1589     01E0  00F9               	movwf	??_pot_y
  1590     01E1                     u3417:
  1591     01E1  0BF9               	decfsz	??_pot_y,f
  1592     01E2  29E1               	goto	u3417
  1593     01E3  0BFA               	decfsz	??_pot_y+1,f
  1594     01E4  29E1               	goto	u3417
  1595     01E5  29E6               	nop2
  1596     01E6                     l236:
  1597     01E6  0008               	return
  1598     01E7                     __end_of_pot_y:
  1599                           
  1600                           	psect	text3
  1601     01E7                     __ptext3:	
  1602 ;; *************** function _pot_x *****************
  1603 ;; Defined at:
  1604 ;;		line 201 in file "main.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  adc_x           2   26[BANK0 ] unsigned int 
  1609 ;;  prev_x          1   28[BANK0 ] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       0       0       0       0
  1620 ;;      Locals:         0       7       0       0       0
  1621 ;;      Temps:          0       2       0       0       0
  1622 ;;      Totals:         0       9       0       0       0
  1623 ;;Total ram usage:        9 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 4
  1626 ;; This function calls:
  1627 ;;		_ADC_Read
  1628 ;;		_LCD_Write
  1629 ;;		_LCD_putc
  1630 ;;		_LCD_putrs
  1631 ;;		_dibujar_fondo
  1632 ;;		_generar_fondo
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638     01E7                     _pot_x:	
  1639                           ;psect for function _pot_x
  1640                           
  1641     01E7                     l2238:	
  1642                           ;incstack = 0
  1643                           ; Regs used in _pot_x: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1644                           
  1645                           
  1646                           ;main.c: 202:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  1647     01E7  3000               	movlw	0
  1648     01E8  120A  158A  2219  120A  118A  	fcall	_ADC_Read
  1649     01ED  0871               	movf	?_ADC_Read+1,w
  1650     01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1651     01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1652     01F0  00BB               	movwf	pot_x@adc_x+1
  1653     01F1  0870               	movf	?_ADC_Read,w
  1654     01F2  00BA               	movwf	pot_x@adc_x
  1655     01F3                     l2240:
  1656                           
  1657                           ;main.c: 203:     LCD_putrs(" ");
  1658     01F3  085F               	movf	_pos_x,w
  1659     01F4  00BC               	movwf	pot_x@prev_x
  1660     01F5                     l2242:
  1661     01F5  085E               	movf	_pos_y,w
  1662     01F6  1D03               	btfss	3,2
  1663     01F7  29F9               	goto	u2831
  1664     01F8  29FA               	goto	u2830
  1665     01F9                     u2831:
  1666     01F9  2A15               	goto	l2246
  1667     01FA                     u2830:
  1668     01FA                     l2244:
  1669     01FA  085F               	movf	_pos_x,w
  1670     01FB  3E80               	addlw	128
  1671     01FC  00B4               	movwf	??_pot_x
  1672     01FD  3004               	movlw	4
  1673     01FE                     u2845:
  1674     01FE  1003               	clrc
  1675     01FF  0CB4               	rrf	??_pot_x,f
  1676     0200  3EFF               	addlw	-1
  1677     0201  1D03               	skipz
  1678     0202  29FE               	goto	u2845
  1679     0203  0834               	movf	??_pot_x,w
  1680     0204  390F               	andlw	15
  1681     0205  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1682     020A  1283               	bcf	3,5	;RP0=0, select bank0
  1683     020B  1303               	bcf	3,6	;RP1=0, select bank0
  1684     020C  085F               	movf	_pos_x,w
  1685     020D  3E80               	addlw	128
  1686     020E  390F               	andlw	15
  1687     020F  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1688     0214  2A76               	goto	l162
  1689     0215                     l2246:
  1690     0215  035E               	decf	_pos_y,w
  1691     0216  1D03               	btfss	3,2
  1692     0217  2A19               	goto	u2851
  1693     0218  2A1A               	goto	u2850
  1694     0219                     u2851:
  1695     0219  2A35               	goto	l2250
  1696     021A                     u2850:
  1697     021A                     l2248:
  1698     021A  085F               	movf	_pos_x,w
  1699     021B  3EC0               	addlw	192
  1700     021C  00B4               	movwf	??_pot_x
  1701     021D  3004               	movlw	4
  1702     021E                     u2865:
  1703     021E  1003               	clrc
  1704     021F  0CB4               	rrf	??_pot_x,f
  1705     0220  3EFF               	addlw	-1
  1706     0221  1D03               	skipz
  1707     0222  2A1E               	goto	u2865
  1708     0223  0834               	movf	??_pot_x,w
  1709     0224  390F               	andlw	15
  1710     0225  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1711     022A  1283               	bcf	3,5	;RP0=0, select bank0
  1712     022B  1303               	bcf	3,6	;RP1=0, select bank0
  1713     022C  085F               	movf	_pos_x,w
  1714     022D  3EC0               	addlw	192
  1715     022E  390F               	andlw	15
  1716     022F  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1717     0234  2A76               	goto	l162
  1718     0235                     l2250:
  1719     0235  3002               	movlw	2
  1720     0236  065E               	xorwf	_pos_y,w
  1721     0237  1D03               	btfss	3,2
  1722     0238  2A3A               	goto	u2871
  1723     0239  2A3B               	goto	u2870
  1724     023A                     u2871:
  1725     023A  2A56               	goto	l2254
  1726     023B                     u2870:
  1727     023B                     l2252:
  1728     023B  085F               	movf	_pos_x,w
  1729     023C  3E94               	addlw	148
  1730     023D  00B4               	movwf	??_pot_x
  1731     023E  3004               	movlw	4
  1732     023F                     u2885:
  1733     023F  1003               	clrc
  1734     0240  0CB4               	rrf	??_pot_x,f
  1735     0241  3EFF               	addlw	-1
  1736     0242  1D03               	skipz
  1737     0243  2A3F               	goto	u2885
  1738     0244  0834               	movf	??_pot_x,w
  1739     0245  390F               	andlw	15
  1740     0246  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1741     024B  1283               	bcf	3,5	;RP0=0, select bank0
  1742     024C  1303               	bcf	3,6	;RP1=0, select bank0
  1743     024D  085F               	movf	_pos_x,w
  1744     024E  3E94               	addlw	148
  1745     024F  390F               	andlw	15
  1746     0250  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1747     0255  2A76               	goto	l162
  1748     0256                     l2254:
  1749     0256  3003               	movlw	3
  1750     0257  065E               	xorwf	_pos_y,w
  1751     0258  1D03               	btfss	3,2
  1752     0259  2A5B               	goto	u2891
  1753     025A  2A5C               	goto	u2890
  1754     025B                     u2891:
  1755     025B  2A76               	goto	l162
  1756     025C                     u2890:
  1757     025C                     l2256:
  1758     025C  085F               	movf	_pos_x,w
  1759     025D  3ED4               	addlw	212
  1760     025E  00B4               	movwf	??_pot_x
  1761     025F  3004               	movlw	4
  1762     0260                     u2905:
  1763     0260  1003               	clrc
  1764     0261  0CB4               	rrf	??_pot_x,f
  1765     0262  3EFF               	addlw	-1
  1766     0263  1D03               	skipz
  1767     0264  2A60               	goto	u2905
  1768     0265  0834               	movf	??_pot_x,w
  1769     0266  390F               	andlw	15
  1770     0267  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1771     026C  1283               	bcf	3,5	;RP0=0, select bank0
  1772     026D  1303               	bcf	3,6	;RP1=0, select bank0
  1773     026E  085F               	movf	_pos_x,w
  1774     026F  3ED4               	addlw	212
  1775     0270  390F               	andlw	15
  1776     0271  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1777     0276                     l162:
  1778                           
  1779                           ;main.c: 206:         pos_y--;
  1780     0276  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1781     0277  00F6               	movwf	LCD_putrs@a
  1782     0278  120A  158A  21A7  120A  118A  	fcall	_LCD_putrs
  1783     027D                     l2258:
  1784                           
  1785                           ;main.c: 208:         pos_y++;
  1786     027D  3002               	movlw	2
  1787     027E  1283               	bcf	3,5	;RP0=0, select bank0
  1788     027F  1303               	bcf	3,6	;RP1=0, select bank0
  1789     0280  023B               	subwf	pot_x@adc_x+1,w
  1790     0281  3059               	movlw	89
  1791     0282  1903               	skipnz
  1792     0283  023A               	subwf	pot_x@adc_x,w
  1793     0284  1C03               	skipc
  1794     0285  2A87               	goto	u2911
  1795     0286  2A88               	goto	u2910
  1796     0287                     u2911:
  1797     0287  2A9B               	goto	l2266
  1798     0288                     u2910:
  1799     0288                     l2260:
  1800                           
  1801                           ;main.c: 209:     }
  1802     0288  3013               	movlw	19
  1803     0289  025F               	subwf	_pos_x,w
  1804     028A  1C03               	skipc
  1805     028B  2A8D               	goto	u2921
  1806     028C  2A8E               	goto	u2920
  1807     028D                     u2921:
  1808     028D  2A91               	goto	l2264
  1809     028E                     u2920:
  1810     028E                     l2262:
  1811     028E  01B6               	clrf	_pot_x$211
  1812     028F  01B7               	clrf	_pot_x$211+1
  1813     0290  2A98               	goto	l167
  1814     0291                     l2264:
  1815     0291  085F               	movf	_pos_x,w
  1816     0292  3E01               	addlw	1
  1817     0293  00B6               	movwf	_pot_x$211
  1818     0294  3000               	movlw	0
  1819     0295  1803               	skipnc
  1820     0296  3001               	movlw	1
  1821     0297  00B7               	movwf	_pot_x$211+1
  1822     0298                     l167:
  1823     0298  0836               	movf	_pot_x$211,w
  1824     0299  00DF               	movwf	_pos_x
  1825                           
  1826                           ;main.c: 210: 
  1827     029A  2AB7               	goto	l2274
  1828     029B                     l2266:
  1829     029B  3001               	movlw	1
  1830     029C  023B               	subwf	pot_x@adc_x+1,w
  1831     029D  3090               	movlw	144
  1832     029E  1903               	skipnz
  1833     029F  023A               	subwf	pot_x@adc_x,w
  1834     02A0  1803               	skipnc
  1835     02A1  2AA3               	goto	u2931
  1836     02A2  2AA4               	goto	u2930
  1837     02A3                     u2931:
  1838     02A3  2AB7               	goto	l2274
  1839     02A4                     u2930:
  1840     02A4                     l2268:
  1841                           
  1842                           ;main.c: 211:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  1843     02A4  085F               	movf	_pos_x,w
  1844     02A5  1D03               	btfss	3,2
  1845     02A6  2AA8               	goto	u2941
  1846     02A7  2AA9               	goto	u2940
  1847     02A8                     u2941:
  1848     02A8  2AAE               	goto	l2272
  1849     02A9                     u2940:
  1850     02A9                     l2270:
  1851     02A9  3013               	movlw	19
  1852     02AA  00B8               	movwf	_pot_x$212
  1853     02AB  3000               	movlw	0
  1854     02AC  00B9               	movwf	_pot_x$212+1
  1855     02AD  2AB5               	goto	l173
  1856     02AE                     l2272:
  1857     02AE  085F               	movf	_pos_x,w
  1858     02AF  3EFF               	addlw	255
  1859     02B0  00B8               	movwf	_pot_x$212
  1860     02B1  30FF               	movlw	255
  1861     02B2  1803               	skipnc
  1862     02B3  3000               	movlw	0
  1863     02B4  00B9               	movwf	_pot_x$212+1
  1864     02B5                     l173:
  1865     02B5  0838               	movf	_pot_x$212,w
  1866     02B6  00DF               	movwf	_pos_x
  1867     02B7                     l2274:
  1868                           
  1869                           ;main.c: 214: }
  1870     02B7  083C               	movf	pot_x@prev_x,w
  1871     02B8  1D03               	btfss	3,2
  1872     02B9  2ABB               	goto	u2951
  1873     02BA  2ABC               	goto	u2950
  1874     02BB                     u2951:
  1875     02BB  2AC2               	goto	l2278
  1876     02BC                     u2950:
  1877     02BC                     l2276:
  1878     02BC  3013               	movlw	19
  1879     02BD  065F               	xorwf	_pos_x,w
  1880     02BE  1903               	btfsc	3,2
  1881     02BF  2AC1               	goto	u2961
  1882     02C0  2AC2               	goto	u2960
  1883     02C1                     u2961:
  1884     02C1  2ACD               	goto	l2282
  1885     02C2                     u2960:
  1886     02C2                     l2278:
  1887     02C2  3013               	movlw	19
  1888     02C3  063C               	xorwf	pot_x@prev_x,w
  1889     02C4  1D03               	btfss	3,2
  1890     02C5  2AC7               	goto	u2971
  1891     02C6  2AC8               	goto	u2970
  1892     02C7                     u2971:
  1893     02C7  2AD7               	goto	l2284
  1894     02C8                     u2970:
  1895     02C8                     l2280:
  1896     02C8  085F               	movf	_pos_x,w
  1897     02C9  1D03               	btfss	3,2
  1898     02CA  2ACC               	goto	u2981
  1899     02CB  2ACD               	goto	u2980
  1900     02CC                     u2981:
  1901     02CC  2AD7               	goto	l2284
  1902     02CD                     u2980:
  1903     02CD                     l2282:
  1904                           
  1905                           ;main.c: 215: 
  1906     02CD  120A  158A  2561  120A  118A  	fcall	_generar_fondo
  1907                           
  1908                           ;main.c: 216: 
  1909     02D2  120A  158A  23BC  120A  118A  	fcall	_dibujar_fondo
  1910     02D7                     l2284:
  1911     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1912     02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1913     02D9  085E               	movf	_pos_y,w
  1914     02DA  1D03               	btfss	3,2
  1915     02DB  2ADD               	goto	u2991
  1916     02DC  2ADE               	goto	u2990
  1917     02DD                     u2991:
  1918     02DD  2AF9               	goto	l2288
  1919     02DE                     u2990:
  1920     02DE                     l2286:
  1921     02DE  085F               	movf	_pos_x,w
  1922     02DF  3E80               	addlw	128
  1923     02E0  00B4               	movwf	??_pot_x
  1924     02E1  3004               	movlw	4
  1925     02E2                     u3005:
  1926     02E2  1003               	clrc
  1927     02E3  0CB4               	rrf	??_pot_x,f
  1928     02E4  3EFF               	addlw	-1
  1929     02E5  1D03               	skipz
  1930     02E6  2AE2               	goto	u3005
  1931     02E7  0834               	movf	??_pot_x,w
  1932     02E8  390F               	andlw	15
  1933     02E9  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1934     02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1935     02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1936     02F0  085F               	movf	_pos_x,w
  1937     02F1  3E80               	addlw	128
  1938     02F2  390F               	andlw	15
  1939     02F3  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1940     02F8  2B5A               	goto	l195
  1941     02F9                     l2288:
  1942     02F9  035E               	decf	_pos_y,w
  1943     02FA  1D03               	btfss	3,2
  1944     02FB  2AFD               	goto	u3011
  1945     02FC  2AFE               	goto	u3010
  1946     02FD                     u3011:
  1947     02FD  2B19               	goto	l2292
  1948     02FE                     u3010:
  1949     02FE                     l2290:
  1950     02FE  085F               	movf	_pos_x,w
  1951     02FF  3EC0               	addlw	192
  1952     0300  00B4               	movwf	??_pot_x
  1953     0301  3004               	movlw	4
  1954     0302                     u3025:
  1955     0302  1003               	clrc
  1956     0303  0CB4               	rrf	??_pot_x,f
  1957     0304  3EFF               	addlw	-1
  1958     0305  1D03               	skipz
  1959     0306  2B02               	goto	u3025
  1960     0307  0834               	movf	??_pot_x,w
  1961     0308  390F               	andlw	15
  1962     0309  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1963     030E  1283               	bcf	3,5	;RP0=0, select bank0
  1964     030F  1303               	bcf	3,6	;RP1=0, select bank0
  1965     0310  085F               	movf	_pos_x,w
  1966     0311  3EC0               	addlw	192
  1967     0312  390F               	andlw	15
  1968     0313  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1969     0318  2B5A               	goto	l195
  1970     0319                     l2292:
  1971     0319  3002               	movlw	2
  1972     031A  065E               	xorwf	_pos_y,w
  1973     031B  1D03               	btfss	3,2
  1974     031C  2B1E               	goto	u3031
  1975     031D  2B1F               	goto	u3030
  1976     031E                     u3031:
  1977     031E  2B3A               	goto	l2296
  1978     031F                     u3030:
  1979     031F                     l2294:
  1980     031F  085F               	movf	_pos_x,w
  1981     0320  3E94               	addlw	148
  1982     0321  00B4               	movwf	??_pot_x
  1983     0322  3004               	movlw	4
  1984     0323                     u3045:
  1985     0323  1003               	clrc
  1986     0324  0CB4               	rrf	??_pot_x,f
  1987     0325  3EFF               	addlw	-1
  1988     0326  1D03               	skipz
  1989     0327  2B23               	goto	u3045
  1990     0328  0834               	movf	??_pot_x,w
  1991     0329  390F               	andlw	15
  1992     032A  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1993     032F  1283               	bcf	3,5	;RP0=0, select bank0
  1994     0330  1303               	bcf	3,6	;RP1=0, select bank0
  1995     0331  085F               	movf	_pos_x,w
  1996     0332  3E94               	addlw	148
  1997     0333  390F               	andlw	15
  1998     0334  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1999     0339  2B5A               	goto	l195
  2000     033A                     l2296:
  2001     033A  3003               	movlw	3
  2002     033B  065E               	xorwf	_pos_y,w
  2003     033C  1D03               	btfss	3,2
  2004     033D  2B3F               	goto	u3051
  2005     033E  2B40               	goto	u3050
  2006     033F                     u3051:
  2007     033F  2B5A               	goto	l195
  2008     0340                     u3050:
  2009     0340                     l2298:
  2010     0340  085F               	movf	_pos_x,w
  2011     0341  3ED4               	addlw	212
  2012     0342  00B4               	movwf	??_pot_x
  2013     0343  3004               	movlw	4
  2014     0344                     u3065:
  2015     0344  1003               	clrc
  2016     0345  0CB4               	rrf	??_pot_x,f
  2017     0346  3EFF               	addlw	-1
  2018     0347  1D03               	skipz
  2019     0348  2B44               	goto	u3065
  2020     0349  0834               	movf	??_pot_x,w
  2021     034A  390F               	andlw	15
  2022     034B  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  2023     0350  1283               	bcf	3,5	;RP0=0, select bank0
  2024     0351  1303               	bcf	3,6	;RP1=0, select bank0
  2025     0352  085F               	movf	_pos_x,w
  2026     0353  3ED4               	addlw	212
  2027     0354  390F               	andlw	15
  2028     0355  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  2029     035A                     l195:
  2030                           
  2031                           ;main.c: 220:     if(PORTAbits.RA2 == 1){
  2032     035A  3000               	movlw	0
  2033     035B  120A  118A  2008  120A  118A  	fcall	_LCD_putc
  2034     0360                     l2300:
  2035                           
  2036                           ;main.c: 221:         disparar();
  2037     0360  300D               	movlw	13
  2038     0361  1283               	bcf	3,5	;RP0=0, select bank0
  2039     0362  1303               	bcf	3,6	;RP1=0, select bank0
  2040     0363  00B5               	movwf	??_pot_x+1
  2041     0364  30FB               	movlw	251
  2042     0365  00B4               	movwf	??_pot_x
  2043     0366                     u3427:
  2044     0366  0BB4               	decfsz	??_pot_x,f
  2045     0367  2B66               	goto	u3427
  2046     0368  0BB5               	decfsz	??_pot_x+1,f
  2047     0369  2B66               	goto	u3427
  2048     036A                     l196:
  2049     036A  0008               	return
  2050     036B                     __end_of_pot_x:
  2051                           
  2052                           	psect	text4
  2053     0D61                     __ptext4:	
  2054 ;; *************** function _generar_fondo *****************
  2055 ;; Defined at:
  2056 ;;		line 270 in file "main.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  p               1   14[BANK0 ] unsigned char 
  2061 ;;  p               1   13[BANK0 ] unsigned char 
  2062 ;;  p               1   12[BANK0 ] unsigned char 
  2063 ;;  i               1   19[BANK0 ] unsigned char 
  2064 ;;  i               1   17[BANK0 ] unsigned char 
  2065 ;;  i               1   16[BANK0 ] unsigned char 
  2066 ;;  i               1   15[BANK0 ] unsigned char 
  2067 ;;  i               1   18[BANK0 ] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       0       0       0       0
  2078 ;;      Locals:         0       8       0       0       0
  2079 ;;      Temps:          0       0       0       0       0
  2080 ;;      Totals:         0       8       0       0       0
  2081 ;;Total ram usage:        8 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 2
  2084 ;; This function calls:
  2085 ;;		___awmod
  2086 ;;		_rand
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;;		_pot_x
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093     0D61                     _generar_fondo:	
  2094                           ;psect for function _generar_fondo
  2095                           
  2096     0D61                     l1920:	
  2097                           ;incstack = 0
  2098                           ; Regs used in _generar_fondo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2099                           
  2100                           
  2101                           ;main.c: 271: 
  2102     0D61  1283               	bcf	3,5	;RP0=0, select bank0
  2103     0D62  1303               	bcf	3,6	;RP1=0, select bank0
  2104     0D63  01B2               	clrf	generar_fondo@i
  2105     0D64                     l1926:
  2106                           
  2107                           ;main.c: 272: void dibujar_fondo(void){
  2108     0D64  0832               	movf	generar_fondo@i,w
  2109     0D65  3E3E               	addlw	(low (_fondo| 0))& (0+255)
  2110     0D66  0084               	movwf	4
  2111     0D67  3020               	movlw	32
  2112     0D68  1383               	bcf	3,7	;select IRP bank0
  2113     0D69  0080               	movwf	0
  2114     0D6A                     l1928:
  2115                           
  2116                           ;main.c: 273:     for(uint8_t i = 0; i < 20; i++){
  2117     0D6A  3001               	movlw	1
  2118     0D6B  07B2               	addwf	generar_fondo@i,f
  2119     0D6C                     l1930:
  2120     0D6C  3014               	movlw	20
  2121     0D6D  0232               	subwf	generar_fondo@i,w
  2122     0D6E  1C03               	skipc
  2123     0D6F  2D71               	goto	u2141
  2124     0D70  2D72               	goto	u2140
  2125     0D71                     u2141:
  2126     0D71  2D64               	goto	l1926
  2127     0D72                     u2140:
  2128     0D72                     l1932:
  2129                           
  2130                           ;main.c: 275:         if(fondo[i] != ' '){
  2131     0D72  01AF               	clrf	generar_fondo@i_223
  2132     0D73                     l1938:
  2133                           
  2134                           ;main.c: 276:             LCD_putc(fondo[i]);
  2135     0D73  3014               	movlw	20
  2136     0D74  00A6               	movwf	___awmod@divisor
  2137     0D75  3000               	movlw	0
  2138     0D76  00A7               	movwf	___awmod@divisor+1
  2139     0D77  120A  158A  2312  120A  158A  	fcall	_rand
  2140     0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  2141     0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  2142     0D7E  0821               	movf	?_rand+1,w
  2143     0D7F  00A9               	movwf	___awmod@dividend+1
  2144     0D80  0820               	movf	?_rand,w
  2145     0D81  00A8               	movwf	___awmod@dividend
  2146     0D82  120A  158A  2363  120A  158A  	fcall	___awmod
  2147     0D87  1283               	bcf	3,5	;RP0=0, select bank0
  2148     0D88  1303               	bcf	3,6	;RP1=0, select bank0
  2149     0D89  0826               	movf	?___awmod,w
  2150     0D8A  00AC               	movwf	generar_fondo@p
  2151     0D8B                     l1940:
  2152                           
  2153                           ;main.c: 277:         } else {
  2154     0D8B  082C               	movf	generar_fondo@p,w
  2155     0D8C  3E3E               	addlw	(low (_fondo| 0))& (0+255)
  2156     0D8D  0084               	movwf	4
  2157     0D8E  3005               	movlw	5
  2158     0D8F  1383               	bcf	3,7	;select IRP bank0
  2159     0D90  0080               	movwf	0
  2160     0D91                     l1942:
  2161                           
  2162                           ;main.c: 278:             LCD_putrs(" ");
  2163     0D91  3001               	movlw	1
  2164     0D92  07AF               	addwf	generar_fondo@i_223,f
  2165     0D93                     l1944:
  2166     0D93  3003               	movlw	3
  2167     0D94  022F               	subwf	generar_fondo@i_223,w
  2168     0D95  1C03               	skipc
  2169     0D96  2D98               	goto	u2151
  2170     0D97  2D99               	goto	u2150
  2171     0D98                     u2151:
  2172     0D98  2D73               	goto	l1938
  2173     0D99                     u2150:
  2174     0D99                     l1946:
  2175                           
  2176                           ;main.c: 280:     }
  2177     0D99  01B0               	clrf	generar_fondo@i_225
  2178     0D9A                     l1952:
  2179                           
  2180                           ;main.c: 281: 
  2181     0D9A  3014               	movlw	20
  2182     0D9B  00A6               	movwf	___awmod@divisor
  2183     0D9C  3000               	movlw	0
  2184     0D9D  00A7               	movwf	___awmod@divisor+1
  2185     0D9E  120A  158A  2312  120A  158A  	fcall	_rand
  2186     0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  2187     0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  2188     0DA5  0821               	movf	?_rand+1,w
  2189     0DA6  00A9               	movwf	___awmod@dividend+1
  2190     0DA7  0820               	movf	?_rand,w
  2191     0DA8  00A8               	movwf	___awmod@dividend
  2192     0DA9  120A  158A  2363  120A  158A  	fcall	___awmod
  2193     0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  2194     0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  2195     0DB0  0826               	movf	?___awmod,w
  2196     0DB1  00AD               	movwf	generar_fondo@p_226
  2197     0DB2                     l1954:
  2198                           
  2199                           ;main.c: 282: 
  2200     0DB2  082D               	movf	generar_fondo@p_226,w
  2201     0DB3  3E3E               	addlw	(low (_fondo| 0))& (0+255)
  2202     0DB4  0084               	movwf	4
  2203     0DB5  3007               	movlw	7
  2204     0DB6  1383               	bcf	3,7	;select IRP bank0
  2205     0DB7  0080               	movwf	0
  2206     0DB8                     l1956:
  2207                           
  2208                           ;main.c: 283:     for(uint8_t i = 0; i < 3; i++){
  2209     0DB8  3001               	movlw	1
  2210     0DB9  07B0               	addwf	generar_fondo@i_225,f
  2211     0DBA                     l1958:
  2212     0DBA  3003               	movlw	3
  2213     0DBB  0230               	subwf	generar_fondo@i_225,w
  2214     0DBC  1C03               	skipc
  2215     0DBD  2DBF               	goto	u2161
  2216     0DBE  2DC0               	goto	u2160
  2217     0DBF                     u2161:
  2218     0DBF  2D9A               	goto	l1952
  2219     0DC0                     u2160:
  2220     0DC0                     l1960:
  2221                           
  2222                           ;main.c: 285:         LCD_putc(6);
  2223     0DC0  01B1               	clrf	generar_fondo@i_227
  2224     0DC1                     l1966:
  2225                           
  2226                           ;main.c: 286:     }
  2227     0DC1  3013               	movlw	19
  2228     0DC2  00A6               	movwf	___awmod@divisor
  2229     0DC3  3000               	movlw	0
  2230     0DC4  00A7               	movwf	___awmod@divisor+1
  2231     0DC5  120A  158A  2312  120A  158A  	fcall	_rand
  2232     0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  2233     0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  2234     0DCC  0821               	movf	?_rand+1,w
  2235     0DCD  00A9               	movwf	___awmod@dividend+1
  2236     0DCE  0820               	movf	?_rand,w
  2237     0DCF  00A8               	movwf	___awmod@dividend
  2238     0DD0  120A  158A  2363  120A  158A  	fcall	___awmod
  2239     0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  2240     0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  2241     0DD7  0826               	movf	?___awmod,w
  2242     0DD8  00AE               	movwf	generar_fondo@p_228
  2243     0DD9                     l1968:
  2244                           
  2245                           ;main.c: 287: }
  2246     0DD9  082E               	movf	generar_fondo@p_228,w
  2247     0DDA  3E3E               	addlw	(low (_fondo| 0))& (0+255)
  2248     0DDB  0084               	movwf	4
  2249     0DDC  3002               	movlw	2
  2250     0DDD  1383               	bcf	3,7	;select IRP bank0
  2251     0DDE  0080               	movwf	0
  2252     0DDF                     l1970:
  2253                           
  2254                           ;main.c: 288: 
  2255     0DDF  082E               	movf	generar_fondo@p_228,w
  2256     0DE0  3E3F               	addlw	(low ((_fondo| 0+1)))& (0+255)
  2257     0DE1  0084               	movwf	4
  2258     0DE2  3003               	movlw	3
  2259     0DE3  0080               	movwf	0
  2260     0DE4                     l1972:
  2261                           
  2262                           ;main.c: 289: void disparar(void){
  2263     0DE4  3001               	movlw	1
  2264     0DE5  07B1               	addwf	generar_fondo@i_227,f
  2265     0DE6                     l1974:
  2266     0DE6  3002               	movlw	2
  2267     0DE7  0231               	subwf	generar_fondo@i_227,w
  2268     0DE8  1C03               	skipc
  2269     0DE9  2DEB               	goto	u2171
  2270     0DEA  2DEC               	goto	u2170
  2271     0DEB                     u2171:
  2272     0DEB  2DC1               	goto	l1966
  2273     0DEC                     u2170:
  2274     0DEC                     l1976:
  2275                           
  2276                           ;main.c: 292:     LCD_putc(4);
  2277     0DEC  01B3               	clrf	generar_fondo@i_229
  2278     0DED                     l1982:
  2279                           
  2280                           ;main.c: 293: 
  2281     0DED  0833               	movf	generar_fondo@i_229,w
  2282     0DEE  3E52               	addlw	(low (_nubes| 0))& (0+255)
  2283     0DEF  0084               	movwf	4
  2284     0DF0  3014               	movlw	20
  2285     0DF1  00A6               	movwf	___awmod@divisor
  2286     0DF2  3000               	movlw	0
  2287     0DF3  00A7               	movwf	___awmod@divisor+1
  2288     0DF4  120A  158A  2312  120A  158A  	fcall	_rand
  2289     0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  2290     0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  2291     0DFB  0821               	movf	?_rand+1,w
  2292     0DFC  00A9               	movwf	___awmod@dividend+1
  2293     0DFD  0820               	movf	?_rand,w
  2294     0DFE  00A8               	movwf	___awmod@dividend
  2295     0DFF  120A  158A  2363  120A  158A  	fcall	___awmod
  2296     0E04  1283               	bcf	3,5	;RP0=0, select bank0
  2297     0E05  1303               	bcf	3,6	;RP1=0, select bank0
  2298     0E06  0826               	movf	?___awmod,w
  2299     0E07  1383               	bcf	3,7	;select IRP bank0
  2300     0E08  0080               	movwf	0
  2301     0E09                     l1984:
  2302                           
  2303                           ;main.c: 294: 
  2304     0E09  3001               	movlw	1
  2305     0E0A  07B3               	addwf	generar_fondo@i_229,f
  2306     0E0B                     l1986:
  2307     0E0B  3003               	movlw	3
  2308     0E0C  0233               	subwf	generar_fondo@i_229,w
  2309     0E0D  1C03               	skipc
  2310     0E0E  2E10               	goto	u2181
  2311     0E0F  2E11               	goto	u2180
  2312     0E10                     u2181:
  2313     0E10  2DED               	goto	l1982
  2314     0E11                     u2180:
  2315     0E11                     l296:
  2316     0E11  0008               	return
  2317     0E12                     __end_of_generar_fondo:
  2318                           
  2319                           	psect	text5
  2320     0B12                     __ptext5:	
  2321 ;; *************** function _rand *****************
  2322 ;; Defined at:
  2323 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\rand.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  2    0[BANK0 ] int 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       2       0       0       0
  2338 ;;      Locals:         0       0       0       0       0
  2339 ;;      Temps:          0       4       0       0       0
  2340 ;;      Totals:         0       6       0       0       0
  2341 ;;Total ram usage:        6 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 1
  2344 ;; This function calls:
  2345 ;;		___lmul
  2346 ;; This function is called by:
  2347 ;;		_generar_fondo
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351     0B12                     _rand:	
  2352                           ;psect for function _rand
  2353                           
  2354     0B12                     l1846:	
  2355                           ;incstack = 0
  2356                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2357                           
  2358     0B12  3001               	movlw	1
  2359     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  2360     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  2361     0B15  00A2               	movwf	??_rand
  2362     0B16  3000               	movlw	0
  2363     0B17  00A3               	movwf	??_rand+1
  2364     0B18  3000               	movlw	0
  2365     0B19  00A4               	movwf	??_rand+2
  2366     0B1A  3000               	movlw	0
  2367     0B1B  00A5               	movwf	??_rand+3
  2368     0B1C  0858               	movf	_seed+3,w
  2369     0B1D  00F3               	movwf	___lmul@multiplier+3
  2370     0B1E  0857               	movf	_seed+2,w
  2371     0B1F  00F2               	movwf	___lmul@multiplier+2
  2372     0B20  0856               	movf	_seed+1,w
  2373     0B21  00F1               	movwf	___lmul@multiplier+1
  2374     0B22  0855               	movf	_seed,w
  2375     0B23  00F0               	movwf	___lmul@multiplier
  2376     0B24  304C               	movlw	76
  2377     0B25  00F7               	movwf	___lmul@multiplicand+3
  2378     0B26  3095               	movlw	149
  2379     0B27  00F6               	movwf	___lmul@multiplicand+2
  2380     0B28  307F               	movlw	127
  2381     0B29  00F5               	movwf	___lmul@multiplicand+1
  2382     0B2A  302D               	movlw	45
  2383     0B2B  00F4               	movwf	___lmul@multiplicand
  2384     0B2C  120A  158A  227C  120A  158A  	fcall	___lmul
  2385     0B31  0870               	movf	?___lmul,w
  2386     0B32  1283               	bcf	3,5	;RP0=0, select bank0
  2387     0B33  1303               	bcf	3,6	;RP1=0, select bank0
  2388     0B34  07A2               	addwf	??_rand,f
  2389     0B35  0871               	movf	?___lmul+1,w
  2390     0B36  1803               	skipnc
  2391     0B37  0F71               	incfsz	?___lmul+1,w
  2392     0B38  2B3A               	goto	u1990
  2393     0B39  2B3B               	goto	u1991
  2394     0B3A                     u1990:
  2395     0B3A  07A3               	addwf	??_rand+1,f
  2396     0B3B                     u1991:
  2397     0B3B  0872               	movf	?___lmul+2,w
  2398     0B3C  1803               	skipnc
  2399     0B3D  0F72               	incfsz	?___lmul+2,w
  2400     0B3E  2B40               	goto	u1992
  2401     0B3F  2B41               	goto	u1993
  2402     0B40                     u1992:
  2403     0B40  07A4               	addwf	??_rand+2,f
  2404     0B41                     u1993:
  2405     0B41  0873               	movf	?___lmul+3,w
  2406     0B42  1803               	skipnc
  2407     0B43  0A73               	incf	?___lmul+3,w
  2408     0B44  07A5               	addwf	??_rand+3,f
  2409     0B45  0825               	movf	??_rand+3,w
  2410     0B46  00D8               	movwf	_seed+3
  2411     0B47  0824               	movf	??_rand+2,w
  2412     0B48  00D7               	movwf	_seed+2
  2413     0B49  0823               	movf	??_rand+1,w
  2414     0B4A  00D6               	movwf	_seed+1
  2415     0B4B  0822               	movf	??_rand,w
  2416     0B4C  00D5               	movwf	_seed
  2417     0B4D                     l1848:
  2418     0B4D  0855               	movf	_seed,w
  2419     0B4E  00A2               	movwf	??_rand
  2420     0B4F  0856               	movf	_seed+1,w
  2421     0B50  00A3               	movwf	??_rand+1
  2422     0B51  0857               	movf	_seed+2,w
  2423     0B52  00A4               	movwf	??_rand+2
  2424     0B53  0858               	movf	_seed+3,w
  2425     0B54  00A5               	movwf	??_rand+3
  2426     0B55  3011               	movlw	17
  2427     0B56                     u2005:
  2428     0B56  1003               	clrc
  2429     0B57  0CA5               	rrf	??_rand+3,f
  2430     0B58  0CA4               	rrf	??_rand+2,f
  2431     0B59  0CA3               	rrf	??_rand+1,f
  2432     0B5A  0CA2               	rrf	??_rand,f
  2433     0B5B                     u2000:
  2434     0B5B  3EFF               	addlw	-1
  2435     0B5C  1D03               	skipz
  2436     0B5D  2B56               	goto	u2005
  2437     0B5E  0823               	movf	??_rand+1,w
  2438     0B5F  00A1               	movwf	?_rand+1
  2439     0B60  0822               	movf	??_rand,w
  2440     0B61  00A0               	movwf	?_rand
  2441     0B62                     l1076:
  2442     0B62  0008               	return
  2443     0B63                     __end_of_rand:
  2444                           
  2445                           	psect	text6
  2446     0A7C                     __ptext6:	
  2447 ;; *************** function ___lmul *****************
  2448 ;; Defined at:
  2449 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  multiplier      4    0[COMMON] unsigned long 
  2452 ;;  multiplicand    4    4[COMMON] unsigned long 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  product         4    9[COMMON] unsigned long 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  4    0[COMMON] unsigned long 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2464 ;;      Params:         8       0       0       0       0
  2465 ;;      Locals:         4       0       0       0       0
  2466 ;;      Temps:          1       0       0       0       0
  2467 ;;      Totals:        13       0       0       0       0
  2468 ;;Total ram usage:       13 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_rand
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477     0A7C                     ___lmul:	
  2478                           ;psect for function ___lmul
  2479                           
  2480     0A7C                     l1816:	
  2481                           ;incstack = 0
  2482                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2483                           
  2484     0A7C  3000               	movlw	0
  2485     0A7D  00FC               	movwf	___lmul@product+3
  2486     0A7E  3000               	movlw	0
  2487     0A7F  00FB               	movwf	___lmul@product+2
  2488     0A80  3000               	movlw	0
  2489     0A81  00FA               	movwf	___lmul@product+1
  2490     0A82  3000               	movlw	0
  2491     0A83  00F9               	movwf	___lmul@product
  2492     0A84                     l1818:
  2493     0A84  1C70               	btfss	___lmul@multiplier,0
  2494     0A85  2A87               	goto	u1921
  2495     0A86  2A88               	goto	u1920
  2496     0A87                     u1921:
  2497     0A87  2A9F               	goto	l1822
  2498     0A88                     u1920:
  2499     0A88                     l1820:
  2500     0A88  0874               	movf	___lmul@multiplicand,w
  2501     0A89  07F9               	addwf	___lmul@product,f
  2502     0A8A  0875               	movf	___lmul@multiplicand+1,w
  2503     0A8B  1103               	clrz
  2504     0A8C  1803               	skipnc
  2505     0A8D  3E01               	addlw	1
  2506     0A8E  1903               	skipnz
  2507     0A8F  2A91               	goto	u1931
  2508     0A90  07FA               	addwf	___lmul@product+1,f
  2509     0A91                     u1931:
  2510     0A91  0876               	movf	___lmul@multiplicand+2,w
  2511     0A92  1103               	clrz
  2512     0A93  1803               	skipnc
  2513     0A94  3E01               	addlw	1
  2514     0A95  1903               	skipnz
  2515     0A96  2A98               	goto	u1932
  2516     0A97  07FB               	addwf	___lmul@product+2,f
  2517     0A98                     u1932:
  2518     0A98  0877               	movf	___lmul@multiplicand+3,w
  2519     0A99  1103               	clrz
  2520     0A9A  1803               	skipnc
  2521     0A9B  3E01               	addlw	1
  2522     0A9C  1903               	skipnz
  2523     0A9D  2A9F               	goto	u1933
  2524     0A9E  07FC               	addwf	___lmul@product+3,f
  2525     0A9F                     u1933:
  2526     0A9F                     l1822:
  2527     0A9F  3001               	movlw	1
  2528     0AA0  00F8               	movwf	??___lmul
  2529     0AA1                     u1945:
  2530     0AA1  1003               	clrc
  2531     0AA2  0DF4               	rlf	___lmul@multiplicand,f
  2532     0AA3  0DF5               	rlf	___lmul@multiplicand+1,f
  2533     0AA4  0DF6               	rlf	___lmul@multiplicand+2,f
  2534     0AA5  0DF7               	rlf	___lmul@multiplicand+3,f
  2535     0AA6  0BF8               	decfsz	??___lmul,f
  2536     0AA7  2AA1               	goto	u1945
  2537     0AA8                     l1824:
  2538     0AA8  3001               	movlw	1
  2539     0AA9                     u1955:
  2540     0AA9  1003               	clrc
  2541     0AAA  0CF3               	rrf	___lmul@multiplier+3,f
  2542     0AAB  0CF2               	rrf	___lmul@multiplier+2,f
  2543     0AAC  0CF1               	rrf	___lmul@multiplier+1,f
  2544     0AAD  0CF0               	rrf	___lmul@multiplier,f
  2545     0AAE  3EFF               	addlw	-1
  2546     0AAF  1D03               	skipz
  2547     0AB0  2AA9               	goto	u1955
  2548     0AB1  0873               	movf	___lmul@multiplier+3,w
  2549     0AB2  0472               	iorwf	___lmul@multiplier+2,w
  2550     0AB3  0471               	iorwf	___lmul@multiplier+1,w
  2551     0AB4  0470               	iorwf	___lmul@multiplier,w
  2552     0AB5  1D03               	skipz
  2553     0AB6  2AB8               	goto	u1961
  2554     0AB7  2AB9               	goto	u1960
  2555     0AB8                     u1961:
  2556     0AB8  2A84               	goto	l1818
  2557     0AB9                     u1960:
  2558     0AB9                     l1826:
  2559     0AB9  087C               	movf	___lmul@product+3,w
  2560     0ABA  00F3               	movwf	?___lmul+3
  2561     0ABB  087B               	movf	___lmul@product+2,w
  2562     0ABC  00F2               	movwf	?___lmul+2
  2563     0ABD  087A               	movf	___lmul@product+1,w
  2564     0ABE  00F1               	movwf	?___lmul+1
  2565     0ABF  0879               	movf	___lmul@product,w
  2566     0AC0  00F0               	movwf	?___lmul
  2567     0AC1                     l626:
  2568     0AC1  0008               	return
  2569     0AC2                     __end_of___lmul:
  2570                           
  2571                           	psect	text7
  2572     0B63                     __ptext7:	
  2573 ;; *************** function ___awmod *****************
  2574 ;; Defined at:
  2575 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  divisor         2    6[BANK0 ] int 
  2578 ;;  dividend        2    8[BANK0 ] int 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  sign            1   11[BANK0 ] unsigned char 
  2581 ;;  counter         1   10[BANK0 ] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  2    6[BANK0 ] int 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       4       0       0       0
  2592 ;;      Locals:         0       2       0       0       0
  2593 ;;      Temps:          0       0       0       0       0
  2594 ;;      Totals:         0       6       0       0       0
  2595 ;;Total ram usage:        6 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_generar_fondo
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604     0B63                     ___awmod:	
  2605                           ;psect for function ___awmod
  2606                           
  2607     0B63                     l1852:	
  2608                           ;incstack = 0
  2609                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2610                           
  2611     0B63  1283               	bcf	3,5	;RP0=0, select bank0
  2612     0B64  1303               	bcf	3,6	;RP1=0, select bank0
  2613     0B65  01AB               	clrf	___awmod@sign
  2614     0B66                     l1854:
  2615     0B66  1FA9               	btfss	___awmod@dividend+1,7
  2616     0B67  2B69               	goto	u2011
  2617     0B68  2B6A               	goto	u2010
  2618     0B69                     u2011:
  2619     0B69  2B71               	goto	l1860
  2620     0B6A                     u2010:
  2621     0B6A                     l1856:
  2622     0B6A  09A8               	comf	___awmod@dividend,f
  2623     0B6B  09A9               	comf	___awmod@dividend+1,f
  2624     0B6C  0AA8               	incf	___awmod@dividend,f
  2625     0B6D  1903               	skipnz
  2626     0B6E  0AA9               	incf	___awmod@dividend+1,f
  2627     0B6F                     l1858:
  2628     0B6F  3001               	movlw	1
  2629     0B70  00AB               	movwf	___awmod@sign
  2630     0B71                     l1860:
  2631     0B71  1FA7               	btfss	___awmod@divisor+1,7
  2632     0B72  2B74               	goto	u2021
  2633     0B73  2B75               	goto	u2020
  2634     0B74                     u2021:
  2635     0B74  2B7A               	goto	l1864
  2636     0B75                     u2020:
  2637     0B75                     l1862:
  2638     0B75  09A6               	comf	___awmod@divisor,f
  2639     0B76  09A7               	comf	___awmod@divisor+1,f
  2640     0B77  0AA6               	incf	___awmod@divisor,f
  2641     0B78  1903               	skipnz
  2642     0B79  0AA7               	incf	___awmod@divisor+1,f
  2643     0B7A                     l1864:
  2644     0B7A  0826               	movf	___awmod@divisor,w
  2645     0B7B  0427               	iorwf	___awmod@divisor+1,w
  2646     0B7C  1903               	btfsc	3,2
  2647     0B7D  2B7F               	goto	u2031
  2648     0B7E  2B80               	goto	u2030
  2649     0B7F                     u2031:
  2650     0B7F  2BAD               	goto	l1882
  2651     0B80                     u2030:
  2652     0B80                     l1866:
  2653     0B80  3001               	movlw	1
  2654     0B81  00AA               	movwf	___awmod@counter
  2655     0B82  2B8C               	goto	l1872
  2656     0B83                     l1868:
  2657     0B83  3001               	movlw	1
  2658     0B84                     u2045:
  2659     0B84  1003               	clrc
  2660     0B85  0DA6               	rlf	___awmod@divisor,f
  2661     0B86  0DA7               	rlf	___awmod@divisor+1,f
  2662     0B87  3EFF               	addlw	-1
  2663     0B88  1D03               	skipz
  2664     0B89  2B84               	goto	u2045
  2665     0B8A                     l1870:
  2666     0B8A  3001               	movlw	1
  2667     0B8B  07AA               	addwf	___awmod@counter,f
  2668     0B8C                     l1872:
  2669     0B8C  1FA7               	btfss	___awmod@divisor+1,7
  2670     0B8D  2B8F               	goto	u2051
  2671     0B8E  2B90               	goto	u2050
  2672     0B8F                     u2051:
  2673     0B8F  2B83               	goto	l1868
  2674     0B90                     u2050:
  2675     0B90                     l1874:
  2676     0B90  0827               	movf	___awmod@divisor+1,w
  2677     0B91  0229               	subwf	___awmod@dividend+1,w
  2678     0B92  1D03               	skipz
  2679     0B93  2B96               	goto	u2065
  2680     0B94  0826               	movf	___awmod@divisor,w
  2681     0B95  0228               	subwf	___awmod@dividend,w
  2682     0B96                     u2065:
  2683     0B96  1C03               	skipc
  2684     0B97  2B99               	goto	u2061
  2685     0B98  2B9A               	goto	u2060
  2686     0B99                     u2061:
  2687     0B99  2BA0               	goto	l1878
  2688     0B9A                     u2060:
  2689     0B9A                     l1876:
  2690     0B9A  0826               	movf	___awmod@divisor,w
  2691     0B9B  02A8               	subwf	___awmod@dividend,f
  2692     0B9C  0827               	movf	___awmod@divisor+1,w
  2693     0B9D  1C03               	skipc
  2694     0B9E  03A9               	decf	___awmod@dividend+1,f
  2695     0B9F  02A9               	subwf	___awmod@dividend+1,f
  2696     0BA0                     l1878:
  2697     0BA0  3001               	movlw	1
  2698     0BA1                     u2075:
  2699     0BA1  1003               	clrc
  2700     0BA2  0CA7               	rrf	___awmod@divisor+1,f
  2701     0BA3  0CA6               	rrf	___awmod@divisor,f
  2702     0BA4  3EFF               	addlw	-1
  2703     0BA5  1D03               	skipz
  2704     0BA6  2BA1               	goto	u2075
  2705     0BA7                     l1880:
  2706     0BA7  3001               	movlw	1
  2707     0BA8  02AA               	subwf	___awmod@counter,f
  2708     0BA9  1D03               	btfss	3,2
  2709     0BAA  2BAC               	goto	u2081
  2710     0BAB  2BAD               	goto	u2080
  2711     0BAC                     u2081:
  2712     0BAC  2B90               	goto	l1874
  2713     0BAD                     u2080:
  2714     0BAD                     l1882:
  2715     0BAD  082B               	movf	___awmod@sign,w
  2716     0BAE  1903               	btfsc	3,2
  2717     0BAF  2BB1               	goto	u2091
  2718     0BB0  2BB2               	goto	u2090
  2719     0BB1                     u2091:
  2720     0BB1  2BB7               	goto	l1886
  2721     0BB2                     u2090:
  2722     0BB2                     l1884:
  2723     0BB2  09A8               	comf	___awmod@dividend,f
  2724     0BB3  09A9               	comf	___awmod@dividend+1,f
  2725     0BB4  0AA8               	incf	___awmod@dividend,f
  2726     0BB5  1903               	skipnz
  2727     0BB6  0AA9               	incf	___awmod@dividend+1,f
  2728     0BB7                     l1886:
  2729     0BB7  0829               	movf	___awmod@dividend+1,w
  2730     0BB8  00A7               	movwf	?___awmod+1
  2731     0BB9  0828               	movf	___awmod@dividend,w
  2732     0BBA  00A6               	movwf	?___awmod
  2733     0BBB                     l778:
  2734     0BBB  0008               	return
  2735     0BBC                     __end_of___awmod:
  2736                           
  2737                           	psect	text8
  2738     0BBC                     __ptext8:	
  2739 ;; *************** function _dibujar_fondo *****************
  2740 ;; Defined at:
  2741 ;;		line 300 in file "main.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  i               1   10[COMMON] unsigned char 
  2746 ;;  i               1   11[COMMON] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2756 ;;      Params:         0       0       0       0       0
  2757 ;;      Locals:         2       0       0       0       0
  2758 ;;      Temps:          1       0       0       0       0
  2759 ;;      Totals:         3       0       0       0       0
  2760 ;;Total ram usage:        3 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 3
  2763 ;; This function calls:
  2764 ;;		_LCD_Write
  2765 ;;		_LCD_putc
  2766 ;;		_LCD_putrs
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;;		_pot_x
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773     0BBC                     _dibujar_fondo:	
  2774                           ;psect for function _dibujar_fondo
  2775                           
  2776     0BBC                     l1988:	
  2777                           ;incstack = 0
  2778                           ; Regs used in _dibujar_fondo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2779                           
  2780                           
  2781                           ;main.c: 301: 
  2782     0BBC  01FB               	clrf	dibujar_fondo@i
  2783     0BBD  2BBE               	goto	l1998
  2784     0BBE                     l306:
  2785     0BBE                     l1998:
  2786     0BBE  087B               	movf	dibujar_fondo@i,w
  2787     0BBF  3E94               	addlw	148
  2788     0BC0  00F9               	movwf	??_dibujar_fondo
  2789     0BC1  3004               	movlw	4
  2790     0BC2                     u2195:
  2791     0BC2  1003               	clrc
  2792     0BC3  0CF9               	rrf	??_dibujar_fondo,f
  2793     0BC4  3EFF               	addlw	-1
  2794     0BC5  1D03               	skipz
  2795     0BC6  2BC2               	goto	u2195
  2796     0BC7  0879               	movf	??_dibujar_fondo,w
  2797     0BC8  390F               	andlw	15
  2798     0BC9  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  2799     0BCE  087B               	movf	dibujar_fondo@i,w
  2800     0BCF  3E94               	addlw	148
  2801     0BD0  390F               	andlw	15
  2802     0BD1  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  2803     0BD6                     l2002:
  2804                           
  2805                           ;main.c: 303:             do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x + offse
      +                          t & 0xF0) >> 4 ); LCD_Write( 0x80 + pos_x + offset & 0x0F); } while ( 0 ); } else if ( p
      +                          os_y == 1 ) { do { LCD_Write( (0xC0 + pos_x + offset & 0xF0) >> 4 ); LCD_Write( 0xC0 + p
      +                          os_x + offset & 0x0F); } while ( 0 ); } else if ( pos_y == 2 ) { do { LCD_Write( (0x94 +
      +                           pos_x + offset & 0xF0) >> 4 ); LCD_Write( 0x94 + pos_x + offset & 0x0F); } while ( 0 );
      +                           } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x + offset & 0xF0) >> 4 ); LCD_W
      +                          rite( 0xD4 + pos_x + offset & 0x0F); } while ( 0 ); } } while ( 0 );
  2806     0BD6  087B               	movf	dibujar_fondo@i,w
  2807     0BD7  3E3E               	addlw	(low (_fondo| 0))& (0+255)
  2808     0BD8  0084               	movwf	4
  2809     0BD9  3020               	movlw	32
  2810     0BDA  1383               	bcf	3,7	;select IRP bank0
  2811     0BDB  0600               	xorwf	0,w
  2812     0BDC  1903               	btfsc	3,2
  2813     0BDD  2BDF               	goto	u2201
  2814     0BDE  2BE0               	goto	u2200
  2815     0BDF                     u2201:
  2816     0BDF  2BEA               	goto	l2006
  2817     0BE0                     u2200:
  2818     0BE0                     l2004:
  2819                           
  2820                           ;main.c: 304:             LCD_putc('-');
  2821     0BE0  087B               	movf	dibujar_fondo@i,w
  2822     0BE1  3E3E               	addlw	(low (_fondo| 0))& (0+255)
  2823     0BE2  0084               	movwf	4
  2824     0BE3  0800               	movf	0,w
  2825     0BE4  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  2826                           
  2827                           ;main.c: 305:             moved = 1;
  2828     0BE9  2BF1               	goto	l2008
  2829     0BEA                     l2006:
  2830                           
  2831                           ;main.c: 306:         }
  2832     0BEA  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2833     0BEB  00F6               	movwf	LCD_putrs@a
  2834     0BEC  120A  158A  21A7  120A  158A  	fcall	_LCD_putrs
  2835     0BF1                     l2008:
  2836                           
  2837                           ;main.c: 308: 
  2838     0BF1  3001               	movlw	1
  2839     0BF2  07FB               	addwf	dibujar_fondo@i,f
  2840     0BF3                     l2010:
  2841     0BF3  3014               	movlw	20
  2842     0BF4  027B               	subwf	dibujar_fondo@i,w
  2843     0BF5  1C03               	skipc
  2844     0BF6  2BF8               	goto	u2211
  2845     0BF7  2BF9               	goto	u2210
  2846     0BF8                     u2211:
  2847     0BF8  2BBE               	goto	l306
  2848     0BF9                     u2210:
  2849     0BF9                     l2012:
  2850                           
  2851                           ;main.c: 311:             LCD_putc('-');
  2852     0BF9  01FA               	clrf	dibujar_fondo@i_233
  2853     0BFA  2BFB               	goto	l2020
  2854     0BFB                     l323:
  2855     0BFB                     l2020:
  2856     0BFB  087A               	movf	dibujar_fondo@i_233,w
  2857     0BFC  3E52               	addlw	(low (_nubes| 0))& (0+255)
  2858     0BFD  0084               	movwf	4
  2859     0BFE  1383               	bcf	3,7	;select IRP bank0
  2860     0BFF  0800               	movf	0,w
  2861     0C00  3EC0               	addlw	192
  2862     0C01  00F9               	movwf	??_dibujar_fondo
  2863     0C02  3004               	movlw	4
  2864     0C03                     u2225:
  2865     0C03  1003               	clrc
  2866     0C04  0CF9               	rrf	??_dibujar_fondo,f
  2867     0C05  3EFF               	addlw	-1
  2868     0C06  1D03               	skipz
  2869     0C07  2C03               	goto	u2225
  2870     0C08  0879               	movf	??_dibujar_fondo,w
  2871     0C09  390F               	andlw	15
  2872     0C0A  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  2873     0C0F  087A               	movf	dibujar_fondo@i_233,w
  2874     0C10  3E52               	addlw	(low (_nubes| 0))& (0+255)
  2875     0C11  0084               	movwf	4
  2876     0C12  1383               	bcf	3,7	;select IRP bank0
  2877     0C13  0800               	movf	0,w
  2878     0C14  3EC0               	addlw	192
  2879     0C15  390F               	andlw	15
  2880     0C16  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  2881     0C1B                     l338:
  2882                           
  2883                           ;main.c: 313:         }
  2884     0C1B  3006               	movlw	6
  2885     0C1C  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  2886     0C21                     l2026:
  2887                           
  2888                           ;main.c: 314: 
  2889     0C21  3001               	movlw	1
  2890     0C22  07FA               	addwf	dibujar_fondo@i_233,f
  2891     0C23                     l2028:
  2892     0C23  3003               	movlw	3
  2893     0C24  027A               	subwf	dibujar_fondo@i_233,w
  2894     0C25  1C03               	skipc
  2895     0C26  2C28               	goto	u2231
  2896     0C27  2C29               	goto	u2230
  2897     0C28                     u2231:
  2898     0C28  2BFB               	goto	l323
  2899     0C29                     u2230:
  2900     0C29                     l339:
  2901     0C29  0008               	return
  2902     0C2A                     __end_of_dibujar_fondo:
  2903                           
  2904                           	psect	text9
  2905     0A19                     __ptext9:	
  2906 ;; *************** function _ADC_Read *****************
  2907 ;; Defined at:
  2908 ;;		line 145 in file "main.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  channel         1    wreg     unsigned char 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  channel         1    4[COMMON] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  2    0[COMMON] unsigned int 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2922 ;;      Params:         2       0       0       0       0
  2923 ;;      Locals:         1       0       0       0       0
  2924 ;;      Temps:          2       0       0       0       0
  2925 ;;      Totals:         5       0       0       0       0
  2926 ;;Total ram usage:        5 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_pot_x
  2932 ;;		_pot_y
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936     0A19                     _ADC_Read:	
  2937                           ;psect for function _ADC_Read
  2938                           
  2939                           
  2940                           ;incstack = 0
  2941                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  2942                           ;ADC_Read@channel stored from wreg
  2943     0A19  00F4               	movwf	ADC_Read@channel
  2944     0A1A                     l1908:
  2945                           
  2946                           ;main.c: 146:     LCD_custom_char(3, casa2);
  2947     0A1A  2A1B               	nop2	;2 cycle nop
  2948     0A1B  2A1C               	nop2	;2 cycle nop
  2949     0A1C  0000               	nop
  2950     0A1D                     l1910:
  2951                           
  2952                           ;main.c: 147:     LCD_custom_char(4, bob_reves);
  2953     0A1D  3083               	movlw	131
  2954     0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  2955     0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  2956     0A20  059F               	andwf	31,f	;volatile
  2957                           
  2958                           ;main.c: 148:     LCD_custom_char(5, arbol);
  2959     0A21  0874               	movf	ADC_Read@channel,w	;volatile
  2960     0A22  00F2               	movwf	??_ADC_Read
  2961     0A23  3001               	movlw	1
  2962     0A24                     u2125:
  2963     0A24  1003               	clrc
  2964     0A25  0DF2               	rlf	??_ADC_Read,f
  2965     0A26  3EFF               	addlw	-1
  2966     0A27  1D03               	skipz
  2967     0A28  2A24               	goto	u2125
  2968     0A29  1003               	clrc
  2969     0A2A  0D72               	rlf	??_ADC_Read,w
  2970     0A2B  049F               	iorwf	31,f	;volatile
  2971     0A2C                     l1912:
  2972                           
  2973                           ;main.c: 149:     LCD_custom_char(6, nube);
  2974     0A2C  3003               	movlw	3
  2975     0A2D  00F3               	movwf	??_ADC_Read+1
  2976     0A2E  3097               	movlw	151
  2977     0A2F  00F2               	movwf	??_ADC_Read
  2978     0A30                     u3437:
  2979     0A30  0BF2               	decfsz	??_ADC_Read,f
  2980     0A31  2A30               	goto	u3437
  2981     0A32  0BF3               	decfsz	??_ADC_Read+1,f
  2982     0A33  2A30               	goto	u3437
  2983     0A34  2A35               	nop2
  2984     0A35                     l1914:
  2985                           
  2986                           ;main.c: 150:     LCD_custom_char(7, flor);
  2987     0A35  1283               	bcf	3,5	;RP0=0, select bank0
  2988     0A36  1303               	bcf	3,6	;RP1=0, select bank0
  2989     0A37  149F               	bsf	31,1	;volatile
  2990     0A38                     l103:	
  2991                           ;main.c: 151: 
  2992                           
  2993     0A38  189F               	btfsc	31,1	;volatile
  2994     0A39  2A3B               	goto	u2131
  2995     0A3A  2A3C               	goto	u2130
  2996     0A3B                     u2131:
  2997     0A3B  2A38               	goto	l103
  2998     0A3C                     u2130:
  2999     0A3C                     l1916:
  3000                           
  3001                           ;main.c: 152:     srand(123);
  3002     0A3C  081E               	movf	30,w	;volatile
  3003     0A3D  00F1               	movwf	?_ADC_Read+1
  3004     0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  3005     0A3F  1303               	bcf	3,6	;RP1=0, select bank1
  3006     0A40  081E               	movf	30,w	;volatile
  3007     0A41  00F0               	movwf	?_ADC_Read
  3008     0A42                     l106:
  3009     0A42  0008               	return
  3010     0A43                     __end_of_ADC_Read:
  3011                           
  3012                           	psect	text10
  3013     0C2A                     __ptext10:	
  3014 ;; *************** function _mover_nubes *****************
  3015 ;; Defined at:
  3016 ;;		line 256 in file "main.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  i               1    2[BANK0 ] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         0       0       0       0       0
  3031 ;;      Locals:         0       3       0       0       0
  3032 ;;      Temps:          3       0       0       0       0
  3033 ;;      Totals:         3       3       0       0       0
  3034 ;;Total ram usage:        6 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 3
  3037 ;; This function calls:
  3038 ;;		_LCD_Write
  3039 ;;		_LCD_putc
  3040 ;;		_LCD_putrs
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046     0C2A                     _mover_nubes:	
  3047                           ;psect for function _mover_nubes
  3048                           
  3049     0C2A                     l2352:	
  3050                           ;incstack = 0
  3051                           ; Regs used in _mover_nubes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3052                           
  3053                           
  3054                           ;main.c: 257:     for(uint8_t i = 0; i < 2; i++){
  3055     0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  3056     0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  3057     0C2C  01A2               	clrf	mover_nubes@i
  3058     0C2D  2C2E               	goto	l2360
  3059     0C2E                     l246:
  3060     0C2E                     l2360:
  3061     0C2E  0822               	movf	mover_nubes@i,w
  3062     0C2F  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3063     0C30  0084               	movwf	4
  3064     0C31  1383               	bcf	3,7	;select IRP bank0
  3065     0C32  0800               	movf	0,w
  3066     0C33  3EC0               	addlw	192
  3067     0C34  00F9               	movwf	??_mover_nubes
  3068     0C35  3004               	movlw	4
  3069     0C36                     u3285:
  3070     0C36  1003               	clrc
  3071     0C37  0CF9               	rrf	??_mover_nubes,f
  3072     0C38  3EFF               	addlw	-1
  3073     0C39  1D03               	skipz
  3074     0C3A  2C36               	goto	u3285
  3075     0C3B  0879               	movf	??_mover_nubes,w
  3076     0C3C  390F               	andlw	15
  3077     0C3D  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3078     0C42  1283               	bcf	3,5	;RP0=0, select bank0
  3079     0C43  1303               	bcf	3,6	;RP1=0, select bank0
  3080     0C44  0822               	movf	mover_nubes@i,w
  3081     0C45  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3082     0C46  0084               	movwf	4
  3083     0C47  1383               	bcf	3,7	;select IRP bank0
  3084     0C48  0800               	movf	0,w
  3085     0C49  3EC0               	addlw	192
  3086     0C4A  390F               	andlw	15
  3087     0C4B  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3088     0C50                     l261:
  3089                           
  3090                           ;main.c: 259:         fondo[p] = 2;
  3091     0C50  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3092     0C51  00F6               	movwf	LCD_putrs@a
  3093     0C52  120A  158A  21A7  120A  158A  	fcall	_LCD_putrs
  3094     0C57                     l2366:
  3095                           
  3096                           ;main.c: 260:         fondo[p + 1] = 3;
  3097     0C57  1283               	bcf	3,5	;RP0=0, select bank0
  3098     0C58  1303               	bcf	3,6	;RP1=0, select bank0
  3099     0C59  0822               	movf	mover_nubes@i,w
  3100     0C5A  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3101     0C5B  0084               	movwf	4
  3102     0C5C  1383               	bcf	3,7	;select IRP bank0
  3103     0C5D  0800               	movf	0,w
  3104     0C5E  1903               	btfsc	3,2
  3105     0C5F  2C61               	goto	u3291
  3106     0C60  2C62               	goto	u3290
  3107     0C61                     u3291:
  3108     0C61  2C6D               	goto	l2370
  3109     0C62                     u3290:
  3110     0C62                     l2368:
  3111     0C62  0822               	movf	mover_nubes@i,w
  3112     0C63  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3113     0C64  0084               	movwf	4
  3114     0C65  0800               	movf	0,w
  3115     0C66  3EFF               	addlw	255
  3116     0C67  00A0               	movwf	_mover_nubes$220
  3117     0C68  30FF               	movlw	255
  3118     0C69  1803               	skipnc
  3119     0C6A  3000               	movlw	0
  3120     0C6B  00A1               	movwf	_mover_nubes$220+1
  3121     0C6C  2C71               	goto	l2372
  3122     0C6D                     l2370:
  3123     0C6D  3013               	movlw	19
  3124     0C6E  00A0               	movwf	_mover_nubes$220
  3125     0C6F  3000               	movlw	0
  3126     0C70  00A1               	movwf	_mover_nubes$220+1
  3127     0C71                     l2372:
  3128     0C71  0822               	movf	mover_nubes@i,w
  3129     0C72  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3130     0C73  0084               	movwf	4
  3131     0C74  0820               	movf	_mover_nubes$220,w
  3132     0C75  0080               	movwf	0
  3133     0C76                     l2376:
  3134     0C76  0822               	movf	mover_nubes@i,w
  3135     0C77  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3136     0C78  0084               	movwf	4
  3137     0C79  0800               	movf	0,w
  3138     0C7A  3EC0               	addlw	192
  3139     0C7B  00F9               	movwf	??_mover_nubes
  3140     0C7C  3004               	movlw	4
  3141     0C7D                     u3305:
  3142     0C7D  1003               	clrc
  3143     0C7E  0CF9               	rrf	??_mover_nubes,f
  3144     0C7F  3EFF               	addlw	-1
  3145     0C80  1D03               	skipz
  3146     0C81  2C7D               	goto	u3305
  3147     0C82  0879               	movf	??_mover_nubes,w
  3148     0C83  390F               	andlw	15
  3149     0C84  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3150     0C89  1283               	bcf	3,5	;RP0=0, select bank0
  3151     0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  3152     0C8B  0822               	movf	mover_nubes@i,w
  3153     0C8C  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3154     0C8D  0084               	movwf	4
  3155     0C8E  1383               	bcf	3,7	;select IRP bank0
  3156     0C8F  0800               	movf	0,w
  3157     0C90  3EC0               	addlw	192
  3158     0C91  390F               	andlw	15
  3159     0C92  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3160     0C97                     l282:
  3161                           
  3162                           ;main.c: 262: 
  3163     0C97  3006               	movlw	6
  3164     0C98  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  3165     0C9D                     l2382:
  3166                           
  3167                           ;main.c: 263: 
  3168     0C9D  3001               	movlw	1
  3169     0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  3170     0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  3171     0CA0  07A2               	addwf	mover_nubes@i,f
  3172     0CA1                     l2384:
  3173     0CA1  3003               	movlw	3
  3174     0CA2  0222               	subwf	mover_nubes@i,w
  3175     0CA3  1C03               	skipc
  3176     0CA4  2CA6               	goto	u3311
  3177     0CA5  2CA7               	goto	u3310
  3178     0CA6                     u3311:
  3179     0CA6  2C2E               	goto	l246
  3180     0CA7                     u3310:
  3181     0CA7                     l2386:
  3182                           
  3183                           ;main.c: 264:     for(uint8_t i = 0; i < 3; i++){
  3184     0CA7  3002               	movlw	2
  3185     0CA8  00FB               	movwf	??_mover_nubes+2
  3186     0CA9  3045               	movlw	69
  3187     0CAA  00FA               	movwf	??_mover_nubes+1
  3188     0CAB  30A9               	movlw	169
  3189     0CAC  00F9               	movwf	??_mover_nubes
  3190     0CAD                     u3447:
  3191     0CAD  0BF9               	decfsz	??_mover_nubes,f
  3192     0CAE  2CAD               	goto	u3447
  3193     0CAF  0BFA               	decfsz	??_mover_nubes+1,f
  3194     0CB0  2CAD               	goto	u3447
  3195     0CB1  0BFB               	decfsz	??_mover_nubes+2,f
  3196     0CB2  2CAD               	goto	u3447
  3197     0CB3  2CB4               	nop2
  3198     0CB4                     l283:
  3199     0CB4  0008               	return
  3200     0CB5                     __end_of_mover_nubes:
  3201                           
  3202                           	psect	text11
  3203     09F1                     __ptext11:	
  3204 ;; *************** function _dibujar_suelo *****************
  3205 ;; Defined at:
  3206 ;;		line 130 in file "main.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  i               1    2[BANK0 ] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3220 ;;      Params:         0       0       0       0       0
  3221 ;;      Locals:         0       1       0       0       0
  3222 ;;      Temps:          0       0       0       0       0
  3223 ;;      Totals:         0       1       0       0       0
  3224 ;;Total ram usage:        1 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 4
  3227 ;; This function calls:
  3228 ;;		_LCD_Write
  3229 ;;		_LCD_custom_char
  3230 ;;		_LCD_putc
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236     09F1                     _dibujar_suelo:	
  3237                           ;psect for function _dibujar_suelo
  3238                           
  3239     09F1                     l2160:	
  3240                           ;incstack = 0
  3241                           ; Regs used in _dibujar_suelo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3242                           
  3243                           
  3244                           ;main.c: 131: uint8_t nubes[3];
  3245     09F1  3031               	movlw	(low ((_suelo-__stringbase)| (0+32768)))& (0+255)
  3246     09F2  00FB               	movwf	LCD_custom_char@x
  3247     09F3  3001               	movlw	1
  3248     09F4  120A  158A  2243  120A  158A  	fcall	_LCD_custom_char
  3249     09F9                     l2168:
  3250     09F9  300D               	movlw	13
  3251     09FA  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3252     09FF  3004               	movlw	4
  3253     0A00  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3254     0A05                     l2170:
  3255                           
  3256                           ;main.c: 133: void main(void){
  3257     0A05  1283               	bcf	3,5	;RP0=0, select bank0
  3258     0A06  1303               	bcf	3,6	;RP1=0, select bank0
  3259     0A07  01A2               	clrf	dibujar_suelo@i
  3260     0A08                     l2176:
  3261                           
  3262                           ;main.c: 134:     TRISAbits.TRISA2 = 1;
  3263     0A08  3001               	movlw	1
  3264     0A09  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  3265     0A0E                     l2178:
  3266                           
  3267                           ;main.c: 135:     TRISAbits.TRISA3 = 0;
  3268     0A0E  3001               	movlw	1
  3269     0A0F  1283               	bcf	3,5	;RP0=0, select bank0
  3270     0A10  1303               	bcf	3,6	;RP1=0, select bank0
  3271     0A11  07A2               	addwf	dibujar_suelo@i,f
  3272     0A12                     l2180:
  3273     0A12  3014               	movlw	20
  3274     0A13  0222               	subwf	dibujar_suelo@i,w
  3275     0A14  1C03               	skipc
  3276     0A15  2A17               	goto	u2781
  3277     0A16  2A18               	goto	u2780
  3278     0A17                     u2781:
  3279     0A17  2A08               	goto	l2176
  3280     0A18                     u2780:
  3281     0A18                     l97:
  3282     0A18  0008               	return
  3283     0A19                     __end_of_dibujar_suelo:
  3284                           
  3285                           	psect	text12
  3286     0A43                     __ptext12:	
  3287 ;; *************** function _LCD_custom_char *****************
  3288 ;; Defined at:
  3289 ;;		line 121 in file "main.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  pos             1    wreg     unsigned char 
  3292 ;;  x               1   11[COMMON] PTR const unsigned char 
  3293 ;;		 -> flor(8), nube(8), arbol(8), bob_reves(8), 
  3294 ;;		 -> casa2(8), casa1(8), bob(8), suelo(8), 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  pos             1    0[BANK0 ] unsigned char 
  3297 ;;  i               1    1[BANK0 ] unsigned char 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3307 ;;      Params:         1       0       0       0       0
  3308 ;;      Locals:         0       2       0       0       0
  3309 ;;      Temps:          2       0       0       0       0
  3310 ;;      Totals:         3       2       0       0       0
  3311 ;;Total ram usage:        5 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; Hardware stack levels required when called: 3
  3314 ;; This function calls:
  3315 ;;		_LCD_cg_ram_addr
  3316 ;;		_LCD_ram_write
  3317 ;; This function is called by:
  3318 ;;		_dibujar_suelo
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323     0A43                     _LCD_custom_char:	
  3324                           ;psect for function _LCD_custom_char
  3325                           
  3326                           
  3327                           ;incstack = 0
  3328                           ; Regs used in _LCD_custom_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3329                           ;LCD_custom_char@pos stored from wreg
  3330     0A43  1283               	bcf	3,5	;RP0=0, select bank0
  3331     0A44  1303               	bcf	3,6	;RP1=0, select bank0
  3332     0A45  00A0               	movwf	LCD_custom_char@pos
  3333     0A46                     l1890:
  3334                           
  3335                           ;main.c: 122:     GO_nDONE = 1;
  3336     0A46  0820               	movf	LCD_custom_char@pos,w
  3337     0A47  3907               	andlw	7
  3338     0A48  00FC               	movwf	??_LCD_custom_char
  3339     0A49  3002               	movlw	2
  3340     0A4A                     u2105:
  3341     0A4A  1003               	clrc
  3342     0A4B  0DFC               	rlf	??_LCD_custom_char,f
  3343     0A4C  3EFF               	addlw	-1
  3344     0A4D  1D03               	skipz
  3345     0A4E  2A4A               	goto	u2105
  3346     0A4F  1003               	clrc
  3347     0A50  0D7C               	rlf	??_LCD_custom_char,w
  3348     0A51  00A0               	movwf	LCD_custom_char@pos
  3349     0A52                     l1892:
  3350                           
  3351                           ;main.c: 123:     while(GO_nDONE);
  3352     0A52  0820               	movf	LCD_custom_char@pos,w
  3353     0A53  120A  158A  21CB  120A  158A  	fcall	_LCD_cg_ram_addr
  3354     0A58                     l1894:
  3355                           
  3356                           ;main.c: 124:     return ((ADRESH << 8) + ADRESL);
  3357     0A58  3003               	movlw	3
  3358     0A59  00FD               	movwf	??_LCD_custom_char+1
  3359     0A5A  3097               	movlw	151
  3360     0A5B  00FC               	movwf	??_LCD_custom_char
  3361     0A5C                     u3457:
  3362     0A5C  0BFC               	decfsz	??_LCD_custom_char,f
  3363     0A5D  2A5C               	goto	u3457
  3364     0A5E  0BFD               	decfsz	??_LCD_custom_char+1,f
  3365     0A5F  2A5C               	goto	u3457
  3366     0A60  2A61               	nop2
  3367     0A61                     l1896:
  3368                           
  3369                           ;main.c: 125: }
  3370     0A61  1283               	bcf	3,5	;RP0=0, select bank0
  3371     0A62  1303               	bcf	3,6	;RP1=0, select bank0
  3372     0A63  01A1               	clrf	LCD_custom_char@i
  3373     0A64                     l1902:
  3374                           
  3375                           ;main.c: 126: 
  3376     0A64  0821               	movf	LCD_custom_char@i,w
  3377     0A65  077B               	addwf	LCD_custom_char@x,w
  3378     0A66  0084               	movwf	4
  3379     0A67  120A  158A  2000  120A  158A  	fcall	stringdir
  3380     0A6C  120A  158A  2185  120A  158A  	fcall	_LCD_ram_write
  3381     0A71                     l1904:
  3382                           
  3383                           ;main.c: 127: uint8_t pos_x = 8;
  3384     0A71  3001               	movlw	1
  3385     0A72  1283               	bcf	3,5	;RP0=0, select bank0
  3386     0A73  1303               	bcf	3,6	;RP1=0, select bank0
  3387     0A74  07A1               	addwf	LCD_custom_char@i,f
  3388     0A75                     l1906:
  3389     0A75  3008               	movlw	8
  3390     0A76  0221               	subwf	LCD_custom_char@i,w
  3391     0A77  1C03               	skipc
  3392     0A78  2A7A               	goto	u2111
  3393     0A79  2A7B               	goto	u2110
  3394     0A7A                     u2111:
  3395     0A7A  2A64               	goto	l1902
  3396     0A7B                     u2110:
  3397     0A7B                     l75:
  3398     0A7B  0008               	return
  3399     0A7C                     __end_of_LCD_custom_char:
  3400                           
  3401                           	psect	text13
  3402     0985                     __ptext13:	
  3403 ;; *************** function _LCD_ram_write *****************
  3404 ;; Defined at:
  3405 ;;		line 103 in file "lcd.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  data            1    wreg     unsigned char 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  data            1    7[COMMON] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3419 ;;      Params:         0       0       0       0       0
  3420 ;;      Locals:         1       0       0       0       0
  3421 ;;      Temps:          1       0       0       0       0
  3422 ;;      Totals:         2       0       0       0       0
  3423 ;;Total ram usage:        2 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 2
  3426 ;; This function calls:
  3427 ;;		_LCD_putc
  3428 ;; This function is called by:
  3429 ;;		_LCD_custom_char
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433     0985                     _LCD_ram_write:	
  3434                           ;psect for function _LCD_ram_write
  3435                           
  3436                           
  3437                           ;incstack = 0
  3438                           ; Regs used in _LCD_ram_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3439                           ;LCD_ram_write@data stored from wreg
  3440     0985  00F7               	movwf	LCD_ram_write@data
  3441     0986                     l1834:
  3442                           
  3443                           ;lcd.c: 104:     LCD_putc(data);
  3444     0986  0877               	movf	LCD_ram_write@data,w
  3445     0987  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  3446     098C                     l1836:
  3447                           
  3448                           ;lcd.c: 105:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3449     098C  30C7               	movlw	199
  3450     098D  00F6               	movwf	??_LCD_ram_write
  3451     098E                     u3467:
  3452     098E  298F               	nop2
  3453     098F  0BF6               	decfsz	??_LCD_ram_write,f
  3454     0990  298E               	goto	u3467
  3455     0991  2992               	nop2
  3456     0992  2993               	nop2
  3457     0993                     l526:
  3458     0993  0008               	return
  3459     0994                     __end_of_LCD_ram_write:
  3460                           
  3461                           	psect	text14
  3462     09CB                     __ptext14:	
  3463 ;; *************** function _LCD_cg_ram_addr *****************
  3464 ;; Defined at:
  3465 ;;		line 98 in file "lcd.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  addr            1    wreg     unsigned char 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  addr            1   10[COMMON] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      void 
  3472 ;; Registers used:
  3473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3479 ;;      Params:         0       0       0       0       0
  3480 ;;      Locals:         1       0       0       0       0
  3481 ;;      Temps:          4       0       0       0       0
  3482 ;;      Totals:         5       0       0       0       0
  3483 ;;Total ram usage:        5 bytes
  3484 ;; Hardware stack levels used: 1
  3485 ;; Hardware stack levels required when called: 2
  3486 ;; This function calls:
  3487 ;;		_LCD_Write
  3488 ;; This function is called by:
  3489 ;;		_LCD_custom_char
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493     09CB                     _LCD_cg_ram_addr:	
  3494                           ;psect for function _LCD_cg_ram_addr
  3495                           
  3496                           
  3497                           ;incstack = 0
  3498                           ; Regs used in _LCD_cg_ram_addr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3499                           ;LCD_cg_ram_addr@addr stored from wreg
  3500     09CB  00FA               	movwf	LCD_cg_ram_addr@addr
  3501     09CC                     l521:	
  3502                           ;lcd.c: 99:     do { LCD_Write( (0x40 | (addr & 0x3F) & 0xF0) >> 4 ); LCD_Write( 0x40 | 
      +                          (addr & 0x3F) & 0x0F); } while ( 0 );
  3503                           
  3504     09CC                     l1830:
  3505     09CC  3030               	movlw	48
  3506     09CD  057A               	andwf	LCD_cg_ram_addr@addr,w
  3507     09CE  00F6               	movwf	??_LCD_cg_ram_addr
  3508     09CF  3040               	movlw	64
  3509     09D0  0476               	iorwf	??_LCD_cg_ram_addr,w
  3510     09D1  00F7               	movwf	??_LCD_cg_ram_addr+1
  3511     09D2  3000               	movlw	0
  3512     09D3  00F8               	movwf	??_LCD_cg_ram_addr+2
  3513     09D4  3004               	movlw	4
  3514     09D5  00F9               	movwf	??_LCD_cg_ram_addr+3
  3515     09D6                     u1975:
  3516     09D6  0D78               	rlf	??_LCD_cg_ram_addr+2,w
  3517     09D7  0CF8               	rrf	??_LCD_cg_ram_addr+2,f
  3518     09D8  0CF7               	rrf	??_LCD_cg_ram_addr+1,f
  3519     09D9  0BF9               	decfsz	??_LCD_cg_ram_addr+3,f
  3520     09DA  29D6               	goto	u1975
  3521     09DB  0877               	movf	??_LCD_cg_ram_addr+1,w
  3522     09DC  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3523     09E1  087A               	movf	LCD_cg_ram_addr@addr,w
  3524     09E2  390F               	andlw	15
  3525     09E3  3840               	iorlw	64
  3526     09E4  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3527     09E9                     l1832:
  3528                           
  3529                           ;lcd.c: 100:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3530     09E9  30C7               	movlw	199
  3531     09EA  00F6               	movwf	??_LCD_cg_ram_addr
  3532     09EB                     u3477:
  3533     09EB  29EC               	nop2
  3534     09EC  0BF6               	decfsz	??_LCD_cg_ram_addr,f
  3535     09ED  29EB               	goto	u3477
  3536     09EE  29EF               	nop2
  3537     09EF  29F0               	nop2
  3538     09F0                     l523:
  3539     09F0  0008               	return
  3540     09F1                     __end_of_LCD_cg_ram_addr:
  3541                           
  3542                           	psect	text15
  3543     095E                     __ptext15:	
  3544 ;; *************** function _checar_boton *****************
  3545 ;; Defined at:
  3546 ;;		line 247 in file "main.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3560 ;;      Params:         0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0
  3563 ;;      Totals:         0       0       0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; Hardware stack levels required when called: 4
  3567 ;; This function calls:
  3568 ;;		_disparar
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574     095E                     _checar_boton:	
  3575                           ;psect for function _checar_boton
  3576                           
  3577     095E                     l2348:	
  3578                           ;incstack = 0
  3579                           ; Regs used in _checar_boton: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3580                           
  3581                           
  3582                           ;main.c: 248:         uint8_t p = rand() % 20;
  3583     095E  1283               	bcf	3,5	;RP0=0, select bank0
  3584     095F  1303               	bcf	3,6	;RP1=0, select bank0
  3585     0960  1D05               	btfss	5,2	;volatile
  3586     0961  2963               	goto	u3271
  3587     0962  2964               	goto	u3270
  3588     0963                     u3271:
  3589     0963  2969               	goto	l240
  3590     0964                     u3270:
  3591     0964                     l2350:
  3592                           
  3593                           ;main.c: 249:         fondo[p] = 5;
  3594     0964  120A  118A  236B  120A  158A  	fcall	_disparar
  3595     0969                     l240:
  3596     0969  0008               	return
  3597     096A                     __end_of_checar_boton:
  3598                           
  3599                           	psect	text16
  3600     036B                     __ptext16:	
  3601 ;; *************** function _disparar *****************
  3602 ;; Defined at:
  3603 ;;		line 317 in file "main.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;		None
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  moved           1    9[COMMON] _Bool 
  3608 ;;  offset          1   10[COMMON] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         0       0       0       0       0
  3619 ;;      Locals:         2       0       0       0       0
  3620 ;;      Temps:          0       7       0       0       0
  3621 ;;      Totals:         2       7       0       0       0
  3622 ;;Total ram usage:        9 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; Hardware stack levels required when called: 3
  3625 ;; This function calls:
  3626 ;;		_LCD_Write
  3627 ;;		_LCD_putc
  3628 ;;		_LCD_putrs
  3629 ;; This function is called by:
  3630 ;;		_checar_boton
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634     036B                     _disparar:	
  3635                           ;psect for function _disparar
  3636                           
  3637     036B                     l342:	
  3638                           ;incstack = 0
  3639                           ; Regs used in _disparar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3640                           ;main.c: 319:             do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x + offse
      +                          t & 0xF0) >> 4 ); LCD_Write( 0x80 + pos_x + offset & 0x0F); } while ( 0 ); } else if ( p
      +                          os_y == 1 ) { do { LCD_Write( (0xC0 + pos_x + offset & 0xF0) >> 4 ); LCD_Write( 0xC0 + p
      +                          os_x + offset & 0x0F); } while ( 0 ); } else if ( pos_y == 2 ) { do { LCD_Write( (0x94 +
      +                           pos_x + offset & 0xF0) >> 4 ); LCD_Write( 0x94 + pos_x + offset & 0x0F); } while ( 0 );
      +                           } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x + offset & 0xF0) >> 4 ); LCD_W
      +                          rite( 0xD4 + pos_x + offset & 0x0F); } while ( 0 ); } } while ( 0 );
  3641                           
  3642     036B                     l2030:
  3643     036B  1283               	bcf	3,5	;RP0=0, select bank0
  3644     036C  1303               	bcf	3,6	;RP1=0, select bank0
  3645     036D  085E               	movf	_pos_y,w
  3646     036E  1D03               	btfss	3,2
  3647     036F  2B71               	goto	u2241
  3648     0370  2B72               	goto	u2240
  3649     0371                     u2241:
  3650     0371  2B8D               	goto	l2034
  3651     0372                     u2240:
  3652     0372                     l2032:
  3653     0372  085F               	movf	_pos_x,w
  3654     0373  3E80               	addlw	128
  3655     0374  00A0               	movwf	??_disparar
  3656     0375  3004               	movlw	4
  3657     0376                     u2255:
  3658     0376  1003               	clrc
  3659     0377  0CA0               	rrf	??_disparar,f
  3660     0378  3EFF               	addlw	-1
  3661     0379  1D03               	skipz
  3662     037A  2B76               	goto	u2255
  3663     037B  0820               	movf	??_disparar,w
  3664     037C  390F               	andlw	15
  3665     037D  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3666     0382  1283               	bcf	3,5	;RP0=0, select bank0
  3667     0383  1303               	bcf	3,6	;RP1=0, select bank0
  3668     0384  085F               	movf	_pos_x,w
  3669     0385  3E80               	addlw	128
  3670     0386  390F               	andlw	15
  3671     0387  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3672     038C  2BEE               	goto	l358
  3673     038D                     l2034:
  3674     038D  035E               	decf	_pos_y,w
  3675     038E  1D03               	btfss	3,2
  3676     038F  2B91               	goto	u2261
  3677     0390  2B92               	goto	u2260
  3678     0391                     u2261:
  3679     0391  2BAD               	goto	l2038
  3680     0392                     u2260:
  3681     0392                     l2036:
  3682     0392  085F               	movf	_pos_x,w
  3683     0393  3EC0               	addlw	192
  3684     0394  00A0               	movwf	??_disparar
  3685     0395  3004               	movlw	4
  3686     0396                     u2275:
  3687     0396  1003               	clrc
  3688     0397  0CA0               	rrf	??_disparar,f
  3689     0398  3EFF               	addlw	-1
  3690     0399  1D03               	skipz
  3691     039A  2B96               	goto	u2275
  3692     039B  0820               	movf	??_disparar,w
  3693     039C  390F               	andlw	15
  3694     039D  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3695     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3696     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3697     03A4  085F               	movf	_pos_x,w
  3698     03A5  3EC0               	addlw	192
  3699     03A6  390F               	andlw	15
  3700     03A7  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3701     03AC  2BEE               	goto	l358
  3702     03AD                     l2038:
  3703     03AD  3002               	movlw	2
  3704     03AE  065E               	xorwf	_pos_y,w
  3705     03AF  1D03               	btfss	3,2
  3706     03B0  2BB2               	goto	u2281
  3707     03B1  2BB3               	goto	u2280
  3708     03B2                     u2281:
  3709     03B2  2BCE               	goto	l2042
  3710     03B3                     u2280:
  3711     03B3                     l2040:
  3712     03B3  085F               	movf	_pos_x,w
  3713     03B4  3E94               	addlw	148
  3714     03B5  00A0               	movwf	??_disparar
  3715     03B6  3004               	movlw	4
  3716     03B7                     u2295:
  3717     03B7  1003               	clrc
  3718     03B8  0CA0               	rrf	??_disparar,f
  3719     03B9  3EFF               	addlw	-1
  3720     03BA  1D03               	skipz
  3721     03BB  2BB7               	goto	u2295
  3722     03BC  0820               	movf	??_disparar,w
  3723     03BD  390F               	andlw	15
  3724     03BE  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3725     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  3726     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  3727     03C5  085F               	movf	_pos_x,w
  3728     03C6  3E94               	addlw	148
  3729     03C7  390F               	andlw	15
  3730     03C8  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3731     03CD  2BEE               	goto	l358
  3732     03CE                     l2042:
  3733     03CE  3003               	movlw	3
  3734     03CF  065E               	xorwf	_pos_y,w
  3735     03D0  1D03               	btfss	3,2
  3736     03D1  2BD3               	goto	u2301
  3737     03D2  2BD4               	goto	u2300
  3738     03D3                     u2301:
  3739     03D3  2BEE               	goto	l358
  3740     03D4                     u2300:
  3741     03D4                     l2044:
  3742     03D4  085F               	movf	_pos_x,w
  3743     03D5  3ED4               	addlw	212
  3744     03D6  00A0               	movwf	??_disparar
  3745     03D7  3004               	movlw	4
  3746     03D8                     u2315:
  3747     03D8  1003               	clrc
  3748     03D9  0CA0               	rrf	??_disparar,f
  3749     03DA  3EFF               	addlw	-1
  3750     03DB  1D03               	skipz
  3751     03DC  2BD8               	goto	u2315
  3752     03DD  0820               	movf	??_disparar,w
  3753     03DE  390F               	andlw	15
  3754     03DF  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3755     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  3756     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  3757     03E6  085F               	movf	_pos_x,w
  3758     03E7  3ED4               	addlw	212
  3759     03E8  390F               	andlw	15
  3760     03E9  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3761     03EE                     l358:
  3762                           
  3763                           ;main.c: 320:             LCD_putrs(" ");
  3764     03EE  3004               	movlw	4
  3765     03EF  120A  118A  2008  120A  118A  	fcall	_LCD_putc
  3766     03F4                     l2046:
  3767                           
  3768                           ;main.c: 323:         if(pos_x >= offset){
  3769     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  3770     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  3771     03F6  1585               	bsf	5,3	;volatile
  3772     03F7                     l2048:
  3773                           
  3774                           ;main.c: 326:         }
  3775     03F7  3001               	movlw	1
  3776     03F8  00FA               	movwf	disparar@offset
  3777     03F9                     l2054:
  3778                           
  3779                           ;main.c: 327: 
  3780     03F9  01F9               	clrf	disparar@moved
  3781     03FA                     l2056:
  3782                           
  3783                           ;main.c: 330: 
  3784     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  3785     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  3786     03FC  085F               	movf	_pos_x,w
  3787     03FD  077A               	addwf	disparar@offset,w
  3788     03FE  00A0               	movwf	??_disparar
  3789     03FF  01A1               	clrf	??_disparar+1
  3790     0400  0DA1               	rlf	??_disparar+1,f
  3791     0401  0821               	movf	??_disparar+1,w
  3792     0402  3A80               	xorlw	128
  3793     0403  00FF               	movwf	btemp+1
  3794     0404  3080               	movlw	128
  3795     0405  027F               	subwf	btemp+1,w
  3796     0406  1D03               	skipz
  3797     0407  2C0A               	goto	u2325
  3798     0408  3014               	movlw	20
  3799     0409  0220               	subwf	??_disparar,w
  3800     040A                     u2325:
  3801     040A  1803               	skipnc
  3802     040B  2C0D               	goto	u2321
  3803     040C  2C0E               	goto	u2320
  3804     040D                     u2321:
  3805     040D  2CC9               	goto	l2076
  3806     040E                     u2320:
  3807     040E                     l2058:
  3808     040E  1283               	bcf	3,5	;RP0=0, select bank0
  3809     040F  1303               	bcf	3,6	;RP1=0, select bank0
  3810     0410  085E               	movf	_pos_y,w
  3811     0411  1D03               	btfss	3,2
  3812     0412  2C14               	goto	u2331
  3813     0413  2C15               	goto	u2330
  3814     0414                     u2331:
  3815     0414  2C3C               	goto	l2062
  3816     0415                     u2330:
  3817     0415                     l2060:
  3818     0415  085F               	movf	_pos_x,w
  3819     0416  077A               	addwf	disparar@offset,w
  3820     0417  00A0               	movwf	??_disparar
  3821     0418  01A1               	clrf	??_disparar+1
  3822     0419  0DA1               	rlf	??_disparar+1,f
  3823     041A  0820               	movf	??_disparar,w
  3824     041B  3E80               	addlw	128
  3825     041C  00A2               	movwf	??_disparar+2
  3826     041D  0821               	movf	??_disparar+1,w
  3827     041E  1803               	skipnc
  3828     041F  3E01               	addlw	1
  3829     0420  3E00               	addlw	0
  3830     0421  00A3               	movwf	??_disparar+3
  3831     0422  3004               	movlw	4
  3832     0423  00A4               	movwf	??_disparar+4
  3833     0424                     u2345:
  3834     0424  0D23               	rlf	??_disparar+3,w
  3835     0425  0CA3               	rrf	??_disparar+3,f
  3836     0426  0CA2               	rrf	??_disparar+2,f
  3837     0427  0BA4               	decfsz	??_disparar+4,f
  3838     0428  2C24               	goto	u2345
  3839     0429  0822               	movf	??_disparar+2,w
  3840     042A  390F               	andlw	15
  3841     042B  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3842     0430  087A               	movf	disparar@offset,w
  3843     0431  1283               	bcf	3,5	;RP0=0, select bank0
  3844     0432  1303               	bcf	3,6	;RP1=0, select bank0
  3845     0433  075F               	addwf	_pos_x,w
  3846     0434  3E80               	addlw	128
  3847     0435  390F               	andlw	15
  3848     0436  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3849     043B  2CC1               	goto	l378
  3850     043C                     l2062:
  3851     043C  035E               	decf	_pos_y,w
  3852     043D  1D03               	btfss	3,2
  3853     043E  2C40               	goto	u2351
  3854     043F  2C41               	goto	u2350
  3855     0440                     u2351:
  3856     0440  2C68               	goto	l2066
  3857     0441                     u2350:
  3858     0441                     l2064:
  3859     0441  085F               	movf	_pos_x,w
  3860     0442  077A               	addwf	disparar@offset,w
  3861     0443  00A0               	movwf	??_disparar
  3862     0444  01A1               	clrf	??_disparar+1
  3863     0445  0DA1               	rlf	??_disparar+1,f
  3864     0446  0820               	movf	??_disparar,w
  3865     0447  3EC0               	addlw	192
  3866     0448  00A2               	movwf	??_disparar+2
  3867     0449  0821               	movf	??_disparar+1,w
  3868     044A  1803               	skipnc
  3869     044B  3E01               	addlw	1
  3870     044C  3E00               	addlw	0
  3871     044D  00A3               	movwf	??_disparar+3
  3872     044E  3004               	movlw	4
  3873     044F  00A4               	movwf	??_disparar+4
  3874     0450                     u2365:
  3875     0450  0D23               	rlf	??_disparar+3,w
  3876     0451  0CA3               	rrf	??_disparar+3,f
  3877     0452  0CA2               	rrf	??_disparar+2,f
  3878     0453  0BA4               	decfsz	??_disparar+4,f
  3879     0454  2C50               	goto	u2365
  3880     0455  0822               	movf	??_disparar+2,w
  3881     0456  390F               	andlw	15
  3882     0457  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3883     045C  087A               	movf	disparar@offset,w
  3884     045D  1283               	bcf	3,5	;RP0=0, select bank0
  3885     045E  1303               	bcf	3,6	;RP1=0, select bank0
  3886     045F  075F               	addwf	_pos_x,w
  3887     0460  3EC0               	addlw	192
  3888     0461  390F               	andlw	15
  3889     0462  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3890     0467  2CC1               	goto	l378
  3891     0468                     l2066:
  3892     0468  3002               	movlw	2
  3893     0469  065E               	xorwf	_pos_y,w
  3894     046A  1D03               	btfss	3,2
  3895     046B  2C6D               	goto	u2371
  3896     046C  2C6E               	goto	u2370
  3897     046D                     u2371:
  3898     046D  2C95               	goto	l2070
  3899     046E                     u2370:
  3900     046E                     l2068:
  3901     046E  085F               	movf	_pos_x,w
  3902     046F  077A               	addwf	disparar@offset,w
  3903     0470  00A0               	movwf	??_disparar
  3904     0471  01A1               	clrf	??_disparar+1
  3905     0472  0DA1               	rlf	??_disparar+1,f
  3906     0473  0820               	movf	??_disparar,w
  3907     0474  3E94               	addlw	148
  3908     0475  00A2               	movwf	??_disparar+2
  3909     0476  0821               	movf	??_disparar+1,w
  3910     0477  1803               	skipnc
  3911     0478  3E01               	addlw	1
  3912     0479  3E00               	addlw	0
  3913     047A  00A3               	movwf	??_disparar+3
  3914     047B  3004               	movlw	4
  3915     047C  00A4               	movwf	??_disparar+4
  3916     047D                     u2385:
  3917     047D  0D23               	rlf	??_disparar+3,w
  3918     047E  0CA3               	rrf	??_disparar+3,f
  3919     047F  0CA2               	rrf	??_disparar+2,f
  3920     0480  0BA4               	decfsz	??_disparar+4,f
  3921     0481  2C7D               	goto	u2385
  3922     0482  0822               	movf	??_disparar+2,w
  3923     0483  390F               	andlw	15
  3924     0484  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3925     0489  087A               	movf	disparar@offset,w
  3926     048A  1283               	bcf	3,5	;RP0=0, select bank0
  3927     048B  1303               	bcf	3,6	;RP1=0, select bank0
  3928     048C  075F               	addwf	_pos_x,w
  3929     048D  3E94               	addlw	148
  3930     048E  390F               	andlw	15
  3931     048F  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3932     0494  2CC1               	goto	l378
  3933     0495                     l2070:
  3934     0495  3003               	movlw	3
  3935     0496  065E               	xorwf	_pos_y,w
  3936     0497  1D03               	btfss	3,2
  3937     0498  2C9A               	goto	u2391
  3938     0499  2C9B               	goto	u2390
  3939     049A                     u2391:
  3940     049A  2CC1               	goto	l378
  3941     049B                     u2390:
  3942     049B                     l2072:
  3943     049B  085F               	movf	_pos_x,w
  3944     049C  077A               	addwf	disparar@offset,w
  3945     049D  00A0               	movwf	??_disparar
  3946     049E  01A1               	clrf	??_disparar+1
  3947     049F  0DA1               	rlf	??_disparar+1,f
  3948     04A0  0820               	movf	??_disparar,w
  3949     04A1  3ED4               	addlw	212
  3950     04A2  00A2               	movwf	??_disparar+2
  3951     04A3  0821               	movf	??_disparar+1,w
  3952     04A4  1803               	skipnc
  3953     04A5  3E01               	addlw	1
  3954     04A6  3E00               	addlw	0
  3955     04A7  00A3               	movwf	??_disparar+3
  3956     04A8  3004               	movlw	4
  3957     04A9  00A4               	movwf	??_disparar+4
  3958     04AA                     u2405:
  3959     04AA  0D23               	rlf	??_disparar+3,w
  3960     04AB  0CA3               	rrf	??_disparar+3,f
  3961     04AC  0CA2               	rrf	??_disparar+2,f
  3962     04AD  0BA4               	decfsz	??_disparar+4,f
  3963     04AE  2CAA               	goto	u2405
  3964     04AF  0822               	movf	??_disparar+2,w
  3965     04B0  390F               	andlw	15
  3966     04B1  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3967     04B6  087A               	movf	disparar@offset,w
  3968     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  3969     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  3970     04B9  075F               	addwf	_pos_x,w
  3971     04BA  3ED4               	addlw	212
  3972     04BB  390F               	andlw	15
  3973     04BC  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3974     04C1                     l378:
  3975                           
  3976                           ;main.c: 332:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  3977     04C1  302D               	movlw	45
  3978     04C2  120A  118A  2008  120A  118A  	fcall	_LCD_putc
  3979     04C7                     l2074:
  3980                           
  3981                           ;main.c: 333:     LCD_putc(0);
  3982     04C7  3001               	movlw	1
  3983     04C8  00F9               	movwf	disparar@moved
  3984     04C9                     l2076:
  3985     04C9  087A               	movf	disparar@offset,w
  3986     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  3987     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  3988     04CC  025F               	subwf	_pos_x,w
  3989     04CD  1C03               	skipc
  3990     04CE  2CD0               	goto	u2411
  3991     04CF  2CD1               	goto	u2410
  3992     04D0                     u2411:
  3993     04D0  2D9E               	goto	l2096
  3994     04D1                     u2410:
  3995     04D1                     l2078:
  3996     04D1  085E               	movf	_pos_y,w
  3997     04D2  1D03               	btfss	3,2
  3998     04D3  2CD5               	goto	u2421
  3999     04D4  2CD6               	goto	u2420
  4000     04D5                     u2421:
  4001     04D5  2D02               	goto	l2082
  4002     04D6                     u2420:
  4003     04D6                     l2080:
  4004     04D6  085F               	movf	_pos_x,w
  4005     04D7  00A0               	movwf	??_disparar
  4006     04D8  01A1               	clrf	??_disparar+1
  4007     04D9  0821               	movf	??_disparar+1,w
  4008     04DA  00A3               	movwf	??_disparar+3
  4009     04DB  087A               	movf	disparar@offset,w
  4010     04DC  0220               	subwf	??_disparar,w
  4011     04DD  00A2               	movwf	??_disparar+2
  4012     04DE  1C03               	skipc
  4013     04DF  03A3               	decf	??_disparar+3,f
  4014     04E0  0822               	movf	??_disparar+2,w
  4015     04E1  3E80               	addlw	128
  4016     04E2  00A4               	movwf	??_disparar+4
  4017     04E3  0823               	movf	??_disparar+3,w
  4018     04E4  1803               	skipnc
  4019     04E5  3E01               	addlw	1
  4020     04E6  3E00               	addlw	0
  4021     04E7  00A5               	movwf	??_disparar+5
  4022     04E8  3004               	movlw	4
  4023     04E9  00A6               	movwf	??_disparar+6
  4024     04EA                     u2435:
  4025     04EA  0D25               	rlf	??_disparar+5,w
  4026     04EB  0CA5               	rrf	??_disparar+5,f
  4027     04EC  0CA4               	rrf	??_disparar+4,f
  4028     04ED  0BA6               	decfsz	??_disparar+6,f
  4029     04EE  2CEA               	goto	u2435
  4030     04EF  0824               	movf	??_disparar+4,w
  4031     04F0  390F               	andlw	15
  4032     04F1  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4033     04F6  087A               	movf	disparar@offset,w
  4034     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  4035     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  4036     04F9  025F               	subwf	_pos_x,w
  4037     04FA  3E80               	addlw	128
  4038     04FB  390F               	andlw	15
  4039     04FC  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4040     0501  2D96               	goto	l396
  4041     0502                     l2082:
  4042     0502  035E               	decf	_pos_y,w
  4043     0503  1D03               	btfss	3,2
  4044     0504  2D06               	goto	u2441
  4045     0505  2D07               	goto	u2440
  4046     0506                     u2441:
  4047     0506  2D33               	goto	l2086
  4048     0507                     u2440:
  4049     0507                     l2084:
  4050     0507  085F               	movf	_pos_x,w
  4051     0508  00A0               	movwf	??_disparar
  4052     0509  01A1               	clrf	??_disparar+1
  4053     050A  0821               	movf	??_disparar+1,w
  4054     050B  00A3               	movwf	??_disparar+3
  4055     050C  087A               	movf	disparar@offset,w
  4056     050D  0220               	subwf	??_disparar,w
  4057     050E  00A2               	movwf	??_disparar+2
  4058     050F  1C03               	skipc
  4059     0510  03A3               	decf	??_disparar+3,f
  4060     0511  0822               	movf	??_disparar+2,w
  4061     0512  3EC0               	addlw	192
  4062     0513  00A4               	movwf	??_disparar+4
  4063     0514  0823               	movf	??_disparar+3,w
  4064     0515  1803               	skipnc
  4065     0516  3E01               	addlw	1
  4066     0517  3E00               	addlw	0
  4067     0518  00A5               	movwf	??_disparar+5
  4068     0519  3004               	movlw	4
  4069     051A  00A6               	movwf	??_disparar+6
  4070     051B                     u2455:
  4071     051B  0D25               	rlf	??_disparar+5,w
  4072     051C  0CA5               	rrf	??_disparar+5,f
  4073     051D  0CA4               	rrf	??_disparar+4,f
  4074     051E  0BA6               	decfsz	??_disparar+6,f
  4075     051F  2D1B               	goto	u2455
  4076     0520  0824               	movf	??_disparar+4,w
  4077     0521  390F               	andlw	15
  4078     0522  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4079     0527  087A               	movf	disparar@offset,w
  4080     0528  1283               	bcf	3,5	;RP0=0, select bank0
  4081     0529  1303               	bcf	3,6	;RP1=0, select bank0
  4082     052A  025F               	subwf	_pos_x,w
  4083     052B  3EC0               	addlw	192
  4084     052C  390F               	andlw	15
  4085     052D  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4086     0532  2D96               	goto	l396
  4087     0533                     l2086:
  4088     0533  3002               	movlw	2
  4089     0534  065E               	xorwf	_pos_y,w
  4090     0535  1D03               	btfss	3,2
  4091     0536  2D38               	goto	u2461
  4092     0537  2D39               	goto	u2460
  4093     0538                     u2461:
  4094     0538  2D65               	goto	l2090
  4095     0539                     u2460:
  4096     0539                     l2088:
  4097     0539  085F               	movf	_pos_x,w
  4098     053A  00A0               	movwf	??_disparar
  4099     053B  01A1               	clrf	??_disparar+1
  4100     053C  0821               	movf	??_disparar+1,w
  4101     053D  00A3               	movwf	??_disparar+3
  4102     053E  087A               	movf	disparar@offset,w
  4103     053F  0220               	subwf	??_disparar,w
  4104     0540  00A2               	movwf	??_disparar+2
  4105     0541  1C03               	skipc
  4106     0542  03A3               	decf	??_disparar+3,f
  4107     0543  0822               	movf	??_disparar+2,w
  4108     0544  3E94               	addlw	148
  4109     0545  00A4               	movwf	??_disparar+4
  4110     0546  0823               	movf	??_disparar+3,w
  4111     0547  1803               	skipnc
  4112     0548  3E01               	addlw	1
  4113     0549  3E00               	addlw	0
  4114     054A  00A5               	movwf	??_disparar+5
  4115     054B  3004               	movlw	4
  4116     054C  00A6               	movwf	??_disparar+6
  4117     054D                     u2475:
  4118     054D  0D25               	rlf	??_disparar+5,w
  4119     054E  0CA5               	rrf	??_disparar+5,f
  4120     054F  0CA4               	rrf	??_disparar+4,f
  4121     0550  0BA6               	decfsz	??_disparar+6,f
  4122     0551  2D4D               	goto	u2475
  4123     0552  0824               	movf	??_disparar+4,w
  4124     0553  390F               	andlw	15
  4125     0554  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4126     0559  087A               	movf	disparar@offset,w
  4127     055A  1283               	bcf	3,5	;RP0=0, select bank0
  4128     055B  1303               	bcf	3,6	;RP1=0, select bank0
  4129     055C  025F               	subwf	_pos_x,w
  4130     055D  3E94               	addlw	148
  4131     055E  390F               	andlw	15
  4132     055F  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4133     0564  2D96               	goto	l396
  4134     0565                     l2090:
  4135     0565  3003               	movlw	3
  4136     0566  065E               	xorwf	_pos_y,w
  4137     0567  1D03               	btfss	3,2
  4138     0568  2D6A               	goto	u2481
  4139     0569  2D6B               	goto	u2480
  4140     056A                     u2481:
  4141     056A  2D96               	goto	l396
  4142     056B                     u2480:
  4143     056B                     l2092:
  4144     056B  085F               	movf	_pos_x,w
  4145     056C  00A0               	movwf	??_disparar
  4146     056D  01A1               	clrf	??_disparar+1
  4147     056E  0821               	movf	??_disparar+1,w
  4148     056F  00A3               	movwf	??_disparar+3
  4149     0570  087A               	movf	disparar@offset,w
  4150     0571  0220               	subwf	??_disparar,w
  4151     0572  00A2               	movwf	??_disparar+2
  4152     0573  1C03               	skipc
  4153     0574  03A3               	decf	??_disparar+3,f
  4154     0575  0822               	movf	??_disparar+2,w
  4155     0576  3ED4               	addlw	212
  4156     0577  00A4               	movwf	??_disparar+4
  4157     0578  0823               	movf	??_disparar+3,w
  4158     0579  1803               	skipnc
  4159     057A  3E01               	addlw	1
  4160     057B  3E00               	addlw	0
  4161     057C  00A5               	movwf	??_disparar+5
  4162     057D  3004               	movlw	4
  4163     057E  00A6               	movwf	??_disparar+6
  4164     057F                     u2495:
  4165     057F  0D25               	rlf	??_disparar+5,w
  4166     0580  0CA5               	rrf	??_disparar+5,f
  4167     0581  0CA4               	rrf	??_disparar+4,f
  4168     0582  0BA6               	decfsz	??_disparar+6,f
  4169     0583  2D7F               	goto	u2495
  4170     0584  0824               	movf	??_disparar+4,w
  4171     0585  390F               	andlw	15
  4172     0586  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4173     058B  087A               	movf	disparar@offset,w
  4174     058C  1283               	bcf	3,5	;RP0=0, select bank0
  4175     058D  1303               	bcf	3,6	;RP1=0, select bank0
  4176     058E  025F               	subwf	_pos_x,w
  4177     058F  3ED4               	addlw	212
  4178     0590  390F               	andlw	15
  4179     0591  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4180     0596                     l396:
  4181     0596  302D               	movlw	45
  4182     0597  120A  118A  2008  120A  118A  	fcall	_LCD_putc
  4183     059C                     l2094:
  4184     059C  3001               	movlw	1
  4185     059D  00F9               	movwf	disparar@moved
  4186     059E                     l2096:
  4187     059E  301A               	movlw	26
  4188     059F  1283               	bcf	3,5	;RP0=0, select bank0
  4189     05A0  1303               	bcf	3,6	;RP1=0, select bank0
  4190     05A1  00A1               	movwf	??_disparar+1
  4191     05A2  30F7               	movlw	247
  4192     05A3  00A0               	movwf	??_disparar
  4193     05A4                     u3487:
  4194     05A4  0BA0               	decfsz	??_disparar,f
  4195     05A5  2DA4               	goto	u3487
  4196     05A6  0BA1               	decfsz	??_disparar+1,f
  4197     05A7  2DA4               	goto	u3487
  4198     05A8  2DA9               	nop2
  4199     05A9                     l2098:
  4200     05A9  1283               	bcf	3,5	;RP0=0, select bank0
  4201     05AA  1303               	bcf	3,6	;RP1=0, select bank0
  4202     05AB  085F               	movf	_pos_x,w
  4203     05AC  077A               	addwf	disparar@offset,w
  4204     05AD  00A0               	movwf	??_disparar
  4205     05AE  01A1               	clrf	??_disparar+1
  4206     05AF  0DA1               	rlf	??_disparar+1,f
  4207     05B0  0821               	movf	??_disparar+1,w
  4208     05B1  3A80               	xorlw	128
  4209     05B2  00FF               	movwf	btemp+1
  4210     05B3  3080               	movlw	128
  4211     05B4  027F               	subwf	btemp+1,w
  4212     05B5  1D03               	skipz
  4213     05B6  2DB9               	goto	u2505
  4214     05B7  3014               	movlw	20
  4215     05B8  0220               	subwf	??_disparar,w
  4216     05B9                     u2505:
  4217     05B9  1803               	skipnc
  4218     05BA  2DBC               	goto	u2501
  4219     05BB  2DBD               	goto	u2500
  4220     05BC                     u2501:
  4221     05BC  2E77               	goto	l2116
  4222     05BD                     u2500:
  4223     05BD                     l2100:
  4224     05BD  1283               	bcf	3,5	;RP0=0, select bank0
  4225     05BE  1303               	bcf	3,6	;RP1=0, select bank0
  4226     05BF  085E               	movf	_pos_y,w
  4227     05C0  1D03               	btfss	3,2
  4228     05C1  2DC3               	goto	u2511
  4229     05C2  2DC4               	goto	u2510
  4230     05C3                     u2511:
  4231     05C3  2DEB               	goto	l2104
  4232     05C4                     u2510:
  4233     05C4                     l2102:
  4234     05C4  085F               	movf	_pos_x,w
  4235     05C5  077A               	addwf	disparar@offset,w
  4236     05C6  00A0               	movwf	??_disparar
  4237     05C7  01A1               	clrf	??_disparar+1
  4238     05C8  0DA1               	rlf	??_disparar+1,f
  4239     05C9  0820               	movf	??_disparar,w
  4240     05CA  3E80               	addlw	128
  4241     05CB  00A2               	movwf	??_disparar+2
  4242     05CC  0821               	movf	??_disparar+1,w
  4243     05CD  1803               	skipnc
  4244     05CE  3E01               	addlw	1
  4245     05CF  3E00               	addlw	0
  4246     05D0  00A3               	movwf	??_disparar+3
  4247     05D1  3004               	movlw	4
  4248     05D2  00A4               	movwf	??_disparar+4
  4249     05D3                     u2525:
  4250     05D3  0D23               	rlf	??_disparar+3,w
  4251     05D4  0CA3               	rrf	??_disparar+3,f
  4252     05D5  0CA2               	rrf	??_disparar+2,f
  4253     05D6  0BA4               	decfsz	??_disparar+4,f
  4254     05D7  2DD3               	goto	u2525
  4255     05D8  0822               	movf	??_disparar+2,w
  4256     05D9  390F               	andlw	15
  4257     05DA  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4258     05DF  087A               	movf	disparar@offset,w
  4259     05E0  1283               	bcf	3,5	;RP0=0, select bank0
  4260     05E1  1303               	bcf	3,6	;RP1=0, select bank0
  4261     05E2  075F               	addwf	_pos_x,w
  4262     05E3  3E80               	addlw	128
  4263     05E4  390F               	andlw	15
  4264     05E5  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4265     05EA  2E70               	goto	l414
  4266     05EB                     l2104:
  4267     05EB  035E               	decf	_pos_y,w
  4268     05EC  1D03               	btfss	3,2
  4269     05ED  2DEF               	goto	u2531
  4270     05EE  2DF0               	goto	u2530
  4271     05EF                     u2531:
  4272     05EF  2E17               	goto	l2108
  4273     05F0                     u2530:
  4274     05F0                     l2106:
  4275     05F0  085F               	movf	_pos_x,w
  4276     05F1  077A               	addwf	disparar@offset,w
  4277     05F2  00A0               	movwf	??_disparar
  4278     05F3  01A1               	clrf	??_disparar+1
  4279     05F4  0DA1               	rlf	??_disparar+1,f
  4280     05F5  0820               	movf	??_disparar,w
  4281     05F6  3EC0               	addlw	192
  4282     05F7  00A2               	movwf	??_disparar+2
  4283     05F8  0821               	movf	??_disparar+1,w
  4284     05F9  1803               	skipnc
  4285     05FA  3E01               	addlw	1
  4286     05FB  3E00               	addlw	0
  4287     05FC  00A3               	movwf	??_disparar+3
  4288     05FD  3004               	movlw	4
  4289     05FE  00A4               	movwf	??_disparar+4
  4290     05FF                     u2545:
  4291     05FF  0D23               	rlf	??_disparar+3,w
  4292     0600  0CA3               	rrf	??_disparar+3,f
  4293     0601  0CA2               	rrf	??_disparar+2,f
  4294     0602  0BA4               	decfsz	??_disparar+4,f
  4295     0603  2DFF               	goto	u2545
  4296     0604  0822               	movf	??_disparar+2,w
  4297     0605  390F               	andlw	15
  4298     0606  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4299     060B  087A               	movf	disparar@offset,w
  4300     060C  1283               	bcf	3,5	;RP0=0, select bank0
  4301     060D  1303               	bcf	3,6	;RP1=0, select bank0
  4302     060E  075F               	addwf	_pos_x,w
  4303     060F  3EC0               	addlw	192
  4304     0610  390F               	andlw	15
  4305     0611  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4306     0616  2E70               	goto	l414
  4307     0617                     l2108:
  4308     0617  3002               	movlw	2
  4309     0618  065E               	xorwf	_pos_y,w
  4310     0619  1D03               	btfss	3,2
  4311     061A  2E1C               	goto	u2551
  4312     061B  2E1D               	goto	u2550
  4313     061C                     u2551:
  4314     061C  2E44               	goto	l2112
  4315     061D                     u2550:
  4316     061D                     l2110:
  4317     061D  085F               	movf	_pos_x,w
  4318     061E  077A               	addwf	disparar@offset,w
  4319     061F  00A0               	movwf	??_disparar
  4320     0620  01A1               	clrf	??_disparar+1
  4321     0621  0DA1               	rlf	??_disparar+1,f
  4322     0622  0820               	movf	??_disparar,w
  4323     0623  3E94               	addlw	148
  4324     0624  00A2               	movwf	??_disparar+2
  4325     0625  0821               	movf	??_disparar+1,w
  4326     0626  1803               	skipnc
  4327     0627  3E01               	addlw	1
  4328     0628  3E00               	addlw	0
  4329     0629  00A3               	movwf	??_disparar+3
  4330     062A  3004               	movlw	4
  4331     062B  00A4               	movwf	??_disparar+4
  4332     062C                     u2565:
  4333     062C  0D23               	rlf	??_disparar+3,w
  4334     062D  0CA3               	rrf	??_disparar+3,f
  4335     062E  0CA2               	rrf	??_disparar+2,f
  4336     062F  0BA4               	decfsz	??_disparar+4,f
  4337     0630  2E2C               	goto	u2565
  4338     0631  0822               	movf	??_disparar+2,w
  4339     0632  390F               	andlw	15
  4340     0633  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4341     0638  087A               	movf	disparar@offset,w
  4342     0639  1283               	bcf	3,5	;RP0=0, select bank0
  4343     063A  1303               	bcf	3,6	;RP1=0, select bank0
  4344     063B  075F               	addwf	_pos_x,w
  4345     063C  3E94               	addlw	148
  4346     063D  390F               	andlw	15
  4347     063E  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4348     0643  2E70               	goto	l414
  4349     0644                     l2112:
  4350     0644  3003               	movlw	3
  4351     0645  065E               	xorwf	_pos_y,w
  4352     0646  1D03               	btfss	3,2
  4353     0647  2E49               	goto	u2571
  4354     0648  2E4A               	goto	u2570
  4355     0649                     u2571:
  4356     0649  2E70               	goto	l414
  4357     064A                     u2570:
  4358     064A                     l2114:
  4359     064A  085F               	movf	_pos_x,w
  4360     064B  077A               	addwf	disparar@offset,w
  4361     064C  00A0               	movwf	??_disparar
  4362     064D  01A1               	clrf	??_disparar+1
  4363     064E  0DA1               	rlf	??_disparar+1,f
  4364     064F  0820               	movf	??_disparar,w
  4365     0650  3ED4               	addlw	212
  4366     0651  00A2               	movwf	??_disparar+2
  4367     0652  0821               	movf	??_disparar+1,w
  4368     0653  1803               	skipnc
  4369     0654  3E01               	addlw	1
  4370     0655  3E00               	addlw	0
  4371     0656  00A3               	movwf	??_disparar+3
  4372     0657  3004               	movlw	4
  4373     0658  00A4               	movwf	??_disparar+4
  4374     0659                     u2585:
  4375     0659  0D23               	rlf	??_disparar+3,w
  4376     065A  0CA3               	rrf	??_disparar+3,f
  4377     065B  0CA2               	rrf	??_disparar+2,f
  4378     065C  0BA4               	decfsz	??_disparar+4,f
  4379     065D  2E59               	goto	u2585
  4380     065E  0822               	movf	??_disparar+2,w
  4381     065F  390F               	andlw	15
  4382     0660  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4383     0665  087A               	movf	disparar@offset,w
  4384     0666  1283               	bcf	3,5	;RP0=0, select bank0
  4385     0667  1303               	bcf	3,6	;RP1=0, select bank0
  4386     0668  075F               	addwf	_pos_x,w
  4387     0669  3ED4               	addlw	212
  4388     066A  390F               	andlw	15
  4389     066B  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4390     0670                     l414:
  4391     0670  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4392     0671  00F6               	movwf	LCD_putrs@a
  4393     0672  120A  158A  21A7  120A  118A  	fcall	_LCD_putrs
  4394     0677                     l2116:
  4395     0677  087A               	movf	disparar@offset,w
  4396     0678  1283               	bcf	3,5	;RP0=0, select bank0
  4397     0679  1303               	bcf	3,6	;RP1=0, select bank0
  4398     067A  025F               	subwf	_pos_x,w
  4399     067B  1C03               	skipc
  4400     067C  2E7E               	goto	u2591
  4401     067D  2E7F               	goto	u2590
  4402     067E                     u2591:
  4403     067E  2F4B               	goto	l2134
  4404     067F                     u2590:
  4405     067F                     l2118:
  4406     067F  085E               	movf	_pos_y,w
  4407     0680  1D03               	btfss	3,2
  4408     0681  2E83               	goto	u2601
  4409     0682  2E84               	goto	u2600
  4410     0683                     u2601:
  4411     0683  2EB0               	goto	l2122
  4412     0684                     u2600:
  4413     0684                     l2120:
  4414     0684  085F               	movf	_pos_x,w
  4415     0685  00A0               	movwf	??_disparar
  4416     0686  01A1               	clrf	??_disparar+1
  4417     0687  0821               	movf	??_disparar+1,w
  4418     0688  00A3               	movwf	??_disparar+3
  4419     0689  087A               	movf	disparar@offset,w
  4420     068A  0220               	subwf	??_disparar,w
  4421     068B  00A2               	movwf	??_disparar+2
  4422     068C  1C03               	skipc
  4423     068D  03A3               	decf	??_disparar+3,f
  4424     068E  0822               	movf	??_disparar+2,w
  4425     068F  3E80               	addlw	128
  4426     0690  00A4               	movwf	??_disparar+4
  4427     0691  0823               	movf	??_disparar+3,w
  4428     0692  1803               	skipnc
  4429     0693  3E01               	addlw	1
  4430     0694  3E00               	addlw	0
  4431     0695  00A5               	movwf	??_disparar+5
  4432     0696  3004               	movlw	4
  4433     0697  00A6               	movwf	??_disparar+6
  4434     0698                     u2615:
  4435     0698  0D25               	rlf	??_disparar+5,w
  4436     0699  0CA5               	rrf	??_disparar+5,f
  4437     069A  0CA4               	rrf	??_disparar+4,f
  4438     069B  0BA6               	decfsz	??_disparar+6,f
  4439     069C  2E98               	goto	u2615
  4440     069D  0824               	movf	??_disparar+4,w
  4441     069E  390F               	andlw	15
  4442     069F  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4443     06A4  087A               	movf	disparar@offset,w
  4444     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  4445     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  4446     06A7  025F               	subwf	_pos_x,w
  4447     06A8  3E80               	addlw	128
  4448     06A9  390F               	andlw	15
  4449     06AA  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4450     06AF  2F44               	goto	l432
  4451     06B0                     l2122:
  4452     06B0  035E               	decf	_pos_y,w
  4453     06B1  1D03               	btfss	3,2
  4454     06B2  2EB4               	goto	u2621
  4455     06B3  2EB5               	goto	u2620
  4456     06B4                     u2621:
  4457     06B4  2EE1               	goto	l2126
  4458     06B5                     u2620:
  4459     06B5                     l2124:
  4460     06B5  085F               	movf	_pos_x,w
  4461     06B6  00A0               	movwf	??_disparar
  4462     06B7  01A1               	clrf	??_disparar+1
  4463     06B8  0821               	movf	??_disparar+1,w
  4464     06B9  00A3               	movwf	??_disparar+3
  4465     06BA  087A               	movf	disparar@offset,w
  4466     06BB  0220               	subwf	??_disparar,w
  4467     06BC  00A2               	movwf	??_disparar+2
  4468     06BD  1C03               	skipc
  4469     06BE  03A3               	decf	??_disparar+3,f
  4470     06BF  0822               	movf	??_disparar+2,w
  4471     06C0  3EC0               	addlw	192
  4472     06C1  00A4               	movwf	??_disparar+4
  4473     06C2  0823               	movf	??_disparar+3,w
  4474     06C3  1803               	skipnc
  4475     06C4  3E01               	addlw	1
  4476     06C5  3E00               	addlw	0
  4477     06C6  00A5               	movwf	??_disparar+5
  4478     06C7  3004               	movlw	4
  4479     06C8  00A6               	movwf	??_disparar+6
  4480     06C9                     u2635:
  4481     06C9  0D25               	rlf	??_disparar+5,w
  4482     06CA  0CA5               	rrf	??_disparar+5,f
  4483     06CB  0CA4               	rrf	??_disparar+4,f
  4484     06CC  0BA6               	decfsz	??_disparar+6,f
  4485     06CD  2EC9               	goto	u2635
  4486     06CE  0824               	movf	??_disparar+4,w
  4487     06CF  390F               	andlw	15
  4488     06D0  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4489     06D5  087A               	movf	disparar@offset,w
  4490     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  4491     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  4492     06D8  025F               	subwf	_pos_x,w
  4493     06D9  3EC0               	addlw	192
  4494     06DA  390F               	andlw	15
  4495     06DB  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4496     06E0  2F44               	goto	l432
  4497     06E1                     l2126:
  4498     06E1  3002               	movlw	2
  4499     06E2  065E               	xorwf	_pos_y,w
  4500     06E3  1D03               	btfss	3,2
  4501     06E4  2EE6               	goto	u2641
  4502     06E5  2EE7               	goto	u2640
  4503     06E6                     u2641:
  4504     06E6  2F13               	goto	l2130
  4505     06E7                     u2640:
  4506     06E7                     l2128:
  4507     06E7  085F               	movf	_pos_x,w
  4508     06E8  00A0               	movwf	??_disparar
  4509     06E9  01A1               	clrf	??_disparar+1
  4510     06EA  0821               	movf	??_disparar+1,w
  4511     06EB  00A3               	movwf	??_disparar+3
  4512     06EC  087A               	movf	disparar@offset,w
  4513     06ED  0220               	subwf	??_disparar,w
  4514     06EE  00A2               	movwf	??_disparar+2
  4515     06EF  1C03               	skipc
  4516     06F0  03A3               	decf	??_disparar+3,f
  4517     06F1  0822               	movf	??_disparar+2,w
  4518     06F2  3E94               	addlw	148
  4519     06F3  00A4               	movwf	??_disparar+4
  4520     06F4  0823               	movf	??_disparar+3,w
  4521     06F5  1803               	skipnc
  4522     06F6  3E01               	addlw	1
  4523     06F7  3E00               	addlw	0
  4524     06F8  00A5               	movwf	??_disparar+5
  4525     06F9  3004               	movlw	4
  4526     06FA  00A6               	movwf	??_disparar+6
  4527     06FB                     u2655:
  4528     06FB  0D25               	rlf	??_disparar+5,w
  4529     06FC  0CA5               	rrf	??_disparar+5,f
  4530     06FD  0CA4               	rrf	??_disparar+4,f
  4531     06FE  0BA6               	decfsz	??_disparar+6,f
  4532     06FF  2EFB               	goto	u2655
  4533     0700  0824               	movf	??_disparar+4,w
  4534     0701  390F               	andlw	15
  4535     0702  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4536     0707  087A               	movf	disparar@offset,w
  4537     0708  1283               	bcf	3,5	;RP0=0, select bank0
  4538     0709  1303               	bcf	3,6	;RP1=0, select bank0
  4539     070A  025F               	subwf	_pos_x,w
  4540     070B  3E94               	addlw	148
  4541     070C  390F               	andlw	15
  4542     070D  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4543     0712  2F44               	goto	l432
  4544     0713                     l2130:
  4545     0713  3003               	movlw	3
  4546     0714  065E               	xorwf	_pos_y,w
  4547     0715  1D03               	btfss	3,2
  4548     0716  2F18               	goto	u2661
  4549     0717  2F19               	goto	u2660
  4550     0718                     u2661:
  4551     0718  2F44               	goto	l432
  4552     0719                     u2660:
  4553     0719                     l2132:
  4554     0719  085F               	movf	_pos_x,w
  4555     071A  00A0               	movwf	??_disparar
  4556     071B  01A1               	clrf	??_disparar+1
  4557     071C  0821               	movf	??_disparar+1,w
  4558     071D  00A3               	movwf	??_disparar+3
  4559     071E  087A               	movf	disparar@offset,w
  4560     071F  0220               	subwf	??_disparar,w
  4561     0720  00A2               	movwf	??_disparar+2
  4562     0721  1C03               	skipc
  4563     0722  03A3               	decf	??_disparar+3,f
  4564     0723  0822               	movf	??_disparar+2,w
  4565     0724  3ED4               	addlw	212
  4566     0725  00A4               	movwf	??_disparar+4
  4567     0726  0823               	movf	??_disparar+3,w
  4568     0727  1803               	skipnc
  4569     0728  3E01               	addlw	1
  4570     0729  3E00               	addlw	0
  4571     072A  00A5               	movwf	??_disparar+5
  4572     072B  3004               	movlw	4
  4573     072C  00A6               	movwf	??_disparar+6
  4574     072D                     u2675:
  4575     072D  0D25               	rlf	??_disparar+5,w
  4576     072E  0CA5               	rrf	??_disparar+5,f
  4577     072F  0CA4               	rrf	??_disparar+4,f
  4578     0730  0BA6               	decfsz	??_disparar+6,f
  4579     0731  2F2D               	goto	u2675
  4580     0732  0824               	movf	??_disparar+4,w
  4581     0733  390F               	andlw	15
  4582     0734  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4583     0739  087A               	movf	disparar@offset,w
  4584     073A  1283               	bcf	3,5	;RP0=0, select bank0
  4585     073B  1303               	bcf	3,6	;RP1=0, select bank0
  4586     073C  025F               	subwf	_pos_x,w
  4587     073D  3ED4               	addlw	212
  4588     073E  390F               	andlw	15
  4589     073F  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4590     0744                     l432:
  4591     0744  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4592     0745  00F6               	movwf	LCD_putrs@a
  4593     0746  120A  158A  21A7  120A  118A  	fcall	_LCD_putrs
  4594     074B                     l2134:
  4595     074B  0879               	movf	disparar@moved,w
  4596     074C  1D03               	btfss	3,2
  4597     074D  2F4F               	goto	u2681
  4598     074E  2F50               	goto	u2680
  4599     074F                     u2681:
  4600     074F  2F51               	goto	l2138
  4601     0750                     u2680:
  4602     0750  2F59               	goto	l2142
  4603     0751                     l2138:
  4604     0751  3001               	movlw	1
  4605     0752  07FA               	addwf	disparar@offset,f
  4606     0753                     l2140:
  4607     0753  3014               	movlw	20
  4608     0754  027A               	subwf	disparar@offset,w
  4609     0755  1C03               	skipc
  4610     0756  2F58               	goto	u2691
  4611     0757  2F59               	goto	u2690
  4612     0758                     u2691:
  4613     0758  2BF9               	goto	l2054
  4614     0759                     u2690:
  4615     0759                     l2142:
  4616     0759  1283               	bcf	3,5	;RP0=0, select bank0
  4617     075A  1303               	bcf	3,6	;RP1=0, select bank0
  4618     075B  085E               	movf	_pos_y,w
  4619     075C  1D03               	btfss	3,2
  4620     075D  2F5F               	goto	u2701
  4621     075E  2F60               	goto	u2700
  4622     075F                     u2701:
  4623     075F  2F7B               	goto	l2146
  4624     0760                     u2700:
  4625     0760                     l2144:
  4626     0760  085F               	movf	_pos_x,w
  4627     0761  3E80               	addlw	128
  4628     0762  00A0               	movwf	??_disparar
  4629     0763  3004               	movlw	4
  4630     0764                     u2715:
  4631     0764  1003               	clrc
  4632     0765  0CA0               	rrf	??_disparar,f
  4633     0766  3EFF               	addlw	-1
  4634     0767  1D03               	skipz
  4635     0768  2F64               	goto	u2715
  4636     0769  0820               	movf	??_disparar,w
  4637     076A  390F               	andlw	15
  4638     076B  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4639     0770  1283               	bcf	3,5	;RP0=0, select bank0
  4640     0771  1303               	bcf	3,6	;RP1=0, select bank0
  4641     0772  085F               	movf	_pos_x,w
  4642     0773  3E80               	addlw	128
  4643     0774  390F               	andlw	15
  4644     0775  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4645     077A  2FDC               	goto	l450
  4646     077B                     l2146:
  4647     077B  035E               	decf	_pos_y,w
  4648     077C  1D03               	btfss	3,2
  4649     077D  2F7F               	goto	u2721
  4650     077E  2F80               	goto	u2720
  4651     077F                     u2721:
  4652     077F  2F9B               	goto	l2150
  4653     0780                     u2720:
  4654     0780                     l2148:
  4655     0780  085F               	movf	_pos_x,w
  4656     0781  3EC0               	addlw	192
  4657     0782  00A0               	movwf	??_disparar
  4658     0783  3004               	movlw	4
  4659     0784                     u2735:
  4660     0784  1003               	clrc
  4661     0785  0CA0               	rrf	??_disparar,f
  4662     0786  3EFF               	addlw	-1
  4663     0787  1D03               	skipz
  4664     0788  2F84               	goto	u2735
  4665     0789  0820               	movf	??_disparar,w
  4666     078A  390F               	andlw	15
  4667     078B  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4668     0790  1283               	bcf	3,5	;RP0=0, select bank0
  4669     0791  1303               	bcf	3,6	;RP1=0, select bank0
  4670     0792  085F               	movf	_pos_x,w
  4671     0793  3EC0               	addlw	192
  4672     0794  390F               	andlw	15
  4673     0795  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4674     079A  2FDC               	goto	l450
  4675     079B                     l2150:
  4676     079B  3002               	movlw	2
  4677     079C  065E               	xorwf	_pos_y,w
  4678     079D  1D03               	btfss	3,2
  4679     079E  2FA0               	goto	u2741
  4680     079F  2FA1               	goto	u2740
  4681     07A0                     u2741:
  4682     07A0  2FBC               	goto	l2154
  4683     07A1                     u2740:
  4684     07A1                     l2152:
  4685     07A1  085F               	movf	_pos_x,w
  4686     07A2  3E94               	addlw	148
  4687     07A3  00A0               	movwf	??_disparar
  4688     07A4  3004               	movlw	4
  4689     07A5                     u2755:
  4690     07A5  1003               	clrc
  4691     07A6  0CA0               	rrf	??_disparar,f
  4692     07A7  3EFF               	addlw	-1
  4693     07A8  1D03               	skipz
  4694     07A9  2FA5               	goto	u2755
  4695     07AA  0820               	movf	??_disparar,w
  4696     07AB  390F               	andlw	15
  4697     07AC  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4698     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4699     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  4700     07B3  085F               	movf	_pos_x,w
  4701     07B4  3E94               	addlw	148
  4702     07B5  390F               	andlw	15
  4703     07B6  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4704     07BB  2FDC               	goto	l450
  4705     07BC                     l2154:
  4706     07BC  3003               	movlw	3
  4707     07BD  065E               	xorwf	_pos_y,w
  4708     07BE  1D03               	btfss	3,2
  4709     07BF  2FC1               	goto	u2761
  4710     07C0  2FC2               	goto	u2760
  4711     07C1                     u2761:
  4712     07C1  2FDC               	goto	l450
  4713     07C2                     u2760:
  4714     07C2                     l2156:
  4715     07C2  085F               	movf	_pos_x,w
  4716     07C3  3ED4               	addlw	212
  4717     07C4  00A0               	movwf	??_disparar
  4718     07C5  3004               	movlw	4
  4719     07C6                     u2775:
  4720     07C6  1003               	clrc
  4721     07C7  0CA0               	rrf	??_disparar,f
  4722     07C8  3EFF               	addlw	-1
  4723     07C9  1D03               	skipz
  4724     07CA  2FC6               	goto	u2775
  4725     07CB  0820               	movf	??_disparar,w
  4726     07CC  390F               	andlw	15
  4727     07CD  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4728     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  4729     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  4730     07D4  085F               	movf	_pos_x,w
  4731     07D5  3ED4               	addlw	212
  4732     07D6  390F               	andlw	15
  4733     07D7  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4734     07DC                     l450:
  4735     07DC  3000               	movlw	0
  4736     07DD  120A  118A  2008  120A  118A  	fcall	_LCD_putc
  4737     07E2                     l2158:
  4738     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  4739     07E3  1303               	bcf	3,6	;RP1=0, select bank0
  4740     07E4  1185               	bcf	5,3	;volatile
  4741     07E5                     l451:
  4742     07E5  0008               	return
  4743     07E6                     __end_of_disparar:
  4744                           
  4745                           	psect	text17
  4746     09A7                     __ptext17:	
  4747 ;; *************** function _LCD_putrs *****************
  4748 ;; Defined at:
  4749 ;;		line 89 in file "lcd.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  a               1    6[COMMON] PTR const unsigned char 
  4752 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  4753 ;;		 -> STR_2(2), STR_1(2), 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  i               2    7[COMMON] int 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4765 ;;      Params:         1       0       0       0       0
  4766 ;;      Locals:         2       0       0       0       0
  4767 ;;      Temps:          0       0       0       0       0
  4768 ;;      Totals:         3       0       0       0       0
  4769 ;;Total ram usage:        3 bytes
  4770 ;; Hardware stack levels used: 1
  4771 ;; Hardware stack levels required when called: 2
  4772 ;; This function calls:
  4773 ;;		_LCD_putc
  4774 ;; This function is called by:
  4775 ;;		_pot_x
  4776 ;;		_pot_y
  4777 ;;		_mover_nubes
  4778 ;;		_dibujar_fondo
  4779 ;;		_disparar
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783     09A7                     _LCD_putrs:	
  4784                           ;psect for function _LCD_putrs
  4785                           
  4786     09A7                     l1838:	
  4787                           ;incstack = 0
  4788                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4789                           
  4790                           
  4791                           ;lcd.c: 91:     for ( int i = 0; a[i] != '\0'; ++i ) {
  4792     09A7  01F7               	clrf	LCD_putrs@i
  4793     09A8  01F8               	clrf	LCD_putrs@i+1
  4794     09A9  29BD               	goto	l1844
  4795     09AA                     l1840:
  4796                           
  4797                           ;lcd.c: 92:         LCD_putc(a[i]);
  4798     09AA  0877               	movf	LCD_putrs@i,w
  4799     09AB  0776               	addwf	LCD_putrs@a,w
  4800     09AC  0084               	movwf	4
  4801     09AD  120A  158A  2000  120A  158A  	fcall	stringdir
  4802     09B2  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  4803     09B7                     l1842:
  4804                           
  4805                           ;lcd.c: 93:     }
  4806     09B7  3001               	movlw	1
  4807     09B8  07F7               	addwf	LCD_putrs@i,f
  4808     09B9  1803               	skipnc
  4809     09BA  0AF8               	incf	LCD_putrs@i+1,f
  4810     09BB  3000               	movlw	0
  4811     09BC  07F8               	addwf	LCD_putrs@i+1,f
  4812     09BD                     l1844:
  4813     09BD  0877               	movf	LCD_putrs@i,w
  4814     09BE  0776               	addwf	LCD_putrs@a,w
  4815     09BF  0084               	movwf	4
  4816     09C0  120A  158A  2000  120A  158A  	fcall	stringdir
  4817     09C5  3A00               	xorlw	0
  4818     09C6  1D03               	skipz
  4819     09C7  29C9               	goto	u1981
  4820     09C8  29CA               	goto	u1980
  4821     09C9                     u1981:
  4822     09C9  29AA               	goto	l1840
  4823     09CA                     u1980:
  4824     09CA                     l518:
  4825     09CA  0008               	return
  4826     09CB                     __end_of_LCD_putrs:
  4827                           
  4828                           	psect	text18
  4829     0008                     __ptext18:	
  4830 ;; *************** function _LCD_putc *****************
  4831 ;; Defined at:
  4832 ;;		line 67 in file "lcd.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;  c               1    wreg     unsigned char 
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;  c               1    5[COMMON] unsigned char 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4846 ;;      Params:         0       0       0       0       0
  4847 ;;      Locals:         1       0       0       0       0
  4848 ;;      Temps:          2       0       0       0       0
  4849 ;;      Totals:         3       0       0       0       0
  4850 ;;Total ram usage:        3 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; Hardware stack levels required when called: 1
  4853 ;; This function calls:
  4854 ;;		_LCD_Out
  4855 ;; This function is called by:
  4856 ;;		_dibujar_suelo
  4857 ;;		_main
  4858 ;;		_pot_x
  4859 ;;		_pot_y
  4860 ;;		_mover_nubes
  4861 ;;		_dibujar_fondo
  4862 ;;		_disparar
  4863 ;;		_LCD_putrs
  4864 ;;		_LCD_ram_write
  4865 ;;		_LCD_puts
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869     0008                     _LCD_putc:	
  4870                           ;psect for function _LCD_putc
  4871                           
  4872                           
  4873                           ;incstack = 0
  4874                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4875                           ;LCD_putc@c stored from wreg
  4876     0008  00F5               	movwf	LCD_putc@c
  4877     0009                     l1800:
  4878                           
  4879                           ;lcd.c: 68:     *(lcd.PORT) |= 1 << lcd.RS;
  4880     0009  1283               	bcf	3,5	;RP0=0, select bank0
  4881     000A  1303               	bcf	3,6	;RP1=0, select bank0
  4882     000B  0859               	movf	_lcd,w
  4883     000C  0084               	movwf	4
  4884     000D  1783               	bsf	3,7
  4885     000E  1C5A               	btfss	_lcd+1,0
  4886     000F  1383               	bcf	3,7
  4887     0010  3001               	movlw	1
  4888     0011  00F3               	movwf	??_LCD_putc
  4889     0012  085B               	movf	_lcd+2,w
  4890     0013  3907               	andlw	7
  4891     0014  3E01               	addlw	1
  4892     0015  2818               	goto	u1864
  4893     0016                     u1865:
  4894     0016  1003               	clrc
  4895     0017  0DF3               	rlf	??_LCD_putc,f
  4896     0018                     u1864:
  4897     0018  3EFF               	addlw	-1
  4898     0019  1D03               	skipz
  4899     001A  2816               	goto	u1865
  4900     001B  0873               	movf	??_LCD_putc,w
  4901     001C  0480               	iorwf	0,f
  4902     001D                     l1802:
  4903                           
  4904                           ;lcd.c: 70:     LCD_Out((c & 0xF0) >> 4);
  4905     001D  0875               	movf	LCD_putc@c,w
  4906     001E  00F3               	movwf	??_LCD_putc
  4907     001F  3004               	movlw	4
  4908     0020                     u1875:
  4909     0020  1003               	clrc
  4910     0021  0CF3               	rrf	??_LCD_putc,f
  4911     0022  3EFF               	addlw	-1
  4912     0023  1D03               	skipz
  4913     0024  2820               	goto	u1875
  4914     0025  0873               	movf	??_LCD_putc,w
  4915     0026  390F               	andlw	15
  4916     0027  120A  158A  2612  120A  118A  	fcall	_LCD_Out
  4917     002C                     l1804:
  4918                           
  4919                           ;lcd.c: 71:     *(lcd.PORT) |= 1 << lcd.EN;
  4920     002C  1283               	bcf	3,5	;RP0=0, select bank0
  4921     002D  1303               	bcf	3,6	;RP1=0, select bank0
  4922     002E  0859               	movf	_lcd,w
  4923     002F  0084               	movwf	4
  4924     0030  1783               	bsf	3,7
  4925     0031  1C5A               	btfss	_lcd+1,0
  4926     0032  1383               	bcf	3,7
  4927     0033  3001               	movlw	1
  4928     0034  00F3               	movwf	??_LCD_putc
  4929     0035  0C5B               	rrf	_lcd+2,w
  4930     0036  00F4               	movwf	??_LCD_putc+1
  4931     0037  0CF4               	rrf	??_LCD_putc+1,f
  4932     0038  0C74               	rrf	??_LCD_putc+1,w
  4933     0039  3907               	andlw	7
  4934     003A  3E01               	addlw	1
  4935     003B  283E               	goto	u1884
  4936     003C                     u1885:
  4937     003C  1003               	clrc
  4938     003D  0DF3               	rlf	??_LCD_putc,f
  4939     003E                     u1884:
  4940     003E  3EFF               	addlw	-1
  4941     003F  1D03               	skipz
  4942     0040  283C               	goto	u1885
  4943     0041  0873               	movf	??_LCD_putc,w
  4944     0042  0480               	iorwf	0,f
  4945     0043                     l1806:
  4946                           
  4947                           ;lcd.c: 72:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4948     0043  300D               	movlw	13
  4949     0044  00F3               	movwf	??_LCD_putc
  4950     0045                     u3497:
  4951     0045  0BF3               	decfsz	??_LCD_putc,f
  4952     0046  2845               	goto	u3497
  4953     0047                     l1808:
  4954                           
  4955                           ;lcd.c: 73:     *(lcd.PORT) &= ~(1 << lcd.EN);
  4956     0047  1283               	bcf	3,5	;RP0=0, select bank0
  4957     0048  1303               	bcf	3,6	;RP1=0, select bank0
  4958     0049  0859               	movf	_lcd,w
  4959     004A  0084               	movwf	4
  4960     004B  1783               	bsf	3,7
  4961     004C  1C5A               	btfss	_lcd+1,0
  4962     004D  1383               	bcf	3,7
  4963     004E  3001               	movlw	1
  4964     004F  00F3               	movwf	??_LCD_putc
  4965     0050  0C5B               	rrf	_lcd+2,w
  4966     0051  00F4               	movwf	??_LCD_putc+1
  4967     0052  0CF4               	rrf	??_LCD_putc+1,f
  4968     0053  0C74               	rrf	??_LCD_putc+1,w
  4969     0054  3907               	andlw	7
  4970     0055  3E01               	addlw	1
  4971     0056  2859               	goto	u1894
  4972     0057                     u1895:
  4973     0057  1003               	clrc
  4974     0058  0DF3               	rlf	??_LCD_putc,f
  4975     0059                     u1894:
  4976     0059  3EFF               	addlw	-1
  4977     005A  1D03               	skipz
  4978     005B  2857               	goto	u1895
  4979     005C  0873               	movf	??_LCD_putc,w
  4980     005D  3AFF               	xorlw	255
  4981     005E  0580               	andwf	0,f
  4982     005F                     l1810:
  4983                           
  4984                           ;lcd.c: 75:     LCD_Out(c & 0x0F);
  4985     005F  0875               	movf	LCD_putc@c,w
  4986     0060  390F               	andlw	15
  4987     0061  120A  158A  2612  120A  118A  	fcall	_LCD_Out
  4988     0066                     l1812:
  4989                           
  4990                           ;lcd.c: 76:     *(lcd.PORT) |= 1 << lcd.EN;
  4991     0066  1283               	bcf	3,5	;RP0=0, select bank0
  4992     0067  1303               	bcf	3,6	;RP1=0, select bank0
  4993     0068  0859               	movf	_lcd,w
  4994     0069  0084               	movwf	4
  4995     006A  1783               	bsf	3,7
  4996     006B  1C5A               	btfss	_lcd+1,0
  4997     006C  1383               	bcf	3,7
  4998     006D  3001               	movlw	1
  4999     006E  00F3               	movwf	??_LCD_putc
  5000     006F  0C5B               	rrf	_lcd+2,w
  5001     0070  00F4               	movwf	??_LCD_putc+1
  5002     0071  0CF4               	rrf	??_LCD_putc+1,f
  5003     0072  0C74               	rrf	??_LCD_putc+1,w
  5004     0073  3907               	andlw	7
  5005     0074  3E01               	addlw	1
  5006     0075  2878               	goto	u1904
  5007     0076                     u1905:
  5008     0076  1003               	clrc
  5009     0077  0DF3               	rlf	??_LCD_putc,f
  5010     0078                     u1904:
  5011     0078  3EFF               	addlw	-1
  5012     0079  1D03               	skipz
  5013     007A  2876               	goto	u1905
  5014     007B  0873               	movf	??_LCD_putc,w
  5015     007C  0480               	iorwf	0,f
  5016                           
  5017                           ;lcd.c: 77:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5018     007D  300D               	movlw	13
  5019     007E  00F3               	movwf	??_LCD_putc
  5020     007F                     u3507:
  5021     007F  0BF3               	decfsz	??_LCD_putc,f
  5022     0080  287F               	goto	u3507
  5023     0081                     l1814:
  5024                           
  5025                           ;lcd.c: 78:     *(lcd.PORT) &= ~(1 << lcd.EN);
  5026     0081  1283               	bcf	3,5	;RP0=0, select bank0
  5027     0082  1303               	bcf	3,6	;RP1=0, select bank0
  5028     0083  0859               	movf	_lcd,w
  5029     0084  0084               	movwf	4
  5030     0085  1783               	bsf	3,7
  5031     0086  1C5A               	btfss	_lcd+1,0
  5032     0087  1383               	bcf	3,7
  5033     0088  3001               	movlw	1
  5034     0089  00F3               	movwf	??_LCD_putc
  5035     008A  0C5B               	rrf	_lcd+2,w
  5036     008B  00F4               	movwf	??_LCD_putc+1
  5037     008C  0CF4               	rrf	??_LCD_putc+1,f
  5038     008D  0C74               	rrf	??_LCD_putc+1,w
  5039     008E  3907               	andlw	7
  5040     008F  3E01               	addlw	1
  5041     0090  2893               	goto	u1914
  5042     0091                     u1915:
  5043     0091  1003               	clrc
  5044     0092  0DF3               	rlf	??_LCD_putc,f
  5045     0093                     u1914:
  5046     0093  3EFF               	addlw	-1
  5047     0094  1D03               	skipz
  5048     0095  2891               	goto	u1915
  5049     0096  0873               	movf	??_LCD_putc,w
  5050     0097  3AFF               	xorlw	255
  5051     0098  0580               	andwf	0,f
  5052     0099                     l506:
  5053     0099  0008               	return
  5054     009A                     __end_of_LCD_putc:
  5055                           
  5056                           	psect	text19
  5057     0CB5                     __ptext19:	
  5058 ;; *************** function _LCD_Init *****************
  5059 ;; Defined at:
  5060 ;;		line 31 in file "lcd.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  display         5    6[COMMON] struct .
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  cmd             1   13[COMMON] unsigned char 
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  1    wreg      _Bool 
  5067 ;; Registers used:
  5068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5074 ;;      Params:         5       0       0       0       0
  5075 ;;      Locals:         1       0       0       0       0
  5076 ;;      Temps:          2       0       0       0       0
  5077 ;;      Totals:         8       0       0       0       0
  5078 ;;Total ram usage:        8 bytes
  5079 ;; Hardware stack levels used: 1
  5080 ;; Hardware stack levels required when called: 2
  5081 ;; This function calls:
  5082 ;;		_LCD_Write
  5083 ;; This function is called by:
  5084 ;;		_main
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088     0CB5                     _LCD_Init:	
  5089                           ;psect for function _LCD_Init
  5090                           
  5091     0CB5                     l2190:	
  5092                           ;incstack = 0
  5093                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5094                           
  5095                           
  5096                           ;lcd.c: 32:     lcd = display;
  5097     0CB5  3059               	movlw	_lcd& (0+255)
  5098     0CB6  0084               	movwf	4
  5099     0CB7  0876               	movf	LCD_Init@display,w
  5100     0CB8  1383               	bcf	3,7	;select IRP bank0
  5101     0CB9  0080               	movwf	0
  5102     0CBA  0A84               	incf	4,f
  5103     0CBB  0877               	movf	LCD_Init@display+1,w
  5104     0CBC  0080               	movwf	0
  5105     0CBD  0A84               	incf	4,f
  5106     0CBE  0878               	movf	LCD_Init@display+2,w
  5107     0CBF  0080               	movwf	0
  5108     0CC0  0A84               	incf	4,f
  5109     0CC1  0879               	movf	LCD_Init@display+3,w
  5110     0CC2  0080               	movwf	0
  5111     0CC3  0A84               	incf	4,f
  5112     0CC4  087A               	movf	LCD_Init@display+4,w
  5113     0CC5  0080               	movwf	0
  5114     0CC6                     l2192:
  5115                           
  5116                           ;lcd.c: 34:     if ( lcd.PORT == &PORTA ) {
  5117     0CC6  3000               	movlw	0
  5118     0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  5119     0CC8  1303               	bcf	3,6	;RP1=0, select bank0
  5120     0CC9  065A               	xorwf	_lcd+1,w
  5121     0CCA  1D03               	skipz
  5122     0CCB  2CCE               	goto	u2795
  5123     0CCC  3005               	movlw	5
  5124     0CCD  0659               	xorwf	_lcd,w
  5125     0CCE                     u2795:
  5126     0CCE  1D03               	skipz
  5127     0CCF  2CD1               	goto	u2791
  5128     0CD0  2CD2               	goto	u2790
  5129     0CD1                     u2791:
  5130     0CD1  2CD6               	goto	l2196
  5131     0CD2                     u2790:
  5132     0CD2                     l2194:
  5133                           
  5134                           ;lcd.c: 35:         TRISA = 0x00;
  5135     0CD2  1683               	bsf	3,5	;RP0=1, select bank1
  5136     0CD3  1303               	bcf	3,6	;RP1=0, select bank1
  5137     0CD4  0185               	clrf	5	;volatile
  5138                           
  5139                           ;lcd.c: 36:     } else if ( lcd.PORT == &PORTB ) {
  5140     0CD5  2CF1               	goto	l2204
  5141     0CD6                     l2196:
  5142     0CD6  3000               	movlw	0
  5143     0CD7  065A               	xorwf	_lcd+1,w
  5144     0CD8  1D03               	skipz
  5145     0CD9  2CDC               	goto	u2805
  5146     0CDA  3006               	movlw	6
  5147     0CDB  0659               	xorwf	_lcd,w
  5148     0CDC                     u2805:
  5149     0CDC  1D03               	skipz
  5150     0CDD  2CDF               	goto	u2801
  5151     0CDE  2CE0               	goto	u2800
  5152     0CDF                     u2801:
  5153     0CDF  2CE4               	goto	l2200
  5154     0CE0                     u2800:
  5155     0CE0                     l2198:
  5156                           
  5157                           ;lcd.c: 37:         TRISB = 0x00;
  5158     0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  5159     0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  5160     0CE2  0186               	clrf	6	;volatile
  5161                           
  5162                           ;lcd.c: 38:     } else if ( lcd.PORT == &PORTC ) {
  5163     0CE3  2CF1               	goto	l2204
  5164     0CE4                     l2200:
  5165     0CE4  3000               	movlw	0
  5166     0CE5  065A               	xorwf	_lcd+1,w
  5167     0CE6  1D03               	skipz
  5168     0CE7  2CEA               	goto	u2815
  5169     0CE8  3007               	movlw	7
  5170     0CE9  0659               	xorwf	_lcd,w
  5171     0CEA                     u2815:
  5172     0CEA  1D03               	skipz
  5173     0CEB  2CED               	goto	u2811
  5174     0CEC  2CEE               	goto	u2810
  5175     0CED                     u2811:
  5176     0CED  2D60               	goto	l490
  5177     0CEE                     u2810:
  5178     0CEE                     l2202:
  5179                           
  5180                           ;lcd.c: 39:         TRISC = 0x00;
  5181     0CEE  1683               	bsf	3,5	;RP0=1, select bank1
  5182     0CEF  1303               	bcf	3,6	;RP1=0, select bank1
  5183     0CF0  0187               	clrf	7	;volatile
  5184     0CF1                     l2204:	
  5185                           ;lcd.c: 40:     }
  5186                           
  5187                           
  5188                           ;lcd.c: 52:     _delay((unsigned long)((20)*(4000000/4000.0)));
  5189     0CF1  301A               	movlw	26
  5190     0CF2  00FC               	movwf	??_LCD_Init+1
  5191     0CF3  30F8               	movlw	248
  5192     0CF4  00FB               	movwf	??_LCD_Init
  5193     0CF5                     u3517:
  5194     0CF5  0BFB               	decfsz	??_LCD_Init,f
  5195     0CF6  2CF5               	goto	u3517
  5196     0CF7  0BFC               	decfsz	??_LCD_Init+1,f
  5197     0CF8  2CF5               	goto	u3517
  5198     0CF9  0000               	nop
  5199     0CFA                     l2206:
  5200                           
  5201                           ;lcd.c: 54:     LCD_Write(0x03); _delay((unsigned long)((5)*(4000000/4000.0)));
  5202     0CFA  3003               	movlw	3
  5203     0CFB  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5204     0D00                     l2208:
  5205     0D00  3007               	movlw	7
  5206     0D01  00FC               	movwf	??_LCD_Init+1
  5207     0D02  307D               	movlw	125
  5208     0D03  00FB               	movwf	??_LCD_Init
  5209     0D04                     u3527:
  5210     0D04  0BFB               	decfsz	??_LCD_Init,f
  5211     0D05  2D04               	goto	u3527
  5212     0D06  0BFC               	decfsz	??_LCD_Init+1,f
  5213     0D07  2D04               	goto	u3527
  5214                           
  5215                           ;lcd.c: 55:     LCD_Write(0x03); _delay((unsigned long)((16)*(4000000/4000.0)));
  5216     0D08  3003               	movlw	3
  5217     0D09  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5218     0D0E                     l2210:
  5219     0D0E  3015               	movlw	21
  5220     0D0F  00FC               	movwf	??_LCD_Init+1
  5221     0D10  30C6               	movlw	198
  5222     0D11  00FB               	movwf	??_LCD_Init
  5223     0D12                     u3537:
  5224     0D12  0BFB               	decfsz	??_LCD_Init,f
  5225     0D13  2D12               	goto	u3537
  5226     0D14  0BFC               	decfsz	??_LCD_Init+1,f
  5227     0D15  2D12               	goto	u3537
  5228     0D16  0000               	nop
  5229     0D17                     l2212:
  5230                           
  5231                           ;lcd.c: 56:     LCD_Write(0x03);
  5232     0D17  3003               	movlw	3
  5233     0D18  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5234     0D1D                     l2214:
  5235                           
  5236                           ;lcd.c: 57:     LCD_Write(0x02);
  5237     0D1D  3002               	movlw	2
  5238     0D1E  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5239     0D23                     l2216:
  5240     0D23  3002               	movlw	2
  5241     0D24  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5242     0D29                     l2218:
  5243     0D29  3008               	movlw	8
  5244     0D2A  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5245     0D2F                     l2220:
  5246     0D2F  3000               	movlw	0
  5247     0D30  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5248     0D35                     l2222:
  5249     0D35  3006               	movlw	6
  5250     0D36  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5251     0D3B                     l2224:
  5252     0D3B  3008               	movlw	8
  5253     0D3C  00FD               	movwf	LCD_Init@cmd
  5254     0D3D                     l2226:
  5255     0D3D  157D               	bsf	LCD_Init@cmd,2
  5256     0D3E                     l2232:
  5257     0D3E  087D               	movf	LCD_Init@cmd,w
  5258     0D3F  00FB               	movwf	??_LCD_Init
  5259     0D40  3004               	movlw	4
  5260     0D41                     u2825:
  5261     0D41  1003               	clrc
  5262     0D42  0CFB               	rrf	??_LCD_Init,f
  5263     0D43  3EFF               	addlw	-1
  5264     0D44  1D03               	skipz
  5265     0D45  2D41               	goto	u2825
  5266     0D46  087B               	movf	??_LCD_Init,w
  5267     0D47  390F               	andlw	15
  5268     0D48  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5269     0D4D  087D               	movf	LCD_Init@cmd,w
  5270     0D4E  390F               	andlw	15
  5271     0D4F  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5272     0D54                     l502:	
  5273                           ;lcd.c: 62:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while (
      +                           0 );
  5274                           
  5275     0D54  3000               	movlw	0
  5276     0D55  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5277     0D5A  3001               	movlw	1
  5278     0D5B  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5279     0D60                     l490:
  5280     0D60  0008               	return
  5281     0D61                     __end_of_LCD_Init:
  5282                           
  5283                           	psect	text20
  5284     0AC2                     __ptext20:	
  5285 ;; *************** function _LCD_Write *****************
  5286 ;; Defined at:
  5287 ;;		line 23 in file "lcd.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  c               1    wreg     unsigned char 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  c               1    5[COMMON] unsigned char 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  1    wreg      void 
  5294 ;; Registers used:
  5295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5301 ;;      Params:         0       0       0       0       0
  5302 ;;      Locals:         1       0       0       0       0
  5303 ;;      Temps:          2       0       0       0       0
  5304 ;;      Totals:         3       0       0       0       0
  5305 ;;Total ram usage:        3 bytes
  5306 ;; Hardware stack levels used: 1
  5307 ;; Hardware stack levels required when called: 1
  5308 ;; This function calls:
  5309 ;;		_LCD_Out
  5310 ;; This function is called by:
  5311 ;;		_dibujar_suelo
  5312 ;;		_main
  5313 ;;		_pot_x
  5314 ;;		_pot_y
  5315 ;;		_mover_nubes
  5316 ;;		_dibujar_fondo
  5317 ;;		_disparar
  5318 ;;		_LCD_Init
  5319 ;;		_LCD_cg_ram_addr
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323     0AC2                     _LCD_Write:	
  5324                           ;psect for function _LCD_Write
  5325                           
  5326                           
  5327                           ;incstack = 0
  5328                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5329                           ;LCD_Write@c stored from wreg
  5330     0AC2  00F5               	movwf	LCD_Write@c
  5331     0AC3                     l1790:
  5332                           
  5333                           ;lcd.c: 24:     *(lcd.PORT) &= ~(1 << lcd.RS);
  5334     0AC3  1283               	bcf	3,5	;RP0=0, select bank0
  5335     0AC4  1303               	bcf	3,6	;RP1=0, select bank0
  5336     0AC5  0859               	movf	_lcd,w
  5337     0AC6  0084               	movwf	4
  5338     0AC7  1783               	bsf	3,7
  5339     0AC8  1C5A               	btfss	_lcd+1,0
  5340     0AC9  1383               	bcf	3,7
  5341     0ACA  3001               	movlw	1
  5342     0ACB  00F3               	movwf	??_LCD_Write
  5343     0ACC  085B               	movf	_lcd+2,w
  5344     0ACD  3907               	andlw	7
  5345     0ACE  3E01               	addlw	1
  5346     0ACF  2AD2               	goto	u1834
  5347     0AD0                     u1835:
  5348     0AD0  1003               	clrc
  5349     0AD1  0DF3               	rlf	??_LCD_Write,f
  5350     0AD2                     u1834:
  5351     0AD2  3EFF               	addlw	-1
  5352     0AD3  1D03               	skipz
  5353     0AD4  2AD0               	goto	u1835
  5354     0AD5  0873               	movf	??_LCD_Write,w
  5355     0AD6  3AFF               	xorlw	255
  5356     0AD7  0580               	andwf	0,f
  5357     0AD8                     l1792:
  5358                           
  5359                           ;lcd.c: 25:     LCD_Out(c);
  5360     0AD8  0875               	movf	LCD_Write@c,w
  5361     0AD9  120A  158A  2612  120A  158A  	fcall	_LCD_Out
  5362     0ADE                     l1794:
  5363                           
  5364                           ;lcd.c: 26:     *(lcd.PORT) |= 1 << lcd.EN;
  5365     0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  5366     0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  5367     0AE0  0859               	movf	_lcd,w
  5368     0AE1  0084               	movwf	4
  5369     0AE2  1783               	bsf	3,7
  5370     0AE3  1C5A               	btfss	_lcd+1,0
  5371     0AE4  1383               	bcf	3,7
  5372     0AE5  3001               	movlw	1
  5373     0AE6  00F3               	movwf	??_LCD_Write
  5374     0AE7  0C5B               	rrf	_lcd+2,w
  5375     0AE8  00F4               	movwf	??_LCD_Write+1
  5376     0AE9  0CF4               	rrf	??_LCD_Write+1,f
  5377     0AEA  0C74               	rrf	??_LCD_Write+1,w
  5378     0AEB  3907               	andlw	7
  5379     0AEC  3E01               	addlw	1
  5380     0AED  2AF0               	goto	u1844
  5381     0AEE                     u1845:
  5382     0AEE  1003               	clrc
  5383     0AEF  0DF3               	rlf	??_LCD_Write,f
  5384     0AF0                     u1844:
  5385     0AF0  3EFF               	addlw	-1
  5386     0AF1  1D03               	skipz
  5387     0AF2  2AEE               	goto	u1845
  5388     0AF3  0873               	movf	??_LCD_Write,w
  5389     0AF4  0480               	iorwf	0,f
  5390     0AF5                     l1796:
  5391                           
  5392                           ;lcd.c: 27:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5393     0AF5  300D               	movlw	13
  5394     0AF6  00F3               	movwf	??_LCD_Write
  5395     0AF7                     u3547:
  5396     0AF7  0BF3               	decfsz	??_LCD_Write,f
  5397     0AF8  2AF7               	goto	u3547
  5398     0AF9                     l1798:
  5399                           
  5400                           ;lcd.c: 28:     *(lcd.PORT) &= ~(1 << lcd.EN);
  5401     0AF9  1283               	bcf	3,5	;RP0=0, select bank0
  5402     0AFA  1303               	bcf	3,6	;RP1=0, select bank0
  5403     0AFB  0859               	movf	_lcd,w
  5404     0AFC  0084               	movwf	4
  5405     0AFD  1783               	bsf	3,7
  5406     0AFE  1C5A               	btfss	_lcd+1,0
  5407     0AFF  1383               	bcf	3,7
  5408     0B00  3001               	movlw	1
  5409     0B01  00F3               	movwf	??_LCD_Write
  5410     0B02  0C5B               	rrf	_lcd+2,w
  5411     0B03  00F4               	movwf	??_LCD_Write+1
  5412     0B04  0CF4               	rrf	??_LCD_Write+1,f
  5413     0B05  0C74               	rrf	??_LCD_Write+1,w
  5414     0B06  3907               	andlw	7
  5415     0B07  3E01               	addlw	1
  5416     0B08  2B0B               	goto	u1854
  5417     0B09                     u1855:
  5418     0B09  1003               	clrc
  5419     0B0A  0DF3               	rlf	??_LCD_Write,f
  5420     0B0B                     u1854:
  5421     0B0B  3EFF               	addlw	-1
  5422     0B0C  1D03               	skipz
  5423     0B0D  2B09               	goto	u1855
  5424     0B0E  0873               	movf	??_LCD_Write,w
  5425     0B0F  3AFF               	xorlw	255
  5426     0B10  0580               	andwf	0,f
  5427     0B11                     l481:
  5428     0B11  0008               	return
  5429     0B12                     __end_of_LCD_Write:
  5430                           
  5431                           	psect	text21
  5432     0E12                     __ptext21:	
  5433 ;; *************** function _LCD_Out *****************
  5434 ;; Defined at:
  5435 ;;		line 9 in file "lcd.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  c               1    wreg     unsigned char 
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;  c               1    2[COMMON] unsigned char 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  1    wreg      void 
  5442 ;; Registers used:
  5443 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5449 ;;      Params:         0       0       0       0       0
  5450 ;;      Locals:         1       0       0       0       0
  5451 ;;      Temps:          2       0       0       0       0
  5452 ;;      Totals:         3       0       0       0       0
  5453 ;;Total ram usage:        3 bytes
  5454 ;; Hardware stack levels used: 1
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_LCD_Write
  5459 ;;		_LCD_putc
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463     0E12                     _LCD_Out:	
  5464                           ;psect for function _LCD_Out
  5465                           
  5466                           
  5467                           ;incstack = 0
  5468                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  5469                           ;LCD_Out@c stored from wreg
  5470     0E12  00F2               	movwf	LCD_Out@c
  5471     0E13                     l1766:
  5472                           
  5473                           ;lcd.c: 10:     if ( c & 1 ) *(lcd.PORT) |= 1 << lcd.D4;
  5474     0E13  1C72               	btfss	LCD_Out@c,0
  5475     0E14  2E16               	goto	u1711
  5476     0E15  2E17               	goto	u1710
  5477     0E16                     u1711:
  5478     0E16  2E2C               	goto	l1770
  5479     0E17                     u1710:
  5480     0E17                     l1768:
  5481     0E17  1283               	bcf	3,5	;RP0=0, select bank0
  5482     0E18  1303               	bcf	3,6	;RP1=0, select bank0
  5483     0E19  0859               	movf	_lcd,w
  5484     0E1A  0084               	movwf	4
  5485     0E1B  1783               	bsf	3,7
  5486     0E1C  1C5A               	btfss	_lcd+1,0
  5487     0E1D  1383               	bcf	3,7
  5488     0E1E  3001               	movlw	1
  5489     0E1F  00F0               	movwf	??_LCD_Out
  5490     0E20  085C               	movf	_lcd+3,w
  5491     0E21  3907               	andlw	7
  5492     0E22  3E01               	addlw	1
  5493     0E23  2E26               	goto	u1724
  5494     0E24                     u1725:
  5495     0E24  1003               	clrc
  5496     0E25  0DF0               	rlf	??_LCD_Out,f
  5497     0E26                     u1724:
  5498     0E26  3EFF               	addlw	-1
  5499     0E27  1D03               	skipz
  5500     0E28  2E24               	goto	u1725
  5501     0E29  0870               	movf	??_LCD_Out,w
  5502     0E2A  0480               	iorwf	0,f
  5503     0E2B  2E41               	goto	l1772
  5504     0E2C                     l1770:
  5505     0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  5506     0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  5507     0E2E  0859               	movf	_lcd,w
  5508     0E2F  0084               	movwf	4
  5509     0E30  1783               	bsf	3,7
  5510     0E31  1C5A               	btfss	_lcd+1,0
  5511     0E32  1383               	bcf	3,7
  5512     0E33  3001               	movlw	1
  5513     0E34  00F0               	movwf	??_LCD_Out
  5514     0E35  085C               	movf	_lcd+3,w
  5515     0E36  3907               	andlw	7
  5516     0E37  3E01               	addlw	1
  5517     0E38  2E3B               	goto	u1734
  5518     0E39                     u1735:
  5519     0E39  1003               	clrc
  5520     0E3A  0DF0               	rlf	??_LCD_Out,f
  5521     0E3B                     u1734:
  5522     0E3B  3EFF               	addlw	-1
  5523     0E3C  1D03               	skipz
  5524     0E3D  2E39               	goto	u1735
  5525     0E3E  0870               	movf	??_LCD_Out,w
  5526     0E3F  3AFF               	xorlw	255
  5527     0E40  0580               	andwf	0,f
  5528     0E41                     l1772:
  5529                           
  5530                           ;lcd.c: 13:     if ( c & 2 ) *(lcd.PORT) |= 1 << lcd.D5;
  5531     0E41  1CF2               	btfss	LCD_Out@c,1
  5532     0E42  2E44               	goto	u1741
  5533     0E43  2E45               	goto	u1740
  5534     0E44                     u1741:
  5535     0E44  2E5B               	goto	l1776
  5536     0E45                     u1740:
  5537     0E45                     l1774:
  5538     0E45  0859               	movf	_lcd,w
  5539     0E46  0084               	movwf	4
  5540     0E47  1783               	bsf	3,7
  5541     0E48  1C5A               	btfss	_lcd+1,0
  5542     0E49  1383               	bcf	3,7
  5543     0E4A  3001               	movlw	1
  5544     0E4B  00F0               	movwf	??_LCD_Out
  5545     0E4C  0C5C               	rrf	_lcd+3,w
  5546     0E4D  00F1               	movwf	??_LCD_Out+1
  5547     0E4E  0CF1               	rrf	??_LCD_Out+1,f
  5548     0E4F  0C71               	rrf	??_LCD_Out+1,w
  5549     0E50  3907               	andlw	7
  5550     0E51  3E01               	addlw	1
  5551     0E52  2E55               	goto	u1754
  5552     0E53                     u1755:
  5553     0E53  1003               	clrc
  5554     0E54  0DF0               	rlf	??_LCD_Out,f
  5555     0E55                     u1754:
  5556     0E55  3EFF               	addlw	-1
  5557     0E56  1D03               	skipz
  5558     0E57  2E53               	goto	u1755
  5559     0E58  0870               	movf	??_LCD_Out,w
  5560     0E59  0480               	iorwf	0,f
  5561     0E5A  2E71               	goto	l1778
  5562     0E5B                     l1776:
  5563     0E5B  0859               	movf	_lcd,w
  5564     0E5C  0084               	movwf	4
  5565     0E5D  1783               	bsf	3,7
  5566     0E5E  1C5A               	btfss	_lcd+1,0
  5567     0E5F  1383               	bcf	3,7
  5568     0E60  3001               	movlw	1
  5569     0E61  00F0               	movwf	??_LCD_Out
  5570     0E62  0C5C               	rrf	_lcd+3,w
  5571     0E63  00F1               	movwf	??_LCD_Out+1
  5572     0E64  0CF1               	rrf	??_LCD_Out+1,f
  5573     0E65  0C71               	rrf	??_LCD_Out+1,w
  5574     0E66  3907               	andlw	7
  5575     0E67  3E01               	addlw	1
  5576     0E68  2E6B               	goto	u1764
  5577     0E69                     u1765:
  5578     0E69  1003               	clrc
  5579     0E6A  0DF0               	rlf	??_LCD_Out,f
  5580     0E6B                     u1764:
  5581     0E6B  3EFF               	addlw	-1
  5582     0E6C  1D03               	skipz
  5583     0E6D  2E69               	goto	u1765
  5584     0E6E  0870               	movf	??_LCD_Out,w
  5585     0E6F  3AFF               	xorlw	255
  5586     0E70  0580               	andwf	0,f
  5587     0E71                     l1778:
  5588                           
  5589                           ;lcd.c: 16:     if ( c & 4 ) *(lcd.PORT) |= 1 << lcd.D6;
  5590     0E71  1D72               	btfss	LCD_Out@c,2
  5591     0E72  2E74               	goto	u1771
  5592     0E73  2E75               	goto	u1770
  5593     0E74                     u1771:
  5594     0E74  2E88               	goto	l1782
  5595     0E75                     u1770:
  5596     0E75                     l1780:
  5597     0E75  0859               	movf	_lcd,w
  5598     0E76  0084               	movwf	4
  5599     0E77  1783               	bsf	3,7
  5600     0E78  1C5A               	btfss	_lcd+1,0
  5601     0E79  1383               	bcf	3,7
  5602     0E7A  3001               	movlw	1
  5603     0E7B  00F0               	movwf	??_LCD_Out
  5604     0E7C  085D               	movf	_lcd+4,w
  5605     0E7D  3907               	andlw	7
  5606     0E7E  3E01               	addlw	1
  5607     0E7F  2E82               	goto	u1784
  5608     0E80                     u1785:
  5609     0E80  1003               	clrc
  5610     0E81  0DF0               	rlf	??_LCD_Out,f
  5611     0E82                     u1784:
  5612     0E82  3EFF               	addlw	-1
  5613     0E83  1D03               	skipz
  5614     0E84  2E80               	goto	u1785
  5615     0E85  0870               	movf	??_LCD_Out,w
  5616     0E86  0480               	iorwf	0,f
  5617     0E87  2E9B               	goto	l1784
  5618     0E88                     l1782:
  5619     0E88  0859               	movf	_lcd,w
  5620     0E89  0084               	movwf	4
  5621     0E8A  1783               	bsf	3,7
  5622     0E8B  1C5A               	btfss	_lcd+1,0
  5623     0E8C  1383               	bcf	3,7
  5624     0E8D  3001               	movlw	1
  5625     0E8E  00F0               	movwf	??_LCD_Out
  5626     0E8F  085D               	movf	_lcd+4,w
  5627     0E90  3907               	andlw	7
  5628     0E91  3E01               	addlw	1
  5629     0E92  2E95               	goto	u1794
  5630     0E93                     u1795:
  5631     0E93  1003               	clrc
  5632     0E94  0DF0               	rlf	??_LCD_Out,f
  5633     0E95                     u1794:
  5634     0E95  3EFF               	addlw	-1
  5635     0E96  1D03               	skipz
  5636     0E97  2E93               	goto	u1795
  5637     0E98  0870               	movf	??_LCD_Out,w
  5638     0E99  3AFF               	xorlw	255
  5639     0E9A  0580               	andwf	0,f
  5640     0E9B                     l1784:
  5641                           
  5642                           ;lcd.c: 19:     if ( c & 8 ) *(lcd.PORT) |= 1 << lcd.D7;
  5643     0E9B  1DF2               	btfss	LCD_Out@c,3
  5644     0E9C  2E9E               	goto	u1801
  5645     0E9D  2E9F               	goto	u1800
  5646     0E9E                     u1801:
  5647     0E9E  2EB5               	goto	l1788
  5648     0E9F                     u1800:
  5649     0E9F                     l1786:
  5650     0E9F  0859               	movf	_lcd,w
  5651     0EA0  0084               	movwf	4
  5652     0EA1  1783               	bsf	3,7
  5653     0EA2  1C5A               	btfss	_lcd+1,0
  5654     0EA3  1383               	bcf	3,7
  5655     0EA4  3001               	movlw	1
  5656     0EA5  00F0               	movwf	??_LCD_Out
  5657     0EA6  0C5D               	rrf	_lcd+4,w
  5658     0EA7  00F1               	movwf	??_LCD_Out+1
  5659     0EA8  0CF1               	rrf	??_LCD_Out+1,f
  5660     0EA9  0C71               	rrf	??_LCD_Out+1,w
  5661     0EAA  3907               	andlw	7
  5662     0EAB  3E01               	addlw	1
  5663     0EAC  2EAF               	goto	u1814
  5664     0EAD                     u1815:
  5665     0EAD  1003               	clrc
  5666     0EAE  0DF0               	rlf	??_LCD_Out,f
  5667     0EAF                     u1814:
  5668     0EAF  3EFF               	addlw	-1
  5669     0EB0  1D03               	skipz
  5670     0EB1  2EAD               	goto	u1815
  5671     0EB2  0870               	movf	??_LCD_Out,w
  5672     0EB3  0480               	iorwf	0,f
  5673     0EB4  2ECB               	goto	l478
  5674     0EB5                     l1788:
  5675     0EB5  0859               	movf	_lcd,w
  5676     0EB6  0084               	movwf	4
  5677     0EB7  1783               	bsf	3,7
  5678     0EB8  1C5A               	btfss	_lcd+1,0
  5679     0EB9  1383               	bcf	3,7
  5680     0EBA  3001               	movlw	1
  5681     0EBB  00F0               	movwf	??_LCD_Out
  5682     0EBC  0C5D               	rrf	_lcd+4,w
  5683     0EBD  00F1               	movwf	??_LCD_Out+1
  5684     0EBE  0CF1               	rrf	??_LCD_Out+1,f
  5685     0EBF  0C71               	rrf	??_LCD_Out+1,w
  5686     0EC0  3907               	andlw	7
  5687     0EC1  3E01               	addlw	1
  5688     0EC2  2EC5               	goto	u1824
  5689     0EC3                     u1825:
  5690     0EC3  1003               	clrc
  5691     0EC4  0DF0               	rlf	??_LCD_Out,f
  5692     0EC5                     u1824:
  5693     0EC5  3EFF               	addlw	-1
  5694     0EC6  1D03               	skipz
  5695     0EC7  2EC3               	goto	u1825
  5696     0EC8  0870               	movf	??_LCD_Out,w
  5697     0EC9  3AFF               	xorlw	255
  5698     0ECA  0580               	andwf	0,f
  5699     0ECB                     l478:
  5700     0ECB  0008               	return
  5701     0ECC                     __end_of_LCD_Out:
  5702                           
  5703                           	psect	text22
  5704     0977                     __ptext22:	
  5705 ;; *************** function _ADC_Init *****************
  5706 ;; Defined at:
  5707 ;;		line 138 in file "main.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		status,2
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5721 ;;      Params:         0       0       0       0       0
  5722 ;;      Locals:         0       0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0
  5724 ;;      Totals:         0       0       0       0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_main
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734     0977                     _ADC_Init:	
  5735                           ;psect for function _ADC_Init
  5736                           
  5737     0977                     l2182:	
  5738                           ;incstack = 0
  5739                           ; Regs used in _ADC_Init: [status,2]
  5740                           
  5741                           
  5742                           ;main.c: 139:     LCD_Init(lcd);
  5743     0977  3003               	movlw	3
  5744     0978  1683               	bsf	3,5	;RP0=1, select bank3
  5745     0979  1703               	bsf	3,6	;RP1=1, select bank3
  5746     097A  0088               	movwf	8	;volatile
  5747     097B                     l2184:
  5748                           
  5749                           ;main.c: 140:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while
      +                           ( 0 );
  5750     097B  0189               	clrf	9	;volatile
  5751     097C                     l2186:
  5752                           
  5753                           ;main.c: 141: 
  5754     097C  3080               	movlw	128
  5755     097D  1683               	bsf	3,5	;RP0=1, select bank1
  5756     097E  1303               	bcf	3,6	;RP1=0, select bank1
  5757     097F  009F               	movwf	31	;volatile
  5758     0980                     l2188:
  5759                           
  5760                           ;main.c: 142: 
  5761     0980  3001               	movlw	1
  5762     0981  1283               	bcf	3,5	;RP0=0, select bank0
  5763     0982  1303               	bcf	3,6	;RP1=0, select bank0
  5764     0983  009F               	movwf	31	;volatile
  5765     0984                     l100:
  5766     0984  0008               	return
  5767     0985                     __end_of_ADC_Init:
  5768     0002                     ___latbits      equ	2
  5769     007E                     btemp           set	126	;btemp
  5770     007E                     wtemp0          set	126
  5771                           
  5772                           	psect	config
  5773                           
  5774                           ;Config register CONFIG1 @ 0x2007
  5775                           ;	Oscillator Selection bits
  5776                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  5777                           ;	Watchdog Timer Enable bit
  5778                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5779                           ;	Power-up Timer Enable bit
  5780                           ;	PWRTE = OFF, PWRT disabled
  5781                           ;	RE3/MCLR pin function select bit
  5782                           ;	MCLRE = 0x1, unprogrammed default
  5783                           ;	Code Protection bit
  5784                           ;	CP = OFF, Program memory code protection is disabled
  5785                           ;	Data Code Protection bit
  5786                           ;	CPD = OFF, Data memory code protection is disabled
  5787                           ;	Brown Out Reset Selection bits
  5788                           ;	BOREN = ON, BOR enabled
  5789                           ;	Internal External Switchover bit
  5790                           ;	IESO = 0x1, unprogrammed default
  5791                           ;	Fail-Safe Clock Monitor Enabled bit
  5792                           ;	FCMEN = 0x1, unprogrammed default
  5793                           ;	Low Voltage Programming Enable bit
  5794                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5795                           ;	In-Circuit Debugger Mode bit
  5796                           ;	DEBUG = 0x1, unprogrammed default
  5797     2007                     	org	8199
  5798     2007  2FF1               	dw	12273
  5799                           
  5800                           ;Config register CONFIG2 @ 0x2008
  5801                           ;	Brown-out Reset Selection bit
  5802                           ;	BOR4V = 0x1, unprogrammed default
  5803                           ;	Flash Program Memory Self Write Enable bits
  5804                           ;	WRT = OFF, Write protection off
  5805     2008                     	org	8200
  5806     2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    64
    Data        7
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    LCD_custom_char@x	PTR const unsigned char  size(1) Largest target is 8
		 -> arbol(CODE[8]), bob(CODE[8]), bob_reves(CODE[8]), casa1(CODE[8]), 
		 -> casa2(CODE[8]), flor(CODE[8]), nube(CODE[8]), suelo(CODE[8]), 

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 
		 -> STR_5(CODE[2]), STR_6(CODE[2]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_custom_char
    _pot_y->_LCD_putrs
    _rand->___lmul
    _dibujar_fondo->_LCD_putrs
    _mover_nubes->_LCD_putrs
    _dibujar_suelo->_LCD_custom_char
    _LCD_custom_char->_LCD_cg_ram_addr
    _LCD_ram_write->_LCD_putc
    _LCD_cg_ram_addr->_LCD_Write
    _checar_boton->_disparar
    _disparar->_LCD_putrs
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    _main->_pot_x
    _pot_x->_generar_fondo
    _generar_fondo->___awmod
    ___awmod->_rand
    _dibujar_suelo->_LCD_custom_char
    _checar_boton->_disparar

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9681
                                             29 BANK0      1     1      0
                           _ADC_Init
                           _LCD_Init
                          _LCD_Write
                    _LCD_custom_char
                           _LCD_putc
                       _checar_boton
                      _dibujar_fondo
                      _dibujar_suelo
                      _generar_fondo
                        _mover_nubes
                              _pot_x
                              _pot_y
                              _srand
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _pot_y                                                4     4      0     663
                                              9 COMMON     4     4      0
                           _ADC_Read
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (1) _pot_x                                                9     9      0    2596
                                             20 BANK0      9     9      0
                           _ADC_Read
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
                      _dibujar_fondo
                      _generar_fondo
 ---------------------------------------------------------------------------------
 (2) _generar_fondo                                        8     8      0     763
                                             12 BANK0      8     8      0
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2      94
                                              0 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              13     5      8      94
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     304
                                              6 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _dibujar_fondo                                        3     3      0    1077
                                              9 COMMON     3     3      0
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      29
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _mover_nubes                                          6     6      0    1077
                                              9 COMMON     3     3      0
                                              0 BANK0      3     3      0
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (1) _dibujar_suelo                                        1     1      0     930
                                              2 BANK0      1     1      0
                          _LCD_Write
                    _LCD_custom_char
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_custom_char                                      5     4      1     565
                                             11 COMMON     3     2      1
                                              0 BANK0      2     2      0
                    _LCD_cg_ram_addr
                      _LCD_ram_write
 ---------------------------------------------------------------------------------
 (3) _LCD_ram_write                                        2     2      0     203
                                              6 COMMON     2     2      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (3) _LCD_cg_ram_addr                                      5     5      0     203
                                              6 COMMON     5     5      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _checar_boton                                         0     0      0    1452
                           _disparar
 ---------------------------------------------------------------------------------
 (2) _disparar                                             9     9      0    1452
                                              9 COMMON     2     2      0
                                              0 BANK0      7     7      0
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (2) _LCD_putrs                                            3     2      1     270
                                              6 COMMON     3     2      1
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (3) _LCD_putc                                             3     3      0     174
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     216
                                              6 COMMON     8     3      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            3     3      0     145
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (4) _LCD_Out                                              3     3      0     116
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
   _LCD_custom_char
     _LCD_cg_ram_addr
       _LCD_Write
     _LCD_ram_write
       _LCD_putc
         _LCD_Out
   _LCD_putc
   _checar_boton
     _disparar
       _LCD_Write
       _LCD_putc
       _LCD_putrs
         _LCD_putc
   _dibujar_fondo
     _LCD_Write
     _LCD_putc
     _LCD_putrs
   _dibujar_suelo
     _LCD_Write
     _LCD_custom_char
     _LCD_putc
   _generar_fondo
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
   _mover_nubes
     _LCD_Write
     _LCD_putc
     _LCD_putrs
   _pot_x
     _ADC_Read
     _LCD_Write
     _LCD_putc
     _LCD_putrs
     _dibujar_fondo
     _generar_fondo
   _pot_y
     _ADC_Read
     _LCD_Write
     _LCD_putc
     _LCD_putrs
   _srand

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     30      64     80.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      78      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 23 13:29:44 2025

                      pc 0002                       l75 0A7B                       l97 0A18  
                     fsr 0004     __end_of_checar_boton 096A                      l100 0984  
                    l103 0A38                      l106 0A42                      l140 0FE8  
                    l215 0127                      l240 0969                      l306 0BBE  
                    l162 0276                      l323 0BFB                      l235 01D7  
                    l219 0154                      l139 0FE2                      l236 01E6  
                    l261 0C50                      l173 02B5                      l502 0D54  
                    l414 0670                      l342 036B                      l246 0C2E  
                    l167 0298                      l432 0744                      l521 09CC  
                    l506 0099                      l450 07DC                      l282 0C97  
                    l338 0C1B                      l451 07E5                      l523 09F0  
                    l283 0CB4                      l339 0C29                      l195 035A  
                    l196 036A                      l518 09CA                      l358 03EE  
                    l526 0993                      l296 0E11                      l481 0B11  
                    l490 0D60                      l378 04C1                      l626 0AC1  
                    l396 0596                      l478 0ECB                      l778 0BBB  
        LCD_Init@display 0076                      _bob 083E                      _lcd 0059  
                    fsr0 0004                      indf 0000             ___awmod@sign 002B  
        __end_of_LCD_Out 0ECC                     l2010 0BF3                     l2002 0BD6  
                   l2100 05BD                     l2020 0BFB                     l2012 0BF9  
                   l2004 0BE0                     l2110 061D                     l2102 05C4  
                   l2030 036B                     l2006 0BEA                     l2200 0CE4  
                   l2120 0684                     l2112 0644                     l2104 05EB  
                   l2040 03B3                     l2032 0372                     l2008 0BF1  
                   l1073 0976                     l2210 0D0E                     l2202 0CEE  
                   l2130 0713                     l2122 06B0                     l2114 064A  
                   l2106 05F0                     l2042 03CE                     l2034 038D  
                   l2026 0C21                     l2220 0D2F                     l2212 0D17  
                   l2204 0CF1                     l2140 0753                     l2132 0719  
                   l2124 06B5                     l2108 0617                     l2116 0677  
                   l2060 0415                     l2044 03D4                     l2036 0392  
                   l2028 0C23                     l1076 0B62                     l2300 0360  
                   l2222 0D35                     l2214 0D1D                     l2206 0CFA  
                   l2150 079B                     l2142 0759                     l2126 06E1  
                   l2118 067F                     l2134 074B                     l2070 0495  
                   l2062 043C                     l2054 03F9                     l2046 03F4  
                   l2038 03AD                     l2310 00CB                     l2302 009A  
                   l2232 0D3E                     l2224 0D3B                     l2216 0D23  
                   l2208 0D00                     l2152 07A1                     l2144 0760  
                   l2128 06E7                     l2080 04D6                     l2072 049B  
                   l2064 0441                     l2056 03FA                     l2048 03F7  
                   l2160 09F1                     l2240 01F3                     l2320 012E  
                   l2312 00E6                     l2304 00A4                     l2400 0F03  
                   l2226 0D3D                     l2218 0D29                     l2154 07BC  
                   l2146 077B                     l2138 0751                     l2090 0565  
                   l2082 0502                     l2074 04C7                     l2066 0468  
                   l2058 040E                     l2170 0A05                     l2250 0235  
                   l2242 01F5                     l2330 0152                     l2322 0137  
                   l2314 00EC                     l2306 00AB                     l2410 0F2B  
                   l2402 0F0B                     l2156 07C2                     l2148 0780  
                   l2092 056B                     l2084 0507                     l2068 046E  
                   l2076 04C9                     l2180 0A12                     l2260 0288  
                   l2252 023B                     l2244 01FA                     l2340 019C  
                   l2332 015B                     l2324 013E                     l2316 0107  
                   l2308 00C6                     l2236 096A                     l2420 0F50  
                   l2412 0F33                     l2404 0F13                     l2182 0977  
                   l2190 0CB5                     l2158 07E2                     l2094 059C  
                   l2086 0533                     l2078 04D1                     l2350 0964  
                   l2270 02A9                     l2262 028E                     l2254 0256  
                   l2246 0215                     l2238 01E7                     l2342 01B7  
                   l2334 0176                     l2326 0141                     l2318 010D  
                   l2430 0F81                     l2422 0F55                     l2414 0F3B  
                   l2406 0F1B                     l2184 097B                     l2192 0CC6  
                   l1800 0009                     l2088 0539                     l2096 059E  
                   l2176 0A08                     l2168 09F9                     l2360 0C2E  
                   l2352 0C2A                     l2280 02C8                     l2272 02AE  
                   l2264 0291                     l2256 025C                     l2248 021A  
                   l2344 01BD                     l2336 017B                     l2328 014A  
                   l2440 0FC8                     l2432 0F86                     l2424 0F5A  
                   l2416 0F44                     l2408 0F23                     l2186 097C  
                   l2194 0CD2                     l1810 005F                     l1802 001D  
                   l2098 05A9                     l2178 0A0E                     l2370 0C6D  
                   l2290 02FE                     l2282 02CD                     l2274 02B7  
                   l2266 029B                     l2258 027D                     l2346 01DD  
                   l2338 0196                     l2442 0FF2                     l2434 0FA1  
                   l2426 0F5F                     l2418 0F4A                     l2188 0980  
                   l2196 0CD6                     l1812 0066                     l1804 002C  
                   l2348 095E                     l2372 0C71                     l1820 0A88  
                   l2292 0319                     l2284 02D7                     l2276 02BC  
                   l2268 02A4                     l2444 0FF7                     l2436 0FA7  
                   l2428 0F66                     l2198 0CE0                     l1814 0081  
                   l1806 0043                     l1830 09CC                     l1902 0A64  
                   l2382 0C9D                     l2366 0C57                     l1910 0A1D  
                   l1822 0A9F                     l2294 031F                     l2286 02DE  
                   l2278 02C2                     l2438 0FC2                     l2390 0ED3  
                   l1808 0047                     l1840 09AA                     l1832 09E9  
                   l1904 0A71                     l2384 0CA1                     l2376 0C76  
                   l2368 0C62                     l1912 0A2C                     l1824 0AA8  
                   l1816 0A7C                     l1920 0D61                     l2296 033A  
                   l2288 02F9                     l2392 0ED8                     l1770 0E2C  
                   l1842 09B7                     l1834 0986                     l1906 0A75  
                   l2386 0CA7                     l1914 0A35                     l1826 0AB9  
                   l1818 0A84                     l1930 0D6C                     l2298 0340  
                   l2394 0EEF                     l1780 0E75                     l1772 0E41  
                   l1844 09BD                     l1836 098C                     l1916 0A3C  
                   l1908 0A1A                     l1860 0B71                     l1852 0B63  
                   l1940 0D8B                     l1932 0D72                     l2396 0EF5  
                   l2388 0ECC                     l1782 0E88                     l1774 0E45  
                   l1766 0E13                     l1790 0AC3                     l1838 09A7  
                   l1870 0B8A                     l1862 0B75                     l1854 0B66  
                   l1846 0B12                     l1942 0D91                     l1926 0D64  
                   l2398 0EFB                     l1784 0E9B                     l1776 0E5B  
                   l1768 0E17                     l1792 0AD8                     l1880 0BA7  
                   l1872 0B8C                     l1864 0B7A                     l1856 0B6A  
                   l1848 0B4D                     l1960 0DC0                     l1952 0D9A  
                   l1944 0D93                     l1928 0D6A                     l1786 0E9F  
                   l1778 0E71                     l1794 0ADE                     l1890 0A46  
                   l1874 0B90                     l1866 0B80                     l1882 0BAD  
                   l1858 0B6F                     l1970 0DDF                     l1954 0DB2  
                   l1946 0D99                     l1938 0D73                     l1788 0EB5  
                   l1796 0AF5                     l1892 0A52                     l1884 0BB2  
                   l1876 0B9A                     l1868 0B83                     l1972 0DE4  
                   l1956 0DB8                     l1798 0AF9                     l1894 0A58  
                   l1886 0BB7                     l1878 0BA0                     l1982 0DED  
                   l1974 0DE6                     l1966 0DC1                     l1958 0DBA  
                   l1896 0A61                     l1984 0E09                     l1976 0DEC  
                   l1968 0DD9                     l1986 0E0B                     l1988 0BBC  
                   l1998 0BBE                     STR_1 0846                     STR_2 0846  
                   STR_3 0846                     STR_4 0846                     STR_5 0846  
                   STR_6 0846                     u2000 0B5B                     u2010 0B6A  
                   u2011 0B69                     u2020 0B75                     u2021 0B74  
                   u2005 0B56                     u2110 0A7B                     u2030 0B80  
                   u2111 0A7A                     u2031 0B7F                     u2200 0BE0  
                   u2105 0A4A                     u2201 0BDF                     u2130 0A3C  
                   u2210 0BF9                     u2050 0B90                     u3010 02FE  
                   u2131 0A3B                     u2211 0BF8                     u2051 0B8F  
                   u3011 02FD                     u2300 03D4                     u2060 0B9A  
                   u2140 0D72                     u2301 03D3                     u2125 0A24  
                   u2061 0B99                     u2045 0B84                     u2141 0D71  
                   u3005 02E2                     u2230 0C29                     u2150 0D99  
                   u3030 031F                     u3110 00EC                     u2231 0C28  
                   u2151 0D98                     u3031 031E                     u3111 00EB  
                   u2320 040E                     u2240 0372                     u2080 0BAD  
                   u2160 0DC0                     u2321 040D                     u2241 0371  
                   u2225 0C03                     u2081 0BAC                     u2065 0B96  
                   u2161 0DBF                     u3025 0302                     u3105 00CF  
                   u2410 04D1                     u2330 0415                     u2090 0BB2  
                   u2170 0DEC                     u3050 0340                     u3210 017B  
                   u3130 010D                     u2411 04D0                     u2331 0414  
                   u2315 03D8                     u2091 0BB1                     u2075 0BA1  
                   u2171 0DEB                     u3051 033F                     u3211 017A  
                   u3131 010C                     u2500 05BD                     u2420 04D6  
                   u2260 0392                     u2180 0E11                     u2501 05BC  
                   u2421 04D5                     u2405 04AA                     u2325 040A  
                   u2261 0391                     u2181 0E10                     u3045 0323  
                   u3205 015F                     u3125 00F0                     u1710 0E17  
                   u2510 05C4                     u2350 0441                     u3310 0CA7  
                   u3230 019C                     u3150 0137                     u3070 00AB  
                   u1711 0E16                     u2511 05C3                     u2351 0440  
                   u2255 0376                     u3311 0CA6                     u3231 019B  
                   u3151 0136                     u3071 00AA                     u1800 0E9F  
                   u2600 0684                     u2440 0507                     u2280 03B3  
                   u3160 013E                     u3320 0F66                     u1801 0E9E  
                   u2601 0683                     u2505 05B9                     u2441 0506  
                   u2345 0424                     u2281 03B2                     u3305 0C7D  
                   u3065 0344                     u3225 017F                     u3161 013D  
                   u3145 0111                     u3321 0F65                     u2530 05F0  
                   u2370 046E                     u3250 01BD                     u3170 014A  
                   u3090 00CB                     u2531 05EF                     u2435 04EA  
                   u2371 046D                     u2275 0396                     u2195 0BC2  
                   u3251 01BC                     u3171 0149                     u3091 00CA  
                   u1740 0E45                     u1724 0E26                     u2700 0760  
                   u2620 06B5                     u2460 0539                     u3180 0152  
                   u3340 0F86                     u1741 0E44                     u1725 0E24  
                   u2701 075F                     u2621 06B4                     u2525 05D3  
                   u2461 0538                     u2365 0450                     u3245 01A0  
                   u3181 0151                     u3085 00AF                     u3341 0F85  
                   u1814 0EAF                     u1734 0E3B                     u2550 061D  
                   u2390 049B                     u3270 0964                     u3190 015B  
                   u1815 0EAD                     u1735 0E39                     u2615 0698  
                   u2551 061C                     u2455 051B                     u2391 049A  
                   u2295 03B7                     u3271 0963                     u3191 015A  
                   u3335 0F6A                     u1824 0EC5                     u2800 0CE0  
                   u1904 0078                     u2720 0780                     u2640 06E7  
                   u2480 056B                     u1920 0A88                     u3360 0FA7  
                   u1825 0EC3                     u2801 0CDF                     u1905 0076  
                   u2721 077F                     u2641 06E6                     u2545 05FF  
                   u2481 056A                     u2385 047D                     u1921 0A87  
                   u3417 01E1                     u3265 01C1                     u3361 0FA6  
                   u1770 0E75                     u1754 0E55                     u1834 0AD2  
                   u2810 0CEE                     u1914 0093                     u2570 064A  
                   u3290 0C62                     u1771 0E74                     u1755 0E53  
                   u1835 0AD0                     u2811 0CED                     u1915 0091  
                   u3507 007F                     u2715 0764                     u2635 06C9  
                   u2571 0649                     u2475 054D                     u3291 0C61  
                   u1931 0A91                     u3427 0366                     u3355 0F8A  
                   u1764 0E6B                     u1844 0AF0                     u2740 07A1  
                   u2660 0719                     u1932 0A98                     u3380 0FC8  
                   u1765 0E69                     u1845 0AEE                     u3517 0CF5  
                   u2805 0CDC                     u2741 07A0                     u2661 0718  
                   u2565 062C                     u3285 0C36                     u3437 0A30  
                   u1933 0A9F                     u3381 0FC7                     u1854 0B0B  
                   u2590 067F                     u2910 0288                     u2830 01FA  
                   u1855 0B09                     u3527 0D04                     u2815 0CEA  
                   u2735 0784                     u2655 06FB                     u2591 067E  
                   u2495 057F                     u3447 0CAD                     u2911 0287  
                   u2831 01F9                     u3375 0FAB                     u1784 0E82  
                   u1864 0018                     u2760 07C2                     u2680 0750  
                   u1960 0AB9                     u2920 028E                     u1785 0E80  
                   u2825 0D41                     u3537 0D12                     u1865 0016  
                   u2761 07C1                     u2681 074F                     u2585 0659  
                   u3457 0A5C                     u1961 0AB8                     u1945 0AA1  
                   u2921 028D                     u2905 0260                     u1794 0E95  
                   u2690 0759                     u2930 02A4                     u2850 021A  
                   u1795 0E93                     u3547 0AF7                     u1875 0020  
                   u2755 07A5                     u2691 0758                     u2675 072D  
                   u3467 098E                     u1955 0AA9                     u2931 02A3  
                   u2851 0219                     u3395 0FCC                     u1884 003E  
                   u1980 09CA                     u2780 0A18                     u2940 02A9  
                   u1885 003C                     u1981 09C9                     u3477 09EB  
                   u2781 0A17                     u2941 02A8                     u2845 01FE  
                   u2790 0CD2                     u1894 0059                     u1990 0B3A  
                   u2950 02BC                     u2870 023B                     u2791 0CD1  
                   u1895 0057                     u2775 07C6                     u3487 05A4  
                   u1975 09D6                     u1991 0B3B                     u2951 02BB  
                   u2871 023A                     u1992 0B40                     u2960 02C2  
                   u3497 0045                     u1993 0B41                     u2961 02C1  
                   u2865 021E                     u2970 02C8                     u2890 025C  
                   u2795 0CCE                     u2971 02C7                     u2891 025B  
                   u2980 02CD                     u2981 02CC                     u2885 023F  
                   u2990 02DE                     u2991 02DD                     _main 0ECC  
                   _flor 0806                     _rand 0B12                     _seed 0055  
                   _nube 080E                     btemp 007E         __end_of_ADC_Init 0985  
       __end_of_ADC_Read 0A43        LCD_ram_write@data 0077                     start 0000  
            LCD_Init@cmd 007D          _mover_nubes$220 0020          ??_generar_fondo 007D  
       __end_of_LCD_Init 0D61         __end_of_LCD_putc 009A                    ?_main 0070  
                  ?_rand 0020          __end_of___awmod 0BBC                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
      ??_LCD_cg_ram_addr 0076      ___lmul@multiplicand 0074           generar_fondo@i 0032  
         generar_fondo@p 002C                    _casa1 082E                    _casa2 0826  
                  _arbol 0816                    _fondo 003E                    _nubes 0052  
                  _pos_x 005F                    _pos_y 005E                    _pot_x 01E7  
                  _pot_y 009A                    _srand 096A                    _suelo 0836  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E6             __end_of_main 1000             __end_of_flor 080E  
           __end_of_rand 0B63             __end_of_nube 0816            _LCD_ram_write 0985  
                 ??_main 003D                   ??_rand 0022      LCD_cg_ram_addr@addr 007A  
              ??_LCD_Out 0070            disparar@moved 0079        __end_of_LCD_Write 0B12  
      __end_of_LCD_putrs 09CB                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   ?_pot_x 0070  
                 ?_pot_y 0070                   ?_srand 0070                   _ANSELH 0189  
       __end_of_disparar 07E6                   ___lmul 0A7C                ??___awmod 007D  
           ?_mover_nubes 0070           ?_LCD_ram_write 0070          ADC_Read@channel 0074  
        ___awmod@divisor 0026          ___awmod@counter 002A                ?_ADC_Init 0070  
              ?_ADC_Read 0070                   srand@s 0070    __end_of_dibujar_fondo 0C2A  
           _checar_boton 095E  __end_of__initialization 07FC                ?_LCD_Init 0076  
  __end_of_dibujar_suelo 0A19                ?_LCD_putc 0070           __pcstackCOMMON 0070  
           __pidataBANK0 094F            __end_of_casa1 0836            __end_of_casa2 082E  
          __end_of_arbol 081E            __end_of_pot_x 036B            __end_of_pot_y 01E7  
          __end_of_srand 0977            __end_of_suelo 083E                LCD_putc@c 0075  
             ??_ADC_Init 0070               ??_ADC_Read 0072                  ??_pot_x 0034  
                ??_pot_y 0079                  ??_srand 0072               __pbssBANK0 003E  
             ??_LCD_Init 007B        ??_LCD_custom_char 007C           disparar@offset 007A  
             ??_LCD_putc 0073               __pmaintext 0ECC          ??_LCD_ram_write 0076  
                ?___lmul 0070          _LCD_cg_ram_addr 09CB           ___lmul@product 0079  
                _LCD_Out 0E12                ?_disparar 0070               __stringtab 0800  
      __end_of_bob_reves 0826                  ___awmod 0B63         LCD_custom_char@i 0021  
       LCD_custom_char@x 007B    __end_of_generar_fondo 0E12                  __ptext1 096A  
                __ptext2 009A                  __ptext3 01E7                  __ptext4 0D61  
                __ptext5 0B12                  __ptext6 0A7C                  __ptext7 0B63  
                __ptext8 0BBC                  __ptext9 0A19           dibujar_fondo@i 007B  
       ___awmod@dividend 0028           dibujar_suelo@i 0022                  clrloop0 0957  
              _LCD_Write 0AC2               ??_disparar 0020     end_of_initialization 07FC  
              _LCD_putrs 09A7  __end_of_LCD_cg_ram_addr 09F1                _PORTAbits 0005  
            pot_x@prev_x 003C                _TRISAbits 0085               ?_LCD_Write 0070  
             ?_LCD_putrs 0076           __end_of___lmul 0AC2               LCD_Write@c 0075  
     generar_fondo@i_223 002F       generar_fondo@i_225 0030       generar_fondo@i_227 0031  
     generar_fondo@i_229 0033       generar_fondo@p_226 002D       generar_fondo@p_228 002E  
        _LCD_custom_char 0A43      start_initialization 07E6              __end_of_bob 0846  
             LCD_putrs@a 0076               LCD_putrs@i 0077         ?_LCD_cg_ram_addr 0070  
               ??___lmul 0078               init_fetch0 0994              __pdataBANK0 0059  
               ?_LCD_Out 0070                ___latbits 0002            __pcstackBANK0 0020  
               LCD_Out@c 0072              ??_LCD_Write 0073       LCD_custom_char@pos 0020  
            ??_LCD_putrs 0077                _bob_reves 081E                 ?___awmod 0026  
  __end_of_LCD_ram_write 0994  __end_of_LCD_custom_char 0A7C                __pstrings 0800  
               _ADC_Init 0977                 _ADC_Read 0A19                 _LCD_Init 0CB5  
          _dibujar_fondo 0BBC       dibujar_fondo@i_233 007A                clear_ram0 0956  
          _dibujar_suelo 09F1                 _LCD_putc 0008                _pot_x$211 0036  
              _pot_x$212 0038                 _GO_nDONE 00F9            ??_mover_nubes 0079  
             pot_x@adc_x 003A               pot_y@adc_y 007B              __stringbase 0805  
      ___lmul@multiplier 0070            ?_checar_boton 0070           ?_dibujar_fondo 0070  
         ?_dibujar_suelo 0070         ?_LCD_custom_char 007B       __end_of__stringtab 0806  
    __end_of_mover_nubes 0CB5                 __ptext10 0C2A                 __ptext11 09F1  
               __ptext20 0AC2                 __ptext12 0A43                 __ptext21 0E12  
               __ptext13 0985                 __ptext22 0977                 __ptext14 09CB  
               __ptext15 095E                 __ptext16 036B                 __ptext17 09A7  
               __ptext18 0008                 __ptext19 0CB5                 _disparar 036B  
         ??_checar_boton 007B            _generar_fondo 0D61                 init_ram0 0998  
           mover_nubes@i 0022          ??_dibujar_fondo 0079          ??_dibujar_suelo 007E  
              stringcode 0800              _mover_nubes 0C2A           ?_generar_fondo 0070  
               stringdir 0800                 stringtab 0800  
