

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Jun 23 12:23:12 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,space=0,delta=2
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=2
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Generated 26/03/2025 GMT
    40                           ; 
    41                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0004                     fsr             equ	4
    74     0004                     fsr0            equ	4
    75     0000                     indf            equ	0
    76     0000                     indf0           equ	0
    77     0002                     pc              equ	2
    78     0002                     pcl             equ	2
    79     000A                     pclath          equ	10
    80     0003                     status          equ	3
    81     0000                     INDF            equ	0	;# 
    82     0001                     TMR0            equ	1	;# 
    83     0002                     PCL             equ	2	;# 
    84     0003                     STATUS          equ	3	;# 
    85     0004                     FSR             equ	4	;# 
    86     0005                     PORTA           equ	5	;# 
    87     0006                     PORTB           equ	6	;# 
    88     0007                     PORTC           equ	7	;# 
    89     0008                     PORTD           equ	8	;# 
    90     0009                     PORTE           equ	9	;# 
    91     000A                     PCLATH          equ	10	;# 
    92     000B                     INTCON          equ	11	;# 
    93     000C                     PIR1            equ	12	;# 
    94     000D                     PIR2            equ	13	;# 
    95     000E                     TMR1            equ	14	;# 
    96     000E                     TMR1L           equ	14	;# 
    97     000F                     TMR1H           equ	15	;# 
    98     0010                     T1CON           equ	16	;# 
    99     0011                     TMR2            equ	17	;# 
   100     0012                     T2CON           equ	18	;# 
   101     0013                     SSPBUF          equ	19	;# 
   102     0014                     SSPCON          equ	20	;# 
   103     0015                     CCPR1           equ	21	;# 
   104     0015                     CCPR1L          equ	21	;# 
   105     0016                     CCPR1H          equ	22	;# 
   106     0017                     CCP1CON         equ	23	;# 
   107     0018                     RCSTA           equ	24	;# 
   108     0019                     TXREG           equ	25	;# 
   109     001A                     RCREG           equ	26	;# 
   110     001B                     CCPR2           equ	27	;# 
   111     001B                     CCPR2L          equ	27	;# 
   112     001C                     CCPR2H          equ	28	;# 
   113     001D                     CCP2CON         equ	29	;# 
   114     001E                     ADRESH          equ	30	;# 
   115     001F                     ADCON0          equ	31	;# 
   116     0081                     OPTION_REG      equ	129	;# 
   117     0085                     TRISA           equ	133	;# 
   118     0086                     TRISB           equ	134	;# 
   119     0087                     TRISC           equ	135	;# 
   120     0088                     TRISD           equ	136	;# 
   121     0089                     TRISE           equ	137	;# 
   122     008C                     PIE1            equ	140	;# 
   123     008D                     PIE2            equ	141	;# 
   124     008E                     PCON            equ	142	;# 
   125     008F                     OSCCON          equ	143	;# 
   126     0090                     OSCTUNE         equ	144	;# 
   127     0091                     SSPCON2         equ	145	;# 
   128     0092                     PR2             equ	146	;# 
   129     0093                     SSPADD          equ	147	;# 
   130     0093                     SSPMSK          equ	147	;# 
   131     0093                     MSK             equ	147	;# 
   132     0094                     SSPSTAT         equ	148	;# 
   133     0095                     WPUB            equ	149	;# 
   134     0096                     IOCB            equ	150	;# 
   135     0097                     VRCON           equ	151	;# 
   136     0098                     TXSTA           equ	152	;# 
   137     0099                     SPBRG           equ	153	;# 
   138     009A                     SPBRGH          equ	154	;# 
   139     009B                     PWM1CON         equ	155	;# 
   140     009C                     ECCPAS          equ	156	;# 
   141     009D                     PSTRCON         equ	157	;# 
   142     009E                     ADRESL          equ	158	;# 
   143     009F                     ADCON1          equ	159	;# 
   144     0105                     WDTCON          equ	261	;# 
   145     0107                     CM1CON0         equ	263	;# 
   146     0108                     CM2CON0         equ	264	;# 
   147     0109                     CM2CON1         equ	265	;# 
   148     010C                     EEDATA          equ	268	;# 
   149     010C                     EEDAT           equ	268	;# 
   150     010D                     EEADR           equ	269	;# 
   151     010E                     EEDATH          equ	270	;# 
   152     010F                     EEADRH          equ	271	;# 
   153     0185                     SRCON           equ	389	;# 
   154     0187                     BAUDCTL         equ	391	;# 
   155     0188                     ANSEL           equ	392	;# 
   156     0189                     ANSELH          equ	393	;# 
   157     018C                     EECON1          equ	396	;# 
   158     018D                     EECON2          equ	397	;# 
   159     0000                     INDF            equ	0	;# 
   160     0001                     TMR0            equ	1	;# 
   161     0002                     PCL             equ	2	;# 
   162     0003                     STATUS          equ	3	;# 
   163     0004                     FSR             equ	4	;# 
   164     0005                     PORTA           equ	5	;# 
   165     0006                     PORTB           equ	6	;# 
   166     0007                     PORTC           equ	7	;# 
   167     0008                     PORTD           equ	8	;# 
   168     0009                     PORTE           equ	9	;# 
   169     000A                     PCLATH          equ	10	;# 
   170     000B                     INTCON          equ	11	;# 
   171     000C                     PIR1            equ	12	;# 
   172     000D                     PIR2            equ	13	;# 
   173     000E                     TMR1            equ	14	;# 
   174     000E                     TMR1L           equ	14	;# 
   175     000F                     TMR1H           equ	15	;# 
   176     0010                     T1CON           equ	16	;# 
   177     0011                     TMR2            equ	17	;# 
   178     0012                     T2CON           equ	18	;# 
   179     0013                     SSPBUF          equ	19	;# 
   180     0014                     SSPCON          equ	20	;# 
   181     0015                     CCPR1           equ	21	;# 
   182     0015                     CCPR1L          equ	21	;# 
   183     0016                     CCPR1H          equ	22	;# 
   184     0017                     CCP1CON         equ	23	;# 
   185     0018                     RCSTA           equ	24	;# 
   186     0019                     TXREG           equ	25	;# 
   187     001A                     RCREG           equ	26	;# 
   188     001B                     CCPR2           equ	27	;# 
   189     001B                     CCPR2L          equ	27	;# 
   190     001C                     CCPR2H          equ	28	;# 
   191     001D                     CCP2CON         equ	29	;# 
   192     001E                     ADRESH          equ	30	;# 
   193     001F                     ADCON0          equ	31	;# 
   194     0081                     OPTION_REG      equ	129	;# 
   195     0085                     TRISA           equ	133	;# 
   196     0086                     TRISB           equ	134	;# 
   197     0087                     TRISC           equ	135	;# 
   198     0088                     TRISD           equ	136	;# 
   199     0089                     TRISE           equ	137	;# 
   200     008C                     PIE1            equ	140	;# 
   201     008D                     PIE2            equ	141	;# 
   202     008E                     PCON            equ	142	;# 
   203     008F                     OSCCON          equ	143	;# 
   204     0090                     OSCTUNE         equ	144	;# 
   205     0091                     SSPCON2         equ	145	;# 
   206     0092                     PR2             equ	146	;# 
   207     0093                     SSPADD          equ	147	;# 
   208     0093                     SSPMSK          equ	147	;# 
   209     0093                     MSK             equ	147	;# 
   210     0094                     SSPSTAT         equ	148	;# 
   211     0095                     WPUB            equ	149	;# 
   212     0096                     IOCB            equ	150	;# 
   213     0097                     VRCON           equ	151	;# 
   214     0098                     TXSTA           equ	152	;# 
   215     0099                     SPBRG           equ	153	;# 
   216     009A                     SPBRGH          equ	154	;# 
   217     009B                     PWM1CON         equ	155	;# 
   218     009C                     ECCPAS          equ	156	;# 
   219     009D                     PSTRCON         equ	157	;# 
   220     009E                     ADRESL          equ	158	;# 
   221     009F                     ADCON1          equ	159	;# 
   222     0105                     WDTCON          equ	261	;# 
   223     0107                     CM1CON0         equ	263	;# 
   224     0108                     CM2CON0         equ	264	;# 
   225     0109                     CM2CON1         equ	265	;# 
   226     010C                     EEDATA          equ	268	;# 
   227     010C                     EEDAT           equ	268	;# 
   228     010D                     EEADR           equ	269	;# 
   229     010E                     EEDATH          equ	270	;# 
   230     010F                     EEADRH          equ	271	;# 
   231     0185                     SRCON           equ	389	;# 
   232     0187                     BAUDCTL         equ	391	;# 
   233     0188                     ANSEL           equ	392	;# 
   234     0189                     ANSELH          equ	393	;# 
   235     018C                     EECON1          equ	396	;# 
   236     018D                     EECON2          equ	397	;# 
   237     0000                     INDF            equ	0	;# 
   238     0001                     TMR0            equ	1	;# 
   239     0002                     PCL             equ	2	;# 
   240     0003                     STATUS          equ	3	;# 
   241     0004                     FSR             equ	4	;# 
   242     0005                     PORTA           equ	5	;# 
   243     0006                     PORTB           equ	6	;# 
   244     0007                     PORTC           equ	7	;# 
   245     0008                     PORTD           equ	8	;# 
   246     0009                     PORTE           equ	9	;# 
   247     000A                     PCLATH          equ	10	;# 
   248     000B                     INTCON          equ	11	;# 
   249     000C                     PIR1            equ	12	;# 
   250     000D                     PIR2            equ	13	;# 
   251     000E                     TMR1            equ	14	;# 
   252     000E                     TMR1L           equ	14	;# 
   253     000F                     TMR1H           equ	15	;# 
   254     0010                     T1CON           equ	16	;# 
   255     0011                     TMR2            equ	17	;# 
   256     0012                     T2CON           equ	18	;# 
   257     0013                     SSPBUF          equ	19	;# 
   258     0014                     SSPCON          equ	20	;# 
   259     0015                     CCPR1           equ	21	;# 
   260     0015                     CCPR1L          equ	21	;# 
   261     0016                     CCPR1H          equ	22	;# 
   262     0017                     CCP1CON         equ	23	;# 
   263     0018                     RCSTA           equ	24	;# 
   264     0019                     TXREG           equ	25	;# 
   265     001A                     RCREG           equ	26	;# 
   266     001B                     CCPR2           equ	27	;# 
   267     001B                     CCPR2L          equ	27	;# 
   268     001C                     CCPR2H          equ	28	;# 
   269     001D                     CCP2CON         equ	29	;# 
   270     001E                     ADRESH          equ	30	;# 
   271     001F                     ADCON0          equ	31	;# 
   272     0081                     OPTION_REG      equ	129	;# 
   273     0085                     TRISA           equ	133	;# 
   274     0086                     TRISB           equ	134	;# 
   275     0087                     TRISC           equ	135	;# 
   276     0088                     TRISD           equ	136	;# 
   277     0089                     TRISE           equ	137	;# 
   278     008C                     PIE1            equ	140	;# 
   279     008D                     PIE2            equ	141	;# 
   280     008E                     PCON            equ	142	;# 
   281     008F                     OSCCON          equ	143	;# 
   282     0090                     OSCTUNE         equ	144	;# 
   283     0091                     SSPCON2         equ	145	;# 
   284     0092                     PR2             equ	146	;# 
   285     0093                     SSPADD          equ	147	;# 
   286     0093                     SSPMSK          equ	147	;# 
   287     0093                     MSK             equ	147	;# 
   288     0094                     SSPSTAT         equ	148	;# 
   289     0095                     WPUB            equ	149	;# 
   290     0096                     IOCB            equ	150	;# 
   291     0097                     VRCON           equ	151	;# 
   292     0098                     TXSTA           equ	152	;# 
   293     0099                     SPBRG           equ	153	;# 
   294     009A                     SPBRGH          equ	154	;# 
   295     009B                     PWM1CON         equ	155	;# 
   296     009C                     ECCPAS          equ	156	;# 
   297     009D                     PSTRCON         equ	157	;# 
   298     009E                     ADRESL          equ	158	;# 
   299     009F                     ADCON1          equ	159	;# 
   300     0105                     WDTCON          equ	261	;# 
   301     0107                     CM1CON0         equ	263	;# 
   302     0108                     CM2CON0         equ	264	;# 
   303     0109                     CM2CON1         equ	265	;# 
   304     010C                     EEDATA          equ	268	;# 
   305     010C                     EEDAT           equ	268	;# 
   306     010D                     EEADR           equ	269	;# 
   307     010E                     EEDATH          equ	270	;# 
   308     010F                     EEADRH          equ	271	;# 
   309     0185                     SRCON           equ	389	;# 
   310     0187                     BAUDCTL         equ	391	;# 
   311     0188                     ANSEL           equ	392	;# 
   312     0189                     ANSELH          equ	393	;# 
   313     018C                     EECON1          equ	396	;# 
   314     018D                     EECON2          equ	397	;# 
   315                           
   316                           	psect	idataBANK0
   317     0962                     __pidataBANK0:
   318                           
   319                           ;initializer for _lcd
   320     0962  3407               	retlw	7
   321     0963  3400               	retlw	0
   322     0964  341A               	retlw	26
   323     0965  342C               	retlw	44
   324     0966  343E               	retlw	62
   325                           
   326                           ;initializer for _pos_y
   327     0967  3402               	retlw	2
   328                           
   329                           ;initializer for _pos_x
   330     0968  3408               	retlw	8
   331                           
   332                           	psect	strings
   333     0800                     __pstrings:
   334     0800                     stringtab:
   335     0800                     __stringtab:
   336     0800                     stringcode:	
   337                           ;	String table - string pointers are 1 byte each
   338                           
   339     0800                     stringdir:
   340     0800  3008               	movlw	high stringdir
   341     0801  008A               	movwf	10
   342     0802  0804               	movf	4,w
   343     0803  0A84               	incf	4,f
   344     0804  0782               	addwf	2,f
   345     0805                     __stringbase:
   346     0805  3400               	retlw	0
   347     0806                     __end_of__stringtab:
   348     0806                     _flor:
   349     0806  340A               	retlw	10
   350     0807  341F               	retlw	31
   351     0808  341F               	retlw	31
   352     0809  340A               	retlw	10
   353     080A  3404               	retlw	4
   354     080B  3404               	retlw	4
   355     080C  3404               	retlw	4
   356     080D  3400               	retlw	0
   357     080E                     __end_of_flor:
   358     080E                     _nube:
   359     080E  3400               	retlw	0
   360     080F  3406               	retlw	6
   361     0810  340F               	retlw	15
   362     0811  341F               	retlw	31
   363     0812  341F               	retlw	31
   364     0813  340E               	retlw	14
   365     0814  3400               	retlw	0
   366     0815  3400               	retlw	0
   367     0816                     __end_of_nube:
   368     0816                     _arbol:
   369     0816  3404               	retlw	4
   370     0817  340E               	retlw	14
   371     0818  340E               	retlw	14
   372     0819  341F               	retlw	31
   373     081A  3404               	retlw	4
   374     081B  3404               	retlw	4
   375     081C  3404               	retlw	4
   376     081D  3400               	retlw	0
   377     081E                     __end_of_arbol:
   378     081E                     _bob_reves:
   379     081E  340A               	retlw	10
   380     081F  340E               	retlw	14
   381     0820  3415               	retlw	21
   382     0821  341F               	retlw	31
   383     0822  340E               	retlw	14
   384     0823  341F               	retlw	31
   385     0824  340E               	retlw	14
   386     0825  3400               	retlw	0
   387     0826                     __end_of_bob_reves:
   388     0826                     _casa2:
   389     0826  3410               	retlw	16
   390     0827  3418               	retlw	24
   391     0828  341C               	retlw	28
   392     0829  341F               	retlw	31
   393     082A  341C               	retlw	28
   394     082B  341C               	retlw	28
   395     082C  340C               	retlw	12
   396     082D  3400               	retlw	0
   397     082E                     __end_of_casa2:
   398     082E                     _casa1:
   399     082E  3401               	retlw	1
   400     082F  3403               	retlw	3
   401     0830  3407               	retlw	7
   402     0831  341F               	retlw	31
   403     0832  3407               	retlw	7
   404     0833  3407               	retlw	7
   405     0834  3406               	retlw	6
   406     0835  3400               	retlw	0
   407     0836                     __end_of_casa1:
   408     0836                     _suelo:
   409     0836  341F               	retlw	31
   410     0837  341F               	retlw	31
   411     0838  341F               	retlw	31
   412     0839  341F               	retlw	31
   413     083A  341F               	retlw	31
   414     083B  341F               	retlw	31
   415     083C  341F               	retlw	31
   416     083D  341F               	retlw	31
   417     083E                     __end_of_suelo:
   418     083E                     _bob:
   419     083E  340E               	retlw	14
   420     083F  341F               	retlw	31
   421     0840  340E               	retlw	14
   422     0841  341F               	retlw	31
   423     0842  3415               	retlw	21
   424     0843  340E               	retlw	14
   425     0844  340A               	retlw	10
   426     0845  3400               	retlw	0
   427     0846                     __end_of_bob:
   428     0006                     _PORTB          set	6
   429     0005                     _PORTA          set	5
   430     0005                     _PORTAbits      set	5
   431     001E                     _ADRESH         set	30
   432     001F                     _ADCON0         set	31
   433     0007                     _PORTC          set	7
   434     00F9                     _GO_nDONE       set	249
   435     0087                     _TRISC          set	135
   436     0086                     _TRISB          set	134
   437     0085                     _TRISA          set	133
   438     0085                     _TRISAbits      set	133
   439     009E                     _ADRESL         set	158
   440     009F                     _ADCON1         set	159
   441     0189                     _ANSELH         set	393
   442     0188                     _ANSEL          set	392
   443     0846                     STR_1:
   444     0846  3420               	retlw	32	;' '
   445     0847  3400               	retlw	0
   446     0846                     STR_2           equ	STR_1
   447     0846                     STR_3           equ	STR_1
   448     0846                     STR_4           equ	STR_1
   449     0846                     STR_5           equ	STR_1
   450     0846                     STR_6           equ	STR_1
   451                           
   452                           	psect	cinit
   453     07E6                     start_initialization:	
   454                           ; #config settings
   455                           
   456     07E6                     __initialization:
   457                           
   458                           ; Initialize objects allocated to BANK0
   459     07E6  1383               	bcf	3,7	;select IRP bank0
   460     07E7  3060               	movlw	low (__pdataBANK0+7)
   461     07E8  00FD               	movwf	btemp+-1
   462     07E9  3009               	movlw	high __pidataBANK0
   463     07EA  00FE               	movwf	btemp
   464     07EB  3062               	movlw	low __pidataBANK0
   465     07EC  00FF               	movwf	btemp+1
   466     07ED  3059               	movlw	low __pdataBANK0
   467     07EE  0084               	movwf	4
   468     07EF  120A  158A  21A4  120A  118A  	fcall	init_ram0
   469                           
   470                           ; Clear objects allocated to BANK0
   471     07F4  303E               	movlw	low __pbssBANK0
   472     07F5  0084               	movwf	4
   473     07F6  3059               	movlw	low (__pbssBANK0+27)
   474     07F7  120A  158A  2171  120A  118A  	fcall	clear_ram0
   475     07FC                     end_of_initialization:	
   476                           ;End of C runtime variable initialization code
   477                           
   478     07FC                     __end_of__initialization:
   479     07FC  0183               	clrf	3
   480     07FD  120A  158A  2ECC   	ljmp	_main	;jump to C main() function
   481                           
   482                           	psect	bssBANK0
   483     003E                     __pbssBANK0:
   484     003E                     _fondo:
   485     003E                     	ds	20
   486     0052                     _nubes:
   487     0052                     	ds	3
   488     0055                     _seed:
   489     0055                     	ds	4
   490                           
   491                           	psect	dataBANK0
   492     0059                     __pdataBANK0:
   493     0059                     _lcd:
   494     0059                     	ds	5
   495     005E                     _pos_y:
   496     005E                     	ds	1
   497     005F                     _pos_x:
   498     005F                     	ds	1
   499                           
   500                           	psect	inittext
   501     09A0                     init_fetch0:	
   502                           ;	Called with low address in FSR and high address in W
   503                           
   504     09A0  087E               	movf	btemp,w
   505     09A1  008A               	movwf	10
   506     09A2  087F               	movf	btemp+1,w
   507     09A3  0082               	movwf	2
   508     09A4                     init_ram0:	
   509                           ;Called with:
   510                           ;	high address of idata address in btemp 
   511                           ;	low address of idata address in btemp+1 
   512                           ;	low address of data in FSR
   513                           ;	high address + 1 of data in btemp-1
   514                           
   515     09A4  120A  158A  21A0  120A  158A  	fcall	init_fetch0
   516     09A9  0080               	movwf	0
   517     09AA  0A84               	incf	4,f
   518     09AB  0804               	movf	4,w
   519     09AC  067D               	xorwf	btemp+-1,w
   520     09AD  1903               	btfsc	3,2
   521     09AE  3400               	retlw	0
   522     09AF  0AFF               	incf	btemp+1,f
   523     09B0  1903               	btfsc	3,2
   524     09B1  0AFE               	incf	btemp,f
   525     09B2  29A4               	goto	init_ram0
   526                           
   527                           	psect	clrtext
   528     0971                     clear_ram0:	
   529                           ;	Called with FSR containing the base address, and
   530                           ;	W with the last address+1
   531                           
   532     0971  0064               	clrwdt	;clear the watchdog before getting into this loop
   533     0972                     clrloop0:
   534     0972  0180               	clrf	0	;clear RAM location pointed to by FSR
   535     0973  0A84               	incf	4,f	;increment pointer
   536     0974  0604               	xorwf	4,w	;XOR with final address
   537     0975  1903               	btfsc	3,2	;have we reached the end yet?
   538     0976  3400               	retlw	0	;all done for this memory range, return
   539     0977  0604               	xorwf	4,w	;XOR again to restore value
   540     0978  2972               	goto	clrloop0	;do the next byte
   541                           
   542                           	psect	cstackCOMMON
   543     0070                     __pcstackCOMMON:
   544     0070                     ?_LCD_cg_ram_addr:
   545     0070                     ?_LCD_ram_write:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?_LCD_Write:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_LCD_putc:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_srand:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ?_generar_fondo:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ?_dibujar_fondo:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ?_pot_x:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0070                     ?_pot_y:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ?_checar_boton:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ?_mover_nubes:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0070                     ?_disparar:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     ?_dibujar_suelo:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     ?_ADC_Init:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0070                     ?_main:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0070                     ?_LCD_Out:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0070                     ?_ADC_Read:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0070                     ?___lmul:	
   594                           ; 2 bytes @ 0x0
   595                           
   596     0070                     srand@s:	
   597                           ; 4 bytes @ 0x0
   598                           
   599     0070                     ___lmul@multiplier:	
   600                           ; 2 bytes @ 0x0
   601                           
   602     0070                     ??_ADC_Init:	
   603                           ; 4 bytes @ 0x0
   604                           
   605     0070                     ??_LCD_Out:	
   606                           ; 1 bytes @ 0x0
   607                           
   608                           
   609                           ; 1 bytes @ 0x0
   610     0070                     	ds	2
   611     0072                     LCD_Out@c:
   612     0072                     ??_srand:	
   613                           ; 1 bytes @ 0x2
   614                           
   615     0072                     ??_ADC_Read:	
   616                           ; 1 bytes @ 0x2
   617                           
   618                           
   619                           ; 1 bytes @ 0x2
   620     0072                     	ds	1
   621     0073                     ??_LCD_Write:
   622     0073                     ??_LCD_putc:	
   623                           ; 1 bytes @ 0x3
   624                           
   625                           
   626                           ; 1 bytes @ 0x3
   627     0073                     	ds	1
   628     0074                     ADC_Read@channel:
   629     0074                     ___lmul@multiplicand:	
   630                           ; 1 bytes @ 0x4
   631                           
   632                           
   633                           ; 4 bytes @ 0x4
   634     0074                     	ds	1
   635     0075                     LCD_Write@c:
   636     0075                     LCD_putc@c:	
   637                           ; 1 bytes @ 0x5
   638                           
   639                           
   640                           ; 1 bytes @ 0x5
   641     0075                     	ds	1
   642     0076                     ?_LCD_Init:
   643     0076                     ?_LCD_putrs:	
   644                           ; 1 bytes @ 0x6
   645                           
   646     0076                     LCD_putrs@a:	
   647                           ; 1 bytes @ 0x6
   648                           
   649     0076                     LCD_ram_write@data:	
   650                           ; 1 bytes @ 0x6
   651                           
   652     0076                     LCD_Init@display:	
   653                           ; 1 bytes @ 0x6
   654                           
   655     0076                     ??_LCD_cg_ram_addr:	
   656                           ; 5 bytes @ 0x6
   657                           
   658     0076                     ??_LCD_ram_write:	
   659                           ; 1 bytes @ 0x6
   660                           
   661                           
   662                           ; 1 bytes @ 0x6
   663     0076                     	ds	1
   664     0077                     LCD_putrs@i:
   665     0077                     ??_LCD_putrs:	
   666                           ; 2 bytes @ 0x7
   667                           
   668                           
   669                           ; 1 bytes @ 0x7
   670     0077                     	ds	1
   671     0078                     ??___lmul:
   672                           
   673                           ; 1 bytes @ 0x8
   674     0078                     	ds	1
   675     0079                     disparar@moved:
   676     0079                     ___lmul@product:	
   677                           ; 1 bytes @ 0x9
   678                           
   679     0079                     ??_dibujar_fondo:	
   680                           ; 4 bytes @ 0x9
   681                           
   682     0079                     ??_pot_y:	
   683                           ; 1 bytes @ 0x9
   684                           
   685     0079                     ??_mover_nubes:	
   686                           ; 1 bytes @ 0x9
   687                           
   688                           
   689                           ; 1 bytes @ 0x9
   690     0079                     	ds	1
   691     007A                     dibujar_fondo@i_233:
   692     007A                     disparar@offset:	
   693                           ; 1 bytes @ 0xA
   694                           
   695     007A                     LCD_cg_ram_addr@addr:	
   696                           ; 1 bytes @ 0xA
   697                           
   698                           
   699                           ; 1 bytes @ 0xA
   700     007A                     	ds	1
   701     007B                     ?_LCD_custom_char:
   702     007B                     LCD_custom_char@x:	
   703                           ; 1 bytes @ 0xB
   704                           
   705     007B                     dibujar_fondo@i:	
   706                           ; 1 bytes @ 0xB
   707                           
   708     007B                     pot_y@adc_y:	
   709                           ; 1 bytes @ 0xB
   710                           
   711     007B                     ??_LCD_Init:	
   712                           ; 2 bytes @ 0xB
   713                           
   714     007B                     ??_checar_boton:	
   715                           ; 1 bytes @ 0xB
   716                           
   717                           
   718                           ; 1 bytes @ 0xB
   719     007B                     	ds	1
   720     007C                     ??_LCD_custom_char:
   721                           
   722                           ; 1 bytes @ 0xC
   723     007C                     	ds	1
   724     007D                     dibujar_suelo@i:
   725     007D                     LCD_Init@cmd:	
   726                           ; 1 bytes @ 0xD
   727                           
   728     007D                     ??_generar_fondo:	
   729                           ; 1 bytes @ 0xD
   730                           
   731     007D                     ??_dibujar_suelo:	
   732                           ; 1 bytes @ 0xD
   733                           
   734     007D                     ??___awmod:	
   735                           ; 1 bytes @ 0xD
   736                           
   737                           
   738                           ; 1 bytes @ 0xD
   739     007D                     	ds	1
   740                           
   741                           	psect	cstackBANK0
   742     0020                     __pcstackBANK0:
   743     0020                     ?_rand:
   744     0020                     LCD_custom_char@pos:	
   745                           ; 2 bytes @ 0x0
   746                           
   747     0020                     _mover_nubes$220:	
   748                           ; 1 bytes @ 0x0
   749                           
   750     0020                     ??_disparar:	
   751                           ; 2 bytes @ 0x0
   752                           
   753                           
   754                           ; 1 bytes @ 0x0
   755     0020                     	ds	1
   756     0021                     LCD_custom_char@i:
   757                           
   758                           ; 1 bytes @ 0x1
   759     0021                     	ds	1
   760     0022                     mover_nubes@i:
   761     0022                     ??_rand:	
   762                           ; 1 bytes @ 0x2
   763                           
   764                           
   765                           ; 1 bytes @ 0x2
   766     0022                     	ds	4
   767     0026                     ?___awmod:
   768     0026                     ___awmod@divisor:	
   769                           ; 2 bytes @ 0x6
   770                           
   771                           
   772                           ; 2 bytes @ 0x6
   773     0026                     	ds	2
   774     0028                     ___awmod@dividend:
   775                           
   776                           ; 2 bytes @ 0x8
   777     0028                     	ds	2
   778     002A                     ___awmod@counter:
   779                           
   780                           ; 1 bytes @ 0xA
   781     002A                     	ds	1
   782     002B                     ___awmod@sign:
   783                           
   784                           ; 1 bytes @ 0xB
   785     002B                     	ds	1
   786     002C                     generar_fondo@p:
   787                           
   788                           ; 1 bytes @ 0xC
   789     002C                     	ds	1
   790     002D                     generar_fondo@p_226:
   791                           
   792                           ; 1 bytes @ 0xD
   793     002D                     	ds	1
   794     002E                     generar_fondo@p_228:
   795                           
   796                           ; 1 bytes @ 0xE
   797     002E                     	ds	1
   798     002F                     generar_fondo@i_223:
   799                           
   800                           ; 1 bytes @ 0xF
   801     002F                     	ds	1
   802     0030                     generar_fondo@i_225:
   803                           
   804                           ; 1 bytes @ 0x10
   805     0030                     	ds	1
   806     0031                     generar_fondo@i_227:
   807                           
   808                           ; 1 bytes @ 0x11
   809     0031                     	ds	1
   810     0032                     generar_fondo@i:
   811                           
   812                           ; 1 bytes @ 0x12
   813     0032                     	ds	1
   814     0033                     generar_fondo@i_229:
   815                           
   816                           ; 1 bytes @ 0x13
   817     0033                     	ds	1
   818     0034                     ??_pot_x:
   819                           
   820                           ; 1 bytes @ 0x14
   821     0034                     	ds	2
   822     0036                     _pot_x$211:
   823                           
   824                           ; 2 bytes @ 0x16
   825     0036                     	ds	2
   826     0038                     _pot_x$212:
   827                           
   828                           ; 2 bytes @ 0x18
   829     0038                     	ds	2
   830     003A                     pot_x@adc_x:
   831                           
   832                           ; 2 bytes @ 0x1A
   833     003A                     	ds	2
   834     003C                     pot_x@prev_x:
   835                           
   836                           ; 1 bytes @ 0x1C
   837     003C                     	ds	1
   838     003D                     ??_main:
   839                           
   840                           ; 1 bytes @ 0x1D
   841     003D                     	ds	1
   842                           
   843                           	psect	maintext
   844     0ECC                     __pmaintext:	
   845 ;;
   846 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   847 ;;
   848 ;; *************** function _main *****************
   849 ;; Defined at:
   850 ;;		line 161 in file "main.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : B00/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0
   866 ;;      Temps:          0       1       0       0       0
   867 ;;      Totals:         0       1       0       0       0
   868 ;;Total ram usage:        1 bytes
   869 ;; Hardware stack levels required when called: 5
   870 ;; This function calls:
   871 ;;		_ADC_Init
   872 ;;		_LCD_Init
   873 ;;		_LCD_Write
   874 ;;		_LCD_custom_char
   875 ;;		_LCD_putc
   876 ;;		_checar_boton
   877 ;;		_dibujar_fondo
   878 ;;		_dibujar_suelo
   879 ;;		_generar_fondo
   880 ;;		_mover_nubes
   881 ;;		_pot_x
   882 ;;		_pot_y
   883 ;;		_srand
   884 ;; This function is called by:
   885 ;;		Startup code after reset
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889     0ECC                     _main:	
   890                           ;psect for function _main
   891                           
   892     0ECC                     l2389:	
   893                           ;incstack = 0
   894                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   895                           
   896                           
   897                           ;main.c: 162:     while(1){
   898     0ECC  1683               	bsf	3,5	;RP0=1, select bank1
   899     0ECD  1303               	bcf	3,6	;RP1=0, select bank1
   900     0ECE  1505               	bsf	5,2	;volatile
   901                           
   902                           ;main.c: 163:         pot_x();
   903     0ECF  1185               	bcf	5,3	;volatile
   904                           
   905                           ;main.c: 164:         pot_y();
   906     0ED0  1283               	bcf	3,5	;RP0=0, select bank0
   907     0ED1  1303               	bcf	3,6	;RP1=0, select bank0
   908     0ED2  1185               	bcf	5,3	;volatile
   909     0ED3                     l2391:
   910                           
   911                           ;main.c: 166:         mover_nubes();
   912     0ED3  120A  158A  2192  120A  158A  	fcall	_ADC_Init
   913     0ED8                     l2393:
   914                           
   915                           ;main.c: 167:     }
   916     0ED8  3076               	movlw	LCD_Init@display& (0+255)
   917     0ED9  0084               	movwf	4
   918     0EDA  1283               	bcf	3,5	;RP0=0, select bank0
   919     0EDB  1303               	bcf	3,6	;RP1=0, select bank0
   920     0EDC  0859               	movf	_lcd,w
   921     0EDD  0080               	movwf	0
   922     0EDE  0A84               	incf	4,f
   923     0EDF  085A               	movf	_lcd+1,w
   924     0EE0  0080               	movwf	0
   925     0EE1  0A84               	incf	4,f
   926     0EE2  085B               	movf	_lcd+2,w
   927     0EE3  0080               	movwf	0
   928     0EE4  0A84               	incf	4,f
   929     0EE5  085C               	movf	_lcd+3,w
   930     0EE6  0080               	movwf	0
   931     0EE7  0A84               	incf	4,f
   932     0EE8  085D               	movf	_lcd+4,w
   933     0EE9  0080               	movwf	0
   934     0EEA  120A  158A  24B5  120A  158A  	fcall	_LCD_Init
   935     0EEF                     l2395:
   936     0EEF  3000               	movlw	0
   937     0EF0  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
   938     0EF5                     l2397:
   939     0EF5  3001               	movlw	1
   940     0EF6  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
   941     0EFB                     l2399:
   942                           
   943                           ;main.c: 171: 
   944     0EFB  3039               	movlw	(low ((_bob-__stringbase)| (0+32768)))& (0+255)
   945     0EFC  00FB               	movwf	LCD_custom_char@x
   946     0EFD  3000               	movlw	0
   947     0EFE  120A  158A  224C  120A  158A  	fcall	_LCD_custom_char
   948     0F03                     l2401:
   949                           
   950                           ;main.c: 172: 
   951     0F03  3031               	movlw	(low ((_suelo-__stringbase)| (0+32768)))& (0+255)
   952     0F04  00FB               	movwf	LCD_custom_char@x
   953     0F05  3001               	movlw	1
   954     0F06  120A  158A  224C  120A  158A  	fcall	_LCD_custom_char
   955     0F0B                     l2403:
   956                           
   957                           ;main.c: 173: void pot_x(void){
   958     0F0B  3029               	movlw	(low ((_casa1-__stringbase)| (0+32768)))& (0+255)
   959     0F0C  00FB               	movwf	LCD_custom_char@x
   960     0F0D  3002               	movlw	2
   961     0F0E  120A  158A  224C  120A  158A  	fcall	_LCD_custom_char
   962     0F13                     l2405:
   963                           
   964                           ;main.c: 174:     unsigned int adc_x = ADC_Read(0);
   965     0F13  3021               	movlw	(low ((_casa2-__stringbase)| (0+32768)))& (0+255)
   966     0F14  00FB               	movwf	LCD_custom_char@x
   967     0F15  3003               	movlw	3
   968     0F16  120A  158A  224C  120A  158A  	fcall	_LCD_custom_char
   969     0F1B                     l2407:
   970                           
   971                           ;main.c: 175:     uint8_t prev_x = pos_x;
   972     0F1B  3019               	movlw	(low ((_bob_reves-__stringbase)| (0+32768)))& (0+255)
   973     0F1C  00FB               	movwf	LCD_custom_char@x
   974     0F1D  3004               	movlw	4
   975     0F1E  120A  158A  224C  120A  158A  	fcall	_LCD_custom_char
   976     0F23                     l2409:
   977                           
   978                           ;main.c: 176: 
   979     0F23  3011               	movlw	(low ((_arbol-__stringbase)| (0+32768)))& (0+255)
   980     0F24  00FB               	movwf	LCD_custom_char@x
   981     0F25  3005               	movlw	5
   982     0F26  120A  158A  224C  120A  158A  	fcall	_LCD_custom_char
   983     0F2B                     l2411:
   984                           
   985                           ;main.c: 177:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
   986     0F2B  3009               	movlw	(low ((_nube-__stringbase)| (0+32768)))& (0+255)
   987     0F2C  00FB               	movwf	LCD_custom_char@x
   988     0F2D  3006               	movlw	6
   989     0F2E  120A  158A  224C  120A  158A  	fcall	_LCD_custom_char
   990     0F33                     l2413:
   991                           
   992                           ;main.c: 178:     LCD_putrs(" ");
   993     0F33  3001               	movlw	(low ((_flor-__stringbase)| (0+32768)))& (0+255)
   994     0F34  00FB               	movwf	LCD_custom_char@x
   995     0F35  3007               	movlw	7
   996     0F36  120A  158A  224C  120A  158A  	fcall	_LCD_custom_char
   997     0F3B                     l2415:
   998                           
   999                           ;main.c: 180:     if(adc_x > 600){
  1000     0F3B  307B               	movlw	123
  1001     0F3C  00F0               	movwf	srand@s
  1002     0F3D  3000               	movlw	0
  1003     0F3E  00F1               	movwf	srand@s+1
  1004     0F3F  120A  158A  2185  120A  158A  	fcall	_srand
  1005     0F44                     l2417:
  1006     0F44  3000               	movlw	0
  1007     0F45  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1008     0F4A                     l2419:
  1009     0F4A  3001               	movlw	1
  1010     0F4B  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1011     0F50                     l2421:
  1012                           
  1013                           ;main.c: 183:         pos_x = (pos_x > 0) ? pos_x - 1 : 19;
  1014     0F50  120A  158A  21D7  120A  158A  	fcall	_dibujar_suelo
  1015     0F55                     l2423:
  1016                           
  1017                           ;main.c: 184:     }
  1018     0F55  120A  158A  2561  120A  158A  	fcall	_generar_fondo
  1019     0F5A                     l2425:
  1020                           
  1021                           ;main.c: 185: 
  1022     0F5A  120A  158A  23BC  120A  158A  	fcall	_dibujar_fondo
  1023     0F5F                     l2427:
  1024     0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  1025     0F60  1303               	bcf	3,6	;RP1=0, select bank0
  1026     0F61  085E               	movf	_pos_y,w
  1027     0F62  1D03               	btfss	3,2
  1028     0F63  2F65               	goto	u3341
  1029     0F64  2F66               	goto	u3340
  1030     0F65                     u3341:
  1031     0F65  2F81               	goto	l2431
  1032     0F66                     u3340:
  1033     0F66                     l2429:
  1034     0F66  085F               	movf	_pos_x,w
  1035     0F67  3E80               	addlw	128
  1036     0F68  00BD               	movwf	??_main
  1037     0F69  3004               	movlw	4
  1038     0F6A                     u3355:
  1039     0F6A  1003               	clrc
  1040     0F6B  0CBD               	rrf	??_main,f
  1041     0F6C  3EFF               	addlw	-1
  1042     0F6D  1D03               	skipz
  1043     0F6E  2F6A               	goto	u3355
  1044     0F6F  083D               	movf	??_main,w
  1045     0F70  390F               	andlw	15
  1046     0F71  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1047     0F76  1283               	bcf	3,5	;RP0=0, select bank0
  1048     0F77  1303               	bcf	3,6	;RP1=0, select bank0
  1049     0F78  085F               	movf	_pos_x,w
  1050     0F79  3E80               	addlw	128
  1051     0F7A  390F               	andlw	15
  1052     0F7B  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1053     0F80  2FE2               	goto	l139
  1054     0F81                     l2431:
  1055     0F81  035E               	decf	_pos_y,w
  1056     0F82  1D03               	btfss	3,2
  1057     0F83  2F85               	goto	u3361
  1058     0F84  2F86               	goto	u3360
  1059     0F85                     u3361:
  1060     0F85  2FA1               	goto	l2435
  1061     0F86                     u3360:
  1062     0F86                     l2433:
  1063     0F86  085F               	movf	_pos_x,w
  1064     0F87  3EC0               	addlw	192
  1065     0F88  00BD               	movwf	??_main
  1066     0F89  3004               	movlw	4
  1067     0F8A                     u3375:
  1068     0F8A  1003               	clrc
  1069     0F8B  0CBD               	rrf	??_main,f
  1070     0F8C  3EFF               	addlw	-1
  1071     0F8D  1D03               	skipz
  1072     0F8E  2F8A               	goto	u3375
  1073     0F8F  083D               	movf	??_main,w
  1074     0F90  390F               	andlw	15
  1075     0F91  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1076     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  1077     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  1078     0F98  085F               	movf	_pos_x,w
  1079     0F99  3EC0               	addlw	192
  1080     0F9A  390F               	andlw	15
  1081     0F9B  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1082     0FA0  2FE2               	goto	l139
  1083     0FA1                     l2435:
  1084     0FA1  3002               	movlw	2
  1085     0FA2  065E               	xorwf	_pos_y,w
  1086     0FA3  1D03               	btfss	3,2
  1087     0FA4  2FA6               	goto	u3381
  1088     0FA5  2FA7               	goto	u3380
  1089     0FA6                     u3381:
  1090     0FA6  2FC2               	goto	l2439
  1091     0FA7                     u3380:
  1092     0FA7                     l2437:
  1093     0FA7  085F               	movf	_pos_x,w
  1094     0FA8  3E94               	addlw	148
  1095     0FA9  00BD               	movwf	??_main
  1096     0FAA  3004               	movlw	4
  1097     0FAB                     u3395:
  1098     0FAB  1003               	clrc
  1099     0FAC  0CBD               	rrf	??_main,f
  1100     0FAD  3EFF               	addlw	-1
  1101     0FAE  1D03               	skipz
  1102     0FAF  2FAB               	goto	u3395
  1103     0FB0  083D               	movf	??_main,w
  1104     0FB1  390F               	andlw	15
  1105     0FB2  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1106     0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  1107     0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  1108     0FB9  085F               	movf	_pos_x,w
  1109     0FBA  3E94               	addlw	148
  1110     0FBB  390F               	andlw	15
  1111     0FBC  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1112     0FC1  2FE2               	goto	l139
  1113     0FC2                     l2439:
  1114     0FC2  3003               	movlw	3
  1115     0FC3  065E               	xorwf	_pos_y,w
  1116     0FC4  1D03               	btfss	3,2
  1117     0FC5  2FC7               	goto	u3401
  1118     0FC6  2FC8               	goto	u3400
  1119     0FC7                     u3401:
  1120     0FC7  2FE2               	goto	l139
  1121     0FC8                     u3400:
  1122     0FC8                     l2441:
  1123     0FC8  085F               	movf	_pos_x,w
  1124     0FC9  3ED4               	addlw	212
  1125     0FCA  00BD               	movwf	??_main
  1126     0FCB  3004               	movlw	4
  1127     0FCC                     u3415:
  1128     0FCC  1003               	clrc
  1129     0FCD  0CBD               	rrf	??_main,f
  1130     0FCE  3EFF               	addlw	-1
  1131     0FCF  1D03               	skipz
  1132     0FD0  2FCC               	goto	u3415
  1133     0FD1  083D               	movf	??_main,w
  1134     0FD2  390F               	andlw	15
  1135     0FD3  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1136     0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  1137     0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  1138     0FDA  085F               	movf	_pos_x,w
  1139     0FDB  3ED4               	addlw	212
  1140     0FDC  390F               	andlw	15
  1141     0FDD  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  1142     0FE2                     l139:
  1143                           
  1144                           ;main.c: 188:         dibujar_fondo();
  1145     0FE2  3000               	movlw	0
  1146     0FE3  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  1147     0FE8                     l140:	
  1148                           ;main.c: 190: 
  1149                           
  1150                           
  1151                           ;main.c: 191:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  1152     0FE8  120A  118A  21E7  120A  158A  	fcall	_pot_x
  1153                           
  1154                           ;main.c: 192:     LCD_putc(0);
  1155     0FED  120A  118A  209A  120A  158A  	fcall	_pot_y
  1156     0FF2                     l2443:
  1157                           
  1158                           ;main.c: 193:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1159     0FF2  120A  158A  2179  120A  158A  	fcall	_checar_boton
  1160     0FF7                     l2445:
  1161                           
  1162                           ;main.c: 194: }
  1163     0FF7  120A  158A  242A  120A  158A  	fcall	_mover_nubes
  1164     0FFC  2FE8               	goto	l140
  1165     0FFD  120A  118A  2800   	ljmp	start
  1166     1000                     __end_of_main:
  1167                           
  1168                           	psect	text1
  1169     0985                     __ptext1:	
  1170 ;; *************** function _srand *****************
  1171 ;; Defined at:
  1172 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\rand.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  s               2    0[COMMON] unsigned int 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1186 ;;      Params:         2       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0
  1189 ;;      Totals:         2       0       0       0       0
  1190 ;;Total ram usage:        2 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; This function calls:
  1193 ;;		Nothing
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199     0985                     _srand:	
  1200                           ;psect for function _srand
  1201                           
  1202     0985                     l2237:	
  1203                           ;incstack = 0
  1204                           ; Regs used in _srand: [wreg+status,2+status,0]
  1205                           
  1206     0985  0870               	movf	srand@s,w
  1207     0986  3EFF               	addlw	255
  1208     0987  1283               	bcf	3,5	;RP0=0, select bank0
  1209     0988  1303               	bcf	3,6	;RP1=0, select bank0
  1210     0989  00D5               	movwf	_seed
  1211     098A  0871               	movf	srand@s+1,w
  1212     098B  1803               	skipnc
  1213     098C  3E01               	addlw	1
  1214     098D  3EFF               	addlw	255
  1215     098E  00D6               	movwf	_seed+1
  1216     098F  01D7               	clrf	_seed+2
  1217     0990  01D8               	clrf	_seed+3
  1218     0991                     l1074:
  1219     0991  0008               	return
  1220     0992                     __end_of_srand:
  1221                           
  1222                           	psect	text2
  1223     009A                     __ptext2:	
  1224 ;; *************** function _pot_y *****************
  1225 ;; Defined at:
  1226 ;;		line 227 in file "main.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  adc_y           2   11[COMMON] unsigned int 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       0       0       0       0
  1241 ;;      Locals:         2       0       0       0       0
  1242 ;;      Temps:          2       0       0       0       0
  1243 ;;      Totals:         4       0       0       0       0
  1244 ;;Total ram usage:        4 bytes
  1245 ;; Hardware stack levels used: 1
  1246 ;; Hardware stack levels required when called: 3
  1247 ;; This function calls:
  1248 ;;		_ADC_Read
  1249 ;;		_LCD_Write
  1250 ;;		_LCD_putc
  1251 ;;		_LCD_putrs
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257     009A                     _pot_y:	
  1258                           ;psect for function _pot_y
  1259                           
  1260     009A                     l2303:	
  1261                           ;incstack = 0
  1262                           ; Regs used in _pot_y: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1263                           
  1264                           
  1265                           ;main.c: 228: void mover_nubes(void){
  1266     009A  3001               	movlw	1
  1267     009B  120A  158A  2222  120A  118A  	fcall	_ADC_Read
  1268     00A0  0871               	movf	?_ADC_Read+1,w
  1269     00A1  00FC               	movwf	pot_y@adc_y+1
  1270     00A2  0870               	movf	?_ADC_Read,w
  1271     00A3  00FB               	movwf	pot_y@adc_y
  1272     00A4                     l2305:
  1273     00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1274     00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1275     00A6  085E               	movf	_pos_y,w
  1276     00A7  1D03               	btfss	3,2
  1277     00A8  28AA               	goto	u3091
  1278     00A9  28AB               	goto	u3090
  1279     00AA                     u3091:
  1280     00AA  28C6               	goto	l2309
  1281     00AB                     u3090:
  1282     00AB                     l2307:
  1283     00AB  085F               	movf	_pos_x,w
  1284     00AC  3E80               	addlw	128
  1285     00AD  00F9               	movwf	??_pot_y
  1286     00AE  3004               	movlw	4
  1287     00AF                     u3105:
  1288     00AF  1003               	clrc
  1289     00B0  0CF9               	rrf	??_pot_y,f
  1290     00B1  3EFF               	addlw	-1
  1291     00B2  1D03               	skipz
  1292     00B3  28AF               	goto	u3105
  1293     00B4  0879               	movf	??_pot_y,w
  1294     00B5  390F               	andlw	15
  1295     00B6  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1296     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1297     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1298     00BD  085F               	movf	_pos_x,w
  1299     00BE  3E80               	addlw	128
  1300     00BF  390F               	andlw	15
  1301     00C0  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1302     00C5  2927               	goto	l215
  1303     00C6                     l2309:
  1304     00C6  035E               	decf	_pos_y,w
  1305     00C7  1D03               	btfss	3,2
  1306     00C8  28CA               	goto	u3111
  1307     00C9  28CB               	goto	u3110
  1308     00CA                     u3111:
  1309     00CA  28E6               	goto	l2313
  1310     00CB                     u3110:
  1311     00CB                     l2311:
  1312     00CB  085F               	movf	_pos_x,w
  1313     00CC  3EC0               	addlw	192
  1314     00CD  00F9               	movwf	??_pot_y
  1315     00CE  3004               	movlw	4
  1316     00CF                     u3125:
  1317     00CF  1003               	clrc
  1318     00D0  0CF9               	rrf	??_pot_y,f
  1319     00D1  3EFF               	addlw	-1
  1320     00D2  1D03               	skipz
  1321     00D3  28CF               	goto	u3125
  1322     00D4  0879               	movf	??_pot_y,w
  1323     00D5  390F               	andlw	15
  1324     00D6  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1325     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1326     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1327     00DD  085F               	movf	_pos_x,w
  1328     00DE  3EC0               	addlw	192
  1329     00DF  390F               	andlw	15
  1330     00E0  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1331     00E5  2927               	goto	l215
  1332     00E6                     l2313:
  1333     00E6  3002               	movlw	2
  1334     00E7  065E               	xorwf	_pos_y,w
  1335     00E8  1D03               	btfss	3,2
  1336     00E9  28EB               	goto	u3131
  1337     00EA  28EC               	goto	u3130
  1338     00EB                     u3131:
  1339     00EB  2907               	goto	l2317
  1340     00EC                     u3130:
  1341     00EC                     l2315:
  1342     00EC  085F               	movf	_pos_x,w
  1343     00ED  3E94               	addlw	148
  1344     00EE  00F9               	movwf	??_pot_y
  1345     00EF  3004               	movlw	4
  1346     00F0                     u3145:
  1347     00F0  1003               	clrc
  1348     00F1  0CF9               	rrf	??_pot_y,f
  1349     00F2  3EFF               	addlw	-1
  1350     00F3  1D03               	skipz
  1351     00F4  28F0               	goto	u3145
  1352     00F5  0879               	movf	??_pot_y,w
  1353     00F6  390F               	andlw	15
  1354     00F7  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1355     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1356     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1357     00FE  085F               	movf	_pos_x,w
  1358     00FF  3E94               	addlw	148
  1359     0100  390F               	andlw	15
  1360     0101  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1361     0106  2927               	goto	l215
  1362     0107                     l2317:
  1363     0107  3003               	movlw	3
  1364     0108  065E               	xorwf	_pos_y,w
  1365     0109  1D03               	btfss	3,2
  1366     010A  290C               	goto	u3151
  1367     010B  290D               	goto	u3150
  1368     010C                     u3151:
  1369     010C  2927               	goto	l215
  1370     010D                     u3150:
  1371     010D                     l2319:
  1372     010D  085F               	movf	_pos_x,w
  1373     010E  3ED4               	addlw	212
  1374     010F  00F9               	movwf	??_pot_y
  1375     0110  3004               	movlw	4
  1376     0111                     u3165:
  1377     0111  1003               	clrc
  1378     0112  0CF9               	rrf	??_pot_y,f
  1379     0113  3EFF               	addlw	-1
  1380     0114  1D03               	skipz
  1381     0115  2911               	goto	u3165
  1382     0116  0879               	movf	??_pot_y,w
  1383     0117  390F               	andlw	15
  1384     0118  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1385     011D  1283               	bcf	3,5	;RP0=0, select bank0
  1386     011E  1303               	bcf	3,6	;RP1=0, select bank0
  1387     011F  085F               	movf	_pos_x,w
  1388     0120  3ED4               	addlw	212
  1389     0121  390F               	andlw	15
  1390     0122  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1391     0127                     l215:
  1392                           
  1393                           ;main.c: 231:         LCD_putrs(" ");
  1394     0127  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1395     0128  00F6               	movwf	LCD_putrs@a
  1396     0129  120A  158A  21B3  120A  118A  	fcall	_LCD_putrs
  1397     012E                     l2321:
  1398                           
  1399                           ;main.c: 233:         do { if ( 1 == 0 ) { do { LCD_Write( (0x80 + nubes[i] & 0xF0) >> 4
      +                           ); LCD_Write( 0x80 + nubes[i] & 0x0F); } while ( 0 ); } else if ( 1 == 1 ) { do { LCD_W
      +                          rite( (0xC0 + nubes[i] & 0xF0) >> 4 ); LCD_Write( 0xC0 + nubes[i] & 0x0F); } while ( 0 )
      +                          ; } else if ( 1 == 2 ) { do { LCD_Write( (0x94 + nubes[i] & 0xF0) >> 4 ); LCD_Write( 0x9
      +                          4 + nubes[i] & 0x0F); } while ( 0 ); } else if ( 1 == 3 ) { do { LCD_Write( (0xD4 + nube
      +                          s[i] & 0xF0) >> 4 ); LCD_Write( 0xD4 + nubes[i] & 0x0F); } while ( 0 ); } } while ( 0 );
  1400     012E  3002               	movlw	2
  1401     012F  027C               	subwf	pot_y@adc_y+1,w
  1402     0130  3059               	movlw	89
  1403     0131  1903               	skipnz
  1404     0132  027B               	subwf	pot_y@adc_y,w
  1405     0133  1C03               	skipc
  1406     0134  2936               	goto	u3171
  1407     0135  2937               	goto	u3170
  1408     0136                     u3171:
  1409     0136  2941               	goto	l2327
  1410     0137                     u3170:
  1411     0137                     l2323:
  1412     0137  1283               	bcf	3,5	;RP0=0, select bank0
  1413     0138  1303               	bcf	3,6	;RP1=0, select bank0
  1414     0139  085E               	movf	_pos_y,w
  1415     013A  1903               	btfsc	3,2
  1416     013B  293D               	goto	u3181
  1417     013C  293E               	goto	u3180
  1418     013D                     u3181:
  1419     013D  2941               	goto	l2327
  1420     013E                     u3180:
  1421     013E                     l2325:
  1422                           
  1423                           ;main.c: 234:         LCD_putc(6);
  1424     013E  3001               	movlw	1
  1425     013F  02DE               	subwf	_pos_y,f
  1426                           
  1427                           ;main.c: 235:     }
  1428     0140  2954               	goto	l219
  1429     0141                     l2327:
  1430     0141  3001               	movlw	1
  1431     0142  027C               	subwf	pot_y@adc_y+1,w
  1432     0143  3090               	movlw	144
  1433     0144  1903               	skipnz
  1434     0145  027B               	subwf	pot_y@adc_y,w
  1435     0146  1803               	skipnc
  1436     0147  2949               	goto	u3191
  1437     0148  294A               	goto	u3190
  1438     0149                     u3191:
  1439     0149  2954               	goto	l219
  1440     014A                     u3190:
  1441     014A                     l2329:
  1442     014A  3002               	movlw	2
  1443     014B  1283               	bcf	3,5	;RP0=0, select bank0
  1444     014C  1303               	bcf	3,6	;RP1=0, select bank0
  1445     014D  025E               	subwf	_pos_y,w
  1446     014E  1803               	skipnc
  1447     014F  2951               	goto	u3201
  1448     0150  2952               	goto	u3200
  1449     0151                     u3201:
  1450     0151  2954               	goto	l219
  1451     0152                     u3200:
  1452     0152                     l2331:
  1453                           
  1454                           ;main.c: 236:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1455     0152  3001               	movlw	1
  1456     0153  07DE               	addwf	_pos_y,f
  1457     0154                     l219:	
  1458                           ;main.c: 239: 
  1459                           
  1460     0154  1283               	bcf	3,5	;RP0=0, select bank0
  1461     0155  1303               	bcf	3,6	;RP1=0, select bank0
  1462     0156  085E               	movf	_pos_y,w
  1463     0157  1D03               	btfss	3,2
  1464     0158  295A               	goto	u3211
  1465     0159  295B               	goto	u3210
  1466     015A                     u3211:
  1467     015A  2976               	goto	l2335
  1468     015B                     u3210:
  1469     015B                     l2333:
  1470     015B  085F               	movf	_pos_x,w
  1471     015C  3E80               	addlw	128
  1472     015D  00F9               	movwf	??_pot_y
  1473     015E  3004               	movlw	4
  1474     015F                     u3225:
  1475     015F  1003               	clrc
  1476     0160  0CF9               	rrf	??_pot_y,f
  1477     0161  3EFF               	addlw	-1
  1478     0162  1D03               	skipz
  1479     0163  295F               	goto	u3225
  1480     0164  0879               	movf	??_pot_y,w
  1481     0165  390F               	andlw	15
  1482     0166  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1483     016B  1283               	bcf	3,5	;RP0=0, select bank0
  1484     016C  1303               	bcf	3,6	;RP1=0, select bank0
  1485     016D  085F               	movf	_pos_x,w
  1486     016E  3E80               	addlw	128
  1487     016F  390F               	andlw	15
  1488     0170  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1489     0175  29D7               	goto	l235
  1490     0176                     l2335:
  1491     0176  035E               	decf	_pos_y,w
  1492     0177  1D03               	btfss	3,2
  1493     0178  297A               	goto	u3231
  1494     0179  297B               	goto	u3230
  1495     017A                     u3231:
  1496     017A  2996               	goto	l2339
  1497     017B                     u3230:
  1498     017B                     l2337:
  1499     017B  085F               	movf	_pos_x,w
  1500     017C  3EC0               	addlw	192
  1501     017D  00F9               	movwf	??_pot_y
  1502     017E  3004               	movlw	4
  1503     017F                     u3245:
  1504     017F  1003               	clrc
  1505     0180  0CF9               	rrf	??_pot_y,f
  1506     0181  3EFF               	addlw	-1
  1507     0182  1D03               	skipz
  1508     0183  297F               	goto	u3245
  1509     0184  0879               	movf	??_pot_y,w
  1510     0185  390F               	andlw	15
  1511     0186  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1512     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1513     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1514     018D  085F               	movf	_pos_x,w
  1515     018E  3EC0               	addlw	192
  1516     018F  390F               	andlw	15
  1517     0190  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1518     0195  29D7               	goto	l235
  1519     0196                     l2339:
  1520     0196  3002               	movlw	2
  1521     0197  065E               	xorwf	_pos_y,w
  1522     0198  1D03               	btfss	3,2
  1523     0199  299B               	goto	u3251
  1524     019A  299C               	goto	u3250
  1525     019B                     u3251:
  1526     019B  29B7               	goto	l2343
  1527     019C                     u3250:
  1528     019C                     l2341:
  1529     019C  085F               	movf	_pos_x,w
  1530     019D  3E94               	addlw	148
  1531     019E  00F9               	movwf	??_pot_y
  1532     019F  3004               	movlw	4
  1533     01A0                     u3265:
  1534     01A0  1003               	clrc
  1535     01A1  0CF9               	rrf	??_pot_y,f
  1536     01A2  3EFF               	addlw	-1
  1537     01A3  1D03               	skipz
  1538     01A4  29A0               	goto	u3265
  1539     01A5  0879               	movf	??_pot_y,w
  1540     01A6  390F               	andlw	15
  1541     01A7  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1542     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1543     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1544     01AE  085F               	movf	_pos_x,w
  1545     01AF  3E94               	addlw	148
  1546     01B0  390F               	andlw	15
  1547     01B1  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1548     01B6  29D7               	goto	l235
  1549     01B7                     l2343:
  1550     01B7  3003               	movlw	3
  1551     01B8  065E               	xorwf	_pos_y,w
  1552     01B9  1D03               	btfss	3,2
  1553     01BA  29BC               	goto	u3271
  1554     01BB  29BD               	goto	u3270
  1555     01BC                     u3271:
  1556     01BC  29D7               	goto	l235
  1557     01BD                     u3270:
  1558     01BD                     l2345:
  1559     01BD  085F               	movf	_pos_x,w
  1560     01BE  3ED4               	addlw	212
  1561     01BF  00F9               	movwf	??_pot_y
  1562     01C0  3004               	movlw	4
  1563     01C1                     u3285:
  1564     01C1  1003               	clrc
  1565     01C2  0CF9               	rrf	??_pot_y,f
  1566     01C3  3EFF               	addlw	-1
  1567     01C4  1D03               	skipz
  1568     01C5  29C1               	goto	u3285
  1569     01C6  0879               	movf	??_pot_y,w
  1570     01C7  390F               	andlw	15
  1571     01C8  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1572     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1573     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1574     01CF  085F               	movf	_pos_x,w
  1575     01D0  3ED4               	addlw	212
  1576     01D1  390F               	andlw	15
  1577     01D2  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1578     01D7                     l235:
  1579                           
  1580                           ;main.c: 240: 
  1581     01D7  3000               	movlw	0
  1582     01D8  120A  118A  2008  120A  118A  	fcall	_LCD_putc
  1583     01DD                     l2347:
  1584                           
  1585                           ;main.c: 241: 
  1586     01DD  300D               	movlw	13
  1587     01DE  00FA               	movwf	??_pot_y+1
  1588     01DF  30FB               	movlw	251
  1589     01E0  00F9               	movwf	??_pot_y
  1590     01E1                     u3437:
  1591     01E1  0BF9               	decfsz	??_pot_y,f
  1592     01E2  29E1               	goto	u3437
  1593     01E3  0BFA               	decfsz	??_pot_y+1,f
  1594     01E4  29E1               	goto	u3437
  1595     01E5  29E6               	nop2
  1596     01E6                     l236:
  1597     01E6  0008               	return
  1598     01E7                     __end_of_pot_y:
  1599                           
  1600                           	psect	text3
  1601     01E7                     __ptext3:	
  1602 ;; *************** function _pot_x *****************
  1603 ;; Defined at:
  1604 ;;		line 201 in file "main.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  adc_x           2   26[BANK0 ] unsigned int 
  1609 ;;  prev_x          1   28[BANK0 ] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       0       0       0       0
  1620 ;;      Locals:         0       7       0       0       0
  1621 ;;      Temps:          0       2       0       0       0
  1622 ;;      Totals:         0       9       0       0       0
  1623 ;;Total ram usage:        9 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 4
  1626 ;; This function calls:
  1627 ;;		_ADC_Read
  1628 ;;		_LCD_Write
  1629 ;;		_LCD_putc
  1630 ;;		_LCD_putrs
  1631 ;;		_dibujar_fondo
  1632 ;;		_generar_fondo
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638     01E7                     _pot_x:	
  1639                           ;psect for function _pot_x
  1640                           
  1641     01E7                     l2239:	
  1642                           ;incstack = 0
  1643                           ; Regs used in _pot_x: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1644                           
  1645                           
  1646                           ;main.c: 202:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  1647     01E7  3000               	movlw	0
  1648     01E8  120A  158A  2222  120A  118A  	fcall	_ADC_Read
  1649     01ED  0871               	movf	?_ADC_Read+1,w
  1650     01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1651     01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1652     01F0  00BB               	movwf	pot_x@adc_x+1
  1653     01F1  0870               	movf	?_ADC_Read,w
  1654     01F2  00BA               	movwf	pot_x@adc_x
  1655     01F3                     l2241:
  1656                           
  1657                           ;main.c: 203:     LCD_putrs(" ");
  1658     01F3  085F               	movf	_pos_x,w
  1659     01F4  00BC               	movwf	pot_x@prev_x
  1660     01F5                     l2243:
  1661     01F5  085E               	movf	_pos_y,w
  1662     01F6  1D03               	btfss	3,2
  1663     01F7  29F9               	goto	u2851
  1664     01F8  29FA               	goto	u2850
  1665     01F9                     u2851:
  1666     01F9  2A15               	goto	l2247
  1667     01FA                     u2850:
  1668     01FA                     l2245:
  1669     01FA  085F               	movf	_pos_x,w
  1670     01FB  3E80               	addlw	128
  1671     01FC  00B4               	movwf	??_pot_x
  1672     01FD  3004               	movlw	4
  1673     01FE                     u2865:
  1674     01FE  1003               	clrc
  1675     01FF  0CB4               	rrf	??_pot_x,f
  1676     0200  3EFF               	addlw	-1
  1677     0201  1D03               	skipz
  1678     0202  29FE               	goto	u2865
  1679     0203  0834               	movf	??_pot_x,w
  1680     0204  390F               	andlw	15
  1681     0205  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1682     020A  1283               	bcf	3,5	;RP0=0, select bank0
  1683     020B  1303               	bcf	3,6	;RP1=0, select bank0
  1684     020C  085F               	movf	_pos_x,w
  1685     020D  3E80               	addlw	128
  1686     020E  390F               	andlw	15
  1687     020F  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1688     0214  2A76               	goto	l162
  1689     0215                     l2247:
  1690     0215  035E               	decf	_pos_y,w
  1691     0216  1D03               	btfss	3,2
  1692     0217  2A19               	goto	u2871
  1693     0218  2A1A               	goto	u2870
  1694     0219                     u2871:
  1695     0219  2A35               	goto	l2251
  1696     021A                     u2870:
  1697     021A                     l2249:
  1698     021A  085F               	movf	_pos_x,w
  1699     021B  3EC0               	addlw	192
  1700     021C  00B4               	movwf	??_pot_x
  1701     021D  3004               	movlw	4
  1702     021E                     u2885:
  1703     021E  1003               	clrc
  1704     021F  0CB4               	rrf	??_pot_x,f
  1705     0220  3EFF               	addlw	-1
  1706     0221  1D03               	skipz
  1707     0222  2A1E               	goto	u2885
  1708     0223  0834               	movf	??_pot_x,w
  1709     0224  390F               	andlw	15
  1710     0225  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1711     022A  1283               	bcf	3,5	;RP0=0, select bank0
  1712     022B  1303               	bcf	3,6	;RP1=0, select bank0
  1713     022C  085F               	movf	_pos_x,w
  1714     022D  3EC0               	addlw	192
  1715     022E  390F               	andlw	15
  1716     022F  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1717     0234  2A76               	goto	l162
  1718     0235                     l2251:
  1719     0235  3002               	movlw	2
  1720     0236  065E               	xorwf	_pos_y,w
  1721     0237  1D03               	btfss	3,2
  1722     0238  2A3A               	goto	u2891
  1723     0239  2A3B               	goto	u2890
  1724     023A                     u2891:
  1725     023A  2A56               	goto	l2255
  1726     023B                     u2890:
  1727     023B                     l2253:
  1728     023B  085F               	movf	_pos_x,w
  1729     023C  3E94               	addlw	148
  1730     023D  00B4               	movwf	??_pot_x
  1731     023E  3004               	movlw	4
  1732     023F                     u2905:
  1733     023F  1003               	clrc
  1734     0240  0CB4               	rrf	??_pot_x,f
  1735     0241  3EFF               	addlw	-1
  1736     0242  1D03               	skipz
  1737     0243  2A3F               	goto	u2905
  1738     0244  0834               	movf	??_pot_x,w
  1739     0245  390F               	andlw	15
  1740     0246  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1741     024B  1283               	bcf	3,5	;RP0=0, select bank0
  1742     024C  1303               	bcf	3,6	;RP1=0, select bank0
  1743     024D  085F               	movf	_pos_x,w
  1744     024E  3E94               	addlw	148
  1745     024F  390F               	andlw	15
  1746     0250  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1747     0255  2A76               	goto	l162
  1748     0256                     l2255:
  1749     0256  3003               	movlw	3
  1750     0257  065E               	xorwf	_pos_y,w
  1751     0258  1D03               	btfss	3,2
  1752     0259  2A5B               	goto	u2911
  1753     025A  2A5C               	goto	u2910
  1754     025B                     u2911:
  1755     025B  2A76               	goto	l162
  1756     025C                     u2910:
  1757     025C                     l2257:
  1758     025C  085F               	movf	_pos_x,w
  1759     025D  3ED4               	addlw	212
  1760     025E  00B4               	movwf	??_pot_x
  1761     025F  3004               	movlw	4
  1762     0260                     u2925:
  1763     0260  1003               	clrc
  1764     0261  0CB4               	rrf	??_pot_x,f
  1765     0262  3EFF               	addlw	-1
  1766     0263  1D03               	skipz
  1767     0264  2A60               	goto	u2925
  1768     0265  0834               	movf	??_pot_x,w
  1769     0266  390F               	andlw	15
  1770     0267  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1771     026C  1283               	bcf	3,5	;RP0=0, select bank0
  1772     026D  1303               	bcf	3,6	;RP1=0, select bank0
  1773     026E  085F               	movf	_pos_x,w
  1774     026F  3ED4               	addlw	212
  1775     0270  390F               	andlw	15
  1776     0271  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1777     0276                     l162:
  1778                           
  1779                           ;main.c: 206:         pos_y--;
  1780     0276  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1781     0277  00F6               	movwf	LCD_putrs@a
  1782     0278  120A  158A  21B3  120A  118A  	fcall	_LCD_putrs
  1783     027D                     l2259:
  1784                           
  1785                           ;main.c: 208:         pos_y++;
  1786     027D  3002               	movlw	2
  1787     027E  1283               	bcf	3,5	;RP0=0, select bank0
  1788     027F  1303               	bcf	3,6	;RP1=0, select bank0
  1789     0280  023B               	subwf	pot_x@adc_x+1,w
  1790     0281  3059               	movlw	89
  1791     0282  1903               	skipnz
  1792     0283  023A               	subwf	pot_x@adc_x,w
  1793     0284  1C03               	skipc
  1794     0285  2A87               	goto	u2931
  1795     0286  2A88               	goto	u2930
  1796     0287                     u2931:
  1797     0287  2A9B               	goto	l2267
  1798     0288                     u2930:
  1799     0288                     l2261:
  1800                           
  1801                           ;main.c: 209:     }
  1802     0288  3013               	movlw	19
  1803     0289  025F               	subwf	_pos_x,w
  1804     028A  1C03               	skipc
  1805     028B  2A8D               	goto	u2941
  1806     028C  2A8E               	goto	u2940
  1807     028D                     u2941:
  1808     028D  2A91               	goto	l2265
  1809     028E                     u2940:
  1810     028E                     l2263:
  1811     028E  01B6               	clrf	_pot_x$211
  1812     028F  01B7               	clrf	_pot_x$211+1
  1813     0290  2A98               	goto	l167
  1814     0291                     l2265:
  1815     0291  085F               	movf	_pos_x,w
  1816     0292  3E01               	addlw	1
  1817     0293  00B6               	movwf	_pot_x$211
  1818     0294  3000               	movlw	0
  1819     0295  1803               	skipnc
  1820     0296  3001               	movlw	1
  1821     0297  00B7               	movwf	_pot_x$211+1
  1822     0298                     l167:
  1823     0298  0836               	movf	_pot_x$211,w
  1824     0299  00DF               	movwf	_pos_x
  1825                           
  1826                           ;main.c: 210: 
  1827     029A  2AB7               	goto	l2275
  1828     029B                     l2267:
  1829     029B  3001               	movlw	1
  1830     029C  023B               	subwf	pot_x@adc_x+1,w
  1831     029D  3090               	movlw	144
  1832     029E  1903               	skipnz
  1833     029F  023A               	subwf	pot_x@adc_x,w
  1834     02A0  1803               	skipnc
  1835     02A1  2AA3               	goto	u2951
  1836     02A2  2AA4               	goto	u2950
  1837     02A3                     u2951:
  1838     02A3  2AB7               	goto	l2275
  1839     02A4                     u2950:
  1840     02A4                     l2269:
  1841                           
  1842                           ;main.c: 211:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  1843     02A4  085F               	movf	_pos_x,w
  1844     02A5  1D03               	btfss	3,2
  1845     02A6  2AA8               	goto	u2961
  1846     02A7  2AA9               	goto	u2960
  1847     02A8                     u2961:
  1848     02A8  2AAE               	goto	l2273
  1849     02A9                     u2960:
  1850     02A9                     l2271:
  1851     02A9  3013               	movlw	19
  1852     02AA  00B8               	movwf	_pot_x$212
  1853     02AB  3000               	movlw	0
  1854     02AC  00B9               	movwf	_pot_x$212+1
  1855     02AD  2AB5               	goto	l173
  1856     02AE                     l2273:
  1857     02AE  085F               	movf	_pos_x,w
  1858     02AF  3EFF               	addlw	255
  1859     02B0  00B8               	movwf	_pot_x$212
  1860     02B1  30FF               	movlw	255
  1861     02B2  1803               	skipnc
  1862     02B3  3000               	movlw	0
  1863     02B4  00B9               	movwf	_pot_x$212+1
  1864     02B5                     l173:
  1865     02B5  0838               	movf	_pot_x$212,w
  1866     02B6  00DF               	movwf	_pos_x
  1867     02B7                     l2275:
  1868                           
  1869                           ;main.c: 214: }
  1870     02B7  083C               	movf	pot_x@prev_x,w
  1871     02B8  1D03               	btfss	3,2
  1872     02B9  2ABB               	goto	u2971
  1873     02BA  2ABC               	goto	u2970
  1874     02BB                     u2971:
  1875     02BB  2AC2               	goto	l2279
  1876     02BC                     u2970:
  1877     02BC                     l2277:
  1878     02BC  3013               	movlw	19
  1879     02BD  065F               	xorwf	_pos_x,w
  1880     02BE  1903               	btfsc	3,2
  1881     02BF  2AC1               	goto	u2981
  1882     02C0  2AC2               	goto	u2980
  1883     02C1                     u2981:
  1884     02C1  2ACD               	goto	l2283
  1885     02C2                     u2980:
  1886     02C2                     l2279:
  1887     02C2  3013               	movlw	19
  1888     02C3  063C               	xorwf	pot_x@prev_x,w
  1889     02C4  1D03               	btfss	3,2
  1890     02C5  2AC7               	goto	u2991
  1891     02C6  2AC8               	goto	u2990
  1892     02C7                     u2991:
  1893     02C7  2AD7               	goto	l2285
  1894     02C8                     u2990:
  1895     02C8                     l2281:
  1896     02C8  085F               	movf	_pos_x,w
  1897     02C9  1D03               	btfss	3,2
  1898     02CA  2ACC               	goto	u3001
  1899     02CB  2ACD               	goto	u3000
  1900     02CC                     u3001:
  1901     02CC  2AD7               	goto	l2285
  1902     02CD                     u3000:
  1903     02CD                     l2283:
  1904                           
  1905                           ;main.c: 215: 
  1906     02CD  120A  158A  2561  120A  118A  	fcall	_generar_fondo
  1907                           
  1908                           ;main.c: 216: 
  1909     02D2  120A  158A  23BC  120A  118A  	fcall	_dibujar_fondo
  1910     02D7                     l2285:
  1911     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1912     02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1913     02D9  085E               	movf	_pos_y,w
  1914     02DA  1D03               	btfss	3,2
  1915     02DB  2ADD               	goto	u3011
  1916     02DC  2ADE               	goto	u3010
  1917     02DD                     u3011:
  1918     02DD  2AF9               	goto	l2289
  1919     02DE                     u3010:
  1920     02DE                     l2287:
  1921     02DE  085F               	movf	_pos_x,w
  1922     02DF  3E80               	addlw	128
  1923     02E0  00B4               	movwf	??_pot_x
  1924     02E1  3004               	movlw	4
  1925     02E2                     u3025:
  1926     02E2  1003               	clrc
  1927     02E3  0CB4               	rrf	??_pot_x,f
  1928     02E4  3EFF               	addlw	-1
  1929     02E5  1D03               	skipz
  1930     02E6  2AE2               	goto	u3025
  1931     02E7  0834               	movf	??_pot_x,w
  1932     02E8  390F               	andlw	15
  1933     02E9  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1934     02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1935     02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1936     02F0  085F               	movf	_pos_x,w
  1937     02F1  3E80               	addlw	128
  1938     02F2  390F               	andlw	15
  1939     02F3  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1940     02F8  2B5A               	goto	l195
  1941     02F9                     l2289:
  1942     02F9  035E               	decf	_pos_y,w
  1943     02FA  1D03               	btfss	3,2
  1944     02FB  2AFD               	goto	u3031
  1945     02FC  2AFE               	goto	u3030
  1946     02FD                     u3031:
  1947     02FD  2B19               	goto	l2293
  1948     02FE                     u3030:
  1949     02FE                     l2291:
  1950     02FE  085F               	movf	_pos_x,w
  1951     02FF  3EC0               	addlw	192
  1952     0300  00B4               	movwf	??_pot_x
  1953     0301  3004               	movlw	4
  1954     0302                     u3045:
  1955     0302  1003               	clrc
  1956     0303  0CB4               	rrf	??_pot_x,f
  1957     0304  3EFF               	addlw	-1
  1958     0305  1D03               	skipz
  1959     0306  2B02               	goto	u3045
  1960     0307  0834               	movf	??_pot_x,w
  1961     0308  390F               	andlw	15
  1962     0309  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1963     030E  1283               	bcf	3,5	;RP0=0, select bank0
  1964     030F  1303               	bcf	3,6	;RP1=0, select bank0
  1965     0310  085F               	movf	_pos_x,w
  1966     0311  3EC0               	addlw	192
  1967     0312  390F               	andlw	15
  1968     0313  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1969     0318  2B5A               	goto	l195
  1970     0319                     l2293:
  1971     0319  3002               	movlw	2
  1972     031A  065E               	xorwf	_pos_y,w
  1973     031B  1D03               	btfss	3,2
  1974     031C  2B1E               	goto	u3051
  1975     031D  2B1F               	goto	u3050
  1976     031E                     u3051:
  1977     031E  2B3A               	goto	l2297
  1978     031F                     u3050:
  1979     031F                     l2295:
  1980     031F  085F               	movf	_pos_x,w
  1981     0320  3E94               	addlw	148
  1982     0321  00B4               	movwf	??_pot_x
  1983     0322  3004               	movlw	4
  1984     0323                     u3065:
  1985     0323  1003               	clrc
  1986     0324  0CB4               	rrf	??_pot_x,f
  1987     0325  3EFF               	addlw	-1
  1988     0326  1D03               	skipz
  1989     0327  2B23               	goto	u3065
  1990     0328  0834               	movf	??_pot_x,w
  1991     0329  390F               	andlw	15
  1992     032A  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1993     032F  1283               	bcf	3,5	;RP0=0, select bank0
  1994     0330  1303               	bcf	3,6	;RP1=0, select bank0
  1995     0331  085F               	movf	_pos_x,w
  1996     0332  3E94               	addlw	148
  1997     0333  390F               	andlw	15
  1998     0334  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  1999     0339  2B5A               	goto	l195
  2000     033A                     l2297:
  2001     033A  3003               	movlw	3
  2002     033B  065E               	xorwf	_pos_y,w
  2003     033C  1D03               	btfss	3,2
  2004     033D  2B3F               	goto	u3071
  2005     033E  2B40               	goto	u3070
  2006     033F                     u3071:
  2007     033F  2B5A               	goto	l195
  2008     0340                     u3070:
  2009     0340                     l2299:
  2010     0340  085F               	movf	_pos_x,w
  2011     0341  3ED4               	addlw	212
  2012     0342  00B4               	movwf	??_pot_x
  2013     0343  3004               	movlw	4
  2014     0344                     u3085:
  2015     0344  1003               	clrc
  2016     0345  0CB4               	rrf	??_pot_x,f
  2017     0346  3EFF               	addlw	-1
  2018     0347  1D03               	skipz
  2019     0348  2B44               	goto	u3085
  2020     0349  0834               	movf	??_pot_x,w
  2021     034A  390F               	andlw	15
  2022     034B  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  2023     0350  1283               	bcf	3,5	;RP0=0, select bank0
  2024     0351  1303               	bcf	3,6	;RP1=0, select bank0
  2025     0352  085F               	movf	_pos_x,w
  2026     0353  3ED4               	addlw	212
  2027     0354  390F               	andlw	15
  2028     0355  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  2029     035A                     l195:
  2030                           
  2031                           ;main.c: 220:     if(PORTAbits.RA2 == 1){
  2032     035A  3000               	movlw	0
  2033     035B  120A  118A  2008  120A  118A  	fcall	_LCD_putc
  2034     0360                     l2301:
  2035                           
  2036                           ;main.c: 221:         disparar();
  2037     0360  300D               	movlw	13
  2038     0361  1283               	bcf	3,5	;RP0=0, select bank0
  2039     0362  1303               	bcf	3,6	;RP1=0, select bank0
  2040     0363  00B5               	movwf	??_pot_x+1
  2041     0364  30FB               	movlw	251
  2042     0365  00B4               	movwf	??_pot_x
  2043     0366                     u3447:
  2044     0366  0BB4               	decfsz	??_pot_x,f
  2045     0367  2B66               	goto	u3447
  2046     0368  0BB5               	decfsz	??_pot_x+1,f
  2047     0369  2B66               	goto	u3447
  2048     036A                     l196:
  2049     036A  0008               	return
  2050     036B                     __end_of_pot_x:
  2051                           
  2052                           	psect	text4
  2053     0D61                     __ptext4:	
  2054 ;; *************** function _generar_fondo *****************
  2055 ;; Defined at:
  2056 ;;		line 270 in file "main.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  p               1   14[BANK0 ] unsigned char 
  2061 ;;  p               1   13[BANK0 ] unsigned char 
  2062 ;;  p               1   12[BANK0 ] unsigned char 
  2063 ;;  i               1   19[BANK0 ] unsigned char 
  2064 ;;  i               1   17[BANK0 ] unsigned char 
  2065 ;;  i               1   16[BANK0 ] unsigned char 
  2066 ;;  i               1   15[BANK0 ] unsigned char 
  2067 ;;  i               1   18[BANK0 ] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       0       0       0       0
  2078 ;;      Locals:         0       8       0       0       0
  2079 ;;      Temps:          0       0       0       0       0
  2080 ;;      Totals:         0       8       0       0       0
  2081 ;;Total ram usage:        8 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 2
  2084 ;; This function calls:
  2085 ;;		___awmod
  2086 ;;		_rand
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;;		_pot_x
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093     0D61                     _generar_fondo:	
  2094                           ;psect for function _generar_fondo
  2095                           
  2096     0D61                     l1921:	
  2097                           ;incstack = 0
  2098                           ; Regs used in _generar_fondo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2099                           
  2100                           
  2101                           ;main.c: 271: 
  2102     0D61  1283               	bcf	3,5	;RP0=0, select bank0
  2103     0D62  1303               	bcf	3,6	;RP1=0, select bank0
  2104     0D63  01B2               	clrf	generar_fondo@i
  2105     0D64                     l1927:
  2106                           
  2107                           ;main.c: 272: void dibujar_fondo(void){
  2108     0D64  0832               	movf	generar_fondo@i,w
  2109     0D65  3E3E               	addlw	(low (_fondo| 0))& (0+255)
  2110     0D66  0084               	movwf	4
  2111     0D67  3020               	movlw	32
  2112     0D68  1383               	bcf	3,7	;select IRP bank0
  2113     0D69  0080               	movwf	0
  2114     0D6A                     l1929:
  2115                           
  2116                           ;main.c: 273:     for(uint8_t i = 0; i < 20; i++){
  2117     0D6A  3001               	movlw	1
  2118     0D6B  07B2               	addwf	generar_fondo@i,f
  2119     0D6C                     l1931:
  2120     0D6C  3014               	movlw	20
  2121     0D6D  0232               	subwf	generar_fondo@i,w
  2122     0D6E  1C03               	skipc
  2123     0D6F  2D71               	goto	u2161
  2124     0D70  2D72               	goto	u2160
  2125     0D71                     u2161:
  2126     0D71  2D64               	goto	l1927
  2127     0D72                     u2160:
  2128     0D72                     l1933:
  2129                           
  2130                           ;main.c: 275:         if(fondo[i] != ' '){
  2131     0D72  01AF               	clrf	generar_fondo@i_223
  2132     0D73                     l1939:
  2133                           
  2134                           ;main.c: 276:             LCD_putc(fondo[i]);
  2135     0D73  3014               	movlw	20
  2136     0D74  00A6               	movwf	___awmod@divisor
  2137     0D75  3000               	movlw	0
  2138     0D76  00A7               	movwf	___awmod@divisor+1
  2139     0D77  120A  158A  2312  120A  158A  	fcall	_rand
  2140     0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  2141     0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  2142     0D7E  0821               	movf	?_rand+1,w
  2143     0D7F  00A9               	movwf	___awmod@dividend+1
  2144     0D80  0820               	movf	?_rand,w
  2145     0D81  00A8               	movwf	___awmod@dividend
  2146     0D82  120A  158A  2363  120A  158A  	fcall	___awmod
  2147     0D87  1283               	bcf	3,5	;RP0=0, select bank0
  2148     0D88  1303               	bcf	3,6	;RP1=0, select bank0
  2149     0D89  0826               	movf	?___awmod,w
  2150     0D8A  00AC               	movwf	generar_fondo@p
  2151     0D8B                     l1941:
  2152                           
  2153                           ;main.c: 277:         } else {
  2154     0D8B  082C               	movf	generar_fondo@p,w
  2155     0D8C  3E3E               	addlw	(low (_fondo| 0))& (0+255)
  2156     0D8D  0084               	movwf	4
  2157     0D8E  3005               	movlw	5
  2158     0D8F  1383               	bcf	3,7	;select IRP bank0
  2159     0D90  0080               	movwf	0
  2160     0D91                     l1943:
  2161                           
  2162                           ;main.c: 278:             LCD_putrs(" ");
  2163     0D91  3001               	movlw	1
  2164     0D92  07AF               	addwf	generar_fondo@i_223,f
  2165     0D93                     l1945:
  2166     0D93  3003               	movlw	3
  2167     0D94  022F               	subwf	generar_fondo@i_223,w
  2168     0D95  1C03               	skipc
  2169     0D96  2D98               	goto	u2171
  2170     0D97  2D99               	goto	u2170
  2171     0D98                     u2171:
  2172     0D98  2D73               	goto	l1939
  2173     0D99                     u2170:
  2174     0D99                     l1947:
  2175                           
  2176                           ;main.c: 280:     }
  2177     0D99  01B0               	clrf	generar_fondo@i_225
  2178     0D9A                     l1953:
  2179                           
  2180                           ;main.c: 281: 
  2181     0D9A  3014               	movlw	20
  2182     0D9B  00A6               	movwf	___awmod@divisor
  2183     0D9C  3000               	movlw	0
  2184     0D9D  00A7               	movwf	___awmod@divisor+1
  2185     0D9E  120A  158A  2312  120A  158A  	fcall	_rand
  2186     0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  2187     0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  2188     0DA5  0821               	movf	?_rand+1,w
  2189     0DA6  00A9               	movwf	___awmod@dividend+1
  2190     0DA7  0820               	movf	?_rand,w
  2191     0DA8  00A8               	movwf	___awmod@dividend
  2192     0DA9  120A  158A  2363  120A  158A  	fcall	___awmod
  2193     0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  2194     0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  2195     0DB0  0826               	movf	?___awmod,w
  2196     0DB1  00AD               	movwf	generar_fondo@p_226
  2197     0DB2                     l1955:
  2198                           
  2199                           ;main.c: 282: 
  2200     0DB2  082D               	movf	generar_fondo@p_226,w
  2201     0DB3  3E3E               	addlw	(low (_fondo| 0))& (0+255)
  2202     0DB4  0084               	movwf	4
  2203     0DB5  3007               	movlw	7
  2204     0DB6  1383               	bcf	3,7	;select IRP bank0
  2205     0DB7  0080               	movwf	0
  2206     0DB8                     l1957:
  2207                           
  2208                           ;main.c: 283:     for(uint8_t i = 0; i < 3; i++){
  2209     0DB8  3001               	movlw	1
  2210     0DB9  07B0               	addwf	generar_fondo@i_225,f
  2211     0DBA                     l1959:
  2212     0DBA  3003               	movlw	3
  2213     0DBB  0230               	subwf	generar_fondo@i_225,w
  2214     0DBC  1C03               	skipc
  2215     0DBD  2DBF               	goto	u2181
  2216     0DBE  2DC0               	goto	u2180
  2217     0DBF                     u2181:
  2218     0DBF  2D9A               	goto	l1953
  2219     0DC0                     u2180:
  2220     0DC0                     l1961:
  2221                           
  2222                           ;main.c: 285:         LCD_putc(6);
  2223     0DC0  01B1               	clrf	generar_fondo@i_227
  2224     0DC1                     l1967:
  2225                           
  2226                           ;main.c: 286:     }
  2227     0DC1  3013               	movlw	19
  2228     0DC2  00A6               	movwf	___awmod@divisor
  2229     0DC3  3000               	movlw	0
  2230     0DC4  00A7               	movwf	___awmod@divisor+1
  2231     0DC5  120A  158A  2312  120A  158A  	fcall	_rand
  2232     0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  2233     0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  2234     0DCC  0821               	movf	?_rand+1,w
  2235     0DCD  00A9               	movwf	___awmod@dividend+1
  2236     0DCE  0820               	movf	?_rand,w
  2237     0DCF  00A8               	movwf	___awmod@dividend
  2238     0DD0  120A  158A  2363  120A  158A  	fcall	___awmod
  2239     0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  2240     0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  2241     0DD7  0826               	movf	?___awmod,w
  2242     0DD8  00AE               	movwf	generar_fondo@p_228
  2243     0DD9                     l1969:
  2244                           
  2245                           ;main.c: 287: }
  2246     0DD9  082E               	movf	generar_fondo@p_228,w
  2247     0DDA  3E3E               	addlw	(low (_fondo| 0))& (0+255)
  2248     0DDB  0084               	movwf	4
  2249     0DDC  3002               	movlw	2
  2250     0DDD  1383               	bcf	3,7	;select IRP bank0
  2251     0DDE  0080               	movwf	0
  2252     0DDF                     l1971:
  2253                           
  2254                           ;main.c: 288: 
  2255     0DDF  082E               	movf	generar_fondo@p_228,w
  2256     0DE0  3E3F               	addlw	(low ((_fondo| 0+1)))& (0+255)
  2257     0DE1  0084               	movwf	4
  2258     0DE2  3003               	movlw	3
  2259     0DE3  0080               	movwf	0
  2260     0DE4                     l1973:
  2261                           
  2262                           ;main.c: 289: void disparar(void){
  2263     0DE4  3001               	movlw	1
  2264     0DE5  07B1               	addwf	generar_fondo@i_227,f
  2265     0DE6                     l1975:
  2266     0DE6  3002               	movlw	2
  2267     0DE7  0231               	subwf	generar_fondo@i_227,w
  2268     0DE8  1C03               	skipc
  2269     0DE9  2DEB               	goto	u2191
  2270     0DEA  2DEC               	goto	u2190
  2271     0DEB                     u2191:
  2272     0DEB  2DC1               	goto	l1967
  2273     0DEC                     u2190:
  2274     0DEC                     l1977:
  2275                           
  2276                           ;main.c: 292:     LCD_putc(4);
  2277     0DEC  01B3               	clrf	generar_fondo@i_229
  2278     0DED                     l1983:
  2279                           
  2280                           ;main.c: 293: 
  2281     0DED  0833               	movf	generar_fondo@i_229,w
  2282     0DEE  3E52               	addlw	(low (_nubes| 0))& (0+255)
  2283     0DEF  0084               	movwf	4
  2284     0DF0  3014               	movlw	20
  2285     0DF1  00A6               	movwf	___awmod@divisor
  2286     0DF2  3000               	movlw	0
  2287     0DF3  00A7               	movwf	___awmod@divisor+1
  2288     0DF4  120A  158A  2312  120A  158A  	fcall	_rand
  2289     0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  2290     0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  2291     0DFB  0821               	movf	?_rand+1,w
  2292     0DFC  00A9               	movwf	___awmod@dividend+1
  2293     0DFD  0820               	movf	?_rand,w
  2294     0DFE  00A8               	movwf	___awmod@dividend
  2295     0DFF  120A  158A  2363  120A  158A  	fcall	___awmod
  2296     0E04  1283               	bcf	3,5	;RP0=0, select bank0
  2297     0E05  1303               	bcf	3,6	;RP1=0, select bank0
  2298     0E06  0826               	movf	?___awmod,w
  2299     0E07  1383               	bcf	3,7	;select IRP bank0
  2300     0E08  0080               	movwf	0
  2301     0E09                     l1985:
  2302                           
  2303                           ;main.c: 294: 
  2304     0E09  3001               	movlw	1
  2305     0E0A  07B3               	addwf	generar_fondo@i_229,f
  2306     0E0B                     l1987:
  2307     0E0B  3003               	movlw	3
  2308     0E0C  0233               	subwf	generar_fondo@i_229,w
  2309     0E0D  1C03               	skipc
  2310     0E0E  2E10               	goto	u2201
  2311     0E0F  2E11               	goto	u2200
  2312     0E10                     u2201:
  2313     0E10  2DED               	goto	l1983
  2314     0E11                     u2200:
  2315     0E11                     l296:
  2316     0E11  0008               	return
  2317     0E12                     __end_of_generar_fondo:
  2318                           
  2319                           	psect	text5
  2320     0B12                     __ptext5:	
  2321 ;; *************** function _rand *****************
  2322 ;; Defined at:
  2323 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\rand.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  2    0[BANK0 ] int 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       2       0       0       0
  2338 ;;      Locals:         0       0       0       0       0
  2339 ;;      Temps:          0       4       0       0       0
  2340 ;;      Totals:         0       6       0       0       0
  2341 ;;Total ram usage:        6 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 1
  2344 ;; This function calls:
  2345 ;;		___lmul
  2346 ;; This function is called by:
  2347 ;;		_generar_fondo
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351     0B12                     _rand:	
  2352                           ;psect for function _rand
  2353                           
  2354     0B12                     l1849:	
  2355                           ;incstack = 0
  2356                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2357                           
  2358     0B12  3001               	movlw	1
  2359     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  2360     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  2361     0B15  00A2               	movwf	??_rand
  2362     0B16  3000               	movlw	0
  2363     0B17  00A3               	movwf	??_rand+1
  2364     0B18  3000               	movlw	0
  2365     0B19  00A4               	movwf	??_rand+2
  2366     0B1A  3000               	movlw	0
  2367     0B1B  00A5               	movwf	??_rand+3
  2368     0B1C  0858               	movf	_seed+3,w
  2369     0B1D  00F3               	movwf	___lmul@multiplier+3
  2370     0B1E  0857               	movf	_seed+2,w
  2371     0B1F  00F2               	movwf	___lmul@multiplier+2
  2372     0B20  0856               	movf	_seed+1,w
  2373     0B21  00F1               	movwf	___lmul@multiplier+1
  2374     0B22  0855               	movf	_seed,w
  2375     0B23  00F0               	movwf	___lmul@multiplier
  2376     0B24  304C               	movlw	76
  2377     0B25  00F7               	movwf	___lmul@multiplicand+3
  2378     0B26  3095               	movlw	149
  2379     0B27  00F6               	movwf	___lmul@multiplicand+2
  2380     0B28  307F               	movlw	127
  2381     0B29  00F5               	movwf	___lmul@multiplicand+1
  2382     0B2A  302D               	movlw	45
  2383     0B2B  00F4               	movwf	___lmul@multiplicand
  2384     0B2C  120A  158A  227C  120A  158A  	fcall	___lmul
  2385     0B31  0870               	movf	?___lmul,w
  2386     0B32  1283               	bcf	3,5	;RP0=0, select bank0
  2387     0B33  1303               	bcf	3,6	;RP1=0, select bank0
  2388     0B34  07A2               	addwf	??_rand,f
  2389     0B35  0871               	movf	?___lmul+1,w
  2390     0B36  1803               	skipnc
  2391     0B37  0F71               	incfsz	?___lmul+1,w
  2392     0B38  2B3A               	goto	u2010
  2393     0B39  2B3B               	goto	u2011
  2394     0B3A                     u2010:
  2395     0B3A  07A3               	addwf	??_rand+1,f
  2396     0B3B                     u2011:
  2397     0B3B  0872               	movf	?___lmul+2,w
  2398     0B3C  1803               	skipnc
  2399     0B3D  0F72               	incfsz	?___lmul+2,w
  2400     0B3E  2B40               	goto	u2012
  2401     0B3F  2B41               	goto	u2013
  2402     0B40                     u2012:
  2403     0B40  07A4               	addwf	??_rand+2,f
  2404     0B41                     u2013:
  2405     0B41  0873               	movf	?___lmul+3,w
  2406     0B42  1803               	skipnc
  2407     0B43  0A73               	incf	?___lmul+3,w
  2408     0B44  07A5               	addwf	??_rand+3,f
  2409     0B45  0825               	movf	??_rand+3,w
  2410     0B46  00D8               	movwf	_seed+3
  2411     0B47  0824               	movf	??_rand+2,w
  2412     0B48  00D7               	movwf	_seed+2
  2413     0B49  0823               	movf	??_rand+1,w
  2414     0B4A  00D6               	movwf	_seed+1
  2415     0B4B  0822               	movf	??_rand,w
  2416     0B4C  00D5               	movwf	_seed
  2417     0B4D                     l1851:
  2418     0B4D  0855               	movf	_seed,w
  2419     0B4E  00A2               	movwf	??_rand
  2420     0B4F  0856               	movf	_seed+1,w
  2421     0B50  00A3               	movwf	??_rand+1
  2422     0B51  0857               	movf	_seed+2,w
  2423     0B52  00A4               	movwf	??_rand+2
  2424     0B53  0858               	movf	_seed+3,w
  2425     0B54  00A5               	movwf	??_rand+3
  2426     0B55  3011               	movlw	17
  2427     0B56                     u2025:
  2428     0B56  1003               	clrc
  2429     0B57  0CA5               	rrf	??_rand+3,f
  2430     0B58  0CA4               	rrf	??_rand+2,f
  2431     0B59  0CA3               	rrf	??_rand+1,f
  2432     0B5A  0CA2               	rrf	??_rand,f
  2433     0B5B                     u2020:
  2434     0B5B  3EFF               	addlw	-1
  2435     0B5C  1D03               	skipz
  2436     0B5D  2B56               	goto	u2025
  2437     0B5E  0823               	movf	??_rand+1,w
  2438     0B5F  00A1               	movwf	?_rand+1
  2439     0B60  0822               	movf	??_rand,w
  2440     0B61  00A0               	movwf	?_rand
  2441     0B62                     l1077:
  2442     0B62  0008               	return
  2443     0B63                     __end_of_rand:
  2444                           
  2445                           	psect	text6
  2446     0A7C                     __ptext6:	
  2447 ;; *************** function ___lmul *****************
  2448 ;; Defined at:
  2449 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  multiplier      4    0[COMMON] unsigned long 
  2452 ;;  multiplicand    4    4[COMMON] unsigned long 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  product         4    9[COMMON] unsigned long 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  4    0[COMMON] unsigned long 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2464 ;;      Params:         8       0       0       0       0
  2465 ;;      Locals:         4       0       0       0       0
  2466 ;;      Temps:          1       0       0       0       0
  2467 ;;      Totals:        13       0       0       0       0
  2468 ;;Total ram usage:       13 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_rand
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477     0A7C                     ___lmul:	
  2478                           ;psect for function ___lmul
  2479                           
  2480     0A7C                     l1817:	
  2481                           ;incstack = 0
  2482                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2483                           
  2484     0A7C  3000               	movlw	0
  2485     0A7D  00FC               	movwf	___lmul@product+3
  2486     0A7E  3000               	movlw	0
  2487     0A7F  00FB               	movwf	___lmul@product+2
  2488     0A80  3000               	movlw	0
  2489     0A81  00FA               	movwf	___lmul@product+1
  2490     0A82  3000               	movlw	0
  2491     0A83  00F9               	movwf	___lmul@product
  2492     0A84                     l1819:
  2493     0A84  1C70               	btfss	___lmul@multiplier,0
  2494     0A85  2A87               	goto	u1931
  2495     0A86  2A88               	goto	u1930
  2496     0A87                     u1931:
  2497     0A87  2A9F               	goto	l1823
  2498     0A88                     u1930:
  2499     0A88                     l1821:
  2500     0A88  0874               	movf	___lmul@multiplicand,w
  2501     0A89  07F9               	addwf	___lmul@product,f
  2502     0A8A  0875               	movf	___lmul@multiplicand+1,w
  2503     0A8B  1103               	clrz
  2504     0A8C  1803               	skipnc
  2505     0A8D  3E01               	addlw	1
  2506     0A8E  1903               	skipnz
  2507     0A8F  2A91               	goto	u1941
  2508     0A90  07FA               	addwf	___lmul@product+1,f
  2509     0A91                     u1941:
  2510     0A91  0876               	movf	___lmul@multiplicand+2,w
  2511     0A92  1103               	clrz
  2512     0A93  1803               	skipnc
  2513     0A94  3E01               	addlw	1
  2514     0A95  1903               	skipnz
  2515     0A96  2A98               	goto	u1942
  2516     0A97  07FB               	addwf	___lmul@product+2,f
  2517     0A98                     u1942:
  2518     0A98  0877               	movf	___lmul@multiplicand+3,w
  2519     0A99  1103               	clrz
  2520     0A9A  1803               	skipnc
  2521     0A9B  3E01               	addlw	1
  2522     0A9C  1903               	skipnz
  2523     0A9D  2A9F               	goto	u1943
  2524     0A9E  07FC               	addwf	___lmul@product+3,f
  2525     0A9F                     u1943:
  2526     0A9F                     l1823:
  2527     0A9F  3001               	movlw	1
  2528     0AA0  00F8               	movwf	??___lmul
  2529     0AA1                     u1955:
  2530     0AA1  1003               	clrc
  2531     0AA2  0DF4               	rlf	___lmul@multiplicand,f
  2532     0AA3  0DF5               	rlf	___lmul@multiplicand+1,f
  2533     0AA4  0DF6               	rlf	___lmul@multiplicand+2,f
  2534     0AA5  0DF7               	rlf	___lmul@multiplicand+3,f
  2535     0AA6  0BF8               	decfsz	??___lmul,f
  2536     0AA7  2AA1               	goto	u1955
  2537     0AA8                     l1825:
  2538     0AA8  3001               	movlw	1
  2539     0AA9                     u1965:
  2540     0AA9  1003               	clrc
  2541     0AAA  0CF3               	rrf	___lmul@multiplier+3,f
  2542     0AAB  0CF2               	rrf	___lmul@multiplier+2,f
  2543     0AAC  0CF1               	rrf	___lmul@multiplier+1,f
  2544     0AAD  0CF0               	rrf	___lmul@multiplier,f
  2545     0AAE  3EFF               	addlw	-1
  2546     0AAF  1D03               	skipz
  2547     0AB0  2AA9               	goto	u1965
  2548     0AB1  0873               	movf	___lmul@multiplier+3,w
  2549     0AB2  0472               	iorwf	___lmul@multiplier+2,w
  2550     0AB3  0471               	iorwf	___lmul@multiplier+1,w
  2551     0AB4  0470               	iorwf	___lmul@multiplier,w
  2552     0AB5  1D03               	skipz
  2553     0AB6  2AB8               	goto	u1971
  2554     0AB7  2AB9               	goto	u1970
  2555     0AB8                     u1971:
  2556     0AB8  2A84               	goto	l1819
  2557     0AB9                     u1970:
  2558     0AB9                     l1827:
  2559     0AB9  087C               	movf	___lmul@product+3,w
  2560     0ABA  00F3               	movwf	?___lmul+3
  2561     0ABB  087B               	movf	___lmul@product+2,w
  2562     0ABC  00F2               	movwf	?___lmul+2
  2563     0ABD  087A               	movf	___lmul@product+1,w
  2564     0ABE  00F1               	movwf	?___lmul+1
  2565     0ABF  0879               	movf	___lmul@product,w
  2566     0AC0  00F0               	movwf	?___lmul
  2567     0AC1                     l627:
  2568     0AC1  0008               	return
  2569     0AC2                     __end_of___lmul:
  2570                           
  2571                           	psect	text7
  2572     0B63                     __ptext7:	
  2573 ;; *************** function ___awmod *****************
  2574 ;; Defined at:
  2575 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  divisor         2    6[BANK0 ] int 
  2578 ;;  dividend        2    8[BANK0 ] int 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  sign            1   11[BANK0 ] unsigned char 
  2581 ;;  counter         1   10[BANK0 ] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  2    6[BANK0 ] int 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       4       0       0       0
  2592 ;;      Locals:         0       2       0       0       0
  2593 ;;      Temps:          0       0       0       0       0
  2594 ;;      Totals:         0       6       0       0       0
  2595 ;;Total ram usage:        6 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_generar_fondo
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604     0B63                     ___awmod:	
  2605                           ;psect for function ___awmod
  2606                           
  2607     0B63                     l1855:	
  2608                           ;incstack = 0
  2609                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2610                           
  2611     0B63  1283               	bcf	3,5	;RP0=0, select bank0
  2612     0B64  1303               	bcf	3,6	;RP1=0, select bank0
  2613     0B65  01AB               	clrf	___awmod@sign
  2614     0B66                     l1857:
  2615     0B66  1FA9               	btfss	___awmod@dividend+1,7
  2616     0B67  2B69               	goto	u2031
  2617     0B68  2B6A               	goto	u2030
  2618     0B69                     u2031:
  2619     0B69  2B71               	goto	l1863
  2620     0B6A                     u2030:
  2621     0B6A                     l1859:
  2622     0B6A  09A8               	comf	___awmod@dividend,f
  2623     0B6B  09A9               	comf	___awmod@dividend+1,f
  2624     0B6C  0AA8               	incf	___awmod@dividend,f
  2625     0B6D  1903               	skipnz
  2626     0B6E  0AA9               	incf	___awmod@dividend+1,f
  2627     0B6F                     l1861:
  2628     0B6F  3001               	movlw	1
  2629     0B70  00AB               	movwf	___awmod@sign
  2630     0B71                     l1863:
  2631     0B71  1FA7               	btfss	___awmod@divisor+1,7
  2632     0B72  2B74               	goto	u2041
  2633     0B73  2B75               	goto	u2040
  2634     0B74                     u2041:
  2635     0B74  2B7A               	goto	l1867
  2636     0B75                     u2040:
  2637     0B75                     l1865:
  2638     0B75  09A6               	comf	___awmod@divisor,f
  2639     0B76  09A7               	comf	___awmod@divisor+1,f
  2640     0B77  0AA6               	incf	___awmod@divisor,f
  2641     0B78  1903               	skipnz
  2642     0B79  0AA7               	incf	___awmod@divisor+1,f
  2643     0B7A                     l1867:
  2644     0B7A  0826               	movf	___awmod@divisor,w
  2645     0B7B  0427               	iorwf	___awmod@divisor+1,w
  2646     0B7C  1903               	btfsc	3,2
  2647     0B7D  2B7F               	goto	u2051
  2648     0B7E  2B80               	goto	u2050
  2649     0B7F                     u2051:
  2650     0B7F  2BAD               	goto	l1885
  2651     0B80                     u2050:
  2652     0B80                     l1869:
  2653     0B80  3001               	movlw	1
  2654     0B81  00AA               	movwf	___awmod@counter
  2655     0B82  2B8C               	goto	l1875
  2656     0B83                     l1871:
  2657     0B83  3001               	movlw	1
  2658     0B84                     u2065:
  2659     0B84  1003               	clrc
  2660     0B85  0DA6               	rlf	___awmod@divisor,f
  2661     0B86  0DA7               	rlf	___awmod@divisor+1,f
  2662     0B87  3EFF               	addlw	-1
  2663     0B88  1D03               	skipz
  2664     0B89  2B84               	goto	u2065
  2665     0B8A                     l1873:
  2666     0B8A  3001               	movlw	1
  2667     0B8B  07AA               	addwf	___awmod@counter,f
  2668     0B8C                     l1875:
  2669     0B8C  1FA7               	btfss	___awmod@divisor+1,7
  2670     0B8D  2B8F               	goto	u2071
  2671     0B8E  2B90               	goto	u2070
  2672     0B8F                     u2071:
  2673     0B8F  2B83               	goto	l1871
  2674     0B90                     u2070:
  2675     0B90                     l1877:
  2676     0B90  0827               	movf	___awmod@divisor+1,w
  2677     0B91  0229               	subwf	___awmod@dividend+1,w
  2678     0B92  1D03               	skipz
  2679     0B93  2B96               	goto	u2085
  2680     0B94  0826               	movf	___awmod@divisor,w
  2681     0B95  0228               	subwf	___awmod@dividend,w
  2682     0B96                     u2085:
  2683     0B96  1C03               	skipc
  2684     0B97  2B99               	goto	u2081
  2685     0B98  2B9A               	goto	u2080
  2686     0B99                     u2081:
  2687     0B99  2BA0               	goto	l1881
  2688     0B9A                     u2080:
  2689     0B9A                     l1879:
  2690     0B9A  0826               	movf	___awmod@divisor,w
  2691     0B9B  02A8               	subwf	___awmod@dividend,f
  2692     0B9C  0827               	movf	___awmod@divisor+1,w
  2693     0B9D  1C03               	skipc
  2694     0B9E  03A9               	decf	___awmod@dividend+1,f
  2695     0B9F  02A9               	subwf	___awmod@dividend+1,f
  2696     0BA0                     l1881:
  2697     0BA0  3001               	movlw	1
  2698     0BA1                     u2095:
  2699     0BA1  1003               	clrc
  2700     0BA2  0CA7               	rrf	___awmod@divisor+1,f
  2701     0BA3  0CA6               	rrf	___awmod@divisor,f
  2702     0BA4  3EFF               	addlw	-1
  2703     0BA5  1D03               	skipz
  2704     0BA6  2BA1               	goto	u2095
  2705     0BA7                     l1883:
  2706     0BA7  3001               	movlw	1
  2707     0BA8  02AA               	subwf	___awmod@counter,f
  2708     0BA9  1D03               	btfss	3,2
  2709     0BAA  2BAC               	goto	u2101
  2710     0BAB  2BAD               	goto	u2100
  2711     0BAC                     u2101:
  2712     0BAC  2B90               	goto	l1877
  2713     0BAD                     u2100:
  2714     0BAD                     l1885:
  2715     0BAD  082B               	movf	___awmod@sign,w
  2716     0BAE  1903               	btfsc	3,2
  2717     0BAF  2BB1               	goto	u2111
  2718     0BB0  2BB2               	goto	u2110
  2719     0BB1                     u2111:
  2720     0BB1  2BB7               	goto	l1889
  2721     0BB2                     u2110:
  2722     0BB2                     l1887:
  2723     0BB2  09A8               	comf	___awmod@dividend,f
  2724     0BB3  09A9               	comf	___awmod@dividend+1,f
  2725     0BB4  0AA8               	incf	___awmod@dividend,f
  2726     0BB5  1903               	skipnz
  2727     0BB6  0AA9               	incf	___awmod@dividend+1,f
  2728     0BB7                     l1889:
  2729     0BB7  0829               	movf	___awmod@dividend+1,w
  2730     0BB8  00A7               	movwf	?___awmod+1
  2731     0BB9  0828               	movf	___awmod@dividend,w
  2732     0BBA  00A6               	movwf	?___awmod
  2733     0BBB                     l779:
  2734     0BBB  0008               	return
  2735     0BBC                     __end_of___awmod:
  2736                           
  2737                           	psect	text8
  2738     0BBC                     __ptext8:	
  2739 ;; *************** function _dibujar_fondo *****************
  2740 ;; Defined at:
  2741 ;;		line 300 in file "main.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  i               1   10[COMMON] unsigned char 
  2746 ;;  i               1   11[COMMON] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2756 ;;      Params:         0       0       0       0       0
  2757 ;;      Locals:         2       0       0       0       0
  2758 ;;      Temps:          1       0       0       0       0
  2759 ;;      Totals:         3       0       0       0       0
  2760 ;;Total ram usage:        3 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 3
  2763 ;; This function calls:
  2764 ;;		_LCD_Write
  2765 ;;		_LCD_putc
  2766 ;;		_LCD_putrs
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;;		_pot_x
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773     0BBC                     _dibujar_fondo:	
  2774                           ;psect for function _dibujar_fondo
  2775                           
  2776     0BBC                     l1989:	
  2777                           ;incstack = 0
  2778                           ; Regs used in _dibujar_fondo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2779                           
  2780                           
  2781                           ;main.c: 301: 
  2782     0BBC  01FB               	clrf	dibujar_fondo@i
  2783     0BBD  2BBE               	goto	l1999
  2784     0BBE                     l306:
  2785     0BBE                     l1999:
  2786     0BBE  087B               	movf	dibujar_fondo@i,w
  2787     0BBF  3E94               	addlw	148
  2788     0BC0  00F9               	movwf	??_dibujar_fondo
  2789     0BC1  3004               	movlw	4
  2790     0BC2                     u2215:
  2791     0BC2  1003               	clrc
  2792     0BC3  0CF9               	rrf	??_dibujar_fondo,f
  2793     0BC4  3EFF               	addlw	-1
  2794     0BC5  1D03               	skipz
  2795     0BC6  2BC2               	goto	u2215
  2796     0BC7  0879               	movf	??_dibujar_fondo,w
  2797     0BC8  390F               	andlw	15
  2798     0BC9  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  2799     0BCE  087B               	movf	dibujar_fondo@i,w
  2800     0BCF  3E94               	addlw	148
  2801     0BD0  390F               	andlw	15
  2802     0BD1  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  2803     0BD6                     l2003:
  2804                           
  2805                           ;main.c: 303:             do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x + offse
      +                          t & 0xF0) >> 4 ); LCD_Write( 0x80 + pos_x + offset & 0x0F); } while ( 0 ); } else if ( p
      +                          os_y == 1 ) { do { LCD_Write( (0xC0 + pos_x + offset & 0xF0) >> 4 ); LCD_Write( 0xC0 + p
      +                          os_x + offset & 0x0F); } while ( 0 ); } else if ( pos_y == 2 ) { do { LCD_Write( (0x94 +
      +                           pos_x + offset & 0xF0) >> 4 ); LCD_Write( 0x94 + pos_x + offset & 0x0F); } while ( 0 );
      +                           } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x + offset & 0xF0) >> 4 ); LCD_W
      +                          rite( 0xD4 + pos_x + offset & 0x0F); } while ( 0 ); } } while ( 0 );
  2806     0BD6  087B               	movf	dibujar_fondo@i,w
  2807     0BD7  3E3E               	addlw	(low (_fondo| 0))& (0+255)
  2808     0BD8  0084               	movwf	4
  2809     0BD9  3020               	movlw	32
  2810     0BDA  1383               	bcf	3,7	;select IRP bank0
  2811     0BDB  0600               	xorwf	0,w
  2812     0BDC  1903               	btfsc	3,2
  2813     0BDD  2BDF               	goto	u2221
  2814     0BDE  2BE0               	goto	u2220
  2815     0BDF                     u2221:
  2816     0BDF  2BEA               	goto	l2007
  2817     0BE0                     u2220:
  2818     0BE0                     l2005:
  2819                           
  2820                           ;main.c: 304:             LCD_putc('-');
  2821     0BE0  087B               	movf	dibujar_fondo@i,w
  2822     0BE1  3E3E               	addlw	(low (_fondo| 0))& (0+255)
  2823     0BE2  0084               	movwf	4
  2824     0BE3  0800               	movf	0,w
  2825     0BE4  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  2826                           
  2827                           ;main.c: 305:             moved = 1;
  2828     0BE9  2BF1               	goto	l2009
  2829     0BEA                     l2007:
  2830                           
  2831                           ;main.c: 306:         }
  2832     0BEA  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2833     0BEB  00F6               	movwf	LCD_putrs@a
  2834     0BEC  120A  158A  21B3  120A  158A  	fcall	_LCD_putrs
  2835     0BF1                     l2009:
  2836                           
  2837                           ;main.c: 308: 
  2838     0BF1  3001               	movlw	1
  2839     0BF2  07FB               	addwf	dibujar_fondo@i,f
  2840     0BF3                     l2011:
  2841     0BF3  3014               	movlw	20
  2842     0BF4  027B               	subwf	dibujar_fondo@i,w
  2843     0BF5  1C03               	skipc
  2844     0BF6  2BF8               	goto	u2231
  2845     0BF7  2BF9               	goto	u2230
  2846     0BF8                     u2231:
  2847     0BF8  2BBE               	goto	l306
  2848     0BF9                     u2230:
  2849     0BF9                     l2013:
  2850                           
  2851                           ;main.c: 311:             LCD_putc('-');
  2852     0BF9  01FA               	clrf	dibujar_fondo@i_233
  2853     0BFA  2BFB               	goto	l2021
  2854     0BFB                     l323:
  2855     0BFB                     l2021:
  2856     0BFB  087A               	movf	dibujar_fondo@i_233,w
  2857     0BFC  3E52               	addlw	(low (_nubes| 0))& (0+255)
  2858     0BFD  0084               	movwf	4
  2859     0BFE  1383               	bcf	3,7	;select IRP bank0
  2860     0BFF  0800               	movf	0,w
  2861     0C00  3EC0               	addlw	192
  2862     0C01  00F9               	movwf	??_dibujar_fondo
  2863     0C02  3004               	movlw	4
  2864     0C03                     u2245:
  2865     0C03  1003               	clrc
  2866     0C04  0CF9               	rrf	??_dibujar_fondo,f
  2867     0C05  3EFF               	addlw	-1
  2868     0C06  1D03               	skipz
  2869     0C07  2C03               	goto	u2245
  2870     0C08  0879               	movf	??_dibujar_fondo,w
  2871     0C09  390F               	andlw	15
  2872     0C0A  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  2873     0C0F  087A               	movf	dibujar_fondo@i_233,w
  2874     0C10  3E52               	addlw	(low (_nubes| 0))& (0+255)
  2875     0C11  0084               	movwf	4
  2876     0C12  1383               	bcf	3,7	;select IRP bank0
  2877     0C13  0800               	movf	0,w
  2878     0C14  3EC0               	addlw	192
  2879     0C15  390F               	andlw	15
  2880     0C16  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  2881     0C1B                     l338:
  2882                           
  2883                           ;main.c: 313:         }
  2884     0C1B  3006               	movlw	6
  2885     0C1C  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  2886     0C21                     l2027:
  2887                           
  2888                           ;main.c: 314: 
  2889     0C21  3001               	movlw	1
  2890     0C22  07FA               	addwf	dibujar_fondo@i_233,f
  2891     0C23                     l2029:
  2892     0C23  3003               	movlw	3
  2893     0C24  027A               	subwf	dibujar_fondo@i_233,w
  2894     0C25  1C03               	skipc
  2895     0C26  2C28               	goto	u2251
  2896     0C27  2C29               	goto	u2250
  2897     0C28                     u2251:
  2898     0C28  2BFB               	goto	l323
  2899     0C29                     u2250:
  2900     0C29                     l339:
  2901     0C29  0008               	return
  2902     0C2A                     __end_of_dibujar_fondo:
  2903                           
  2904                           	psect	text9
  2905     0A22                     __ptext9:	
  2906 ;; *************** function _ADC_Read *****************
  2907 ;; Defined at:
  2908 ;;		line 145 in file "main.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  channel         1    wreg     unsigned char 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  channel         1    4[COMMON] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  2    0[COMMON] unsigned int 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2922 ;;      Params:         2       0       0       0       0
  2923 ;;      Locals:         1       0       0       0       0
  2924 ;;      Temps:          2       0       0       0       0
  2925 ;;      Totals:         5       0       0       0       0
  2926 ;;Total ram usage:        5 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_pot_x
  2932 ;;		_pot_y
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936     0A22                     _ADC_Read:	
  2937                           ;psect for function _ADC_Read
  2938                           
  2939                           
  2940                           ;incstack = 0
  2941                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  2942                           ;ADC_Read@channel stored from wreg
  2943     0A22  00F4               	movwf	ADC_Read@channel
  2944     0A23                     l1909:
  2945                           
  2946                           ;main.c: 146:     LCD_custom_char(3, casa2);
  2947     0A23  2A24               	nop2	;2 cycle nop
  2948     0A24  2A25               	nop2	;2 cycle nop
  2949     0A25  0000               	nop
  2950     0A26                     l1911:
  2951                           
  2952                           ;main.c: 147:     LCD_custom_char(4, bob_reves);
  2953     0A26  3083               	movlw	131
  2954     0A27  1283               	bcf	3,5	;RP0=0, select bank0
  2955     0A28  1303               	bcf	3,6	;RP1=0, select bank0
  2956     0A29  059F               	andwf	31,f	;volatile
  2957                           
  2958                           ;main.c: 148:     LCD_custom_char(5, arbol);
  2959     0A2A  0874               	movf	ADC_Read@channel,w	;volatile
  2960     0A2B  00F2               	movwf	??_ADC_Read
  2961     0A2C  3001               	movlw	1
  2962     0A2D                     u2145:
  2963     0A2D  1003               	clrc
  2964     0A2E  0DF2               	rlf	??_ADC_Read,f
  2965     0A2F  3EFF               	addlw	-1
  2966     0A30  1D03               	skipz
  2967     0A31  2A2D               	goto	u2145
  2968     0A32  1003               	clrc
  2969     0A33  0D72               	rlf	??_ADC_Read,w
  2970     0A34  049F               	iorwf	31,f	;volatile
  2971     0A35                     l1913:
  2972                           
  2973                           ;main.c: 149:     LCD_custom_char(6, nube);
  2974     0A35  3003               	movlw	3
  2975     0A36  00F3               	movwf	??_ADC_Read+1
  2976     0A37  3097               	movlw	151
  2977     0A38  00F2               	movwf	??_ADC_Read
  2978     0A39                     u3457:
  2979     0A39  0BF2               	decfsz	??_ADC_Read,f
  2980     0A3A  2A39               	goto	u3457
  2981     0A3B  0BF3               	decfsz	??_ADC_Read+1,f
  2982     0A3C  2A39               	goto	u3457
  2983     0A3D  2A3E               	nop2
  2984     0A3E                     l1915:
  2985                           
  2986                           ;main.c: 150:     LCD_custom_char(7, flor);
  2987     0A3E  1283               	bcf	3,5	;RP0=0, select bank0
  2988     0A3F  1303               	bcf	3,6	;RP1=0, select bank0
  2989     0A40  149F               	bsf	31,1	;volatile
  2990     0A41                     l103:	
  2991                           ;main.c: 151: 
  2992                           
  2993     0A41  189F               	btfsc	31,1	;volatile
  2994     0A42  2A44               	goto	u2151
  2995     0A43  2A45               	goto	u2150
  2996     0A44                     u2151:
  2997     0A44  2A41               	goto	l103
  2998     0A45                     u2150:
  2999     0A45                     l1917:
  3000                           
  3001                           ;main.c: 152:     srand(123);
  3002     0A45  081E               	movf	30,w	;volatile
  3003     0A46  00F1               	movwf	?_ADC_Read+1
  3004     0A47  1683               	bsf	3,5	;RP0=1, select bank1
  3005     0A48  1303               	bcf	3,6	;RP1=0, select bank1
  3006     0A49  081E               	movf	30,w	;volatile
  3007     0A4A  00F0               	movwf	?_ADC_Read
  3008     0A4B                     l106:
  3009     0A4B  0008               	return
  3010     0A4C                     __end_of_ADC_Read:
  3011                           
  3012                           	psect	text10
  3013     0C2A                     __ptext10:	
  3014 ;; *************** function _mover_nubes *****************
  3015 ;; Defined at:
  3016 ;;		line 256 in file "main.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  i               1    2[BANK0 ] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         0       0       0       0       0
  3031 ;;      Locals:         0       3       0       0       0
  3032 ;;      Temps:          3       0       0       0       0
  3033 ;;      Totals:         3       3       0       0       0
  3034 ;;Total ram usage:        6 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 3
  3037 ;; This function calls:
  3038 ;;		_LCD_Write
  3039 ;;		_LCD_putc
  3040 ;;		_LCD_putrs
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046     0C2A                     _mover_nubes:	
  3047                           ;psect for function _mover_nubes
  3048                           
  3049     0C2A                     l2353:	
  3050                           ;incstack = 0
  3051                           ; Regs used in _mover_nubes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3052                           
  3053                           
  3054                           ;main.c: 257:     for(uint8_t i = 0; i < 2; i++){
  3055     0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  3056     0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  3057     0C2C  01A2               	clrf	mover_nubes@i
  3058     0C2D  2C2E               	goto	l2361
  3059     0C2E                     l246:
  3060     0C2E                     l2361:
  3061     0C2E  0822               	movf	mover_nubes@i,w
  3062     0C2F  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3063     0C30  0084               	movwf	4
  3064     0C31  1383               	bcf	3,7	;select IRP bank0
  3065     0C32  0800               	movf	0,w
  3066     0C33  3EC0               	addlw	192
  3067     0C34  00F9               	movwf	??_mover_nubes
  3068     0C35  3004               	movlw	4
  3069     0C36                     u3305:
  3070     0C36  1003               	clrc
  3071     0C37  0CF9               	rrf	??_mover_nubes,f
  3072     0C38  3EFF               	addlw	-1
  3073     0C39  1D03               	skipz
  3074     0C3A  2C36               	goto	u3305
  3075     0C3B  0879               	movf	??_mover_nubes,w
  3076     0C3C  390F               	andlw	15
  3077     0C3D  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3078     0C42  1283               	bcf	3,5	;RP0=0, select bank0
  3079     0C43  1303               	bcf	3,6	;RP1=0, select bank0
  3080     0C44  0822               	movf	mover_nubes@i,w
  3081     0C45  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3082     0C46  0084               	movwf	4
  3083     0C47  1383               	bcf	3,7	;select IRP bank0
  3084     0C48  0800               	movf	0,w
  3085     0C49  3EC0               	addlw	192
  3086     0C4A  390F               	andlw	15
  3087     0C4B  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3088     0C50                     l261:
  3089                           
  3090                           ;main.c: 259:         fondo[p] = 2;
  3091     0C50  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3092     0C51  00F6               	movwf	LCD_putrs@a
  3093     0C52  120A  158A  21B3  120A  158A  	fcall	_LCD_putrs
  3094     0C57                     l2367:
  3095                           
  3096                           ;main.c: 260:         fondo[p + 1] = 3;
  3097     0C57  1283               	bcf	3,5	;RP0=0, select bank0
  3098     0C58  1303               	bcf	3,6	;RP1=0, select bank0
  3099     0C59  0822               	movf	mover_nubes@i,w
  3100     0C5A  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3101     0C5B  0084               	movwf	4
  3102     0C5C  1383               	bcf	3,7	;select IRP bank0
  3103     0C5D  0800               	movf	0,w
  3104     0C5E  1903               	btfsc	3,2
  3105     0C5F  2C61               	goto	u3311
  3106     0C60  2C62               	goto	u3310
  3107     0C61                     u3311:
  3108     0C61  2C6D               	goto	l2371
  3109     0C62                     u3310:
  3110     0C62                     l2369:
  3111     0C62  0822               	movf	mover_nubes@i,w
  3112     0C63  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3113     0C64  0084               	movwf	4
  3114     0C65  0800               	movf	0,w
  3115     0C66  3EFF               	addlw	255
  3116     0C67  00A0               	movwf	_mover_nubes$220
  3117     0C68  30FF               	movlw	255
  3118     0C69  1803               	skipnc
  3119     0C6A  3000               	movlw	0
  3120     0C6B  00A1               	movwf	_mover_nubes$220+1
  3121     0C6C  2C71               	goto	l2373
  3122     0C6D                     l2371:
  3123     0C6D  3013               	movlw	19
  3124     0C6E  00A0               	movwf	_mover_nubes$220
  3125     0C6F  3000               	movlw	0
  3126     0C70  00A1               	movwf	_mover_nubes$220+1
  3127     0C71                     l2373:
  3128     0C71  0822               	movf	mover_nubes@i,w
  3129     0C72  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3130     0C73  0084               	movwf	4
  3131     0C74  0820               	movf	_mover_nubes$220,w
  3132     0C75  0080               	movwf	0
  3133     0C76                     l2377:
  3134     0C76  0822               	movf	mover_nubes@i,w
  3135     0C77  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3136     0C78  0084               	movwf	4
  3137     0C79  0800               	movf	0,w
  3138     0C7A  3EC0               	addlw	192
  3139     0C7B  00F9               	movwf	??_mover_nubes
  3140     0C7C  3004               	movlw	4
  3141     0C7D                     u3325:
  3142     0C7D  1003               	clrc
  3143     0C7E  0CF9               	rrf	??_mover_nubes,f
  3144     0C7F  3EFF               	addlw	-1
  3145     0C80  1D03               	skipz
  3146     0C81  2C7D               	goto	u3325
  3147     0C82  0879               	movf	??_mover_nubes,w
  3148     0C83  390F               	andlw	15
  3149     0C84  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3150     0C89  1283               	bcf	3,5	;RP0=0, select bank0
  3151     0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  3152     0C8B  0822               	movf	mover_nubes@i,w
  3153     0C8C  3E52               	addlw	(low (_nubes| 0))& (0+255)
  3154     0C8D  0084               	movwf	4
  3155     0C8E  1383               	bcf	3,7	;select IRP bank0
  3156     0C8F  0800               	movf	0,w
  3157     0C90  3EC0               	addlw	192
  3158     0C91  390F               	andlw	15
  3159     0C92  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3160     0C97                     l282:
  3161                           
  3162                           ;main.c: 262: 
  3163     0C97  3006               	movlw	6
  3164     0C98  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  3165     0C9D                     l2383:
  3166                           
  3167                           ;main.c: 263: 
  3168     0C9D  3001               	movlw	1
  3169     0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  3170     0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  3171     0CA0  07A2               	addwf	mover_nubes@i,f
  3172     0CA1                     l2385:
  3173     0CA1  3003               	movlw	3
  3174     0CA2  0222               	subwf	mover_nubes@i,w
  3175     0CA3  1C03               	skipc
  3176     0CA4  2CA6               	goto	u3331
  3177     0CA5  2CA7               	goto	u3330
  3178     0CA6                     u3331:
  3179     0CA6  2C2E               	goto	l246
  3180     0CA7                     u3330:
  3181     0CA7                     l2387:
  3182                           
  3183                           ;main.c: 264:     for(uint8_t i = 0; i < 3; i++){
  3184     0CA7  3002               	movlw	2
  3185     0CA8  00FB               	movwf	??_mover_nubes+2
  3186     0CA9  3045               	movlw	69
  3187     0CAA  00FA               	movwf	??_mover_nubes+1
  3188     0CAB  30A9               	movlw	169
  3189     0CAC  00F9               	movwf	??_mover_nubes
  3190     0CAD                     u3467:
  3191     0CAD  0BF9               	decfsz	??_mover_nubes,f
  3192     0CAE  2CAD               	goto	u3467
  3193     0CAF  0BFA               	decfsz	??_mover_nubes+1,f
  3194     0CB0  2CAD               	goto	u3467
  3195     0CB1  0BFB               	decfsz	??_mover_nubes+2,f
  3196     0CB2  2CAD               	goto	u3467
  3197     0CB3  2CB4               	nop2
  3198     0CB4                     l283:
  3199     0CB4  0008               	return
  3200     0CB5                     __end_of_mover_nubes:
  3201                           
  3202                           	psect	text11
  3203     09D7                     __ptext11:	
  3204 ;; *************** function _dibujar_suelo *****************
  3205 ;; Defined at:
  3206 ;;		line 130 in file "main.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  i               1   13[COMMON] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3220 ;;      Params:         0       0       0       0       0
  3221 ;;      Locals:         1       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0
  3223 ;;      Totals:         1       0       0       0       0
  3224 ;;Total ram usage:        1 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 4
  3227 ;; This function calls:
  3228 ;;		_LCD_Write
  3229 ;;		_LCD_custom_char
  3230 ;;		_LCD_putc
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236     09D7                     _dibujar_suelo:	
  3237                           ;psect for function _dibujar_suelo
  3238                           
  3239     09D7                     l2161:	
  3240                           ;incstack = 0
  3241                           ; Regs used in _dibujar_suelo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3242                           
  3243                           
  3244                           ;main.c: 131: uint8_t nubes[3];
  3245     09D7  3031               	movlw	(low ((_suelo-__stringbase)| (0+32768)))& (0+255)
  3246     09D8  00FB               	movwf	LCD_custom_char@x
  3247     09D9  3001               	movlw	1
  3248     09DA  120A  158A  224C  120A  158A  	fcall	_LCD_custom_char
  3249     09DF                     l2169:
  3250     09DF  300D               	movlw	13
  3251     09E0  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3252     09E5  3004               	movlw	4
  3253     09E6  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3254     09EB                     l2171:
  3255                           
  3256                           ;main.c: 133: void main(void){
  3257     09EB  01FD               	clrf	dibujar_suelo@i
  3258     09EC                     l2177:
  3259                           
  3260                           ;main.c: 134:     TRISAbits.TRISA2 = 1;
  3261     09EC  3001               	movlw	1
  3262     09ED  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  3263     09F2                     l2179:
  3264                           
  3265                           ;main.c: 135:     TRISAbits.TRISA3 = 0;
  3266     09F2  3001               	movlw	1
  3267     09F3  07FD               	addwf	dibujar_suelo@i,f
  3268     09F4                     l2181:
  3269     09F4  3014               	movlw	20
  3270     09F5  027D               	subwf	dibujar_suelo@i,w
  3271     09F6  1C03               	skipc
  3272     09F7  29F9               	goto	u2801
  3273     09F8  29FA               	goto	u2800
  3274     09F9                     u2801:
  3275     09F9  29EC               	goto	l2177
  3276     09FA                     u2800:
  3277     09FA                     l97:
  3278     09FA  0008               	return
  3279     09FB                     __end_of_dibujar_suelo:
  3280                           
  3281                           	psect	text12
  3282     0A4C                     __ptext12:	
  3283 ;; *************** function _LCD_custom_char *****************
  3284 ;; Defined at:
  3285 ;;		line 121 in file "main.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  pos             1    wreg     unsigned char 
  3288 ;;  x               1   11[COMMON] PTR const unsigned char 
  3289 ;;		 -> flor(8), nube(8), arbol(8), bob_reves(8), 
  3290 ;;		 -> casa2(8), casa1(8), bob(8), suelo(8), 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  pos             1    0[BANK0 ] unsigned char 
  3293 ;;  i               1    1[BANK0 ] unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3303 ;;      Params:         1       0       0       0       0
  3304 ;;      Locals:         0       2       0       0       0
  3305 ;;      Temps:          1       0       0       0       0
  3306 ;;      Totals:         2       2       0       0       0
  3307 ;;Total ram usage:        4 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 3
  3310 ;; This function calls:
  3311 ;;		_LCD_cg_ram_addr
  3312 ;;		_LCD_ram_write
  3313 ;; This function is called by:
  3314 ;;		_dibujar_suelo
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319     0A4C                     _LCD_custom_char:	
  3320                           ;psect for function _LCD_custom_char
  3321                           
  3322                           
  3323                           ;incstack = 0
  3324                           ; Regs used in _LCD_custom_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3325                           ;LCD_custom_char@pos stored from wreg
  3326     0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  3327     0A4D  1303               	bcf	3,6	;RP1=0, select bank0
  3328     0A4E  00A0               	movwf	LCD_custom_char@pos
  3329     0A4F                     l1893:
  3330                           
  3331                           ;main.c: 122:     GO_nDONE = 1;
  3332     0A4F  0820               	movf	LCD_custom_char@pos,w
  3333     0A50  3907               	andlw	7
  3334     0A51  00FC               	movwf	??_LCD_custom_char
  3335     0A52  3002               	movlw	2
  3336     0A53                     u2125:
  3337     0A53  1003               	clrc
  3338     0A54  0DFC               	rlf	??_LCD_custom_char,f
  3339     0A55  3EFF               	addlw	-1
  3340     0A56  1D03               	skipz
  3341     0A57  2A53               	goto	u2125
  3342     0A58  1003               	clrc
  3343     0A59  0D7C               	rlf	??_LCD_custom_char,w
  3344     0A5A  00A0               	movwf	LCD_custom_char@pos
  3345     0A5B                     l1895:
  3346                           
  3347                           ;main.c: 123:     while(GO_nDONE);
  3348     0A5B  0820               	movf	LCD_custom_char@pos,w
  3349     0A5C  120A  158A  21FB  120A  158A  	fcall	_LCD_cg_ram_addr
  3350     0A61                     l1897:
  3351                           
  3352                           ;main.c: 125: }
  3353     0A61  1283               	bcf	3,5	;RP0=0, select bank0
  3354     0A62  1303               	bcf	3,6	;RP1=0, select bank0
  3355     0A63  01A1               	clrf	LCD_custom_char@i
  3356     0A64                     l1903:
  3357                           
  3358                           ;main.c: 126: 
  3359     0A64  0821               	movf	LCD_custom_char@i,w
  3360     0A65  077B               	addwf	LCD_custom_char@x,w
  3361     0A66  0084               	movwf	4
  3362     0A67  120A  158A  2000  120A  158A  	fcall	stringdir
  3363     0A6C  120A  158A  2169  120A  158A  	fcall	_LCD_ram_write
  3364     0A71                     l1905:
  3365                           
  3366                           ;main.c: 127: uint8_t pos_x = 8;
  3367     0A71  3001               	movlw	1
  3368     0A72  1283               	bcf	3,5	;RP0=0, select bank0
  3369     0A73  1303               	bcf	3,6	;RP1=0, select bank0
  3370     0A74  07A1               	addwf	LCD_custom_char@i,f
  3371     0A75                     l1907:
  3372     0A75  3008               	movlw	8
  3373     0A76  0221               	subwf	LCD_custom_char@i,w
  3374     0A77  1C03               	skipc
  3375     0A78  2A7A               	goto	u2131
  3376     0A79  2A7B               	goto	u2130
  3377     0A7A                     u2131:
  3378     0A7A  2A64               	goto	l1903
  3379     0A7B                     u2130:
  3380     0A7B                     l75:
  3381     0A7B  0008               	return
  3382     0A7C                     __end_of_LCD_custom_char:
  3383                           
  3384                           	psect	text13
  3385     0969                     __ptext13:	
  3386 ;; *************** function _LCD_ram_write *****************
  3387 ;; Defined at:
  3388 ;;		line 103 in file "lcd.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  data            1    wreg     unsigned char 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  data            1    6[COMMON] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         0       0       0       0       0
  3403 ;;      Locals:         1       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0
  3405 ;;      Totals:         1       0       0       0       0
  3406 ;;Total ram usage:        1 bytes
  3407 ;; Hardware stack levels used: 1
  3408 ;; Hardware stack levels required when called: 2
  3409 ;; This function calls:
  3410 ;;		_LCD_putc
  3411 ;; This function is called by:
  3412 ;;		_LCD_custom_char
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416     0969                     _LCD_ram_write:	
  3417                           ;psect for function _LCD_ram_write
  3418                           
  3419                           
  3420                           ;incstack = 0
  3421                           ; Regs used in _LCD_ram_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3422                           ;LCD_ram_write@data stored from wreg
  3423     0969  00F6               	movwf	LCD_ram_write@data
  3424     096A                     l1839:
  3425                           
  3426                           ;lcd.c: 104:     LCD_putc(data);
  3427     096A  0876               	movf	LCD_ram_write@data,w
  3428     096B  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  3429     0970                     l527:
  3430     0970  0008               	return
  3431     0971                     __end_of_LCD_ram_write:
  3432                           
  3433                           	psect	text14
  3434     09FB                     __ptext14:	
  3435 ;; *************** function _LCD_cg_ram_addr *****************
  3436 ;; Defined at:
  3437 ;;		line 98 in file "lcd.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  addr            1    wreg     unsigned char 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  addr            1   10[COMMON] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3451 ;;      Params:         0       0       0       0       0
  3452 ;;      Locals:         1       0       0       0       0
  3453 ;;      Temps:          4       0       0       0       0
  3454 ;;      Totals:         5       0       0       0       0
  3455 ;;Total ram usage:        5 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 2
  3458 ;; This function calls:
  3459 ;;		_LCD_Write
  3460 ;; This function is called by:
  3461 ;;		_LCD_custom_char
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465     09FB                     _LCD_cg_ram_addr:	
  3466                           ;psect for function _LCD_cg_ram_addr
  3467                           
  3468                           
  3469                           ;incstack = 0
  3470                           ; Regs used in _LCD_cg_ram_addr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3471                           ;LCD_cg_ram_addr@addr stored from wreg
  3472     09FB  00FA               	movwf	LCD_cg_ram_addr@addr
  3473     09FC                     l1831:
  3474                           
  3475                           ;lcd.c: 99:     if (addr >= 64) addr &= 0x3F;
  3476     09FC  3040               	movlw	64
  3477     09FD  027A               	subwf	LCD_cg_ram_addr@addr,w
  3478     09FE  1C03               	skipc
  3479     09FF  2A01               	goto	u1981
  3480     0A00  2A02               	goto	u1980
  3481     0A01                     u1981:
  3482     0A01  2A04               	goto	l1835
  3483     0A02                     u1980:
  3484     0A02                     l1833:
  3485     0A02  303F               	movlw	63
  3486     0A03  05FA               	andwf	LCD_cg_ram_addr@addr,f
  3487     0A04                     l1835:
  3488     0A04  30F0               	movlw	240
  3489     0A05  057A               	andwf	LCD_cg_ram_addr@addr,w
  3490     0A06  00F6               	movwf	??_LCD_cg_ram_addr
  3491     0A07  3040               	movlw	64
  3492     0A08  0476               	iorwf	??_LCD_cg_ram_addr,w
  3493     0A09  00F7               	movwf	??_LCD_cg_ram_addr+1
  3494     0A0A  3000               	movlw	0
  3495     0A0B  00F8               	movwf	??_LCD_cg_ram_addr+2
  3496     0A0C  3004               	movlw	4
  3497     0A0D  00F9               	movwf	??_LCD_cg_ram_addr+3
  3498     0A0E                     u1995:
  3499     0A0E  0D78               	rlf	??_LCD_cg_ram_addr+2,w
  3500     0A0F  0CF8               	rrf	??_LCD_cg_ram_addr+2,f
  3501     0A10  0CF7               	rrf	??_LCD_cg_ram_addr+1,f
  3502     0A11  0BF9               	decfsz	??_LCD_cg_ram_addr+3,f
  3503     0A12  2A0E               	goto	u1995
  3504     0A13  0877               	movf	??_LCD_cg_ram_addr+1,w
  3505     0A14  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3506     0A19                     l1837:
  3507     0A19  087A               	movf	LCD_cg_ram_addr@addr,w
  3508     0A1A  390F               	andlw	15
  3509     0A1B  3840               	iorlw	64
  3510     0A1C  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  3511     0A21                     l524:
  3512     0A21  0008               	return
  3513     0A22                     __end_of_LCD_cg_ram_addr:
  3514                           
  3515                           	psect	text15
  3516     0979                     __ptext15:	
  3517 ;; *************** function _checar_boton *****************
  3518 ;; Defined at:
  3519 ;;		line 247 in file "main.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3533 ;;      Params:         0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0
  3536 ;;      Totals:         0       0       0       0       0
  3537 ;;Total ram usage:        0 bytes
  3538 ;; Hardware stack levels used: 1
  3539 ;; Hardware stack levels required when called: 4
  3540 ;; This function calls:
  3541 ;;		_disparar
  3542 ;; This function is called by:
  3543 ;;		_main
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547     0979                     _checar_boton:	
  3548                           ;psect for function _checar_boton
  3549                           
  3550     0979                     l2349:	
  3551                           ;incstack = 0
  3552                           ; Regs used in _checar_boton: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3553                           
  3554                           
  3555                           ;main.c: 248:         uint8_t p = rand() % 20;
  3556     0979  1283               	bcf	3,5	;RP0=0, select bank0
  3557     097A  1303               	bcf	3,6	;RP1=0, select bank0
  3558     097B  1D05               	btfss	5,2	;volatile
  3559     097C  297E               	goto	u3291
  3560     097D  297F               	goto	u3290
  3561     097E                     u3291:
  3562     097E  2984               	goto	l240
  3563     097F                     u3290:
  3564     097F                     l2351:
  3565                           
  3566                           ;main.c: 249:         fondo[p] = 5;
  3567     097F  120A  118A  236B  120A  158A  	fcall	_disparar
  3568     0984                     l240:
  3569     0984  0008               	return
  3570     0985                     __end_of_checar_boton:
  3571                           
  3572                           	psect	text16
  3573     036B                     __ptext16:	
  3574 ;; *************** function _disparar *****************
  3575 ;; Defined at:
  3576 ;;		line 317 in file "main.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  moved           1    9[COMMON] _Bool 
  3581 ;;  offset          1   10[COMMON] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       0       0       0       0
  3592 ;;      Locals:         2       0       0       0       0
  3593 ;;      Temps:          0       7       0       0       0
  3594 ;;      Totals:         2       7       0       0       0
  3595 ;;Total ram usage:        9 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; Hardware stack levels required when called: 3
  3598 ;; This function calls:
  3599 ;;		_LCD_Write
  3600 ;;		_LCD_putc
  3601 ;;		_LCD_putrs
  3602 ;; This function is called by:
  3603 ;;		_checar_boton
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607     036B                     _disparar:	
  3608                           ;psect for function _disparar
  3609                           
  3610     036B                     l342:	
  3611                           ;incstack = 0
  3612                           ; Regs used in _disparar: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3613                           ;main.c: 319:             do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x + offse
      +                          t & 0xF0) >> 4 ); LCD_Write( 0x80 + pos_x + offset & 0x0F); } while ( 0 ); } else if ( p
      +                          os_y == 1 ) { do { LCD_Write( (0xC0 + pos_x + offset & 0xF0) >> 4 ); LCD_Write( 0xC0 + p
      +                          os_x + offset & 0x0F); } while ( 0 ); } else if ( pos_y == 2 ) { do { LCD_Write( (0x94 +
      +                           pos_x + offset & 0xF0) >> 4 ); LCD_Write( 0x94 + pos_x + offset & 0x0F); } while ( 0 );
      +                           } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x + offset & 0xF0) >> 4 ); LCD_W
      +                          rite( 0xD4 + pos_x + offset & 0x0F); } while ( 0 ); } } while ( 0 );
  3614                           
  3615     036B                     l2031:
  3616     036B  1283               	bcf	3,5	;RP0=0, select bank0
  3617     036C  1303               	bcf	3,6	;RP1=0, select bank0
  3618     036D  085E               	movf	_pos_y,w
  3619     036E  1D03               	btfss	3,2
  3620     036F  2B71               	goto	u2261
  3621     0370  2B72               	goto	u2260
  3622     0371                     u2261:
  3623     0371  2B8D               	goto	l2035
  3624     0372                     u2260:
  3625     0372                     l2033:
  3626     0372  085F               	movf	_pos_x,w
  3627     0373  3E80               	addlw	128
  3628     0374  00A0               	movwf	??_disparar
  3629     0375  3004               	movlw	4
  3630     0376                     u2275:
  3631     0376  1003               	clrc
  3632     0377  0CA0               	rrf	??_disparar,f
  3633     0378  3EFF               	addlw	-1
  3634     0379  1D03               	skipz
  3635     037A  2B76               	goto	u2275
  3636     037B  0820               	movf	??_disparar,w
  3637     037C  390F               	andlw	15
  3638     037D  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3639     0382  1283               	bcf	3,5	;RP0=0, select bank0
  3640     0383  1303               	bcf	3,6	;RP1=0, select bank0
  3641     0384  085F               	movf	_pos_x,w
  3642     0385  3E80               	addlw	128
  3643     0386  390F               	andlw	15
  3644     0387  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3645     038C  2BEE               	goto	l358
  3646     038D                     l2035:
  3647     038D  035E               	decf	_pos_y,w
  3648     038E  1D03               	btfss	3,2
  3649     038F  2B91               	goto	u2281
  3650     0390  2B92               	goto	u2280
  3651     0391                     u2281:
  3652     0391  2BAD               	goto	l2039
  3653     0392                     u2280:
  3654     0392                     l2037:
  3655     0392  085F               	movf	_pos_x,w
  3656     0393  3EC0               	addlw	192
  3657     0394  00A0               	movwf	??_disparar
  3658     0395  3004               	movlw	4
  3659     0396                     u2295:
  3660     0396  1003               	clrc
  3661     0397  0CA0               	rrf	??_disparar,f
  3662     0398  3EFF               	addlw	-1
  3663     0399  1D03               	skipz
  3664     039A  2B96               	goto	u2295
  3665     039B  0820               	movf	??_disparar,w
  3666     039C  390F               	andlw	15
  3667     039D  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3668     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3669     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3670     03A4  085F               	movf	_pos_x,w
  3671     03A5  3EC0               	addlw	192
  3672     03A6  390F               	andlw	15
  3673     03A7  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3674     03AC  2BEE               	goto	l358
  3675     03AD                     l2039:
  3676     03AD  3002               	movlw	2
  3677     03AE  065E               	xorwf	_pos_y,w
  3678     03AF  1D03               	btfss	3,2
  3679     03B0  2BB2               	goto	u2301
  3680     03B1  2BB3               	goto	u2300
  3681     03B2                     u2301:
  3682     03B2  2BCE               	goto	l2043
  3683     03B3                     u2300:
  3684     03B3                     l2041:
  3685     03B3  085F               	movf	_pos_x,w
  3686     03B4  3E94               	addlw	148
  3687     03B5  00A0               	movwf	??_disparar
  3688     03B6  3004               	movlw	4
  3689     03B7                     u2315:
  3690     03B7  1003               	clrc
  3691     03B8  0CA0               	rrf	??_disparar,f
  3692     03B9  3EFF               	addlw	-1
  3693     03BA  1D03               	skipz
  3694     03BB  2BB7               	goto	u2315
  3695     03BC  0820               	movf	??_disparar,w
  3696     03BD  390F               	andlw	15
  3697     03BE  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3698     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  3699     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  3700     03C5  085F               	movf	_pos_x,w
  3701     03C6  3E94               	addlw	148
  3702     03C7  390F               	andlw	15
  3703     03C8  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3704     03CD  2BEE               	goto	l358
  3705     03CE                     l2043:
  3706     03CE  3003               	movlw	3
  3707     03CF  065E               	xorwf	_pos_y,w
  3708     03D0  1D03               	btfss	3,2
  3709     03D1  2BD3               	goto	u2321
  3710     03D2  2BD4               	goto	u2320
  3711     03D3                     u2321:
  3712     03D3  2BEE               	goto	l358
  3713     03D4                     u2320:
  3714     03D4                     l2045:
  3715     03D4  085F               	movf	_pos_x,w
  3716     03D5  3ED4               	addlw	212
  3717     03D6  00A0               	movwf	??_disparar
  3718     03D7  3004               	movlw	4
  3719     03D8                     u2335:
  3720     03D8  1003               	clrc
  3721     03D9  0CA0               	rrf	??_disparar,f
  3722     03DA  3EFF               	addlw	-1
  3723     03DB  1D03               	skipz
  3724     03DC  2BD8               	goto	u2335
  3725     03DD  0820               	movf	??_disparar,w
  3726     03DE  390F               	andlw	15
  3727     03DF  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3728     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  3729     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  3730     03E6  085F               	movf	_pos_x,w
  3731     03E7  3ED4               	addlw	212
  3732     03E8  390F               	andlw	15
  3733     03E9  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3734     03EE                     l358:
  3735                           
  3736                           ;main.c: 320:             LCD_putrs(" ");
  3737     03EE  3004               	movlw	4
  3738     03EF  120A  118A  2008  120A  118A  	fcall	_LCD_putc
  3739     03F4                     l2047:
  3740                           
  3741                           ;main.c: 323:         if(pos_x >= offset){
  3742     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  3743     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  3744     03F6  1585               	bsf	5,3	;volatile
  3745     03F7                     l2049:
  3746                           
  3747                           ;main.c: 326:         }
  3748     03F7  3001               	movlw	1
  3749     03F8  00FA               	movwf	disparar@offset
  3750     03F9                     l2055:
  3751                           
  3752                           ;main.c: 327: 
  3753     03F9  01F9               	clrf	disparar@moved
  3754     03FA                     l2057:
  3755                           
  3756                           ;main.c: 330: 
  3757     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  3758     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  3759     03FC  085F               	movf	_pos_x,w
  3760     03FD  077A               	addwf	disparar@offset,w
  3761     03FE  00A0               	movwf	??_disparar
  3762     03FF  01A1               	clrf	??_disparar+1
  3763     0400  0DA1               	rlf	??_disparar+1,f
  3764     0401  0821               	movf	??_disparar+1,w
  3765     0402  3A80               	xorlw	128
  3766     0403  00FF               	movwf	btemp+1
  3767     0404  3080               	movlw	128
  3768     0405  027F               	subwf	btemp+1,w
  3769     0406  1D03               	skipz
  3770     0407  2C0A               	goto	u2345
  3771     0408  3014               	movlw	20
  3772     0409  0220               	subwf	??_disparar,w
  3773     040A                     u2345:
  3774     040A  1803               	skipnc
  3775     040B  2C0D               	goto	u2341
  3776     040C  2C0E               	goto	u2340
  3777     040D                     u2341:
  3778     040D  2CC9               	goto	l2077
  3779     040E                     u2340:
  3780     040E                     l2059:
  3781     040E  1283               	bcf	3,5	;RP0=0, select bank0
  3782     040F  1303               	bcf	3,6	;RP1=0, select bank0
  3783     0410  085E               	movf	_pos_y,w
  3784     0411  1D03               	btfss	3,2
  3785     0412  2C14               	goto	u2351
  3786     0413  2C15               	goto	u2350
  3787     0414                     u2351:
  3788     0414  2C3C               	goto	l2063
  3789     0415                     u2350:
  3790     0415                     l2061:
  3791     0415  085F               	movf	_pos_x,w
  3792     0416  077A               	addwf	disparar@offset,w
  3793     0417  00A0               	movwf	??_disparar
  3794     0418  01A1               	clrf	??_disparar+1
  3795     0419  0DA1               	rlf	??_disparar+1,f
  3796     041A  0820               	movf	??_disparar,w
  3797     041B  3E80               	addlw	128
  3798     041C  00A2               	movwf	??_disparar+2
  3799     041D  0821               	movf	??_disparar+1,w
  3800     041E  1803               	skipnc
  3801     041F  3E01               	addlw	1
  3802     0420  3E00               	addlw	0
  3803     0421  00A3               	movwf	??_disparar+3
  3804     0422  3004               	movlw	4
  3805     0423  00A4               	movwf	??_disparar+4
  3806     0424                     u2365:
  3807     0424  0D23               	rlf	??_disparar+3,w
  3808     0425  0CA3               	rrf	??_disparar+3,f
  3809     0426  0CA2               	rrf	??_disparar+2,f
  3810     0427  0BA4               	decfsz	??_disparar+4,f
  3811     0428  2C24               	goto	u2365
  3812     0429  0822               	movf	??_disparar+2,w
  3813     042A  390F               	andlw	15
  3814     042B  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3815     0430  087A               	movf	disparar@offset,w
  3816     0431  1283               	bcf	3,5	;RP0=0, select bank0
  3817     0432  1303               	bcf	3,6	;RP1=0, select bank0
  3818     0433  075F               	addwf	_pos_x,w
  3819     0434  3E80               	addlw	128
  3820     0435  390F               	andlw	15
  3821     0436  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3822     043B  2CC1               	goto	l378
  3823     043C                     l2063:
  3824     043C  035E               	decf	_pos_y,w
  3825     043D  1D03               	btfss	3,2
  3826     043E  2C40               	goto	u2371
  3827     043F  2C41               	goto	u2370
  3828     0440                     u2371:
  3829     0440  2C68               	goto	l2067
  3830     0441                     u2370:
  3831     0441                     l2065:
  3832     0441  085F               	movf	_pos_x,w
  3833     0442  077A               	addwf	disparar@offset,w
  3834     0443  00A0               	movwf	??_disparar
  3835     0444  01A1               	clrf	??_disparar+1
  3836     0445  0DA1               	rlf	??_disparar+1,f
  3837     0446  0820               	movf	??_disparar,w
  3838     0447  3EC0               	addlw	192
  3839     0448  00A2               	movwf	??_disparar+2
  3840     0449  0821               	movf	??_disparar+1,w
  3841     044A  1803               	skipnc
  3842     044B  3E01               	addlw	1
  3843     044C  3E00               	addlw	0
  3844     044D  00A3               	movwf	??_disparar+3
  3845     044E  3004               	movlw	4
  3846     044F  00A4               	movwf	??_disparar+4
  3847     0450                     u2385:
  3848     0450  0D23               	rlf	??_disparar+3,w
  3849     0451  0CA3               	rrf	??_disparar+3,f
  3850     0452  0CA2               	rrf	??_disparar+2,f
  3851     0453  0BA4               	decfsz	??_disparar+4,f
  3852     0454  2C50               	goto	u2385
  3853     0455  0822               	movf	??_disparar+2,w
  3854     0456  390F               	andlw	15
  3855     0457  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3856     045C  087A               	movf	disparar@offset,w
  3857     045D  1283               	bcf	3,5	;RP0=0, select bank0
  3858     045E  1303               	bcf	3,6	;RP1=0, select bank0
  3859     045F  075F               	addwf	_pos_x,w
  3860     0460  3EC0               	addlw	192
  3861     0461  390F               	andlw	15
  3862     0462  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3863     0467  2CC1               	goto	l378
  3864     0468                     l2067:
  3865     0468  3002               	movlw	2
  3866     0469  065E               	xorwf	_pos_y,w
  3867     046A  1D03               	btfss	3,2
  3868     046B  2C6D               	goto	u2391
  3869     046C  2C6E               	goto	u2390
  3870     046D                     u2391:
  3871     046D  2C95               	goto	l2071
  3872     046E                     u2390:
  3873     046E                     l2069:
  3874     046E  085F               	movf	_pos_x,w
  3875     046F  077A               	addwf	disparar@offset,w
  3876     0470  00A0               	movwf	??_disparar
  3877     0471  01A1               	clrf	??_disparar+1
  3878     0472  0DA1               	rlf	??_disparar+1,f
  3879     0473  0820               	movf	??_disparar,w
  3880     0474  3E94               	addlw	148
  3881     0475  00A2               	movwf	??_disparar+2
  3882     0476  0821               	movf	??_disparar+1,w
  3883     0477  1803               	skipnc
  3884     0478  3E01               	addlw	1
  3885     0479  3E00               	addlw	0
  3886     047A  00A3               	movwf	??_disparar+3
  3887     047B  3004               	movlw	4
  3888     047C  00A4               	movwf	??_disparar+4
  3889     047D                     u2405:
  3890     047D  0D23               	rlf	??_disparar+3,w
  3891     047E  0CA3               	rrf	??_disparar+3,f
  3892     047F  0CA2               	rrf	??_disparar+2,f
  3893     0480  0BA4               	decfsz	??_disparar+4,f
  3894     0481  2C7D               	goto	u2405
  3895     0482  0822               	movf	??_disparar+2,w
  3896     0483  390F               	andlw	15
  3897     0484  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3898     0489  087A               	movf	disparar@offset,w
  3899     048A  1283               	bcf	3,5	;RP0=0, select bank0
  3900     048B  1303               	bcf	3,6	;RP1=0, select bank0
  3901     048C  075F               	addwf	_pos_x,w
  3902     048D  3E94               	addlw	148
  3903     048E  390F               	andlw	15
  3904     048F  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3905     0494  2CC1               	goto	l378
  3906     0495                     l2071:
  3907     0495  3003               	movlw	3
  3908     0496  065E               	xorwf	_pos_y,w
  3909     0497  1D03               	btfss	3,2
  3910     0498  2C9A               	goto	u2411
  3911     0499  2C9B               	goto	u2410
  3912     049A                     u2411:
  3913     049A  2CC1               	goto	l378
  3914     049B                     u2410:
  3915     049B                     l2073:
  3916     049B  085F               	movf	_pos_x,w
  3917     049C  077A               	addwf	disparar@offset,w
  3918     049D  00A0               	movwf	??_disparar
  3919     049E  01A1               	clrf	??_disparar+1
  3920     049F  0DA1               	rlf	??_disparar+1,f
  3921     04A0  0820               	movf	??_disparar,w
  3922     04A1  3ED4               	addlw	212
  3923     04A2  00A2               	movwf	??_disparar+2
  3924     04A3  0821               	movf	??_disparar+1,w
  3925     04A4  1803               	skipnc
  3926     04A5  3E01               	addlw	1
  3927     04A6  3E00               	addlw	0
  3928     04A7  00A3               	movwf	??_disparar+3
  3929     04A8  3004               	movlw	4
  3930     04A9  00A4               	movwf	??_disparar+4
  3931     04AA                     u2425:
  3932     04AA  0D23               	rlf	??_disparar+3,w
  3933     04AB  0CA3               	rrf	??_disparar+3,f
  3934     04AC  0CA2               	rrf	??_disparar+2,f
  3935     04AD  0BA4               	decfsz	??_disparar+4,f
  3936     04AE  2CAA               	goto	u2425
  3937     04AF  0822               	movf	??_disparar+2,w
  3938     04B0  390F               	andlw	15
  3939     04B1  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3940     04B6  087A               	movf	disparar@offset,w
  3941     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  3942     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  3943     04B9  075F               	addwf	_pos_x,w
  3944     04BA  3ED4               	addlw	212
  3945     04BB  390F               	andlw	15
  3946     04BC  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  3947     04C1                     l378:
  3948                           
  3949                           ;main.c: 332:     do { if ( pos_y == 0 ) { do { LCD_Write( (0x80 + pos_x & 0xF0) >> 4 );
      +                           LCD_Write( 0x80 + pos_x & 0x0F); } while ( 0 ); } else if ( pos_y == 1 ) { do { LCD_Wri
      +                          te( (0xC0 + pos_x & 0xF0) >> 4 ); LCD_Write( 0xC0 + pos_x & 0x0F); } while ( 0 ); } else
      +                           if ( pos_y == 2 ) { do { LCD_Write( (0x94 + pos_x & 0xF0) >> 4 ); LCD_Write( 0x94 + pos
      +                          _x & 0x0F); } while ( 0 ); } else if ( pos_y == 3 ) { do { LCD_Write( (0xD4 + pos_x & 0x
      +                          F0) >> 4 ); LCD_Write( 0xD4 + pos_x & 0x0F); } while ( 0 ); } } while ( 0 );
  3950     04C1  302D               	movlw	45
  3951     04C2  120A  118A  2008  120A  118A  	fcall	_LCD_putc
  3952     04C7                     l2075:
  3953                           
  3954                           ;main.c: 333:     LCD_putc(0);
  3955     04C7  3001               	movlw	1
  3956     04C8  00F9               	movwf	disparar@moved
  3957     04C9                     l2077:
  3958     04C9  087A               	movf	disparar@offset,w
  3959     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  3960     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  3961     04CC  025F               	subwf	_pos_x,w
  3962     04CD  1C03               	skipc
  3963     04CE  2CD0               	goto	u2431
  3964     04CF  2CD1               	goto	u2430
  3965     04D0                     u2431:
  3966     04D0  2D9E               	goto	l2097
  3967     04D1                     u2430:
  3968     04D1                     l2079:
  3969     04D1  085E               	movf	_pos_y,w
  3970     04D2  1D03               	btfss	3,2
  3971     04D3  2CD5               	goto	u2441
  3972     04D4  2CD6               	goto	u2440
  3973     04D5                     u2441:
  3974     04D5  2D02               	goto	l2083
  3975     04D6                     u2440:
  3976     04D6                     l2081:
  3977     04D6  085F               	movf	_pos_x,w
  3978     04D7  00A0               	movwf	??_disparar
  3979     04D8  01A1               	clrf	??_disparar+1
  3980     04D9  0821               	movf	??_disparar+1,w
  3981     04DA  00A3               	movwf	??_disparar+3
  3982     04DB  087A               	movf	disparar@offset,w
  3983     04DC  0220               	subwf	??_disparar,w
  3984     04DD  00A2               	movwf	??_disparar+2
  3985     04DE  1C03               	skipc
  3986     04DF  03A3               	decf	??_disparar+3,f
  3987     04E0  0822               	movf	??_disparar+2,w
  3988     04E1  3E80               	addlw	128
  3989     04E2  00A4               	movwf	??_disparar+4
  3990     04E3  0823               	movf	??_disparar+3,w
  3991     04E4  1803               	skipnc
  3992     04E5  3E01               	addlw	1
  3993     04E6  3E00               	addlw	0
  3994     04E7  00A5               	movwf	??_disparar+5
  3995     04E8  3004               	movlw	4
  3996     04E9  00A6               	movwf	??_disparar+6
  3997     04EA                     u2455:
  3998     04EA  0D25               	rlf	??_disparar+5,w
  3999     04EB  0CA5               	rrf	??_disparar+5,f
  4000     04EC  0CA4               	rrf	??_disparar+4,f
  4001     04ED  0BA6               	decfsz	??_disparar+6,f
  4002     04EE  2CEA               	goto	u2455
  4003     04EF  0824               	movf	??_disparar+4,w
  4004     04F0  390F               	andlw	15
  4005     04F1  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4006     04F6  087A               	movf	disparar@offset,w
  4007     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  4008     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  4009     04F9  025F               	subwf	_pos_x,w
  4010     04FA  3E80               	addlw	128
  4011     04FB  390F               	andlw	15
  4012     04FC  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4013     0501  2D96               	goto	l396
  4014     0502                     l2083:
  4015     0502  035E               	decf	_pos_y,w
  4016     0503  1D03               	btfss	3,2
  4017     0504  2D06               	goto	u2461
  4018     0505  2D07               	goto	u2460
  4019     0506                     u2461:
  4020     0506  2D33               	goto	l2087
  4021     0507                     u2460:
  4022     0507                     l2085:
  4023     0507  085F               	movf	_pos_x,w
  4024     0508  00A0               	movwf	??_disparar
  4025     0509  01A1               	clrf	??_disparar+1
  4026     050A  0821               	movf	??_disparar+1,w
  4027     050B  00A3               	movwf	??_disparar+3
  4028     050C  087A               	movf	disparar@offset,w
  4029     050D  0220               	subwf	??_disparar,w
  4030     050E  00A2               	movwf	??_disparar+2
  4031     050F  1C03               	skipc
  4032     0510  03A3               	decf	??_disparar+3,f
  4033     0511  0822               	movf	??_disparar+2,w
  4034     0512  3EC0               	addlw	192
  4035     0513  00A4               	movwf	??_disparar+4
  4036     0514  0823               	movf	??_disparar+3,w
  4037     0515  1803               	skipnc
  4038     0516  3E01               	addlw	1
  4039     0517  3E00               	addlw	0
  4040     0518  00A5               	movwf	??_disparar+5
  4041     0519  3004               	movlw	4
  4042     051A  00A6               	movwf	??_disparar+6
  4043     051B                     u2475:
  4044     051B  0D25               	rlf	??_disparar+5,w
  4045     051C  0CA5               	rrf	??_disparar+5,f
  4046     051D  0CA4               	rrf	??_disparar+4,f
  4047     051E  0BA6               	decfsz	??_disparar+6,f
  4048     051F  2D1B               	goto	u2475
  4049     0520  0824               	movf	??_disparar+4,w
  4050     0521  390F               	andlw	15
  4051     0522  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4052     0527  087A               	movf	disparar@offset,w
  4053     0528  1283               	bcf	3,5	;RP0=0, select bank0
  4054     0529  1303               	bcf	3,6	;RP1=0, select bank0
  4055     052A  025F               	subwf	_pos_x,w
  4056     052B  3EC0               	addlw	192
  4057     052C  390F               	andlw	15
  4058     052D  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4059     0532  2D96               	goto	l396
  4060     0533                     l2087:
  4061     0533  3002               	movlw	2
  4062     0534  065E               	xorwf	_pos_y,w
  4063     0535  1D03               	btfss	3,2
  4064     0536  2D38               	goto	u2481
  4065     0537  2D39               	goto	u2480
  4066     0538                     u2481:
  4067     0538  2D65               	goto	l2091
  4068     0539                     u2480:
  4069     0539                     l2089:
  4070     0539  085F               	movf	_pos_x,w
  4071     053A  00A0               	movwf	??_disparar
  4072     053B  01A1               	clrf	??_disparar+1
  4073     053C  0821               	movf	??_disparar+1,w
  4074     053D  00A3               	movwf	??_disparar+3
  4075     053E  087A               	movf	disparar@offset,w
  4076     053F  0220               	subwf	??_disparar,w
  4077     0540  00A2               	movwf	??_disparar+2
  4078     0541  1C03               	skipc
  4079     0542  03A3               	decf	??_disparar+3,f
  4080     0543  0822               	movf	??_disparar+2,w
  4081     0544  3E94               	addlw	148
  4082     0545  00A4               	movwf	??_disparar+4
  4083     0546  0823               	movf	??_disparar+3,w
  4084     0547  1803               	skipnc
  4085     0548  3E01               	addlw	1
  4086     0549  3E00               	addlw	0
  4087     054A  00A5               	movwf	??_disparar+5
  4088     054B  3004               	movlw	4
  4089     054C  00A6               	movwf	??_disparar+6
  4090     054D                     u2495:
  4091     054D  0D25               	rlf	??_disparar+5,w
  4092     054E  0CA5               	rrf	??_disparar+5,f
  4093     054F  0CA4               	rrf	??_disparar+4,f
  4094     0550  0BA6               	decfsz	??_disparar+6,f
  4095     0551  2D4D               	goto	u2495
  4096     0552  0824               	movf	??_disparar+4,w
  4097     0553  390F               	andlw	15
  4098     0554  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4099     0559  087A               	movf	disparar@offset,w
  4100     055A  1283               	bcf	3,5	;RP0=0, select bank0
  4101     055B  1303               	bcf	3,6	;RP1=0, select bank0
  4102     055C  025F               	subwf	_pos_x,w
  4103     055D  3E94               	addlw	148
  4104     055E  390F               	andlw	15
  4105     055F  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4106     0564  2D96               	goto	l396
  4107     0565                     l2091:
  4108     0565  3003               	movlw	3
  4109     0566  065E               	xorwf	_pos_y,w
  4110     0567  1D03               	btfss	3,2
  4111     0568  2D6A               	goto	u2501
  4112     0569  2D6B               	goto	u2500
  4113     056A                     u2501:
  4114     056A  2D96               	goto	l396
  4115     056B                     u2500:
  4116     056B                     l2093:
  4117     056B  085F               	movf	_pos_x,w
  4118     056C  00A0               	movwf	??_disparar
  4119     056D  01A1               	clrf	??_disparar+1
  4120     056E  0821               	movf	??_disparar+1,w
  4121     056F  00A3               	movwf	??_disparar+3
  4122     0570  087A               	movf	disparar@offset,w
  4123     0571  0220               	subwf	??_disparar,w
  4124     0572  00A2               	movwf	??_disparar+2
  4125     0573  1C03               	skipc
  4126     0574  03A3               	decf	??_disparar+3,f
  4127     0575  0822               	movf	??_disparar+2,w
  4128     0576  3ED4               	addlw	212
  4129     0577  00A4               	movwf	??_disparar+4
  4130     0578  0823               	movf	??_disparar+3,w
  4131     0579  1803               	skipnc
  4132     057A  3E01               	addlw	1
  4133     057B  3E00               	addlw	0
  4134     057C  00A5               	movwf	??_disparar+5
  4135     057D  3004               	movlw	4
  4136     057E  00A6               	movwf	??_disparar+6
  4137     057F                     u2515:
  4138     057F  0D25               	rlf	??_disparar+5,w
  4139     0580  0CA5               	rrf	??_disparar+5,f
  4140     0581  0CA4               	rrf	??_disparar+4,f
  4141     0582  0BA6               	decfsz	??_disparar+6,f
  4142     0583  2D7F               	goto	u2515
  4143     0584  0824               	movf	??_disparar+4,w
  4144     0585  390F               	andlw	15
  4145     0586  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4146     058B  087A               	movf	disparar@offset,w
  4147     058C  1283               	bcf	3,5	;RP0=0, select bank0
  4148     058D  1303               	bcf	3,6	;RP1=0, select bank0
  4149     058E  025F               	subwf	_pos_x,w
  4150     058F  3ED4               	addlw	212
  4151     0590  390F               	andlw	15
  4152     0591  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4153     0596                     l396:
  4154     0596  302D               	movlw	45
  4155     0597  120A  118A  2008  120A  118A  	fcall	_LCD_putc
  4156     059C                     l2095:
  4157     059C  3001               	movlw	1
  4158     059D  00F9               	movwf	disparar@moved
  4159     059E                     l2097:
  4160     059E  301A               	movlw	26
  4161     059F  1283               	bcf	3,5	;RP0=0, select bank0
  4162     05A0  1303               	bcf	3,6	;RP1=0, select bank0
  4163     05A1  00A1               	movwf	??_disparar+1
  4164     05A2  30F7               	movlw	247
  4165     05A3  00A0               	movwf	??_disparar
  4166     05A4                     u3477:
  4167     05A4  0BA0               	decfsz	??_disparar,f
  4168     05A5  2DA4               	goto	u3477
  4169     05A6  0BA1               	decfsz	??_disparar+1,f
  4170     05A7  2DA4               	goto	u3477
  4171     05A8  2DA9               	nop2
  4172     05A9                     l2099:
  4173     05A9  1283               	bcf	3,5	;RP0=0, select bank0
  4174     05AA  1303               	bcf	3,6	;RP1=0, select bank0
  4175     05AB  085F               	movf	_pos_x,w
  4176     05AC  077A               	addwf	disparar@offset,w
  4177     05AD  00A0               	movwf	??_disparar
  4178     05AE  01A1               	clrf	??_disparar+1
  4179     05AF  0DA1               	rlf	??_disparar+1,f
  4180     05B0  0821               	movf	??_disparar+1,w
  4181     05B1  3A80               	xorlw	128
  4182     05B2  00FF               	movwf	btemp+1
  4183     05B3  3080               	movlw	128
  4184     05B4  027F               	subwf	btemp+1,w
  4185     05B5  1D03               	skipz
  4186     05B6  2DB9               	goto	u2525
  4187     05B7  3014               	movlw	20
  4188     05B8  0220               	subwf	??_disparar,w
  4189     05B9                     u2525:
  4190     05B9  1803               	skipnc
  4191     05BA  2DBC               	goto	u2521
  4192     05BB  2DBD               	goto	u2520
  4193     05BC                     u2521:
  4194     05BC  2E77               	goto	l2117
  4195     05BD                     u2520:
  4196     05BD                     l2101:
  4197     05BD  1283               	bcf	3,5	;RP0=0, select bank0
  4198     05BE  1303               	bcf	3,6	;RP1=0, select bank0
  4199     05BF  085E               	movf	_pos_y,w
  4200     05C0  1D03               	btfss	3,2
  4201     05C1  2DC3               	goto	u2531
  4202     05C2  2DC4               	goto	u2530
  4203     05C3                     u2531:
  4204     05C3  2DEB               	goto	l2105
  4205     05C4                     u2530:
  4206     05C4                     l2103:
  4207     05C4  085F               	movf	_pos_x,w
  4208     05C5  077A               	addwf	disparar@offset,w
  4209     05C6  00A0               	movwf	??_disparar
  4210     05C7  01A1               	clrf	??_disparar+1
  4211     05C8  0DA1               	rlf	??_disparar+1,f
  4212     05C9  0820               	movf	??_disparar,w
  4213     05CA  3E80               	addlw	128
  4214     05CB  00A2               	movwf	??_disparar+2
  4215     05CC  0821               	movf	??_disparar+1,w
  4216     05CD  1803               	skipnc
  4217     05CE  3E01               	addlw	1
  4218     05CF  3E00               	addlw	0
  4219     05D0  00A3               	movwf	??_disparar+3
  4220     05D1  3004               	movlw	4
  4221     05D2  00A4               	movwf	??_disparar+4
  4222     05D3                     u2545:
  4223     05D3  0D23               	rlf	??_disparar+3,w
  4224     05D4  0CA3               	rrf	??_disparar+3,f
  4225     05D5  0CA2               	rrf	??_disparar+2,f
  4226     05D6  0BA4               	decfsz	??_disparar+4,f
  4227     05D7  2DD3               	goto	u2545
  4228     05D8  0822               	movf	??_disparar+2,w
  4229     05D9  390F               	andlw	15
  4230     05DA  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4231     05DF  087A               	movf	disparar@offset,w
  4232     05E0  1283               	bcf	3,5	;RP0=0, select bank0
  4233     05E1  1303               	bcf	3,6	;RP1=0, select bank0
  4234     05E2  075F               	addwf	_pos_x,w
  4235     05E3  3E80               	addlw	128
  4236     05E4  390F               	andlw	15
  4237     05E5  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4238     05EA  2E70               	goto	l414
  4239     05EB                     l2105:
  4240     05EB  035E               	decf	_pos_y,w
  4241     05EC  1D03               	btfss	3,2
  4242     05ED  2DEF               	goto	u2551
  4243     05EE  2DF0               	goto	u2550
  4244     05EF                     u2551:
  4245     05EF  2E17               	goto	l2109
  4246     05F0                     u2550:
  4247     05F0                     l2107:
  4248     05F0  085F               	movf	_pos_x,w
  4249     05F1  077A               	addwf	disparar@offset,w
  4250     05F2  00A0               	movwf	??_disparar
  4251     05F3  01A1               	clrf	??_disparar+1
  4252     05F4  0DA1               	rlf	??_disparar+1,f
  4253     05F5  0820               	movf	??_disparar,w
  4254     05F6  3EC0               	addlw	192
  4255     05F7  00A2               	movwf	??_disparar+2
  4256     05F8  0821               	movf	??_disparar+1,w
  4257     05F9  1803               	skipnc
  4258     05FA  3E01               	addlw	1
  4259     05FB  3E00               	addlw	0
  4260     05FC  00A3               	movwf	??_disparar+3
  4261     05FD  3004               	movlw	4
  4262     05FE  00A4               	movwf	??_disparar+4
  4263     05FF                     u2565:
  4264     05FF  0D23               	rlf	??_disparar+3,w
  4265     0600  0CA3               	rrf	??_disparar+3,f
  4266     0601  0CA2               	rrf	??_disparar+2,f
  4267     0602  0BA4               	decfsz	??_disparar+4,f
  4268     0603  2DFF               	goto	u2565
  4269     0604  0822               	movf	??_disparar+2,w
  4270     0605  390F               	andlw	15
  4271     0606  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4272     060B  087A               	movf	disparar@offset,w
  4273     060C  1283               	bcf	3,5	;RP0=0, select bank0
  4274     060D  1303               	bcf	3,6	;RP1=0, select bank0
  4275     060E  075F               	addwf	_pos_x,w
  4276     060F  3EC0               	addlw	192
  4277     0610  390F               	andlw	15
  4278     0611  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4279     0616  2E70               	goto	l414
  4280     0617                     l2109:
  4281     0617  3002               	movlw	2
  4282     0618  065E               	xorwf	_pos_y,w
  4283     0619  1D03               	btfss	3,2
  4284     061A  2E1C               	goto	u2571
  4285     061B  2E1D               	goto	u2570
  4286     061C                     u2571:
  4287     061C  2E44               	goto	l2113
  4288     061D                     u2570:
  4289     061D                     l2111:
  4290     061D  085F               	movf	_pos_x,w
  4291     061E  077A               	addwf	disparar@offset,w
  4292     061F  00A0               	movwf	??_disparar
  4293     0620  01A1               	clrf	??_disparar+1
  4294     0621  0DA1               	rlf	??_disparar+1,f
  4295     0622  0820               	movf	??_disparar,w
  4296     0623  3E94               	addlw	148
  4297     0624  00A2               	movwf	??_disparar+2
  4298     0625  0821               	movf	??_disparar+1,w
  4299     0626  1803               	skipnc
  4300     0627  3E01               	addlw	1
  4301     0628  3E00               	addlw	0
  4302     0629  00A3               	movwf	??_disparar+3
  4303     062A  3004               	movlw	4
  4304     062B  00A4               	movwf	??_disparar+4
  4305     062C                     u2585:
  4306     062C  0D23               	rlf	??_disparar+3,w
  4307     062D  0CA3               	rrf	??_disparar+3,f
  4308     062E  0CA2               	rrf	??_disparar+2,f
  4309     062F  0BA4               	decfsz	??_disparar+4,f
  4310     0630  2E2C               	goto	u2585
  4311     0631  0822               	movf	??_disparar+2,w
  4312     0632  390F               	andlw	15
  4313     0633  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4314     0638  087A               	movf	disparar@offset,w
  4315     0639  1283               	bcf	3,5	;RP0=0, select bank0
  4316     063A  1303               	bcf	3,6	;RP1=0, select bank0
  4317     063B  075F               	addwf	_pos_x,w
  4318     063C  3E94               	addlw	148
  4319     063D  390F               	andlw	15
  4320     063E  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4321     0643  2E70               	goto	l414
  4322     0644                     l2113:
  4323     0644  3003               	movlw	3
  4324     0645  065E               	xorwf	_pos_y,w
  4325     0646  1D03               	btfss	3,2
  4326     0647  2E49               	goto	u2591
  4327     0648  2E4A               	goto	u2590
  4328     0649                     u2591:
  4329     0649  2E70               	goto	l414
  4330     064A                     u2590:
  4331     064A                     l2115:
  4332     064A  085F               	movf	_pos_x,w
  4333     064B  077A               	addwf	disparar@offset,w
  4334     064C  00A0               	movwf	??_disparar
  4335     064D  01A1               	clrf	??_disparar+1
  4336     064E  0DA1               	rlf	??_disparar+1,f
  4337     064F  0820               	movf	??_disparar,w
  4338     0650  3ED4               	addlw	212
  4339     0651  00A2               	movwf	??_disparar+2
  4340     0652  0821               	movf	??_disparar+1,w
  4341     0653  1803               	skipnc
  4342     0654  3E01               	addlw	1
  4343     0655  3E00               	addlw	0
  4344     0656  00A3               	movwf	??_disparar+3
  4345     0657  3004               	movlw	4
  4346     0658  00A4               	movwf	??_disparar+4
  4347     0659                     u2605:
  4348     0659  0D23               	rlf	??_disparar+3,w
  4349     065A  0CA3               	rrf	??_disparar+3,f
  4350     065B  0CA2               	rrf	??_disparar+2,f
  4351     065C  0BA4               	decfsz	??_disparar+4,f
  4352     065D  2E59               	goto	u2605
  4353     065E  0822               	movf	??_disparar+2,w
  4354     065F  390F               	andlw	15
  4355     0660  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4356     0665  087A               	movf	disparar@offset,w
  4357     0666  1283               	bcf	3,5	;RP0=0, select bank0
  4358     0667  1303               	bcf	3,6	;RP1=0, select bank0
  4359     0668  075F               	addwf	_pos_x,w
  4360     0669  3ED4               	addlw	212
  4361     066A  390F               	andlw	15
  4362     066B  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4363     0670                     l414:
  4364     0670  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4365     0671  00F6               	movwf	LCD_putrs@a
  4366     0672  120A  158A  21B3  120A  118A  	fcall	_LCD_putrs
  4367     0677                     l2117:
  4368     0677  087A               	movf	disparar@offset,w
  4369     0678  1283               	bcf	3,5	;RP0=0, select bank0
  4370     0679  1303               	bcf	3,6	;RP1=0, select bank0
  4371     067A  025F               	subwf	_pos_x,w
  4372     067B  1C03               	skipc
  4373     067C  2E7E               	goto	u2611
  4374     067D  2E7F               	goto	u2610
  4375     067E                     u2611:
  4376     067E  2F4B               	goto	l2135
  4377     067F                     u2610:
  4378     067F                     l2119:
  4379     067F  085E               	movf	_pos_y,w
  4380     0680  1D03               	btfss	3,2
  4381     0681  2E83               	goto	u2621
  4382     0682  2E84               	goto	u2620
  4383     0683                     u2621:
  4384     0683  2EB0               	goto	l2123
  4385     0684                     u2620:
  4386     0684                     l2121:
  4387     0684  085F               	movf	_pos_x,w
  4388     0685  00A0               	movwf	??_disparar
  4389     0686  01A1               	clrf	??_disparar+1
  4390     0687  0821               	movf	??_disparar+1,w
  4391     0688  00A3               	movwf	??_disparar+3
  4392     0689  087A               	movf	disparar@offset,w
  4393     068A  0220               	subwf	??_disparar,w
  4394     068B  00A2               	movwf	??_disparar+2
  4395     068C  1C03               	skipc
  4396     068D  03A3               	decf	??_disparar+3,f
  4397     068E  0822               	movf	??_disparar+2,w
  4398     068F  3E80               	addlw	128
  4399     0690  00A4               	movwf	??_disparar+4
  4400     0691  0823               	movf	??_disparar+3,w
  4401     0692  1803               	skipnc
  4402     0693  3E01               	addlw	1
  4403     0694  3E00               	addlw	0
  4404     0695  00A5               	movwf	??_disparar+5
  4405     0696  3004               	movlw	4
  4406     0697  00A6               	movwf	??_disparar+6
  4407     0698                     u2635:
  4408     0698  0D25               	rlf	??_disparar+5,w
  4409     0699  0CA5               	rrf	??_disparar+5,f
  4410     069A  0CA4               	rrf	??_disparar+4,f
  4411     069B  0BA6               	decfsz	??_disparar+6,f
  4412     069C  2E98               	goto	u2635
  4413     069D  0824               	movf	??_disparar+4,w
  4414     069E  390F               	andlw	15
  4415     069F  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4416     06A4  087A               	movf	disparar@offset,w
  4417     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  4418     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  4419     06A7  025F               	subwf	_pos_x,w
  4420     06A8  3E80               	addlw	128
  4421     06A9  390F               	andlw	15
  4422     06AA  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4423     06AF  2F44               	goto	l432
  4424     06B0                     l2123:
  4425     06B0  035E               	decf	_pos_y,w
  4426     06B1  1D03               	btfss	3,2
  4427     06B2  2EB4               	goto	u2641
  4428     06B3  2EB5               	goto	u2640
  4429     06B4                     u2641:
  4430     06B4  2EE1               	goto	l2127
  4431     06B5                     u2640:
  4432     06B5                     l2125:
  4433     06B5  085F               	movf	_pos_x,w
  4434     06B6  00A0               	movwf	??_disparar
  4435     06B7  01A1               	clrf	??_disparar+1
  4436     06B8  0821               	movf	??_disparar+1,w
  4437     06B9  00A3               	movwf	??_disparar+3
  4438     06BA  087A               	movf	disparar@offset,w
  4439     06BB  0220               	subwf	??_disparar,w
  4440     06BC  00A2               	movwf	??_disparar+2
  4441     06BD  1C03               	skipc
  4442     06BE  03A3               	decf	??_disparar+3,f
  4443     06BF  0822               	movf	??_disparar+2,w
  4444     06C0  3EC0               	addlw	192
  4445     06C1  00A4               	movwf	??_disparar+4
  4446     06C2  0823               	movf	??_disparar+3,w
  4447     06C3  1803               	skipnc
  4448     06C4  3E01               	addlw	1
  4449     06C5  3E00               	addlw	0
  4450     06C6  00A5               	movwf	??_disparar+5
  4451     06C7  3004               	movlw	4
  4452     06C8  00A6               	movwf	??_disparar+6
  4453     06C9                     u2655:
  4454     06C9  0D25               	rlf	??_disparar+5,w
  4455     06CA  0CA5               	rrf	??_disparar+5,f
  4456     06CB  0CA4               	rrf	??_disparar+4,f
  4457     06CC  0BA6               	decfsz	??_disparar+6,f
  4458     06CD  2EC9               	goto	u2655
  4459     06CE  0824               	movf	??_disparar+4,w
  4460     06CF  390F               	andlw	15
  4461     06D0  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4462     06D5  087A               	movf	disparar@offset,w
  4463     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  4464     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  4465     06D8  025F               	subwf	_pos_x,w
  4466     06D9  3EC0               	addlw	192
  4467     06DA  390F               	andlw	15
  4468     06DB  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4469     06E0  2F44               	goto	l432
  4470     06E1                     l2127:
  4471     06E1  3002               	movlw	2
  4472     06E2  065E               	xorwf	_pos_y,w
  4473     06E3  1D03               	btfss	3,2
  4474     06E4  2EE6               	goto	u2661
  4475     06E5  2EE7               	goto	u2660
  4476     06E6                     u2661:
  4477     06E6  2F13               	goto	l2131
  4478     06E7                     u2660:
  4479     06E7                     l2129:
  4480     06E7  085F               	movf	_pos_x,w
  4481     06E8  00A0               	movwf	??_disparar
  4482     06E9  01A1               	clrf	??_disparar+1
  4483     06EA  0821               	movf	??_disparar+1,w
  4484     06EB  00A3               	movwf	??_disparar+3
  4485     06EC  087A               	movf	disparar@offset,w
  4486     06ED  0220               	subwf	??_disparar,w
  4487     06EE  00A2               	movwf	??_disparar+2
  4488     06EF  1C03               	skipc
  4489     06F0  03A3               	decf	??_disparar+3,f
  4490     06F1  0822               	movf	??_disparar+2,w
  4491     06F2  3E94               	addlw	148
  4492     06F3  00A4               	movwf	??_disparar+4
  4493     06F4  0823               	movf	??_disparar+3,w
  4494     06F5  1803               	skipnc
  4495     06F6  3E01               	addlw	1
  4496     06F7  3E00               	addlw	0
  4497     06F8  00A5               	movwf	??_disparar+5
  4498     06F9  3004               	movlw	4
  4499     06FA  00A6               	movwf	??_disparar+6
  4500     06FB                     u2675:
  4501     06FB  0D25               	rlf	??_disparar+5,w
  4502     06FC  0CA5               	rrf	??_disparar+5,f
  4503     06FD  0CA4               	rrf	??_disparar+4,f
  4504     06FE  0BA6               	decfsz	??_disparar+6,f
  4505     06FF  2EFB               	goto	u2675
  4506     0700  0824               	movf	??_disparar+4,w
  4507     0701  390F               	andlw	15
  4508     0702  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4509     0707  087A               	movf	disparar@offset,w
  4510     0708  1283               	bcf	3,5	;RP0=0, select bank0
  4511     0709  1303               	bcf	3,6	;RP1=0, select bank0
  4512     070A  025F               	subwf	_pos_x,w
  4513     070B  3E94               	addlw	148
  4514     070C  390F               	andlw	15
  4515     070D  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4516     0712  2F44               	goto	l432
  4517     0713                     l2131:
  4518     0713  3003               	movlw	3
  4519     0714  065E               	xorwf	_pos_y,w
  4520     0715  1D03               	btfss	3,2
  4521     0716  2F18               	goto	u2681
  4522     0717  2F19               	goto	u2680
  4523     0718                     u2681:
  4524     0718  2F44               	goto	l432
  4525     0719                     u2680:
  4526     0719                     l2133:
  4527     0719  085F               	movf	_pos_x,w
  4528     071A  00A0               	movwf	??_disparar
  4529     071B  01A1               	clrf	??_disparar+1
  4530     071C  0821               	movf	??_disparar+1,w
  4531     071D  00A3               	movwf	??_disparar+3
  4532     071E  087A               	movf	disparar@offset,w
  4533     071F  0220               	subwf	??_disparar,w
  4534     0720  00A2               	movwf	??_disparar+2
  4535     0721  1C03               	skipc
  4536     0722  03A3               	decf	??_disparar+3,f
  4537     0723  0822               	movf	??_disparar+2,w
  4538     0724  3ED4               	addlw	212
  4539     0725  00A4               	movwf	??_disparar+4
  4540     0726  0823               	movf	??_disparar+3,w
  4541     0727  1803               	skipnc
  4542     0728  3E01               	addlw	1
  4543     0729  3E00               	addlw	0
  4544     072A  00A5               	movwf	??_disparar+5
  4545     072B  3004               	movlw	4
  4546     072C  00A6               	movwf	??_disparar+6
  4547     072D                     u2695:
  4548     072D  0D25               	rlf	??_disparar+5,w
  4549     072E  0CA5               	rrf	??_disparar+5,f
  4550     072F  0CA4               	rrf	??_disparar+4,f
  4551     0730  0BA6               	decfsz	??_disparar+6,f
  4552     0731  2F2D               	goto	u2695
  4553     0732  0824               	movf	??_disparar+4,w
  4554     0733  390F               	andlw	15
  4555     0734  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4556     0739  087A               	movf	disparar@offset,w
  4557     073A  1283               	bcf	3,5	;RP0=0, select bank0
  4558     073B  1303               	bcf	3,6	;RP1=0, select bank0
  4559     073C  025F               	subwf	_pos_x,w
  4560     073D  3ED4               	addlw	212
  4561     073E  390F               	andlw	15
  4562     073F  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4563     0744                     l432:
  4564     0744  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4565     0745  00F6               	movwf	LCD_putrs@a
  4566     0746  120A  158A  21B3  120A  118A  	fcall	_LCD_putrs
  4567     074B                     l2135:
  4568     074B  0879               	movf	disparar@moved,w
  4569     074C  1D03               	btfss	3,2
  4570     074D  2F4F               	goto	u2701
  4571     074E  2F50               	goto	u2700
  4572     074F                     u2701:
  4573     074F  2F51               	goto	l2139
  4574     0750                     u2700:
  4575     0750  2F59               	goto	l2143
  4576     0751                     l2139:
  4577     0751  3001               	movlw	1
  4578     0752  07FA               	addwf	disparar@offset,f
  4579     0753                     l2141:
  4580     0753  3014               	movlw	20
  4581     0754  027A               	subwf	disparar@offset,w
  4582     0755  1C03               	skipc
  4583     0756  2F58               	goto	u2711
  4584     0757  2F59               	goto	u2710
  4585     0758                     u2711:
  4586     0758  2BF9               	goto	l2055
  4587     0759                     u2710:
  4588     0759                     l2143:
  4589     0759  1283               	bcf	3,5	;RP0=0, select bank0
  4590     075A  1303               	bcf	3,6	;RP1=0, select bank0
  4591     075B  085E               	movf	_pos_y,w
  4592     075C  1D03               	btfss	3,2
  4593     075D  2F5F               	goto	u2721
  4594     075E  2F60               	goto	u2720
  4595     075F                     u2721:
  4596     075F  2F7B               	goto	l2147
  4597     0760                     u2720:
  4598     0760                     l2145:
  4599     0760  085F               	movf	_pos_x,w
  4600     0761  3E80               	addlw	128
  4601     0762  00A0               	movwf	??_disparar
  4602     0763  3004               	movlw	4
  4603     0764                     u2735:
  4604     0764  1003               	clrc
  4605     0765  0CA0               	rrf	??_disparar,f
  4606     0766  3EFF               	addlw	-1
  4607     0767  1D03               	skipz
  4608     0768  2F64               	goto	u2735
  4609     0769  0820               	movf	??_disparar,w
  4610     076A  390F               	andlw	15
  4611     076B  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4612     0770  1283               	bcf	3,5	;RP0=0, select bank0
  4613     0771  1303               	bcf	3,6	;RP1=0, select bank0
  4614     0772  085F               	movf	_pos_x,w
  4615     0773  3E80               	addlw	128
  4616     0774  390F               	andlw	15
  4617     0775  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4618     077A  2FDC               	goto	l450
  4619     077B                     l2147:
  4620     077B  035E               	decf	_pos_y,w
  4621     077C  1D03               	btfss	3,2
  4622     077D  2F7F               	goto	u2741
  4623     077E  2F80               	goto	u2740
  4624     077F                     u2741:
  4625     077F  2F9B               	goto	l2151
  4626     0780                     u2740:
  4627     0780                     l2149:
  4628     0780  085F               	movf	_pos_x,w
  4629     0781  3EC0               	addlw	192
  4630     0782  00A0               	movwf	??_disparar
  4631     0783  3004               	movlw	4
  4632     0784                     u2755:
  4633     0784  1003               	clrc
  4634     0785  0CA0               	rrf	??_disparar,f
  4635     0786  3EFF               	addlw	-1
  4636     0787  1D03               	skipz
  4637     0788  2F84               	goto	u2755
  4638     0789  0820               	movf	??_disparar,w
  4639     078A  390F               	andlw	15
  4640     078B  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4641     0790  1283               	bcf	3,5	;RP0=0, select bank0
  4642     0791  1303               	bcf	3,6	;RP1=0, select bank0
  4643     0792  085F               	movf	_pos_x,w
  4644     0793  3EC0               	addlw	192
  4645     0794  390F               	andlw	15
  4646     0795  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4647     079A  2FDC               	goto	l450
  4648     079B                     l2151:
  4649     079B  3002               	movlw	2
  4650     079C  065E               	xorwf	_pos_y,w
  4651     079D  1D03               	btfss	3,2
  4652     079E  2FA0               	goto	u2761
  4653     079F  2FA1               	goto	u2760
  4654     07A0                     u2761:
  4655     07A0  2FBC               	goto	l2155
  4656     07A1                     u2760:
  4657     07A1                     l2153:
  4658     07A1  085F               	movf	_pos_x,w
  4659     07A2  3E94               	addlw	148
  4660     07A3  00A0               	movwf	??_disparar
  4661     07A4  3004               	movlw	4
  4662     07A5                     u2775:
  4663     07A5  1003               	clrc
  4664     07A6  0CA0               	rrf	??_disparar,f
  4665     07A7  3EFF               	addlw	-1
  4666     07A8  1D03               	skipz
  4667     07A9  2FA5               	goto	u2775
  4668     07AA  0820               	movf	??_disparar,w
  4669     07AB  390F               	andlw	15
  4670     07AC  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4671     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4672     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  4673     07B3  085F               	movf	_pos_x,w
  4674     07B4  3E94               	addlw	148
  4675     07B5  390F               	andlw	15
  4676     07B6  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4677     07BB  2FDC               	goto	l450
  4678     07BC                     l2155:
  4679     07BC  3003               	movlw	3
  4680     07BD  065E               	xorwf	_pos_y,w
  4681     07BE  1D03               	btfss	3,2
  4682     07BF  2FC1               	goto	u2781
  4683     07C0  2FC2               	goto	u2780
  4684     07C1                     u2781:
  4685     07C1  2FDC               	goto	l450
  4686     07C2                     u2780:
  4687     07C2                     l2157:
  4688     07C2  085F               	movf	_pos_x,w
  4689     07C3  3ED4               	addlw	212
  4690     07C4  00A0               	movwf	??_disparar
  4691     07C5  3004               	movlw	4
  4692     07C6                     u2795:
  4693     07C6  1003               	clrc
  4694     07C7  0CA0               	rrf	??_disparar,f
  4695     07C8  3EFF               	addlw	-1
  4696     07C9  1D03               	skipz
  4697     07CA  2FC6               	goto	u2795
  4698     07CB  0820               	movf	??_disparar,w
  4699     07CC  390F               	andlw	15
  4700     07CD  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4701     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  4702     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  4703     07D4  085F               	movf	_pos_x,w
  4704     07D5  3ED4               	addlw	212
  4705     07D6  390F               	andlw	15
  4706     07D7  120A  158A  22C2  120A  118A  	fcall	_LCD_Write
  4707     07DC                     l450:
  4708     07DC  3000               	movlw	0
  4709     07DD  120A  118A  2008  120A  118A  	fcall	_LCD_putc
  4710     07E2                     l2159:
  4711     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  4712     07E3  1303               	bcf	3,6	;RP1=0, select bank0
  4713     07E4  1185               	bcf	5,3	;volatile
  4714     07E5                     l451:
  4715     07E5  0008               	return
  4716     07E6                     __end_of_disparar:
  4717                           
  4718                           	psect	text17
  4719     09B3                     __ptext17:	
  4720 ;; *************** function _LCD_putrs *****************
  4721 ;; Defined at:
  4722 ;;		line 89 in file "lcd.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  a               1    6[COMMON] PTR const unsigned char 
  4725 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  4726 ;;		 -> STR_2(2), STR_1(2), 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  i               2    7[COMMON] int 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4738 ;;      Params:         1       0       0       0       0
  4739 ;;      Locals:         2       0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0
  4741 ;;      Totals:         3       0       0       0       0
  4742 ;;Total ram usage:        3 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 2
  4745 ;; This function calls:
  4746 ;;		_LCD_putc
  4747 ;; This function is called by:
  4748 ;;		_pot_x
  4749 ;;		_pot_y
  4750 ;;		_mover_nubes
  4751 ;;		_dibujar_fondo
  4752 ;;		_disparar
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756     09B3                     _LCD_putrs:	
  4757                           ;psect for function _LCD_putrs
  4758                           
  4759     09B3                     l1841:	
  4760                           ;incstack = 0
  4761                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4762                           
  4763                           
  4764                           ;lcd.c: 91:     for ( int i = 0; a[i] != '\0'; ++i ) {
  4765     09B3  01F7               	clrf	LCD_putrs@i
  4766     09B4  01F8               	clrf	LCD_putrs@i+1
  4767     09B5  29C9               	goto	l1847
  4768     09B6                     l1843:
  4769                           
  4770                           ;lcd.c: 92:         LCD_putc(a[i]);
  4771     09B6  0877               	movf	LCD_putrs@i,w
  4772     09B7  0776               	addwf	LCD_putrs@a,w
  4773     09B8  0084               	movwf	4
  4774     09B9  120A  158A  2000  120A  158A  	fcall	stringdir
  4775     09BE  120A  118A  2008  120A  158A  	fcall	_LCD_putc
  4776     09C3                     l1845:
  4777                           
  4778                           ;lcd.c: 93:     }
  4779     09C3  3001               	movlw	1
  4780     09C4  07F7               	addwf	LCD_putrs@i,f
  4781     09C5  1803               	skipnc
  4782     09C6  0AF8               	incf	LCD_putrs@i+1,f
  4783     09C7  3000               	movlw	0
  4784     09C8  07F8               	addwf	LCD_putrs@i+1,f
  4785     09C9                     l1847:
  4786     09C9  0877               	movf	LCD_putrs@i,w
  4787     09CA  0776               	addwf	LCD_putrs@a,w
  4788     09CB  0084               	movwf	4
  4789     09CC  120A  158A  2000  120A  158A  	fcall	stringdir
  4790     09D1  3A00               	xorlw	0
  4791     09D2  1D03               	skipz
  4792     09D3  29D5               	goto	u2001
  4793     09D4  29D6               	goto	u2000
  4794     09D5                     u2001:
  4795     09D5  29B6               	goto	l1843
  4796     09D6                     u2000:
  4797     09D6                     l518:
  4798     09D6  0008               	return
  4799     09D7                     __end_of_LCD_putrs:
  4800                           
  4801                           	psect	text18
  4802     0008                     __ptext18:	
  4803 ;; *************** function _LCD_putc *****************
  4804 ;; Defined at:
  4805 ;;		line 67 in file "lcd.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  c               1    wreg     unsigned char 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  c               1    5[COMMON] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4819 ;;      Params:         0       0       0       0       0
  4820 ;;      Locals:         1       0       0       0       0
  4821 ;;      Temps:          2       0       0       0       0
  4822 ;;      Totals:         3       0       0       0       0
  4823 ;;Total ram usage:        3 bytes
  4824 ;; Hardware stack levels used: 1
  4825 ;; Hardware stack levels required when called: 1
  4826 ;; This function calls:
  4827 ;;		_LCD_Out
  4828 ;; This function is called by:
  4829 ;;		_dibujar_suelo
  4830 ;;		_main
  4831 ;;		_pot_x
  4832 ;;		_pot_y
  4833 ;;		_mover_nubes
  4834 ;;		_dibujar_fondo
  4835 ;;		_disparar
  4836 ;;		_LCD_putrs
  4837 ;;		_LCD_ram_write
  4838 ;;		_LCD_puts
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842     0008                     _LCD_putc:	
  4843                           ;psect for function _LCD_putc
  4844                           
  4845                           
  4846                           ;incstack = 0
  4847                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4848                           ;LCD_putc@c stored from wreg
  4849     0008  00F5               	movwf	LCD_putc@c
  4850     0009                     l1801:
  4851                           
  4852                           ;lcd.c: 68:     *(lcd.PORT) |= 1 << lcd.RS;
  4853     0009  1283               	bcf	3,5	;RP0=0, select bank0
  4854     000A  1303               	bcf	3,6	;RP1=0, select bank0
  4855     000B  0859               	movf	_lcd,w
  4856     000C  0084               	movwf	4
  4857     000D  1783               	bsf	3,7
  4858     000E  1C5A               	btfss	_lcd+1,0
  4859     000F  1383               	bcf	3,7
  4860     0010  3001               	movlw	1
  4861     0011  00F3               	movwf	??_LCD_putc
  4862     0012  085B               	movf	_lcd+2,w
  4863     0013  3907               	andlw	7
  4864     0014  3E01               	addlw	1
  4865     0015  2818               	goto	u1874
  4866     0016                     u1875:
  4867     0016  1003               	clrc
  4868     0017  0DF3               	rlf	??_LCD_putc,f
  4869     0018                     u1874:
  4870     0018  3EFF               	addlw	-1
  4871     0019  1D03               	skipz
  4872     001A  2816               	goto	u1875
  4873     001B  0873               	movf	??_LCD_putc,w
  4874     001C  0480               	iorwf	0,f
  4875     001D                     l1803:
  4876                           
  4877                           ;lcd.c: 70:     LCD_Out((c & 0xF0) >> 4);
  4878     001D  0875               	movf	LCD_putc@c,w
  4879     001E  00F3               	movwf	??_LCD_putc
  4880     001F  3004               	movlw	4
  4881     0020                     u1885:
  4882     0020  1003               	clrc
  4883     0021  0CF3               	rrf	??_LCD_putc,f
  4884     0022  3EFF               	addlw	-1
  4885     0023  1D03               	skipz
  4886     0024  2820               	goto	u1885
  4887     0025  0873               	movf	??_LCD_putc,w
  4888     0026  390F               	andlw	15
  4889     0027  120A  158A  2612  120A  118A  	fcall	_LCD_Out
  4890     002C                     l1805:
  4891                           
  4892                           ;lcd.c: 71:     *(lcd.PORT) |= 1 << lcd.EN;
  4893     002C  1283               	bcf	3,5	;RP0=0, select bank0
  4894     002D  1303               	bcf	3,6	;RP1=0, select bank0
  4895     002E  0859               	movf	_lcd,w
  4896     002F  0084               	movwf	4
  4897     0030  1783               	bsf	3,7
  4898     0031  1C5A               	btfss	_lcd+1,0
  4899     0032  1383               	bcf	3,7
  4900     0033  3001               	movlw	1
  4901     0034  00F3               	movwf	??_LCD_putc
  4902     0035  0C5B               	rrf	_lcd+2,w
  4903     0036  00F4               	movwf	??_LCD_putc+1
  4904     0037  0CF4               	rrf	??_LCD_putc+1,f
  4905     0038  0C74               	rrf	??_LCD_putc+1,w
  4906     0039  3907               	andlw	7
  4907     003A  3E01               	addlw	1
  4908     003B  283E               	goto	u1894
  4909     003C                     u1895:
  4910     003C  1003               	clrc
  4911     003D  0DF3               	rlf	??_LCD_putc,f
  4912     003E                     u1894:
  4913     003E  3EFF               	addlw	-1
  4914     003F  1D03               	skipz
  4915     0040  283C               	goto	u1895
  4916     0041  0873               	movf	??_LCD_putc,w
  4917     0042  0480               	iorwf	0,f
  4918     0043                     l1807:
  4919                           
  4920                           ;lcd.c: 72:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4921     0043  300D               	movlw	13
  4922     0044  00F3               	movwf	??_LCD_putc
  4923     0045                     u3487:
  4924     0045  0BF3               	decfsz	??_LCD_putc,f
  4925     0046  2845               	goto	u3487
  4926     0047                     l1809:
  4927                           
  4928                           ;lcd.c: 73:     *(lcd.PORT) &= ~(1 << lcd.EN);
  4929     0047  1283               	bcf	3,5	;RP0=0, select bank0
  4930     0048  1303               	bcf	3,6	;RP1=0, select bank0
  4931     0049  0859               	movf	_lcd,w
  4932     004A  0084               	movwf	4
  4933     004B  1783               	bsf	3,7
  4934     004C  1C5A               	btfss	_lcd+1,0
  4935     004D  1383               	bcf	3,7
  4936     004E  3001               	movlw	1
  4937     004F  00F3               	movwf	??_LCD_putc
  4938     0050  0C5B               	rrf	_lcd+2,w
  4939     0051  00F4               	movwf	??_LCD_putc+1
  4940     0052  0CF4               	rrf	??_LCD_putc+1,f
  4941     0053  0C74               	rrf	??_LCD_putc+1,w
  4942     0054  3907               	andlw	7
  4943     0055  3E01               	addlw	1
  4944     0056  2859               	goto	u1904
  4945     0057                     u1905:
  4946     0057  1003               	clrc
  4947     0058  0DF3               	rlf	??_LCD_putc,f
  4948     0059                     u1904:
  4949     0059  3EFF               	addlw	-1
  4950     005A  1D03               	skipz
  4951     005B  2857               	goto	u1905
  4952     005C  0873               	movf	??_LCD_putc,w
  4953     005D  3AFF               	xorlw	255
  4954     005E  0580               	andwf	0,f
  4955     005F                     l1811:
  4956                           
  4957                           ;lcd.c: 75:     LCD_Out(c & 0x0F);
  4958     005F  0875               	movf	LCD_putc@c,w
  4959     0060  390F               	andlw	15
  4960     0061  120A  158A  2612  120A  118A  	fcall	_LCD_Out
  4961     0066                     l1813:
  4962                           
  4963                           ;lcd.c: 76:     *(lcd.PORT) |= 1 << lcd.EN;
  4964     0066  1283               	bcf	3,5	;RP0=0, select bank0
  4965     0067  1303               	bcf	3,6	;RP1=0, select bank0
  4966     0068  0859               	movf	_lcd,w
  4967     0069  0084               	movwf	4
  4968     006A  1783               	bsf	3,7
  4969     006B  1C5A               	btfss	_lcd+1,0
  4970     006C  1383               	bcf	3,7
  4971     006D  3001               	movlw	1
  4972     006E  00F3               	movwf	??_LCD_putc
  4973     006F  0C5B               	rrf	_lcd+2,w
  4974     0070  00F4               	movwf	??_LCD_putc+1
  4975     0071  0CF4               	rrf	??_LCD_putc+1,f
  4976     0072  0C74               	rrf	??_LCD_putc+1,w
  4977     0073  3907               	andlw	7
  4978     0074  3E01               	addlw	1
  4979     0075  2878               	goto	u1914
  4980     0076                     u1915:
  4981     0076  1003               	clrc
  4982     0077  0DF3               	rlf	??_LCD_putc,f
  4983     0078                     u1914:
  4984     0078  3EFF               	addlw	-1
  4985     0079  1D03               	skipz
  4986     007A  2876               	goto	u1915
  4987     007B  0873               	movf	??_LCD_putc,w
  4988     007C  0480               	iorwf	0,f
  4989                           
  4990                           ;lcd.c: 77:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4991     007D  300D               	movlw	13
  4992     007E  00F3               	movwf	??_LCD_putc
  4993     007F                     u3497:
  4994     007F  0BF3               	decfsz	??_LCD_putc,f
  4995     0080  287F               	goto	u3497
  4996     0081                     l1815:
  4997                           
  4998                           ;lcd.c: 78:     *(lcd.PORT) &= ~(1 << lcd.EN);
  4999     0081  1283               	bcf	3,5	;RP0=0, select bank0
  5000     0082  1303               	bcf	3,6	;RP1=0, select bank0
  5001     0083  0859               	movf	_lcd,w
  5002     0084  0084               	movwf	4
  5003     0085  1783               	bsf	3,7
  5004     0086  1C5A               	btfss	_lcd+1,0
  5005     0087  1383               	bcf	3,7
  5006     0088  3001               	movlw	1
  5007     0089  00F3               	movwf	??_LCD_putc
  5008     008A  0C5B               	rrf	_lcd+2,w
  5009     008B  00F4               	movwf	??_LCD_putc+1
  5010     008C  0CF4               	rrf	??_LCD_putc+1,f
  5011     008D  0C74               	rrf	??_LCD_putc+1,w
  5012     008E  3907               	andlw	7
  5013     008F  3E01               	addlw	1
  5014     0090  2893               	goto	u1924
  5015     0091                     u1925:
  5016     0091  1003               	clrc
  5017     0092  0DF3               	rlf	??_LCD_putc,f
  5018     0093                     u1924:
  5019     0093  3EFF               	addlw	-1
  5020     0094  1D03               	skipz
  5021     0095  2891               	goto	u1925
  5022     0096  0873               	movf	??_LCD_putc,w
  5023     0097  3AFF               	xorlw	255
  5024     0098  0580               	andwf	0,f
  5025     0099                     l506:
  5026     0099  0008               	return
  5027     009A                     __end_of_LCD_putc:
  5028                           
  5029                           	psect	text19
  5030     0CB5                     __ptext19:	
  5031 ;; *************** function _LCD_Init *****************
  5032 ;; Defined at:
  5033 ;;		line 31 in file "lcd.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  display         5    6[COMMON] struct .
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;  cmd             1   13[COMMON] unsigned char 
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  1    wreg      _Bool 
  5040 ;; Registers used:
  5041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5047 ;;      Params:         5       0       0       0       0
  5048 ;;      Locals:         1       0       0       0       0
  5049 ;;      Temps:          2       0       0       0       0
  5050 ;;      Totals:         8       0       0       0       0
  5051 ;;Total ram usage:        8 bytes
  5052 ;; Hardware stack levels used: 1
  5053 ;; Hardware stack levels required when called: 2
  5054 ;; This function calls:
  5055 ;;		_LCD_Write
  5056 ;; This function is called by:
  5057 ;;		_main
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061     0CB5                     _LCD_Init:	
  5062                           ;psect for function _LCD_Init
  5063                           
  5064     0CB5                     l2191:	
  5065                           ;incstack = 0
  5066                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5067                           
  5068                           
  5069                           ;lcd.c: 32:     lcd = display;
  5070     0CB5  3059               	movlw	_lcd& (0+255)
  5071     0CB6  0084               	movwf	4
  5072     0CB7  0876               	movf	LCD_Init@display,w
  5073     0CB8  1383               	bcf	3,7	;select IRP bank0
  5074     0CB9  0080               	movwf	0
  5075     0CBA  0A84               	incf	4,f
  5076     0CBB  0877               	movf	LCD_Init@display+1,w
  5077     0CBC  0080               	movwf	0
  5078     0CBD  0A84               	incf	4,f
  5079     0CBE  0878               	movf	LCD_Init@display+2,w
  5080     0CBF  0080               	movwf	0
  5081     0CC0  0A84               	incf	4,f
  5082     0CC1  0879               	movf	LCD_Init@display+3,w
  5083     0CC2  0080               	movwf	0
  5084     0CC3  0A84               	incf	4,f
  5085     0CC4  087A               	movf	LCD_Init@display+4,w
  5086     0CC5  0080               	movwf	0
  5087     0CC6                     l2193:
  5088                           
  5089                           ;lcd.c: 34:     if ( lcd.PORT == &PORTA ) {
  5090     0CC6  3000               	movlw	0
  5091     0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  5092     0CC8  1303               	bcf	3,6	;RP1=0, select bank0
  5093     0CC9  065A               	xorwf	_lcd+1,w
  5094     0CCA  1D03               	skipz
  5095     0CCB  2CCE               	goto	u2815
  5096     0CCC  3005               	movlw	5
  5097     0CCD  0659               	xorwf	_lcd,w
  5098     0CCE                     u2815:
  5099     0CCE  1D03               	skipz
  5100     0CCF  2CD1               	goto	u2811
  5101     0CD0  2CD2               	goto	u2810
  5102     0CD1                     u2811:
  5103     0CD1  2CD6               	goto	l2197
  5104     0CD2                     u2810:
  5105     0CD2                     l2195:
  5106                           
  5107                           ;lcd.c: 35:         TRISA = 0x00;
  5108     0CD2  1683               	bsf	3,5	;RP0=1, select bank1
  5109     0CD3  1303               	bcf	3,6	;RP1=0, select bank1
  5110     0CD4  0185               	clrf	5	;volatile
  5111                           
  5112                           ;lcd.c: 36:     } else if ( lcd.PORT == &PORTB ) {
  5113     0CD5  2CF1               	goto	l2205
  5114     0CD6                     l2197:
  5115     0CD6  3000               	movlw	0
  5116     0CD7  065A               	xorwf	_lcd+1,w
  5117     0CD8  1D03               	skipz
  5118     0CD9  2CDC               	goto	u2825
  5119     0CDA  3006               	movlw	6
  5120     0CDB  0659               	xorwf	_lcd,w
  5121     0CDC                     u2825:
  5122     0CDC  1D03               	skipz
  5123     0CDD  2CDF               	goto	u2821
  5124     0CDE  2CE0               	goto	u2820
  5125     0CDF                     u2821:
  5126     0CDF  2CE4               	goto	l2201
  5127     0CE0                     u2820:
  5128     0CE0                     l2199:
  5129                           
  5130                           ;lcd.c: 37:         TRISB = 0x00;
  5131     0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  5132     0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  5133     0CE2  0186               	clrf	6	;volatile
  5134                           
  5135                           ;lcd.c: 38:     } else if ( lcd.PORT == &PORTC ) {
  5136     0CE3  2CF1               	goto	l2205
  5137     0CE4                     l2201:
  5138     0CE4  3000               	movlw	0
  5139     0CE5  065A               	xorwf	_lcd+1,w
  5140     0CE6  1D03               	skipz
  5141     0CE7  2CEA               	goto	u2835
  5142     0CE8  3007               	movlw	7
  5143     0CE9  0659               	xorwf	_lcd,w
  5144     0CEA                     u2835:
  5145     0CEA  1D03               	skipz
  5146     0CEB  2CED               	goto	u2831
  5147     0CEC  2CEE               	goto	u2830
  5148     0CED                     u2831:
  5149     0CED  2D60               	goto	l490
  5150     0CEE                     u2830:
  5151     0CEE                     l2203:
  5152                           
  5153                           ;lcd.c: 39:         TRISC = 0x00;
  5154     0CEE  1683               	bsf	3,5	;RP0=1, select bank1
  5155     0CEF  1303               	bcf	3,6	;RP1=0, select bank1
  5156     0CF0  0187               	clrf	7	;volatile
  5157     0CF1                     l2205:	
  5158                           ;lcd.c: 40:     }
  5159                           
  5160                           
  5161                           ;lcd.c: 52:     _delay((unsigned long)((20)*(4000000/4000.0)));
  5162     0CF1  301A               	movlw	26
  5163     0CF2  00FC               	movwf	??_LCD_Init+1
  5164     0CF3  30F8               	movlw	248
  5165     0CF4  00FB               	movwf	??_LCD_Init
  5166     0CF5                     u3507:
  5167     0CF5  0BFB               	decfsz	??_LCD_Init,f
  5168     0CF6  2CF5               	goto	u3507
  5169     0CF7  0BFC               	decfsz	??_LCD_Init+1,f
  5170     0CF8  2CF5               	goto	u3507
  5171     0CF9  0000               	nop
  5172     0CFA                     l2207:
  5173                           
  5174                           ;lcd.c: 54:     LCD_Write(0x03); _delay((unsigned long)((5)*(4000000/4000.0)));
  5175     0CFA  3003               	movlw	3
  5176     0CFB  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5177     0D00                     l2209:
  5178     0D00  3007               	movlw	7
  5179     0D01  00FC               	movwf	??_LCD_Init+1
  5180     0D02  307D               	movlw	125
  5181     0D03  00FB               	movwf	??_LCD_Init
  5182     0D04                     u3517:
  5183     0D04  0BFB               	decfsz	??_LCD_Init,f
  5184     0D05  2D04               	goto	u3517
  5185     0D06  0BFC               	decfsz	??_LCD_Init+1,f
  5186     0D07  2D04               	goto	u3517
  5187                           
  5188                           ;lcd.c: 55:     LCD_Write(0x03); _delay((unsigned long)((16)*(4000000/4000.0)));
  5189     0D08  3003               	movlw	3
  5190     0D09  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5191     0D0E                     l2211:
  5192     0D0E  3015               	movlw	21
  5193     0D0F  00FC               	movwf	??_LCD_Init+1
  5194     0D10  30C6               	movlw	198
  5195     0D11  00FB               	movwf	??_LCD_Init
  5196     0D12                     u3527:
  5197     0D12  0BFB               	decfsz	??_LCD_Init,f
  5198     0D13  2D12               	goto	u3527
  5199     0D14  0BFC               	decfsz	??_LCD_Init+1,f
  5200     0D15  2D12               	goto	u3527
  5201     0D16  0000               	nop
  5202     0D17                     l2213:
  5203                           
  5204                           ;lcd.c: 56:     LCD_Write(0x03);
  5205     0D17  3003               	movlw	3
  5206     0D18  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5207     0D1D                     l2215:
  5208                           
  5209                           ;lcd.c: 57:     LCD_Write(0x02);
  5210     0D1D  3002               	movlw	2
  5211     0D1E  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5212     0D23                     l2217:
  5213     0D23  3002               	movlw	2
  5214     0D24  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5215     0D29                     l2219:
  5216     0D29  3008               	movlw	8
  5217     0D2A  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5218     0D2F                     l2221:
  5219     0D2F  3000               	movlw	0
  5220     0D30  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5221     0D35                     l2223:
  5222     0D35  3006               	movlw	6
  5223     0D36  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5224     0D3B                     l2225:
  5225     0D3B  3008               	movlw	8
  5226     0D3C  00FD               	movwf	LCD_Init@cmd
  5227     0D3D                     l2227:
  5228     0D3D  157D               	bsf	LCD_Init@cmd,2
  5229     0D3E                     l2233:
  5230     0D3E  087D               	movf	LCD_Init@cmd,w
  5231     0D3F  00FB               	movwf	??_LCD_Init
  5232     0D40  3004               	movlw	4
  5233     0D41                     u2845:
  5234     0D41  1003               	clrc
  5235     0D42  0CFB               	rrf	??_LCD_Init,f
  5236     0D43  3EFF               	addlw	-1
  5237     0D44  1D03               	skipz
  5238     0D45  2D41               	goto	u2845
  5239     0D46  087B               	movf	??_LCD_Init,w
  5240     0D47  390F               	andlw	15
  5241     0D48  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5242     0D4D  087D               	movf	LCD_Init@cmd,w
  5243     0D4E  390F               	andlw	15
  5244     0D4F  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5245     0D54                     l502:	
  5246                           ;lcd.c: 62:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while (
      +                           0 );
  5247                           
  5248     0D54  3000               	movlw	0
  5249     0D55  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5250     0D5A  3001               	movlw	1
  5251     0D5B  120A  158A  22C2  120A  158A  	fcall	_LCD_Write
  5252     0D60                     l490:
  5253     0D60  0008               	return
  5254     0D61                     __end_of_LCD_Init:
  5255                           
  5256                           	psect	text20
  5257     0AC2                     __ptext20:	
  5258 ;; *************** function _LCD_Write *****************
  5259 ;; Defined at:
  5260 ;;		line 23 in file "lcd.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  c               1    wreg     unsigned char 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  c               1    5[COMMON] unsigned char 
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5274 ;;      Params:         0       0       0       0       0
  5275 ;;      Locals:         1       0       0       0       0
  5276 ;;      Temps:          2       0       0       0       0
  5277 ;;      Totals:         3       0       0       0       0
  5278 ;;Total ram usage:        3 bytes
  5279 ;; Hardware stack levels used: 1
  5280 ;; Hardware stack levels required when called: 1
  5281 ;; This function calls:
  5282 ;;		_LCD_Out
  5283 ;; This function is called by:
  5284 ;;		_dibujar_suelo
  5285 ;;		_main
  5286 ;;		_pot_x
  5287 ;;		_pot_y
  5288 ;;		_mover_nubes
  5289 ;;		_dibujar_fondo
  5290 ;;		_disparar
  5291 ;;		_LCD_Init
  5292 ;;		_LCD_cg_ram_addr
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296     0AC2                     _LCD_Write:	
  5297                           ;psect for function _LCD_Write
  5298                           
  5299                           
  5300                           ;incstack = 0
  5301                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5302                           ;LCD_Write@c stored from wreg
  5303     0AC2  00F5               	movwf	LCD_Write@c
  5304     0AC3                     l1791:
  5305                           
  5306                           ;lcd.c: 24:     *(lcd.PORT) &= ~(1 << lcd.RS);
  5307     0AC3  1283               	bcf	3,5	;RP0=0, select bank0
  5308     0AC4  1303               	bcf	3,6	;RP1=0, select bank0
  5309     0AC5  0859               	movf	_lcd,w
  5310     0AC6  0084               	movwf	4
  5311     0AC7  1783               	bsf	3,7
  5312     0AC8  1C5A               	btfss	_lcd+1,0
  5313     0AC9  1383               	bcf	3,7
  5314     0ACA  3001               	movlw	1
  5315     0ACB  00F3               	movwf	??_LCD_Write
  5316     0ACC  085B               	movf	_lcd+2,w
  5317     0ACD  3907               	andlw	7
  5318     0ACE  3E01               	addlw	1
  5319     0ACF  2AD2               	goto	u1844
  5320     0AD0                     u1845:
  5321     0AD0  1003               	clrc
  5322     0AD1  0DF3               	rlf	??_LCD_Write,f
  5323     0AD2                     u1844:
  5324     0AD2  3EFF               	addlw	-1
  5325     0AD3  1D03               	skipz
  5326     0AD4  2AD0               	goto	u1845
  5327     0AD5  0873               	movf	??_LCD_Write,w
  5328     0AD6  3AFF               	xorlw	255
  5329     0AD7  0580               	andwf	0,f
  5330     0AD8                     l1793:
  5331                           
  5332                           ;lcd.c: 25:     LCD_Out(c);
  5333     0AD8  0875               	movf	LCD_Write@c,w
  5334     0AD9  120A  158A  2612  120A  158A  	fcall	_LCD_Out
  5335     0ADE                     l1795:
  5336                           
  5337                           ;lcd.c: 26:     *(lcd.PORT) |= 1 << lcd.EN;
  5338     0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  5339     0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  5340     0AE0  0859               	movf	_lcd,w
  5341     0AE1  0084               	movwf	4
  5342     0AE2  1783               	bsf	3,7
  5343     0AE3  1C5A               	btfss	_lcd+1,0
  5344     0AE4  1383               	bcf	3,7
  5345     0AE5  3001               	movlw	1
  5346     0AE6  00F3               	movwf	??_LCD_Write
  5347     0AE7  0C5B               	rrf	_lcd+2,w
  5348     0AE8  00F4               	movwf	??_LCD_Write+1
  5349     0AE9  0CF4               	rrf	??_LCD_Write+1,f
  5350     0AEA  0C74               	rrf	??_LCD_Write+1,w
  5351     0AEB  3907               	andlw	7
  5352     0AEC  3E01               	addlw	1
  5353     0AED  2AF0               	goto	u1854
  5354     0AEE                     u1855:
  5355     0AEE  1003               	clrc
  5356     0AEF  0DF3               	rlf	??_LCD_Write,f
  5357     0AF0                     u1854:
  5358     0AF0  3EFF               	addlw	-1
  5359     0AF1  1D03               	skipz
  5360     0AF2  2AEE               	goto	u1855
  5361     0AF3  0873               	movf	??_LCD_Write,w
  5362     0AF4  0480               	iorwf	0,f
  5363     0AF5                     l1797:
  5364                           
  5365                           ;lcd.c: 27:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5366     0AF5  300D               	movlw	13
  5367     0AF6  00F3               	movwf	??_LCD_Write
  5368     0AF7                     u3537:
  5369     0AF7  0BF3               	decfsz	??_LCD_Write,f
  5370     0AF8  2AF7               	goto	u3537
  5371     0AF9                     l1799:
  5372                           
  5373                           ;lcd.c: 28:     *(lcd.PORT) &= ~(1 << lcd.EN);
  5374     0AF9  1283               	bcf	3,5	;RP0=0, select bank0
  5375     0AFA  1303               	bcf	3,6	;RP1=0, select bank0
  5376     0AFB  0859               	movf	_lcd,w
  5377     0AFC  0084               	movwf	4
  5378     0AFD  1783               	bsf	3,7
  5379     0AFE  1C5A               	btfss	_lcd+1,0
  5380     0AFF  1383               	bcf	3,7
  5381     0B00  3001               	movlw	1
  5382     0B01  00F3               	movwf	??_LCD_Write
  5383     0B02  0C5B               	rrf	_lcd+2,w
  5384     0B03  00F4               	movwf	??_LCD_Write+1
  5385     0B04  0CF4               	rrf	??_LCD_Write+1,f
  5386     0B05  0C74               	rrf	??_LCD_Write+1,w
  5387     0B06  3907               	andlw	7
  5388     0B07  3E01               	addlw	1
  5389     0B08  2B0B               	goto	u1864
  5390     0B09                     u1865:
  5391     0B09  1003               	clrc
  5392     0B0A  0DF3               	rlf	??_LCD_Write,f
  5393     0B0B                     u1864:
  5394     0B0B  3EFF               	addlw	-1
  5395     0B0C  1D03               	skipz
  5396     0B0D  2B09               	goto	u1865
  5397     0B0E  0873               	movf	??_LCD_Write,w
  5398     0B0F  3AFF               	xorlw	255
  5399     0B10  0580               	andwf	0,f
  5400     0B11                     l481:
  5401     0B11  0008               	return
  5402     0B12                     __end_of_LCD_Write:
  5403                           
  5404                           	psect	text21
  5405     0E12                     __ptext21:	
  5406 ;; *************** function _LCD_Out *****************
  5407 ;; Defined at:
  5408 ;;		line 9 in file "lcd.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  c               1    wreg     unsigned char 
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  c               1    2[COMMON] unsigned char 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5422 ;;      Params:         0       0       0       0       0
  5423 ;;      Locals:         1       0       0       0       0
  5424 ;;      Temps:          2       0       0       0       0
  5425 ;;      Totals:         3       0       0       0       0
  5426 ;;Total ram usage:        3 bytes
  5427 ;; Hardware stack levels used: 1
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_LCD_Write
  5432 ;;		_LCD_putc
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436     0E12                     _LCD_Out:	
  5437                           ;psect for function _LCD_Out
  5438                           
  5439                           
  5440                           ;incstack = 0
  5441                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  5442                           ;LCD_Out@c stored from wreg
  5443     0E12  00F2               	movwf	LCD_Out@c
  5444     0E13                     l1767:
  5445                           
  5446                           ;lcd.c: 10:     if ( c & 1 ) *(lcd.PORT) |= 1 << lcd.D4;
  5447     0E13  1C72               	btfss	LCD_Out@c,0
  5448     0E14  2E16               	goto	u1721
  5449     0E15  2E17               	goto	u1720
  5450     0E16                     u1721:
  5451     0E16  2E2C               	goto	l1771
  5452     0E17                     u1720:
  5453     0E17                     l1769:
  5454     0E17  1283               	bcf	3,5	;RP0=0, select bank0
  5455     0E18  1303               	bcf	3,6	;RP1=0, select bank0
  5456     0E19  0859               	movf	_lcd,w
  5457     0E1A  0084               	movwf	4
  5458     0E1B  1783               	bsf	3,7
  5459     0E1C  1C5A               	btfss	_lcd+1,0
  5460     0E1D  1383               	bcf	3,7
  5461     0E1E  3001               	movlw	1
  5462     0E1F  00F0               	movwf	??_LCD_Out
  5463     0E20  085C               	movf	_lcd+3,w
  5464     0E21  3907               	andlw	7
  5465     0E22  3E01               	addlw	1
  5466     0E23  2E26               	goto	u1734
  5467     0E24                     u1735:
  5468     0E24  1003               	clrc
  5469     0E25  0DF0               	rlf	??_LCD_Out,f
  5470     0E26                     u1734:
  5471     0E26  3EFF               	addlw	-1
  5472     0E27  1D03               	skipz
  5473     0E28  2E24               	goto	u1735
  5474     0E29  0870               	movf	??_LCD_Out,w
  5475     0E2A  0480               	iorwf	0,f
  5476     0E2B  2E41               	goto	l1773
  5477     0E2C                     l1771:
  5478     0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  5479     0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  5480     0E2E  0859               	movf	_lcd,w
  5481     0E2F  0084               	movwf	4
  5482     0E30  1783               	bsf	3,7
  5483     0E31  1C5A               	btfss	_lcd+1,0
  5484     0E32  1383               	bcf	3,7
  5485     0E33  3001               	movlw	1
  5486     0E34  00F0               	movwf	??_LCD_Out
  5487     0E35  085C               	movf	_lcd+3,w
  5488     0E36  3907               	andlw	7
  5489     0E37  3E01               	addlw	1
  5490     0E38  2E3B               	goto	u1744
  5491     0E39                     u1745:
  5492     0E39  1003               	clrc
  5493     0E3A  0DF0               	rlf	??_LCD_Out,f
  5494     0E3B                     u1744:
  5495     0E3B  3EFF               	addlw	-1
  5496     0E3C  1D03               	skipz
  5497     0E3D  2E39               	goto	u1745
  5498     0E3E  0870               	movf	??_LCD_Out,w
  5499     0E3F  3AFF               	xorlw	255
  5500     0E40  0580               	andwf	0,f
  5501     0E41                     l1773:
  5502                           
  5503                           ;lcd.c: 13:     if ( c & 2 ) *(lcd.PORT) |= 1 << lcd.D5;
  5504     0E41  1CF2               	btfss	LCD_Out@c,1
  5505     0E42  2E44               	goto	u1751
  5506     0E43  2E45               	goto	u1750
  5507     0E44                     u1751:
  5508     0E44  2E5B               	goto	l1777
  5509     0E45                     u1750:
  5510     0E45                     l1775:
  5511     0E45  0859               	movf	_lcd,w
  5512     0E46  0084               	movwf	4
  5513     0E47  1783               	bsf	3,7
  5514     0E48  1C5A               	btfss	_lcd+1,0
  5515     0E49  1383               	bcf	3,7
  5516     0E4A  3001               	movlw	1
  5517     0E4B  00F0               	movwf	??_LCD_Out
  5518     0E4C  0C5C               	rrf	_lcd+3,w
  5519     0E4D  00F1               	movwf	??_LCD_Out+1
  5520     0E4E  0CF1               	rrf	??_LCD_Out+1,f
  5521     0E4F  0C71               	rrf	??_LCD_Out+1,w
  5522     0E50  3907               	andlw	7
  5523     0E51  3E01               	addlw	1
  5524     0E52  2E55               	goto	u1764
  5525     0E53                     u1765:
  5526     0E53  1003               	clrc
  5527     0E54  0DF0               	rlf	??_LCD_Out,f
  5528     0E55                     u1764:
  5529     0E55  3EFF               	addlw	-1
  5530     0E56  1D03               	skipz
  5531     0E57  2E53               	goto	u1765
  5532     0E58  0870               	movf	??_LCD_Out,w
  5533     0E59  0480               	iorwf	0,f
  5534     0E5A  2E71               	goto	l1779
  5535     0E5B                     l1777:
  5536     0E5B  0859               	movf	_lcd,w
  5537     0E5C  0084               	movwf	4
  5538     0E5D  1783               	bsf	3,7
  5539     0E5E  1C5A               	btfss	_lcd+1,0
  5540     0E5F  1383               	bcf	3,7
  5541     0E60  3001               	movlw	1
  5542     0E61  00F0               	movwf	??_LCD_Out
  5543     0E62  0C5C               	rrf	_lcd+3,w
  5544     0E63  00F1               	movwf	??_LCD_Out+1
  5545     0E64  0CF1               	rrf	??_LCD_Out+1,f
  5546     0E65  0C71               	rrf	??_LCD_Out+1,w
  5547     0E66  3907               	andlw	7
  5548     0E67  3E01               	addlw	1
  5549     0E68  2E6B               	goto	u1774
  5550     0E69                     u1775:
  5551     0E69  1003               	clrc
  5552     0E6A  0DF0               	rlf	??_LCD_Out,f
  5553     0E6B                     u1774:
  5554     0E6B  3EFF               	addlw	-1
  5555     0E6C  1D03               	skipz
  5556     0E6D  2E69               	goto	u1775
  5557     0E6E  0870               	movf	??_LCD_Out,w
  5558     0E6F  3AFF               	xorlw	255
  5559     0E70  0580               	andwf	0,f
  5560     0E71                     l1779:
  5561                           
  5562                           ;lcd.c: 16:     if ( c & 4 ) *(lcd.PORT) |= 1 << lcd.D6;
  5563     0E71  1D72               	btfss	LCD_Out@c,2
  5564     0E72  2E74               	goto	u1781
  5565     0E73  2E75               	goto	u1780
  5566     0E74                     u1781:
  5567     0E74  2E88               	goto	l1783
  5568     0E75                     u1780:
  5569     0E75                     l1781:
  5570     0E75  0859               	movf	_lcd,w
  5571     0E76  0084               	movwf	4
  5572     0E77  1783               	bsf	3,7
  5573     0E78  1C5A               	btfss	_lcd+1,0
  5574     0E79  1383               	bcf	3,7
  5575     0E7A  3001               	movlw	1
  5576     0E7B  00F0               	movwf	??_LCD_Out
  5577     0E7C  085D               	movf	_lcd+4,w
  5578     0E7D  3907               	andlw	7
  5579     0E7E  3E01               	addlw	1
  5580     0E7F  2E82               	goto	u1794
  5581     0E80                     u1795:
  5582     0E80  1003               	clrc
  5583     0E81  0DF0               	rlf	??_LCD_Out,f
  5584     0E82                     u1794:
  5585     0E82  3EFF               	addlw	-1
  5586     0E83  1D03               	skipz
  5587     0E84  2E80               	goto	u1795
  5588     0E85  0870               	movf	??_LCD_Out,w
  5589     0E86  0480               	iorwf	0,f
  5590     0E87  2E9B               	goto	l1785
  5591     0E88                     l1783:
  5592     0E88  0859               	movf	_lcd,w
  5593     0E89  0084               	movwf	4
  5594     0E8A  1783               	bsf	3,7
  5595     0E8B  1C5A               	btfss	_lcd+1,0
  5596     0E8C  1383               	bcf	3,7
  5597     0E8D  3001               	movlw	1
  5598     0E8E  00F0               	movwf	??_LCD_Out
  5599     0E8F  085D               	movf	_lcd+4,w
  5600     0E90  3907               	andlw	7
  5601     0E91  3E01               	addlw	1
  5602     0E92  2E95               	goto	u1804
  5603     0E93                     u1805:
  5604     0E93  1003               	clrc
  5605     0E94  0DF0               	rlf	??_LCD_Out,f
  5606     0E95                     u1804:
  5607     0E95  3EFF               	addlw	-1
  5608     0E96  1D03               	skipz
  5609     0E97  2E93               	goto	u1805
  5610     0E98  0870               	movf	??_LCD_Out,w
  5611     0E99  3AFF               	xorlw	255
  5612     0E9A  0580               	andwf	0,f
  5613     0E9B                     l1785:
  5614                           
  5615                           ;lcd.c: 19:     if ( c & 8 ) *(lcd.PORT) |= 1 << lcd.D7;
  5616     0E9B  1DF2               	btfss	LCD_Out@c,3
  5617     0E9C  2E9E               	goto	u1811
  5618     0E9D  2E9F               	goto	u1810
  5619     0E9E                     u1811:
  5620     0E9E  2EB5               	goto	l1789
  5621     0E9F                     u1810:
  5622     0E9F                     l1787:
  5623     0E9F  0859               	movf	_lcd,w
  5624     0EA0  0084               	movwf	4
  5625     0EA1  1783               	bsf	3,7
  5626     0EA2  1C5A               	btfss	_lcd+1,0
  5627     0EA3  1383               	bcf	3,7
  5628     0EA4  3001               	movlw	1
  5629     0EA5  00F0               	movwf	??_LCD_Out
  5630     0EA6  0C5D               	rrf	_lcd+4,w
  5631     0EA7  00F1               	movwf	??_LCD_Out+1
  5632     0EA8  0CF1               	rrf	??_LCD_Out+1,f
  5633     0EA9  0C71               	rrf	??_LCD_Out+1,w
  5634     0EAA  3907               	andlw	7
  5635     0EAB  3E01               	addlw	1
  5636     0EAC  2EAF               	goto	u1824
  5637     0EAD                     u1825:
  5638     0EAD  1003               	clrc
  5639     0EAE  0DF0               	rlf	??_LCD_Out,f
  5640     0EAF                     u1824:
  5641     0EAF  3EFF               	addlw	-1
  5642     0EB0  1D03               	skipz
  5643     0EB1  2EAD               	goto	u1825
  5644     0EB2  0870               	movf	??_LCD_Out,w
  5645     0EB3  0480               	iorwf	0,f
  5646     0EB4  2ECB               	goto	l478
  5647     0EB5                     l1789:
  5648     0EB5  0859               	movf	_lcd,w
  5649     0EB6  0084               	movwf	4
  5650     0EB7  1783               	bsf	3,7
  5651     0EB8  1C5A               	btfss	_lcd+1,0
  5652     0EB9  1383               	bcf	3,7
  5653     0EBA  3001               	movlw	1
  5654     0EBB  00F0               	movwf	??_LCD_Out
  5655     0EBC  0C5D               	rrf	_lcd+4,w
  5656     0EBD  00F1               	movwf	??_LCD_Out+1
  5657     0EBE  0CF1               	rrf	??_LCD_Out+1,f
  5658     0EBF  0C71               	rrf	??_LCD_Out+1,w
  5659     0EC0  3907               	andlw	7
  5660     0EC1  3E01               	addlw	1
  5661     0EC2  2EC5               	goto	u1834
  5662     0EC3                     u1835:
  5663     0EC3  1003               	clrc
  5664     0EC4  0DF0               	rlf	??_LCD_Out,f
  5665     0EC5                     u1834:
  5666     0EC5  3EFF               	addlw	-1
  5667     0EC6  1D03               	skipz
  5668     0EC7  2EC3               	goto	u1835
  5669     0EC8  0870               	movf	??_LCD_Out,w
  5670     0EC9  3AFF               	xorlw	255
  5671     0ECA  0580               	andwf	0,f
  5672     0ECB                     l478:
  5673     0ECB  0008               	return
  5674     0ECC                     __end_of_LCD_Out:
  5675                           
  5676                           	psect	text22
  5677     0992                     __ptext22:	
  5678 ;; *************** function _ADC_Init *****************
  5679 ;; Defined at:
  5680 ;;		line 138 in file "main.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;		None
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;		None
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		status,2
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5694 ;;      Params:         0       0       0       0       0
  5695 ;;      Locals:         0       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0
  5697 ;;      Totals:         0       0       0       0       0
  5698 ;;Total ram usage:        0 bytes
  5699 ;; Hardware stack levels used: 1
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_main
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707     0992                     _ADC_Init:	
  5708                           ;psect for function _ADC_Init
  5709                           
  5710     0992                     l2183:	
  5711                           ;incstack = 0
  5712                           ; Regs used in _ADC_Init: [status,2]
  5713                           
  5714                           
  5715                           ;main.c: 139:     LCD_Init(lcd);
  5716     0992  3003               	movlw	3
  5717     0993  1683               	bsf	3,5	;RP0=1, select bank3
  5718     0994  1703               	bsf	3,6	;RP1=1, select bank3
  5719     0995  0088               	movwf	8	;volatile
  5720     0996                     l2185:
  5721                           
  5722                           ;main.c: 140:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while
      +                           ( 0 );
  5723     0996  0189               	clrf	9	;volatile
  5724     0997                     l2187:
  5725                           
  5726                           ;main.c: 141: 
  5727     0997  3080               	movlw	128
  5728     0998  1683               	bsf	3,5	;RP0=1, select bank1
  5729     0999  1303               	bcf	3,6	;RP1=0, select bank1
  5730     099A  009F               	movwf	31	;volatile
  5731     099B                     l2189:
  5732                           
  5733                           ;main.c: 142: 
  5734     099B  3001               	movlw	1
  5735     099C  1283               	bcf	3,5	;RP0=0, select bank0
  5736     099D  1303               	bcf	3,6	;RP1=0, select bank0
  5737     099E  009F               	movwf	31	;volatile
  5738     099F                     l100:
  5739     099F  0008               	return
  5740     09A0                     __end_of_ADC_Init:
  5741     0002                     ___latbits      equ	2
  5742     007E                     btemp           set	126	;btemp
  5743     007E                     wtemp0          set	126
  5744                           
  5745                           	psect	config
  5746                           
  5747                           ;Config register CONFIG1 @ 0x2007
  5748                           ;	Oscillator Selection bits
  5749                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  5750                           ;	Watchdog Timer Enable bit
  5751                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5752                           ;	Power-up Timer Enable bit
  5753                           ;	PWRTE = OFF, PWRT disabled
  5754                           ;	RE3/MCLR pin function select bit
  5755                           ;	MCLRE = 0x1, unprogrammed default
  5756                           ;	Code Protection bit
  5757                           ;	CP = OFF, Program memory code protection is disabled
  5758                           ;	Data Code Protection bit
  5759                           ;	CPD = OFF, Data memory code protection is disabled
  5760                           ;	Brown Out Reset Selection bits
  5761                           ;	BOREN = ON, BOR enabled
  5762                           ;	Internal External Switchover bit
  5763                           ;	IESO = 0x1, unprogrammed default
  5764                           ;	Fail-Safe Clock Monitor Enabled bit
  5765                           ;	FCMEN = 0x1, unprogrammed default
  5766                           ;	Low Voltage Programming Enable bit
  5767                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5768                           ;	In-Circuit Debugger Mode bit
  5769                           ;	DEBUG = 0x1, unprogrammed default
  5770     2007                     	org	8199
  5771     2007  2FF1               	dw	12273
  5772                           
  5773                           ;Config register CONFIG2 @ 0x2008
  5774                           ;	Brown-out Reset Selection bit
  5775                           ;	BOR4V = 0x1, unprogrammed default
  5776                           ;	Flash Program Memory Self Write Enable bits
  5777                           ;	WRT = OFF, Write protection off
  5778     2008                     	org	8200
  5779     2008  3FFF               	dw	16383

Data Sizes:
    Strings     2
    Constant    64
    Data        7
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    LCD_custom_char@x	PTR const unsigned char  size(1) Largest target is 8
		 -> arbol(CODE[8]), bob(CODE[8]), bob_reves(CODE[8]), casa1(CODE[8]), 
		 -> casa2(CODE[8]), flor(CODE[8]), nube(CODE[8]), suelo(CODE[8]), 

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 
		 -> STR_5(CODE[2]), STR_6(CODE[2]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_dibujar_suelo
    _pot_y->_LCD_putrs
    _rand->___lmul
    _dibujar_fondo->_LCD_putrs
    _mover_nubes->_LCD_putrs
    _dibujar_suelo->_LCD_custom_char
    _LCD_custom_char->_LCD_cg_ram_addr
    _LCD_ram_write->_LCD_putc
    _LCD_cg_ram_addr->_LCD_Write
    _checar_boton->_disparar
    _disparar->_LCD_putrs
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    _main->_pot_x
    _pot_x->_generar_fondo
    _generar_fondo->___awmod
    ___awmod->_rand
    _dibujar_suelo->_LCD_custom_char
    _checar_boton->_disparar

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9743
                                             29 BANK0      1     1      0
                           _ADC_Init
                           _LCD_Init
                          _LCD_Write
                    _LCD_custom_char
                           _LCD_putc
                       _checar_boton
                      _dibujar_fondo
                      _dibujar_suelo
                      _generar_fondo
                        _mover_nubes
                              _pot_x
                              _pot_y
                              _srand
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      23
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _pot_y                                                4     4      0     663
                                              9 COMMON     4     4      0
                           _ADC_Read
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (1) _pot_x                                                9     9      0    2596
                                             20 BANK0      9     9      0
                           _ADC_Read
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
                      _dibujar_fondo
                      _generar_fondo
 ---------------------------------------------------------------------------------
 (2) _generar_fondo                                        8     8      0     763
                                             12 BANK0      8     8      0
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2      94
                                              0 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              13     5      8      94
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     304
                                              6 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _dibujar_fondo                                        3     3      0    1077
                                              9 COMMON     3     3      0
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      29
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _mover_nubes                                          6     6      0    1077
                                              9 COMMON     3     3      0
                                              0 BANK0      3     3      0
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (1) _dibujar_suelo                                        1     1      0     961
                                             13 COMMON     1     1      0
                          _LCD_Write
                    _LCD_custom_char
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_custom_char                                      4     3      1     596
                                             11 COMMON     2     1      1
                                              0 BANK0      2     2      0
                    _LCD_cg_ram_addr
                      _LCD_ram_write
 ---------------------------------------------------------------------------------
 (3) _LCD_ram_write                                        1     1      0     203
                                              6 COMMON     1     1      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (3) _LCD_cg_ram_addr                                      5     5      0     234
                                              6 COMMON     5     5      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _checar_boton                                         0     0      0    1452
                           _disparar
 ---------------------------------------------------------------------------------
 (2) _disparar                                             9     9      0    1452
                                              9 COMMON     2     2      0
                                              0 BANK0      7     7      0
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (2) _LCD_putrs                                            3     2      1     270
                                              6 COMMON     3     2      1
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (3) _LCD_putc                                             3     3      0     174
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     216
                                              6 COMMON     8     3      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            3     3      0     145
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (4) _LCD_Out                                              3     3      0     116
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
   _LCD_custom_char
     _LCD_cg_ram_addr
       _LCD_Write
     _LCD_ram_write
       _LCD_putc
         _LCD_Out
   _LCD_putc
   _checar_boton
     _disparar
       _LCD_Write
       _LCD_putc
       _LCD_putrs
         _LCD_putc
   _dibujar_fondo
     _LCD_Write
     _LCD_putc
     _LCD_putrs
   _dibujar_suelo
     _LCD_Write
     _LCD_custom_char
     _LCD_putc
   _generar_fondo
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
   _mover_nubes
     _LCD_Write
     _LCD_putc
     _LCD_putrs
   _pot_x
     _ADC_Read
     _LCD_Write
     _LCD_putc
     _LCD_putrs
     _dibujar_fondo
     _generar_fondo
   _pot_y
     _ADC_Read
     _LCD_Write
     _LCD_putc
     _LCD_putrs
   _srand

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80     30      64     80.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      78      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Jun 23 12:23:12 2025

                      pc 0002                       l75 0A7B                       l97 09FA  
                     fsr 0004     __end_of_checar_boton 0985                      l100 099F  
                    l103 0A41                      l106 0A4B                      l140 0FE8  
                    l215 0127                      l240 0984                      l306 0BBE  
                    l162 0276                      l323 0BFB                      l235 01D7  
                    l219 0154                      l139 0FE2                      l236 01E6  
                    l261 0C50                      l173 02B5                      l502 0D54  
                    l414 0670                      l342 036B                      l246 0C2E  
                    l167 0298                      l432 0744                      l506 0099  
                    l450 07DC                      l282 0C97                      l338 0C1B  
                    l451 07E5                      l283 0CB4                      l339 0C29  
                    l195 035A                      l524 0A21                      l196 036A  
                    l518 09D6                      l358 03EE                      l527 0970  
                    l296 0E11                      l481 0B11                      l490 0D60  
                    l378 04C1                      l627 0AC1                      l396 0596  
                    l478 0ECB                      l779 0BBB          LCD_Init@display 0076  
                    _bob 083E                      _lcd 0059                      fsr0 0004  
                    indf 0000             ___awmod@sign 002B          __end_of_LCD_Out 0ECC  
                   l2011 0BF3                     l2003 0BD6                     l2101 05BD  
                   l2021 0BFB                     l2013 0BF9                     l2005 0BE0  
                   l2111 061D                     l2103 05C4                     l2031 036B  
                   l2007 0BEA                     l2201 0CE4                     l2121 0684  
                   l2113 0644                     l2105 05EB                     l2041 03B3  
                   l2033 0372                     l2009 0BF1                     l1074 0991  
                   l2211 0D0E                     l2203 0CEE                     l2131 0713  
                   l2123 06B0                     l2115 064A                     l2107 05F0  
                   l2043 03CE                     l2035 038D                     l2027 0C21  
                   l2221 0D2F                     l2213 0D17                     l2205 0CF1  
                   l2141 0753                     l2133 0719                     l2125 06B5  
                   l2109 0617                     l2117 0677                     l2061 0415  
                   l2045 03D4                     l2037 0392                     l2029 0C23  
                   l1077 0B62                     l2301 0360                     l2223 0D35  
                   l2215 0D1D                     l2207 0CFA                     l2151 079B  
                   l2143 0759                     l2127 06E1                     l2119 067F  
                   l2135 074B                     l2071 0495                     l2063 043C  
                   l2055 03F9                     l2047 03F4                     l2039 03AD  
                   l2311 00CB                     l2303 009A                     l2233 0D3E  
                   l2225 0D3B                     l2217 0D23                     l2209 0D00  
                   l2153 07A1                     l2145 0760                     l2129 06E7  
                   l2081 04D6                     l2073 049B                     l2065 0441  
                   l2057 03FA                     l2049 03F7                     l2161 09D7  
                   l2241 01F3                     l2321 012E                     l2313 00E6  
                   l2305 00A4                     l2401 0F03                     l2227 0D3D  
                   l2219 0D29                     l2155 07BC                     l2147 077B  
                   l2139 0751                     l2091 0565                     l2083 0502  
                   l2075 04C7                     l2067 0468                     l2059 040E  
                   l2171 09EB                     l2251 0235                     l2243 01F5  
                   l2331 0152                     l2323 0137                     l2315 00EC  
                   l2307 00AB                     l2411 0F2B                     l2403 0F0B  
                   l2157 07C2                     l2149 0780                     l2093 056B  
                   l2085 0507                     l2069 046E                     l2077 04C9  
                   l2181 09F4                     l2261 0288                     l2253 023B  
                   l2245 01FA                     l2341 019C                     l2333 015B  
                   l2325 013E                     l2317 0107                     l2309 00C6  
                   l2237 0985                     l2421 0F50                     l2413 0F33  
                   l2405 0F13                     l2183 0992                     l2191 0CB5  
                   l2159 07E2                     l2095 059C                     l2087 0533  
                   l2079 04D1                     l2351 097F                     l2271 02A9  
                   l2263 028E                     l2255 0256                     l2247 0215  
                   l2239 01E7                     l2343 01B7                     l2335 0176  
                   l2327 0141                     l2319 010D                     l2431 0F81  
                   l2423 0F55                     l2415 0F3B                     l2407 0F1B  
                   l2185 0996                     l2193 0CC6                     l1801 0009  
                   l2089 0539                     l2097 059E                     l2177 09EC  
                   l2169 09DF                     l2361 0C2E                     l2353 0C2A  
                   l2281 02C8                     l2273 02AE                     l2265 0291  
                   l2257 025C                     l2249 021A                     l2345 01BD  
                   l2337 017B                     l2329 014A                     l2441 0FC8  
                   l2433 0F86                     l2425 0F5A                     l2417 0F44  
                   l2409 0F23                     l2187 0997                     l2195 0CD2  
                   l1811 005F                     l1803 001D                     l2099 05A9  
                   l2179 09F2                     l2371 0C6D                     l2291 02FE  
                   l2283 02CD                     l2275 02B7                     l2267 029B  
                   l2259 027D                     l2347 01DD                     l2339 0196  
                   l2443 0FF2                     l2435 0FA1                     l2427 0F5F  
                   l2419 0F4A                     l2189 099B                     l2197 0CD6  
                   l1813 0066                     l1805 002C                     l2349 0979  
                   l2373 0C71                     l1821 0A88                     l2293 0319  
                   l2285 02D7                     l2277 02BC                     l2269 02A4  
                   l2445 0FF7                     l2437 0FA7                     l2429 0F66  
                   l2199 0CE0                     l1815 0081                     l1807 0043  
                   l1831 09FC                     l1903 0A64                     l2383 0C9D  
                   l2367 0C57                     l1911 0A26                     l1823 0A9F  
                   l2295 031F                     l2287 02DE                     l2279 02C2  
                   l2439 0FC2                     l2391 0ED3                     l1809 0047  
                   l1841 09B3                     l1833 0A02                     l1905 0A71  
                   l2385 0CA1                     l2377 0C76                     l2369 0C62  
                   l1913 0A35                     l1825 0AA8                     l1817 0A7C  
                   l1921 0D61                     l2297 033A                     l2289 02F9  
                   l2393 0ED8                     l1771 0E2C                     l1843 09B6  
                   l1835 0A04                     l1907 0A75                     l2387 0CA7  
                   l1915 0A3E                     l1827 0AB9                     l1819 0A84  
                   l1851 0B4D                     l1931 0D6C                     l2299 0340  
                   l2395 0EEF                     l1781 0E75                     l1773 0E41  
                   l1845 09C3                     l1837 0A19                     l1917 0A45  
                   l1909 0A23                     l1861 0B6F                     l1941 0D8B  
                   l1933 0D72                     l2397 0EF5                     l2389 0ECC  
                   l1783 0E88                     l1775 0E45                     l1767 0E13  
                   l1791 0AC3                     l1847 09C9                     l1839 096A  
                   l1871 0B83                     l1863 0B71                     l1855 0B63  
                   l1943 0D91                     l1927 0D64                     l2399 0EFB  
                   l1785 0E9B                     l1777 0E5B                     l1769 0E17  
                   l1793 0AD8                     l1881 0BA0                     l1873 0B8A  
                   l1865 0B75                     l1857 0B66                     l1849 0B12  
                   l1961 0DC0                     l1953 0D9A                     l1945 0D93  
                   l1929 0D6A                     l1787 0E9F                     l1779 0E71  
                   l1795 0ADE                     l1883 0BA7                     l1875 0B8C  
                   l1867 0B7A                     l1859 0B6A                     l1971 0DDF  
                   l1955 0DB2                     l1947 0D99                     l1939 0D73  
                   l1789 0EB5                     l1797 0AF5                     l1893 0A4F  
                   l1877 0B90                     l1869 0B80                     l1885 0BAD  
                   l1973 0DE4                     l1957 0DB8                     l1799 0AF9  
                   l1895 0A5B                     l1887 0BB2                     l1879 0B9A  
                   l1983 0DED                     l1975 0DE6                     l1967 0DC1  
                   l1959 0DBA                     l1897 0A61                     l1889 0BB7  
                   l1985 0E09                     l1977 0DEC                     l1969 0DD9  
                   l1987 0E0B                     l1989 0BBC                     l1999 0BBE  
                   STR_1 0846                     STR_2 0846                     STR_3 0846  
                   STR_4 0846                     STR_5 0846                     STR_6 0846  
                   u2000 09D6                     u2001 09D5                     u2010 0B3A  
                   u2011 0B3B                     u2100 0BAD                     u2020 0B5B  
                   u2012 0B40                     u2101 0BAC                     u2013 0B41  
                   u2110 0BB2                     u2030 0B6A                     u2111 0BB1  
                   u2031 0B69                     u2040 0B75                     u2200 0E11  
                   u3000 02CD                     u2041 0B74                     u2025 0B56  
                   u2201 0E10                     u3001 02CC                     u2130 0A7B  
                   u2050 0B80                     u3010 02DE                     u2131 0A7A  
                   u2051 0B7F                     u3011 02DD                     u2300 03B3  
                   u2220 0BE0                     u2301 03B2                     u2125 0A53  
                   u2221 0BDF                     u2150 0A45                     u2230 0BF9  
                   u2070 0B90                     u3030 02FE                     u3110 00CB  
                   u2151 0A44                     u2231 0BF8                     u2215 0BC2  
                   u2071 0B8F                     u3031 02FD                     u3111 00CA  
                   u2320 03D4                     u2080 0B9A                     u2160 0D72  
                   u3200 0152                     u2321 03D3                     u2145 0A2D  
                   u2081 0B99                     u2065 0B84                     u2161 0D71  
                   u3025 02E2                     u3201 0151                     u3105 00AF  
                   u2410 049B                     u2250 0C29                     u2170 0D99  
                   u3050 031F                     u3210 015B                     u3130 00EC  
                   u2411 049A                     u2315 03B7                     u2251 0C28  
                   u2171 0D98                     u3051 031E                     u3211 015A  
                   u3131 00EB                     u2500 056B                     u2340 040E  
                   u2260 0372                     u2180 0DC0                     u2501 056A  
                   u2405 047D                     u2341 040D                     u2261 0371  
                   u2245 0C03                     u2085 0B96                     u2181 0DBF  
                   u3045 0302                     u3125 00CF                     u2430 04D1  
                   u2350 0415                     u3310 0C62                     u2190 0DEC  
                   u3070 0340                     u3230 017B                     u3150 010D  
                   u2431 04D0                     u2351 0414                     u2335 03D8  
                   u3311 0C61                     u2095 0BA1                     u2191 0DEB  
                   u3071 033F                     u3231 017A                     u3151 010C  
                   u1720 0E17                     u2520 05BD                     u2440 04D6  
                   u2280 0392                     u3400 0FC8                     u1721 0E16  
                   u2521 05BC                     u2441 04D5                     u2425 04AA  
                   u2345 040A                     u2281 0391                     u3305 0C36  
                   u3065 0323                     u3225 015F                     u3145 00F0  
                   u3401 0FC7                     u1810 0E9F                     u2610 067F  
                   u2530 05C4                     u2370 0441                     u3330 0CA7  
                   u3250 019C                     u3170 0137                     u3090 00AB  
                   u1811 0E9E                     u2611 067E                     u2531 05C3  
                   u2515 057F                     u2371 0440                     u2275 0376  
                   u3331 0CA6                     u3251 019B                     u3171 0136  
                   u3091 00AA                     u1804 0E95                     u2700 0750  
                   u2620 0684                     u2460 0507                     u3180 013E  
                   u3340 0F66                     u1805 0E93                     u2701 074F  
                   u2621 0683                     u2605 0659                     u2525 05B9  
                   u2461 0506                     u2365 0424                     u3325 0C7D  
                   u3085 0344                     u3245 017F                     u3181 013D  
                   u3165 0111                     u3341 0F65                     u1750 0E45  
                   u1734 0E26                     u2710 0759                     u2550 05F0  
                   u2390 046E                     u3270 01BD                     u3190 014A  
                   u1751 0E44                     u1735 0E24                     u2711 0758  
                   u2551 05EF                     u2455 04EA                     u2391 046D  
                   u2295 0396                     u3271 01BC                     u3191 0149  
                   u3415 0FCC                     u1824 0EAF                     u1744 0E3B  
                   u1904 0059                     u2720 0760                     u2640 06B5  
                   u2480 0539                     u2800 09FA                     u3360 0F86  
                   u1825 0EAD                     u1745 0E39                     u1905 0057  
                   u2721 075F                     u2641 06B4                     u2545 05D3  
                   u2481 0538                     u2385 0450                     u2801 09F9  
                   u3265 01A0                     u3361 0F85                     u1834 0EC5  
                   u2810 0CD2                     u1914 0078                     u2570 061D  
                   u3290 097F                     u1930 0A88                     u1835 0EC3  
                   u3507 0CF5                     u2811 0CD1                     u1915 0076  
                   u2635 0698                     u2571 061C                     u2475 051B  
                   u3291 097E                     u1931 0A87                     u3355 0F6A  
                   u1780 0E75                     u1764 0E55                     u1844 0AD2  
                   u2820 0CE0                     u1924 0093                     u2740 0780  
                   u2660 06E7                     u3380 0FA7                     u1781 0E74  
                   u1765 0E53                     u1845 0AD0                     u3517 0D04  
                   u2821 0CDF                     u1925 0091                     u2741 077F  
                   u2661 06E6                     u2565 05FF                     u1941 0A91  
                   u3437 01E1                     u3285 01C1                     u3381 0FA6  
                   u1774 0E6B                     u1854 0AF0                     u2830 0CEE  
                   u2590 064A                     u1942 0A98                     u2910 025C  
                   u1775 0E69                     u1855 0AEE                     u3527 0D12  
                   u2831 0CED                     u2815 0CCE                     u2735 0764  
                   u2655 06C9                     u2591 0649                     u2495 054D  
                   u1943 0A9F                     u3447 0366                     u2911 025B  
                   u3375 0F8A                     u1864 0B0B                     u2760 07A1  
                   u2680 0719                     u1865 0B09                     u3537 0AF7  
                   u2825 0CDC                     u2761 07A0                     u2681 0718  
                   u2585 062C                     u3457 0A39                     u2905 023F  
                   u1794 0E82                     u1874 0018                     u1970 0AB9  
                   u2930 0288                     u2850 01FA                     u1795 0E80  
                   u2835 0CEA                     u1875 0016                     u2755 0784  
                   u2675 06FB                     u3467 0CAD                     u1971 0AB8  
                   u1955 0AA1                     u2931 0287                     u2851 01F9  
                   u3395 0FAB                     u2780 07C2                     u1980 0A02  
                   u2940 028E                     u2845 0D41                     u1885 0020  
                   u2781 07C1                     u3477 05A4                     u1981 0A01  
                   u1965 0AA9                     u2941 028D                     u2925 0260  
                   u1894 003E                     u2950 02A4                     u2870 021A  
                   u3487 0045                     u1895 003C                     u2775 07A5  
                   u2695 072D                     u2951 02A3                     u2871 0219  
                   u2960 02A9                     u3497 007F                     u2961 02A8  
                   u2865 01FE                     u2970 02BC                     u2890 023B  
                   u2795 07C6                     u1995 0A0E                     u2971 02BB  
                   u2891 023A                     u2980 02C2                     u2981 02C1  
                   u2885 021E                     u2990 02C8                     u2991 02C7  
                   _main 0ECC                     _flor 0806                     _rand 0B12  
                   _seed 0055                     _nube 080E                     btemp 007E  
       __end_of_ADC_Init 09A0         __end_of_ADC_Read 0A4C        LCD_ram_write@data 0076  
                   start 0000              LCD_Init@cmd 007D          _mover_nubes$220 0020  
        ??_generar_fondo 007D         __end_of_LCD_Init 0D61         __end_of_LCD_putc 009A  
                  ?_main 0070                    ?_rand 0020          __end_of___awmod 0BBC  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087        ??_LCD_cg_ram_addr 0076      ___lmul@multiplicand 0074  
         generar_fondo@i 0032           generar_fondo@p 002C                    _casa1 082E  
                  _casa2 0826                    _arbol 0816                    _fondo 003E  
                  _nubes 0052                    _pos_x 005F                    _pos_y 005E  
                  _pot_x 01E7                    _pot_y 009A                    _srand 0985  
                  _suelo 0836                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07E6             __end_of_main 1000  
           __end_of_flor 080E             __end_of_rand 0B63             __end_of_nube 0816  
          _LCD_ram_write 0969                   ??_main 003D                   ??_rand 0022  
    LCD_cg_ram_addr@addr 007A                ??_LCD_Out 0070            disparar@moved 0079  
      __end_of_LCD_Write 0B12        __end_of_LCD_putrs 09D7                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 ?_pot_x 0070                   ?_pot_y 0070                   ?_srand 0070  
                 _ANSELH 0189         __end_of_disparar 07E6                   ___lmul 0A7C  
              ??___awmod 007D             ?_mover_nubes 0070           ?_LCD_ram_write 0070  
        ADC_Read@channel 0074          ___awmod@divisor 0026          ___awmod@counter 002A  
              ?_ADC_Init 0070                ?_ADC_Read 0070                   srand@s 0070  
  __end_of_dibujar_fondo 0C2A             _checar_boton 0979  __end_of__initialization 07FC  
              ?_LCD_Init 0076    __end_of_dibujar_suelo 09FB                ?_LCD_putc 0070  
         __pcstackCOMMON 0070             __pidataBANK0 0962            __end_of_casa1 0836  
          __end_of_casa2 082E            __end_of_arbol 081E            __end_of_pot_x 036B  
          __end_of_pot_y 01E7            __end_of_srand 0992            __end_of_suelo 083E  
              LCD_putc@c 0075               ??_ADC_Init 0070               ??_ADC_Read 0072  
                ??_pot_x 0034                  ??_pot_y 0079                  ??_srand 0072  
             __pbssBANK0 003E               ??_LCD_Init 007B        ??_LCD_custom_char 007C  
         disparar@offset 007A               ??_LCD_putc 0073               __pmaintext 0ECC  
        ??_LCD_ram_write 0076                  ?___lmul 0070          _LCD_cg_ram_addr 09FB  
         ___lmul@product 0079                  _LCD_Out 0E12                ?_disparar 0070  
             __stringtab 0800        __end_of_bob_reves 0826                  ___awmod 0B63  
       LCD_custom_char@i 0021         LCD_custom_char@x 007B    __end_of_generar_fondo 0E12  
                __ptext1 0985                  __ptext2 009A                  __ptext3 01E7  
                __ptext4 0D61                  __ptext5 0B12                  __ptext6 0A7C  
                __ptext7 0B63                  __ptext8 0BBC                  __ptext9 0A22  
         dibujar_fondo@i 007B         ___awmod@dividend 0028           dibujar_suelo@i 007D  
                clrloop0 0972                _LCD_Write 0AC2               ??_disparar 0020  
   end_of_initialization 07FC                _LCD_putrs 09B3  __end_of_LCD_cg_ram_addr 0A22  
              _PORTAbits 0005              pot_x@prev_x 003C                _TRISAbits 0085  
             ?_LCD_Write 0070               ?_LCD_putrs 0076           __end_of___lmul 0AC2  
             LCD_Write@c 0075       generar_fondo@i_223 002F       generar_fondo@i_225 0030  
     generar_fondo@i_227 0031       generar_fondo@i_229 0033       generar_fondo@p_226 002D  
     generar_fondo@p_228 002E          _LCD_custom_char 0A4C      start_initialization 07E6  
            __end_of_bob 0846               LCD_putrs@a 0076               LCD_putrs@i 0077  
       ?_LCD_cg_ram_addr 0070                 ??___lmul 0078               init_fetch0 09A0  
            __pdataBANK0 0059                 ?_LCD_Out 0070                ___latbits 0002  
          __pcstackBANK0 0020                 LCD_Out@c 0072              ??_LCD_Write 0073  
     LCD_custom_char@pos 0020              ??_LCD_putrs 0077                _bob_reves 081E  
               ?___awmod 0026    __end_of_LCD_ram_write 0971  __end_of_LCD_custom_char 0A7C  
              __pstrings 0800                 _ADC_Init 0992                 _ADC_Read 0A22  
               _LCD_Init 0CB5            _dibujar_fondo 0BBC       dibujar_fondo@i_233 007A  
              clear_ram0 0971            _dibujar_suelo 09D7                 _LCD_putc 0008  
              _pot_x$211 0036                _pot_x$212 0038                 _GO_nDONE 00F9  
          ??_mover_nubes 0079               pot_x@adc_x 003A               pot_y@adc_y 007B  
            __stringbase 0805        ___lmul@multiplier 0070            ?_checar_boton 0070  
         ?_dibujar_fondo 0070           ?_dibujar_suelo 0070         ?_LCD_custom_char 007B  
     __end_of__stringtab 0806      __end_of_mover_nubes 0CB5                 __ptext10 0C2A  
               __ptext11 09D7                 __ptext20 0AC2                 __ptext12 0A4C  
               __ptext21 0E12                 __ptext13 0969                 __ptext22 0992  
               __ptext14 09FB                 __ptext15 0979                 __ptext16 036B  
               __ptext17 09B3                 __ptext18 0008                 __ptext19 0CB5  
               _disparar 036B           ??_checar_boton 007B            _generar_fondo 0D61  
               init_ram0 09A4             mover_nubes@i 0022          ??_dibujar_fondo 0079  
        ??_dibujar_suelo 007D                stringcode 0800              _mover_nubes 0C2A  
         ?_generar_fondo 0070                 stringdir 0800                 stringtab 0800  
