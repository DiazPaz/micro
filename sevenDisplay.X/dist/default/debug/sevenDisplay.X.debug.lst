

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 05 16:52:26 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=1
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     008F                     OSCCON          equ	143	;# 
   101     0090                     OSCTUNE         equ	144	;# 
   102     0091                     SSPCON2         equ	145	;# 
   103     0092                     PR2             equ	146	;# 
   104     0093                     SSPADD          equ	147	;# 
   105     0093                     SSPMSK          equ	147	;# 
   106     0093                     MSK             equ	147	;# 
   107     0094                     SSPSTAT         equ	148	;# 
   108     0095                     WPUB            equ	149	;# 
   109     0096                     IOCB            equ	150	;# 
   110     0097                     VRCON           equ	151	;# 
   111     0098                     TXSTA           equ	152	;# 
   112     0099                     SPBRG           equ	153	;# 
   113     009A                     SPBRGH          equ	154	;# 
   114     009B                     PWM1CON         equ	155	;# 
   115     009C                     ECCPAS          equ	156	;# 
   116     009D                     PSTRCON         equ	157	;# 
   117     009E                     ADRESL          equ	158	;# 
   118     009F                     ADCON1          equ	159	;# 
   119     0105                     WDTCON          equ	261	;# 
   120     0107                     CM1CON0         equ	263	;# 
   121     0108                     CM2CON0         equ	264	;# 
   122     0109                     CM2CON1         equ	265	;# 
   123     010C                     EEDATA          equ	268	;# 
   124     010C                     EEDAT           equ	268	;# 
   125     010D                     EEADR           equ	269	;# 
   126     010E                     EEDATH          equ	270	;# 
   127     010F                     EEADRH          equ	271	;# 
   128     0185                     SRCON           equ	389	;# 
   129     0187                     BAUDCTL         equ	391	;# 
   130     0188                     ANSEL           equ	392	;# 
   131     0189                     ANSELH          equ	393	;# 
   132     018C                     EECON1          equ	396	;# 
   133     018D                     EECON2          equ	397	;# 
   134     0000                     INDF            equ	0	;# 
   135     0001                     TMR0            equ	1	;# 
   136     0002                     PCL             equ	2	;# 
   137     0003                     STATUS          equ	3	;# 
   138     0004                     FSR             equ	4	;# 
   139     0005                     PORTA           equ	5	;# 
   140     0006                     PORTB           equ	6	;# 
   141     0007                     PORTC           equ	7	;# 
   142     0008                     PORTD           equ	8	;# 
   143     0009                     PORTE           equ	9	;# 
   144     000A                     PCLATH          equ	10	;# 
   145     000B                     INTCON          equ	11	;# 
   146     000C                     PIR1            equ	12	;# 
   147     000D                     PIR2            equ	13	;# 
   148     000E                     TMR1            equ	14	;# 
   149     000E                     TMR1L           equ	14	;# 
   150     000F                     TMR1H           equ	15	;# 
   151     0010                     T1CON           equ	16	;# 
   152     0011                     TMR2            equ	17	;# 
   153     0012                     T2CON           equ	18	;# 
   154     0013                     SSPBUF          equ	19	;# 
   155     0014                     SSPCON          equ	20	;# 
   156     0015                     CCPR1           equ	21	;# 
   157     0015                     CCPR1L          equ	21	;# 
   158     0016                     CCPR1H          equ	22	;# 
   159     0017                     CCP1CON         equ	23	;# 
   160     0018                     RCSTA           equ	24	;# 
   161     0019                     TXREG           equ	25	;# 
   162     001A                     RCREG           equ	26	;# 
   163     001B                     CCPR2           equ	27	;# 
   164     001B                     CCPR2L          equ	27	;# 
   165     001C                     CCPR2H          equ	28	;# 
   166     001D                     CCP2CON         equ	29	;# 
   167     001E                     ADRESH          equ	30	;# 
   168     001F                     ADCON0          equ	31	;# 
   169     0081                     OPTION_REG      equ	129	;# 
   170     0085                     TRISA           equ	133	;# 
   171     0086                     TRISB           equ	134	;# 
   172     0087                     TRISC           equ	135	;# 
   173     0088                     TRISD           equ	136	;# 
   174     0089                     TRISE           equ	137	;# 
   175     008C                     PIE1            equ	140	;# 
   176     008D                     PIE2            equ	141	;# 
   177     008E                     PCON            equ	142	;# 
   178     008F                     OSCCON          equ	143	;# 
   179     0090                     OSCTUNE         equ	144	;# 
   180     0091                     SSPCON2         equ	145	;# 
   181     0092                     PR2             equ	146	;# 
   182     0093                     SSPADD          equ	147	;# 
   183     0093                     SSPMSK          equ	147	;# 
   184     0093                     MSK             equ	147	;# 
   185     0094                     SSPSTAT         equ	148	;# 
   186     0095                     WPUB            equ	149	;# 
   187     0096                     IOCB            equ	150	;# 
   188     0097                     VRCON           equ	151	;# 
   189     0098                     TXSTA           equ	152	;# 
   190     0099                     SPBRG           equ	153	;# 
   191     009A                     SPBRGH          equ	154	;# 
   192     009B                     PWM1CON         equ	155	;# 
   193     009C                     ECCPAS          equ	156	;# 
   194     009D                     PSTRCON         equ	157	;# 
   195     009E                     ADRESL          equ	158	;# 
   196     009F                     ADCON1          equ	159	;# 
   197     0105                     WDTCON          equ	261	;# 
   198     0107                     CM1CON0         equ	263	;# 
   199     0108                     CM2CON0         equ	264	;# 
   200     0109                     CM2CON1         equ	265	;# 
   201     010C                     EEDATA          equ	268	;# 
   202     010C                     EEDAT           equ	268	;# 
   203     010D                     EEADR           equ	269	;# 
   204     010E                     EEDATH          equ	270	;# 
   205     010F                     EEADRH          equ	271	;# 
   206     0185                     SRCON           equ	389	;# 
   207     0187                     BAUDCTL         equ	391	;# 
   208     0188                     ANSEL           equ	392	;# 
   209     0189                     ANSELH          equ	393	;# 
   210     018C                     EECON1          equ	396	;# 
   211     018D                     EECON2          equ	397	;# 
   212                           
   213                           	psect	idataBANK0
   214     0729                     __pidataBANK0:
   215                           
   216                           ;initializer for _digito
   217     0729  343F               	retlw	63
   218     072A  3406               	retlw	6
   219     072B  345B               	retlw	91
   220     072C  344F               	retlw	79
   221     072D  3466               	retlw	102
   222     072E  346D               	retlw	109
   223     072F  347D               	retlw	125
   224     0730  3407               	retlw	7
   225     0731  347F               	retlw	127
   226     0732  346F               	retlw	111
   227     0006                     _PORTB          set	6
   228     0008                     _PORTD          set	8
   229     0086                     _TRISB          set	134
   230     0088                     _TRISD          set	136
   231                           
   232                           	psect	cinit
   233     07EE                     start_initialization:	
   234                           ; #config settings
   235                           
   236     07EE                     __initialization:
   237                           
   238                           ; Initialize objects allocated to BANK0
   239     07EE  1383               	bcf	3,7	;select IRP bank0
   240     07EF  302A               	movlw	low (__pdataBANK0+10)
   241     07F0  00FD               	movwf	btemp+-1
   242     07F1  3007               	movlw	high __pidataBANK0
   243     07F2  00FE               	movwf	btemp
   244     07F3  3029               	movlw	low __pidataBANK0
   245     07F4  00FF               	movwf	btemp+1
   246     07F5  3020               	movlw	low __pdataBANK0
   247     07F6  0084               	movwf	4
   248     07F7  120A  118A  2737  120A  118A  	fcall	init_ram0
   249     07FC                     end_of_initialization:	
   250                           ;End of C runtime variable initialization code
   251                           
   252     07FC                     __end_of__initialization:
   253     07FC  0183               	clrf	3
   254     07FD  120A  118A  2F46   	ljmp	_main	;jump to C main() function
   255                           
   256                           	psect	dataBANK0
   257     0020                     __pdataBANK0:
   258     0020                     _digito:
   259     0020                     	ds	10
   260                           
   261                           	psect	inittext
   262     0733                     init_fetch0:	
   263                           ;	Called with low address in FSR and high address in W
   264                           
   265     0733  087E               	movf	btemp,w
   266     0734  008A               	movwf	10
   267     0735  087F               	movf	btemp+1,w
   268     0736  0082               	movwf	2
   269     0737                     init_ram0:	
   270                           ;Called with:
   271                           ;	high address of idata address in btemp 
   272                           ;	low address of idata address in btemp+1 
   273                           ;	low address of data in FSR
   274                           ;	high address + 1 of data in btemp-1
   275                           
   276     0737  120A  118A  2733  120A  118A  	fcall	init_fetch0
   277     073C  0080               	movwf	0
   278     073D  0A84               	incf	4,f
   279     073E  0804               	movf	4,w
   280     073F  067D               	xorwf	btemp+-1,w
   281     0740  1903               	btfsc	3,2
   282     0741  3400               	retlw	0
   283     0742  0AFF               	incf	btemp+1,f
   284     0743  1903               	btfsc	3,2
   285     0744  0AFE               	incf	btemp,f
   286     0745  2F37               	goto	init_ram0
   287                           
   288                           	psect	cstackCOMMON
   289     0070                     __pcstackCOMMON:
   290     0070                     ?_main:
   291     0070                     ?___awmod:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0070                     ___awmod@divisor:	
   295                           ; 2 bytes @ 0x0
   296                           
   297                           
   298                           ; 2 bytes @ 0x0
   299     0070                     	ds	2
   300     0072                     ___awmod@dividend:
   301                           
   302                           ; 2 bytes @ 0x2
   303     0072                     	ds	2
   304     0074                     ___awmod@counter:
   305     0074                     ??___awmod:	
   306                           ; 1 bytes @ 0x4
   307                           
   308                           
   309                           ; 1 bytes @ 0x4
   310     0074                     	ds	1
   311     0075                     ___awmod@sign:
   312                           
   313                           ; 1 bytes @ 0x5
   314     0075                     	ds	1
   315     0076                     ??_main:
   316                           
   317                           ; 1 bytes @ 0x6
   318     0076                     	ds	3
   319     0079                     main@dec:
   320                           
   321                           ; 1 bytes @ 0x9
   322     0079                     	ds	1
   323     007A                     main@num:
   324                           
   325                           ; 1 bytes @ 0xA
   326     007A                     	ds	1
   327                           
   328                           	psect	maintext
   329     0746                     __pmaintext:	
   330 ;;
   331 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   332 ;;
   333 ;; *************** function _main *****************
   334 ;; Defined at:
   335 ;;		line 51 in file "main.c"
   336 ;; Parameters:    Size  Location     Type
   337 ;;		None
   338 ;; Auto vars:     Size  Location     Type
   339 ;;  num             1   10[COMMON] unsigned char 
   340 ;;  dec             1    9[COMMON] unsigned char 
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : B00/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   350 ;;      Params:         0       0       0       0       0
   351 ;;      Locals:         2       0       0       0       0
   352 ;;      Temps:          3       0       0       0       0
   353 ;;      Totals:         5       0       0       0       0
   354 ;;Total ram usage:        5 bytes
   355 ;; Hardware stack levels required when called: 1
   356 ;; This function calls:
   357 ;;		___awmod
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363     0746                     _main:	
   364                           ;psect for function _main
   365                           
   366     0746                     l659:	
   367                           ;incstack = 0
   368                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   369                           
   370     0746  1683               	bsf	3,5	;RP0=1, select bank1
   371     0747  1303               	bcf	3,6	;RP1=0, select bank1
   372     0748  0188               	clrf	8	;volatile
   373     0749  0186               	clrf	6	;volatile
   374     074A  01F9               	clrf	main@dec
   375     074B  01FA               	clrf	main@num
   376     074C                     l661:
   377     074C  087A               	movf	main@num,w
   378     074D  3E20               	addlw	(low (_digito| 0))& (0+255)
   379     074E  0084               	movwf	4
   380     074F  1383               	bcf	3,7	;select IRP bank0
   381     0750  0800               	movf	0,w
   382     0751  1283               	bcf	3,5	;RP0=0, select bank0
   383     0752  1303               	bcf	3,6	;RP1=0, select bank0
   384     0753  0088               	movwf	8	;volatile
   385     0754                     l663:
   386     0754  0879               	movf	main@dec,w
   387     0755  3E20               	addlw	(low (_digito| 0))& (0+255)
   388     0756  0084               	movwf	4
   389     0757  0800               	movf	0,w
   390     0758  0086               	movwf	6	;volatile
   391     0759                     l665:
   392     0759  3001               	movlw	1
   393     075A  07FA               	addwf	main@num,f
   394     075B                     l667:
   395     075B  300A               	movlw	10
   396     075C  00F0               	movwf	___awmod@divisor
   397     075D  3000               	movlw	0
   398     075E  00F1               	movwf	___awmod@divisor+1
   399     075F  087A               	movf	main@num,w
   400     0760  00F6               	movwf	??_main
   401     0761  01F7               	clrf	??_main+1
   402     0762  0876               	movf	??_main,w
   403     0763  00F2               	movwf	___awmod@dividend
   404     0764  0877               	movf	??_main+1,w
   405     0765  00F3               	movwf	___awmod@dividend+1
   406     0766  120A  118A  2797  120A  118A  	fcall	___awmod
   407     076B  0870               	movf	?___awmod,w
   408     076C  00FA               	movwf	main@num
   409     076D                     l669:
   410     076D  087A               	movf	main@num,w
   411     076E  1D03               	btfss	3,2
   412     076F  2F71               	goto	u201
   413     0770  2F72               	goto	u200
   414     0771                     u201:
   415     0771  2F86               	goto	l675
   416     0772                     u200:
   417     0772                     l671:
   418     0772  3001               	movlw	1
   419     0773  07F9               	addwf	main@dec,f
   420     0774                     l673:
   421     0774  300A               	movlw	10
   422     0775  00F0               	movwf	___awmod@divisor
   423     0776  3000               	movlw	0
   424     0777  00F1               	movwf	___awmod@divisor+1
   425     0778  0879               	movf	main@dec,w
   426     0779  00F6               	movwf	??_main
   427     077A  01F7               	clrf	??_main+1
   428     077B  0876               	movf	??_main,w
   429     077C  00F2               	movwf	___awmod@dividend
   430     077D  0877               	movf	??_main+1,w
   431     077E  00F3               	movwf	___awmod@dividend+1
   432     077F  120A  118A  2797  120A  118A  	fcall	___awmod
   433     0784  0870               	movf	?___awmod,w
   434     0785  00F9               	movwf	main@dec
   435     0786                     l675:
   436     0786  3003               	movlw	3
   437     0787  00F8               	movwf	??_main+2
   438     0788  308A               	movlw	138
   439     0789  00F7               	movwf	??_main+1
   440     078A  3055               	movlw	85
   441     078B  00F6               	movwf	??_main
   442     078C                     u217:
   443     078C  0BF6               	decfsz	??_main,f
   444     078D  2F8C               	goto	u217
   445     078E  0BF7               	decfsz	??_main+1,f
   446     078F  2F8C               	goto	u217
   447     0790  0BF8               	decfsz	??_main+2,f
   448     0791  2F8C               	goto	u217
   449     0792  2F93               	nop2
   450     0793  2F4C               	goto	l661
   451     0794  120A  118A  2800   	ljmp	start
   452     0797                     __end_of_main:
   453                           
   454                           	psect	text1
   455     0797                     __ptext1:	
   456 ;; *************** function ___awmod *****************
   457 ;; Defined at:
   458 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;  divisor         2    0[COMMON] int 
   461 ;;  dividend        2    2[COMMON] int 
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  sign            1    5[COMMON] unsigned char 
   464 ;;  counter         1    4[COMMON] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  2    0[COMMON] int 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   474 ;;      Params:         4       0       0       0       0
   475 ;;      Locals:         2       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0
   477 ;;      Totals:         6       0       0       0       0
   478 ;;Total ram usage:        6 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487     0797                     ___awmod:	
   488                           ;psect for function ___awmod
   489                           
   490     0797                     l621:	
   491                           ;incstack = 0
   492                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   493                           
   494     0797  01F5               	clrf	___awmod@sign
   495     0798                     l623:
   496     0798  1FF3               	btfss	___awmod@dividend+1,7
   497     0799  2F9B               	goto	u111
   498     079A  2F9C               	goto	u110
   499     079B                     u111:
   500     079B  2FA3               	goto	l629
   501     079C                     u110:
   502     079C                     l625:
   503     079C  09F2               	comf	___awmod@dividend,f
   504     079D  09F3               	comf	___awmod@dividend+1,f
   505     079E  0AF2               	incf	___awmod@dividend,f
   506     079F  1903               	skipnz
   507     07A0  0AF3               	incf	___awmod@dividend+1,f
   508     07A1                     l627:
   509     07A1  3001               	movlw	1
   510     07A2  00F5               	movwf	___awmod@sign
   511     07A3                     l629:
   512     07A3  1FF1               	btfss	___awmod@divisor+1,7
   513     07A4  2FA6               	goto	u121
   514     07A5  2FA7               	goto	u120
   515     07A6                     u121:
   516     07A6  2FAC               	goto	l633
   517     07A7                     u120:
   518     07A7                     l631:
   519     07A7  09F0               	comf	___awmod@divisor,f
   520     07A8  09F1               	comf	___awmod@divisor+1,f
   521     07A9  0AF0               	incf	___awmod@divisor,f
   522     07AA  1903               	skipnz
   523     07AB  0AF1               	incf	___awmod@divisor+1,f
   524     07AC                     l633:
   525     07AC  0870               	movf	___awmod@divisor,w
   526     07AD  0471               	iorwf	___awmod@divisor+1,w
   527     07AE  1903               	btfsc	3,2
   528     07AF  2FB1               	goto	u131
   529     07B0  2FB2               	goto	u130
   530     07B1                     u131:
   531     07B1  2FDF               	goto	l651
   532     07B2                     u130:
   533     07B2                     l635:
   534     07B2  3001               	movlw	1
   535     07B3  00F4               	movwf	___awmod@counter
   536     07B4  2FBE               	goto	l641
   537     07B5                     l637:
   538     07B5  3001               	movlw	1
   539     07B6                     u145:
   540     07B6  1003               	clrc
   541     07B7  0DF0               	rlf	___awmod@divisor,f
   542     07B8  0DF1               	rlf	___awmod@divisor+1,f
   543     07B9  3EFF               	addlw	-1
   544     07BA  1D03               	skipz
   545     07BB  2FB6               	goto	u145
   546     07BC                     l639:
   547     07BC  3001               	movlw	1
   548     07BD  07F4               	addwf	___awmod@counter,f
   549     07BE                     l641:
   550     07BE  1FF1               	btfss	___awmod@divisor+1,7
   551     07BF  2FC1               	goto	u151
   552     07C0  2FC2               	goto	u150
   553     07C1                     u151:
   554     07C1  2FB5               	goto	l637
   555     07C2                     u150:
   556     07C2                     l643:
   557     07C2  0871               	movf	___awmod@divisor+1,w
   558     07C3  0273               	subwf	___awmod@dividend+1,w
   559     07C4  1D03               	skipz
   560     07C5  2FC8               	goto	u165
   561     07C6  0870               	movf	___awmod@divisor,w
   562     07C7  0272               	subwf	___awmod@dividend,w
   563     07C8                     u165:
   564     07C8  1C03               	skipc
   565     07C9  2FCB               	goto	u161
   566     07CA  2FCC               	goto	u160
   567     07CB                     u161:
   568     07CB  2FD2               	goto	l647
   569     07CC                     u160:
   570     07CC                     l645:
   571     07CC  0870               	movf	___awmod@divisor,w
   572     07CD  02F2               	subwf	___awmod@dividend,f
   573     07CE  0871               	movf	___awmod@divisor+1,w
   574     07CF  1C03               	skipc
   575     07D0  03F3               	decf	___awmod@dividend+1,f
   576     07D1  02F3               	subwf	___awmod@dividend+1,f
   577     07D2                     l647:
   578     07D2  3001               	movlw	1
   579     07D3                     u175:
   580     07D3  1003               	clrc
   581     07D4  0CF1               	rrf	___awmod@divisor+1,f
   582     07D5  0CF0               	rrf	___awmod@divisor,f
   583     07D6  3EFF               	addlw	-1
   584     07D7  1D03               	skipz
   585     07D8  2FD3               	goto	u175
   586     07D9                     l649:
   587     07D9  3001               	movlw	1
   588     07DA  02F4               	subwf	___awmod@counter,f
   589     07DB  1D03               	btfss	3,2
   590     07DC  2FDE               	goto	u181
   591     07DD  2FDF               	goto	u180
   592     07DE                     u181:
   593     07DE  2FC2               	goto	l643
   594     07DF                     u180:
   595     07DF                     l651:
   596     07DF  0875               	movf	___awmod@sign,w
   597     07E0  1903               	btfsc	3,2
   598     07E1  2FE3               	goto	u191
   599     07E2  2FE4               	goto	u190
   600     07E3                     u191:
   601     07E3  2FE9               	goto	l655
   602     07E4                     u190:
   603     07E4                     l653:
   604     07E4  09F2               	comf	___awmod@dividend,f
   605     07E5  09F3               	comf	___awmod@dividend+1,f
   606     07E6  0AF2               	incf	___awmod@dividend,f
   607     07E7  1903               	skipnz
   608     07E8  0AF3               	incf	___awmod@dividend+1,f
   609     07E9                     l655:
   610     07E9  0873               	movf	___awmod@dividend+1,w
   611     07EA  00F1               	movwf	?___awmod+1
   612     07EB  0872               	movf	___awmod@dividend,w
   613     07EC  00F0               	movwf	?___awmod
   614     07ED                     l273:
   615     07ED  0008               	return
   616     07EE                     __end_of___awmod:
   617     0002                     ___latbits      equ	2
   618     007E                     btemp           set	126	;btemp
   619     007E                     wtemp0          set	126
   620                           
   621                           	psect	config
   622                           
   623                           ;Config register CONFIG1 @ 0x2007
   624                           ;	Oscillator Selection bits
   625                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   626                           ;	Watchdog Timer Enable bit
   627                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   628                           ;	Power-up Timer Enable bit
   629                           ;	PWRTE = OFF, PWRT disabled
   630                           ;	RE3/MCLR pin function select bit
   631                           ;	MCLRE = 0x1, unprogrammed default
   632                           ;	Code Protection bit
   633                           ;	CP = OFF, Program memory code protection is disabled
   634                           ;	Data Code Protection bit
   635                           ;	CPD = OFF, Data memory code protection is disabled
   636                           ;	Brown Out Reset Selection bits
   637                           ;	BOREN = ON, BOR enabled
   638                           ;	Internal External Switchover bit
   639                           ;	IESO = 0x1, unprogrammed default
   640                           ;	Fail-Safe Clock Monitor Enabled bit
   641                           ;	FCMEN = 0x1, unprogrammed default
   642                           ;	Low Voltage Programming Enable bit
   643                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   644                           ;	In-Circuit Debugger Mode bit
   645                           ;	DEBUG = 0x1, unprogrammed default
   646     2007                     	org	8199
   647     2007  2FF1               	dw	12273
   648                           
   649                           ;Config register CONFIG2 @ 0x2008
   650                           ;	Brown-out Reset Selection bit
   651                           ;	BOR4V = 0x1, unprogrammed default
   652                           ;	Flash Program Memory Self Write Enable bits
   653                           ;	WRT = OFF, Write protection off
   654     2008                     	org	8200
   655     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     416
                                              6 COMMON     5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     300
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0      10     12.5%
BITBANK0            80      0       0      0.0%
COMMON              14     11      11     78.6%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      21      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 05 16:52:26 2025

                      pc 0002                       fsr 0004                      l273 07ED  
                    l621 0797                      l631 07A7                      l623 0798  
                    l641 07BE                      l633 07AC                      l625 079C  
                    l643 07C2                      l635 07B2                      l651 07DF  
                    l627 07A1                      l653 07E4                      l645 07CC  
                    l637 07B5                      l629 07A3                      l661 074C  
                    l655 07E9                      l647 07D2                      l639 07BC  
                    l671 0772                      l663 0754                      l649 07D9  
                    l673 0774                      l665 0759                      l675 0786  
                    l667 075B                      l659 0746                      l669 076D  
                    u110 079C                      u111 079B                      u120 07A7  
                    u200 0772                      u121 07A6                      u201 0771  
                    u130 07B2                      u131 07B1                      u150 07C2  
                    u151 07C1                      u160 07CC                      u161 07CB  
                    u145 07B6                      u217 078C                      u180 07DF  
                    u181 07DE                      u165 07C8                      u190 07E4  
                    u191 07E3                      u175 07D3                      fsr0 0004  
                    indf 0000             ___awmod@sign 0075                     _main 0746  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___awmod 07EE                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 0797                   ??_main 0076                ??___awmod 0074  
                 _digito 0020          ___awmod@divisor 0070          ___awmod@counter 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0729  
             __pmaintext 0746                  ___awmod 0797                  __ptext1 0797  
       ___awmod@dividend 0072                  main@dec 0079                  main@num 007A  
   end_of_initialization 07FC      start_initialization 07EE               init_fetch0 0733  
            __pdataBANK0 0020                ___latbits 0002                 ?___awmod 0070  
               init_ram0 0737  
