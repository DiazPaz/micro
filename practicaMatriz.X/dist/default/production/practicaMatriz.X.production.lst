

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Jun 04 17:25:06 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,space=0,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     008F                     OSCCON          equ	143	;# 
   100     0090                     OSCTUNE         equ	144	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0093                     SSPMSK          equ	147	;# 
   105     0093                     MSK             equ	147	;# 
   106     0094                     SSPSTAT         equ	148	;# 
   107     0095                     WPUB            equ	149	;# 
   108     0096                     IOCB            equ	150	;# 
   109     0097                     VRCON           equ	151	;# 
   110     0098                     TXSTA           equ	152	;# 
   111     0099                     SPBRG           equ	153	;# 
   112     009A                     SPBRGH          equ	154	;# 
   113     009B                     PWM1CON         equ	155	;# 
   114     009C                     ECCPAS          equ	156	;# 
   115     009D                     PSTRCON         equ	157	;# 
   116     009E                     ADRESL          equ	158	;# 
   117     009F                     ADCON1          equ	159	;# 
   118     0105                     WDTCON          equ	261	;# 
   119     0107                     CM1CON0         equ	263	;# 
   120     0108                     CM2CON0         equ	264	;# 
   121     0109                     CM2CON1         equ	265	;# 
   122     010C                     EEDATA          equ	268	;# 
   123     010C                     EEDAT           equ	268	;# 
   124     010D                     EEADR           equ	269	;# 
   125     010E                     EEDATH          equ	270	;# 
   126     010F                     EEADRH          equ	271	;# 
   127     0185                     SRCON           equ	389	;# 
   128     0187                     BAUDCTL         equ	391	;# 
   129     0188                     ANSEL           equ	392	;# 
   130     0189                     ANSELH          equ	393	;# 
   131     018C                     EECON1          equ	396	;# 
   132     018D                     EECON2          equ	397	;# 
   133     0000                     INDF            equ	0	;# 
   134     0001                     TMR0            equ	1	;# 
   135     0002                     PCL             equ	2	;# 
   136     0003                     STATUS          equ	3	;# 
   137     0004                     FSR             equ	4	;# 
   138     0005                     PORTA           equ	5	;# 
   139     0006                     PORTB           equ	6	;# 
   140     0007                     PORTC           equ	7	;# 
   141     0008                     PORTD           equ	8	;# 
   142     0009                     PORTE           equ	9	;# 
   143     000A                     PCLATH          equ	10	;# 
   144     000B                     INTCON          equ	11	;# 
   145     000C                     PIR1            equ	12	;# 
   146     000D                     PIR2            equ	13	;# 
   147     000E                     TMR1            equ	14	;# 
   148     000E                     TMR1L           equ	14	;# 
   149     000F                     TMR1H           equ	15	;# 
   150     0010                     T1CON           equ	16	;# 
   151     0011                     TMR2            equ	17	;# 
   152     0012                     T2CON           equ	18	;# 
   153     0013                     SSPBUF          equ	19	;# 
   154     0014                     SSPCON          equ	20	;# 
   155     0015                     CCPR1           equ	21	;# 
   156     0015                     CCPR1L          equ	21	;# 
   157     0016                     CCPR1H          equ	22	;# 
   158     0017                     CCP1CON         equ	23	;# 
   159     0018                     RCSTA           equ	24	;# 
   160     0019                     TXREG           equ	25	;# 
   161     001A                     RCREG           equ	26	;# 
   162     001B                     CCPR2           equ	27	;# 
   163     001B                     CCPR2L          equ	27	;# 
   164     001C                     CCPR2H          equ	28	;# 
   165     001D                     CCP2CON         equ	29	;# 
   166     001E                     ADRESH          equ	30	;# 
   167     001F                     ADCON0          equ	31	;# 
   168     0081                     OPTION_REG      equ	129	;# 
   169     0085                     TRISA           equ	133	;# 
   170     0086                     TRISB           equ	134	;# 
   171     0087                     TRISC           equ	135	;# 
   172     0088                     TRISD           equ	136	;# 
   173     0089                     TRISE           equ	137	;# 
   174     008C                     PIE1            equ	140	;# 
   175     008D                     PIE2            equ	141	;# 
   176     008E                     PCON            equ	142	;# 
   177     008F                     OSCCON          equ	143	;# 
   178     0090                     OSCTUNE         equ	144	;# 
   179     0091                     SSPCON2         equ	145	;# 
   180     0092                     PR2             equ	146	;# 
   181     0093                     SSPADD          equ	147	;# 
   182     0093                     SSPMSK          equ	147	;# 
   183     0093                     MSK             equ	147	;# 
   184     0094                     SSPSTAT         equ	148	;# 
   185     0095                     WPUB            equ	149	;# 
   186     0096                     IOCB            equ	150	;# 
   187     0097                     VRCON           equ	151	;# 
   188     0098                     TXSTA           equ	152	;# 
   189     0099                     SPBRG           equ	153	;# 
   190     009A                     SPBRGH          equ	154	;# 
   191     009B                     PWM1CON         equ	155	;# 
   192     009C                     ECCPAS          equ	156	;# 
   193     009D                     PSTRCON         equ	157	;# 
   194     009E                     ADRESL          equ	158	;# 
   195     009F                     ADCON1          equ	159	;# 
   196     0105                     WDTCON          equ	261	;# 
   197     0107                     CM1CON0         equ	263	;# 
   198     0108                     CM2CON0         equ	264	;# 
   199     0109                     CM2CON1         equ	265	;# 
   200     010C                     EEDATA          equ	268	;# 
   201     010C                     EEDAT           equ	268	;# 
   202     010D                     EEADR           equ	269	;# 
   203     010E                     EEDATH          equ	270	;# 
   204     010F                     EEADRH          equ	271	;# 
   205     0185                     SRCON           equ	389	;# 
   206     0187                     BAUDCTL         equ	391	;# 
   207     0188                     ANSEL           equ	392	;# 
   208     0189                     ANSELH          equ	393	;# 
   209     018C                     EECON1          equ	396	;# 
   210     018D                     EECON2          equ	397	;# 
   211                           
   212                           	psect	idataBANK0
   213     0666                     __pidataBANK0:
   214                           
   215                           ;initializer for _patrones3
   216     0666  3481               	retlw	129
   217     0667  3481               	retlw	129
   218     0668  34C3               	retlw	195
   219     0669  3442               	retlw	66
   220     066A  3442               	retlw	66
   221     066B  3466               	retlw	102
   222     066C  3424               	retlw	36
   223     066D  3418               	retlw	24
   224                           
   225                           ;initializer for _patrones2
   226     066E  34F0               	retlw	240
   227     066F  3488               	retlw	136
   228     0670  3484               	retlw	132
   229     0671  3484               	retlw	132
   230     0672  3484               	retlw	132
   231     0673  3484               	retlw	132
   232     0674  3488               	retlw	136
   233     0675  34F0               	retlw	240
   234                           
   235                           ;initializer for _patrones6
   236     0676  3400               	retlw	0
   237     0677  3400               	retlw	0
   238     0678  3407               	retlw	7
   239     0679  347D               	retlw	125
   240     067A  3487               	retlw	135
   241     067B  347D               	retlw	125
   242     067C  3407               	retlw	7
   243     067D  3400               	retlw	0
   244                           
   245                           ;initializer for _patrones5
   246     067E  343E               	retlw	62
   247     067F  342A               	retlw	42
   248     0680  343E               	retlw	62
   249     0681  3414               	retlw	20
   250     0682  3414               	retlw	20
   251     0683  3414               	retlw	20
   252     0684  3414               	retlw	20
   253     0685  3408               	retlw	8
   254                           
   255                           ;initializer for _patrones4
   256     0686  3400               	retlw	0
   257     0687  34E0               	retlw	224
   258     0688  34BE               	retlw	190
   259     0689  34E1               	retlw	225
   260     068A  34BE               	retlw	190
   261     068B  34E0               	retlw	224
   262     068C  3400               	retlw	0
   263     068D  3400               	retlw	0
   264                           
   265                           ;initializer for _patrones1
   266     068E  3410               	retlw	16
   267     068F  3428               	retlw	40
   268     0690  3428               	retlw	40
   269     0691  3428               	retlw	40
   270     0692  3428               	retlw	40
   271     0693  347C               	retlw	124
   272     0694  3454               	retlw	84
   273     0695  347C               	retlw	124
   274     0008                     _PORTD          set	8
   275     0006                     _PORTB          set	6
   276     0088                     _TRISD          set	136
   277     0086                     _TRISB          set	134
   278                           
   279                           	psect	cinit
   280     07EE                     start_initialization:	
   281                           ; #config settings
   282                           
   283     07EE                     __initialization:
   284                           
   285                           ; Initialize objects allocated to BANK0
   286     07EE  1383               	bcf	3,7	;select IRP bank0
   287     07EF  3050               	movlw	low (__pdataBANK0+48)
   288     07F0  00FD               	movwf	btemp+-1
   289     07F1  3006               	movlw	high __pidataBANK0
   290     07F2  00FE               	movwf	btemp
   291     07F3  3066               	movlw	low __pidataBANK0
   292     07F4  00FF               	movwf	btemp+1
   293     07F5  3020               	movlw	low __pdataBANK0
   294     07F6  0084               	movwf	4
   295     07F7  120A  118A  2657  120A  118A  	fcall	init_ram0
   296     07FC                     end_of_initialization:	
   297                           ;End of C runtime variable initialization code
   298                           
   299     07FC                     __end_of__initialization:
   300     07FC  0183               	clrf	3
   301     07FD  120A  118A  2E96   	ljmp	_main	;jump to C main() function
   302                           
   303                           	psect	dataBANK0
   304     0020                     __pdataBANK0:
   305     0020                     _patrones3:
   306     0020                     	ds	8
   307     0028                     _patrones2:
   308     0028                     	ds	8
   309     0030                     _patrones6:
   310     0030                     	ds	8
   311     0038                     _patrones5:
   312     0038                     	ds	8
   313     0040                     _patrones4:
   314     0040                     	ds	8
   315     0048                     _patrones1:
   316     0048                     	ds	8
   317                           
   318                           	psect	inittext
   319     0653                     init_fetch0:	
   320                           ;	Called with low address in FSR and high address in W
   321                           
   322     0653  087E               	movf	btemp,w
   323     0654  008A               	movwf	10
   324     0655  087F               	movf	btemp+1,w
   325     0656  0082               	movwf	2
   326     0657                     init_ram0:	
   327                           ;Called with:
   328                           ;	high address of idata address in btemp 
   329                           ;	low address of idata address in btemp+1 
   330                           ;	low address of data in FSR
   331                           ;	high address + 1 of data in btemp-1
   332                           
   333     0657  120A  118A  2653  120A  118A  	fcall	init_fetch0
   334     065C  0080               	movwf	0
   335     065D  0A84               	incf	4,f
   336     065E  0804               	movf	4,w
   337     065F  067D               	xorwf	btemp+-1,w
   338     0660  1903               	btfsc	3,2
   339     0661  3400               	retlw	0
   340     0662  0AFF               	incf	btemp+1,f
   341     0663  1903               	btfsc	3,2
   342     0664  0AFE               	incf	btemp,f
   343     0665  2E57               	goto	init_ram0
   344                           
   345                           	psect	cstackCOMMON
   346     0070                     __pcstackCOMMON:
   347     0070                     ?_main:
   348     0070                     ??_main:	
   349                           ; 1 bytes @ 0x0
   350                           
   351                           
   352                           ; 1 bytes @ 0x0
   353     0070                     	ds	1
   354     0071                     main@i:
   355                           
   356                           ; 1 bytes @ 0x1
   357     0071                     	ds	1
   358     0072                     main@i_45:
   359                           
   360                           ; 1 bytes @ 0x2
   361     0072                     	ds	1
   362     0073                     main@i_46:
   363                           
   364                           ; 1 bytes @ 0x3
   365     0073                     	ds	1
   366     0074                     main@i_47:
   367                           
   368                           ; 1 bytes @ 0x4
   369     0074                     	ds	1
   370     0075                     main@i_48:
   371                           
   372                           ; 1 bytes @ 0x5
   373     0075                     	ds	1
   374     0076                     main@i_49:
   375                           
   376                           ; 1 bytes @ 0x6
   377     0076                     	ds	1
   378     0077                     main@aux:
   379                           
   380                           ; 2 bytes @ 0x7
   381     0077                     	ds	2
   382                           
   383                           	psect	maintext
   384     0696                     __pmaintext:	
   385 ;;
   386 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   387 ;;
   388 ;; *************** function _main *****************
   389 ;; Defined at:
   390 ;;		line 40 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;  i               1    6[COMMON] unsigned char 
   395 ;;  i               1    5[COMMON] unsigned char 
   396 ;;  i               1    4[COMMON] unsigned char 
   397 ;;  i               1    3[COMMON] unsigned char 
   398 ;;  i               1    2[COMMON] unsigned char 
   399 ;;  i               1    1[COMMON] unsigned char 
   400 ;;  aux             2    7[COMMON] unsigned int 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   405 ;; Tracked objects:
   406 ;;		On entry : B00/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   410 ;;      Params:         0       0       0       0       0
   411 ;;      Locals:         8       0       0       0       0
   412 ;;      Temps:          1       0       0       0       0
   413 ;;      Totals:         9       0       0       0       0
   414 ;;Total ram usage:        9 bytes
   415 ;; This function calls:
   416 ;;		Nothing
   417 ;; This function is called by:
   418 ;;		Startup code after reset
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422     0696                     _main:	
   423                           ;psect for function _main
   424                           
   425     0696                     l728:	
   426                           ;incstack = 0
   427                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   428                           
   429                           
   430                           ;main.c: 42:         aux = 50;
   431     0696  1683               	bsf	3,5	;RP0=1, select bank1
   432     0697  1303               	bcf	3,6	;RP1=0, select bank1
   433     0698  0186               	clrf	6	;volatile
   434                           
   435                           ;main.c: 43: 
   436     0699  0188               	clrf	8	;volatile
   437     069A                     l730:
   438                           
   439                           ;main.c: 44:         while(aux--)
   440     069A  3032               	movlw	50
   441     069B  00F7               	movwf	main@aux
   442     069C  3000               	movlw	0
   443     069D  00F8               	movwf	main@aux+1
   444     069E  2EC4               	goto	l748
   445     069F                     l732:
   446                           
   447                           ;main.c: 49:                 PORTD = ~patrones1[i];;main.c: 50:                 _delay((
      +                          unsigned long)((1)*(4000000/4000.0)));
   448     069F  01F1               	clrf	main@i
   449     06A0                     l734:
   450     06A0  3008               	movlw	8
   451     06A1  0271               	subwf	main@i,w
   452     06A2  1C03               	skipc
   453     06A3  2EA5               	goto	u191
   454     06A4  2EA6               	goto	u190
   455     06A5                     u191:
   456     06A5  2EA7               	goto	l738
   457     06A6                     u190:
   458     06A6  2EC4               	goto	l748
   459     06A7                     l738:
   460                           
   461                           ;main.c: 51:             };main.c: 52:         }
   462     06A7  3001               	movlw	1
   463     06A8  00F0               	movwf	??_main
   464     06A9  0A71               	incf	main@i,w
   465     06AA  2EAD               	goto	u204
   466     06AB                     u205:
   467     06AB  1003               	clrc
   468     06AC  0DF0               	rlf	??_main,f
   469     06AD                     u204:
   470     06AD  3EFF               	addlw	-1
   471     06AE  1D03               	skipz
   472     06AF  2EAB               	goto	u205
   473     06B0  0870               	movf	??_main,w
   474     06B1  1283               	bcf	3,5	;RP0=0, select bank0
   475     06B2  1303               	bcf	3,6	;RP1=0, select bank0
   476     06B3  0086               	movwf	6	;volatile
   477     06B4                     l740:
   478                           
   479                           ;main.c: 53:         aux = 50;
   480     06B4  0871               	movf	main@i,w
   481     06B5  3E28               	addlw	(low (_patrones2| 0))& (0+255)
   482     06B6  0084               	movwf	4
   483     06B7  1383               	bcf	3,7	;select IRP bank0
   484     06B8  0900               	comf	0,w
   485     06B9  0088               	movwf	8	;volatile
   486     06BA                     l742:
   487                           
   488                           ;main.c: 54: 
   489     06BA  30C7               	movlw	199
   490     06BB  00F0               	movwf	??_main
   491     06BC                     u377:
   492     06BC  2EBD               	nop2
   493     06BD  0BF0               	decfsz	??_main,f
   494     06BE  2EBC               	goto	u377
   495     06BF  2EC0               	nop2
   496     06C0  2EC1               	nop2
   497     06C1                     l744:
   498                           
   499                           ;main.c: 55:         while(aux--)
   500     06C1  3001               	movlw	1
   501     06C2  07F1               	addwf	main@i,f
   502     06C3  2EA0               	goto	l734
   503     06C4                     l748:
   504                           
   505                           ;main.c: 48:                 PORTB = 1 << i;
   506     06C4  3001               	movlw	1
   507     06C5  02F7               	subwf	main@aux,f
   508     06C6  3000               	movlw	0
   509     06C7  1C03               	skipc
   510     06C8  03F8               	decf	main@aux+1,f
   511     06C9  02F8               	subwf	main@aux+1,f
   512     06CA  0A77               	incf	main@aux,w
   513     06CB  1D03               	skipz
   514     06CC  2ED1               	goto	u211
   515     06CD  0A78               	incf	main@aux+1,w
   516     06CE  1D03               	btfss	3,2
   517     06CF  2ED1               	goto	u211
   518     06D0  2ED2               	goto	u210
   519     06D1                     u211:
   520     06D1  2E9F               	goto	l732
   521     06D2                     u210:
   522     06D2                     l750:
   523                           
   524                           ;main.c: 57:             for(unsigned char i = 0; i < 8; i++)
   525     06D2  3032               	movlw	50
   526     06D3  00F7               	movwf	main@aux
   527     06D4  3000               	movlw	0
   528     06D5  00F8               	movwf	main@aux+1
   529                           
   530                           ;main.c: 59:                 PORTB = 1 << i;
   531     06D6  2EFC               	goto	l768
   532     06D7                     l752:
   533                           
   534                           ;main.c: 60:                 PORTD = ~patrones4[i];;main.c: 61:                 _delay((
      +                          unsigned long)((1)*(4000000/4000.0)));
   535     06D7  01F2               	clrf	main@i_45
   536     06D8                     l754:
   537     06D8  3008               	movlw	8
   538     06D9  0272               	subwf	main@i_45,w
   539     06DA  1C03               	skipc
   540     06DB  2EDD               	goto	u221
   541     06DC  2EDE               	goto	u220
   542     06DD                     u221:
   543     06DD  2EDF               	goto	l758
   544     06DE                     u220:
   545     06DE  2EFC               	goto	l768
   546     06DF                     l758:
   547                           
   548                           ;main.c: 62:             };main.c: 63:         }
   549     06DF  3001               	movlw	1
   550     06E0  00F0               	movwf	??_main
   551     06E1  0A72               	incf	main@i_45,w
   552     06E2  2EE5               	goto	u234
   553     06E3                     u235:
   554     06E3  1003               	clrc
   555     06E4  0DF0               	rlf	??_main,f
   556     06E5                     u234:
   557     06E5  3EFF               	addlw	-1
   558     06E6  1D03               	skipz
   559     06E7  2EE3               	goto	u235
   560     06E8  0870               	movf	??_main,w
   561     06E9  1283               	bcf	3,5	;RP0=0, select bank0
   562     06EA  1303               	bcf	3,6	;RP1=0, select bank0
   563     06EB  0086               	movwf	6	;volatile
   564     06EC                     l760:
   565                           
   566                           ;main.c: 64:         aux = 50;
   567     06EC  0872               	movf	main@i_45,w
   568     06ED  3E20               	addlw	(low (_patrones3| 0))& (0+255)
   569     06EE  0084               	movwf	4
   570     06EF  1383               	bcf	3,7	;select IRP bank0
   571     06F0  0900               	comf	0,w
   572     06F1  0088               	movwf	8	;volatile
   573     06F2                     l762:
   574                           
   575                           ;main.c: 65: 
   576     06F2  30C7               	movlw	199
   577     06F3  00F0               	movwf	??_main
   578     06F4                     u387:
   579     06F4  2EF5               	nop2
   580     06F5  0BF0               	decfsz	??_main,f
   581     06F6  2EF4               	goto	u387
   582     06F7  2EF8               	nop2
   583     06F8  2EF9               	nop2
   584     06F9                     l764:
   585                           
   586                           ;main.c: 66:         while(aux--)
   587     06F9  3001               	movlw	1
   588     06FA  07F2               	addwf	main@i_45,f
   589     06FB  2ED8               	goto	l754
   590     06FC                     l768:
   591                           
   592                           ;main.c: 59:                 PORTB = 1 << i;
   593     06FC  3001               	movlw	1
   594     06FD  02F7               	subwf	main@aux,f
   595     06FE  3000               	movlw	0
   596     06FF  1C03               	skipc
   597     0700  03F8               	decf	main@aux+1,f
   598     0701  02F8               	subwf	main@aux+1,f
   599     0702  0A77               	incf	main@aux,w
   600     0703  1D03               	skipz
   601     0704  2F09               	goto	u241
   602     0705  0A78               	incf	main@aux+1,w
   603     0706  1D03               	btfss	3,2
   604     0707  2F09               	goto	u241
   605     0708  2F0A               	goto	u240
   606     0709                     u241:
   607     0709  2ED7               	goto	l752
   608     070A                     u240:
   609     070A                     l770:
   610                           
   611                           ;main.c: 68:             for(unsigned char i = 0; i < 8; i++)
   612     070A  3032               	movlw	50
   613     070B  00F7               	movwf	main@aux
   614     070C  3000               	movlw	0
   615     070D  00F8               	movwf	main@aux+1
   616                           
   617                           ;main.c: 70:                 PORTB = 1 << i;
   618     070E  2F34               	goto	l788
   619     070F                     l772:
   620                           
   621                           ;main.c: 71:                 PORTD = ~patrones5[i];;main.c: 72:                 _delay((
      +                          unsigned long)((1)*(4000000/4000.0)));
   622     070F  01F3               	clrf	main@i_46
   623     0710                     l774:
   624     0710  3008               	movlw	8
   625     0711  0273               	subwf	main@i_46,w
   626     0712  1C03               	skipc
   627     0713  2F15               	goto	u251
   628     0714  2F16               	goto	u250
   629     0715                     u251:
   630     0715  2F17               	goto	l778
   631     0716                     u250:
   632     0716  2F34               	goto	l788
   633     0717                     l778:
   634                           
   635                           ;main.c: 73:             };main.c: 74:         }
   636     0717  3001               	movlw	1
   637     0718  00F0               	movwf	??_main
   638     0719  0A73               	incf	main@i_46,w
   639     071A  2F1D               	goto	u264
   640     071B                     u265:
   641     071B  1003               	clrc
   642     071C  0DF0               	rlf	??_main,f
   643     071D                     u264:
   644     071D  3EFF               	addlw	-1
   645     071E  1D03               	skipz
   646     071F  2F1B               	goto	u265
   647     0720  0870               	movf	??_main,w
   648     0721  1283               	bcf	3,5	;RP0=0, select bank0
   649     0722  1303               	bcf	3,6	;RP1=0, select bank0
   650     0723  0086               	movwf	6	;volatile
   651     0724                     l780:
   652                           
   653                           ;main.c: 75:         aux = 50;
   654     0724  0873               	movf	main@i_46,w
   655     0725  3E48               	addlw	(low (_patrones1| 0))& (0+255)
   656     0726  0084               	movwf	4
   657     0727  1383               	bcf	3,7	;select IRP bank0
   658     0728  0900               	comf	0,w
   659     0729  0088               	movwf	8	;volatile
   660     072A                     l782:
   661                           
   662                           ;main.c: 76: 
   663     072A  30C7               	movlw	199
   664     072B  00F0               	movwf	??_main
   665     072C                     u397:
   666     072C  2F2D               	nop2
   667     072D  0BF0               	decfsz	??_main,f
   668     072E  2F2C               	goto	u397
   669     072F  2F30               	nop2
   670     0730  2F31               	nop2
   671     0731                     l784:
   672                           
   673                           ;main.c: 77:         while(aux--)
   674     0731  3001               	movlw	1
   675     0732  07F3               	addwf	main@i_46,f
   676     0733  2F10               	goto	l774
   677     0734                     l788:
   678                           
   679                           ;main.c: 70:                 PORTB = 1 << i;
   680     0734  3001               	movlw	1
   681     0735  02F7               	subwf	main@aux,f
   682     0736  3000               	movlw	0
   683     0737  1C03               	skipc
   684     0738  03F8               	decf	main@aux+1,f
   685     0739  02F8               	subwf	main@aux+1,f
   686     073A  0A77               	incf	main@aux,w
   687     073B  1D03               	skipz
   688     073C  2F41               	goto	u271
   689     073D  0A78               	incf	main@aux+1,w
   690     073E  1D03               	btfss	3,2
   691     073F  2F41               	goto	u271
   692     0740  2F42               	goto	u270
   693     0741                     u271:
   694     0741  2F0F               	goto	l772
   695     0742                     u270:
   696     0742                     l790:
   697                           
   698                           ;main.c: 79:             for(unsigned char i = 0; i < 8; i++)
   699     0742  3032               	movlw	50
   700     0743  00F7               	movwf	main@aux
   701     0744  3000               	movlw	0
   702     0745  00F8               	movwf	main@aux+1
   703                           
   704                           ;main.c: 81:                 PORTB = 1 << i;
   705     0746  2F6C               	goto	l808
   706     0747                     l792:
   707                           
   708                           ;main.c: 82:                 PORTD = ~patrones6[i];;main.c: 83:                 _delay((
      +                          unsigned long)((1)*(4000000/4000.0)));
   709     0747  01F4               	clrf	main@i_47
   710     0748                     l794:
   711     0748  3008               	movlw	8
   712     0749  0274               	subwf	main@i_47,w
   713     074A  1C03               	skipc
   714     074B  2F4D               	goto	u281
   715     074C  2F4E               	goto	u280
   716     074D                     u281:
   717     074D  2F4F               	goto	l798
   718     074E                     u280:
   719     074E  2F6C               	goto	l808
   720     074F                     l798:
   721                           
   722                           ;main.c: 84:             };main.c: 85:         }
   723     074F  3001               	movlw	1
   724     0750  00F0               	movwf	??_main
   725     0751  0A74               	incf	main@i_47,w
   726     0752  2F55               	goto	u294
   727     0753                     u295:
   728     0753  1003               	clrc
   729     0754  0DF0               	rlf	??_main,f
   730     0755                     u294:
   731     0755  3EFF               	addlw	-1
   732     0756  1D03               	skipz
   733     0757  2F53               	goto	u295
   734     0758  0870               	movf	??_main,w
   735     0759  1283               	bcf	3,5	;RP0=0, select bank0
   736     075A  1303               	bcf	3,6	;RP1=0, select bank0
   737     075B  0086               	movwf	6	;volatile
   738     075C                     l800:
   739                           
   740                           ;main.c: 86:         aux = 50;
   741     075C  0874               	movf	main@i_47,w
   742     075D  3E40               	addlw	(low (_patrones4| 0))& (0+255)
   743     075E  0084               	movwf	4
   744     075F  1383               	bcf	3,7	;select IRP bank0
   745     0760  0900               	comf	0,w
   746     0761  0088               	movwf	8	;volatile
   747     0762                     l802:
   748                           
   749                           ;main.c: 87: 
   750     0762  30C7               	movlw	199
   751     0763  00F0               	movwf	??_main
   752     0764                     u407:
   753     0764  2F65               	nop2
   754     0765  0BF0               	decfsz	??_main,f
   755     0766  2F64               	goto	u407
   756     0767  2F68               	nop2
   757     0768  2F69               	nop2
   758     0769                     l804:
   759                           
   760                           ;main.c: 88:     }
   761     0769  3001               	movlw	1
   762     076A  07F4               	addwf	main@i_47,f
   763     076B  2F48               	goto	l794
   764     076C                     l808:
   765                           
   766                           ;main.c: 81:                 PORTB = 1 << i;
   767     076C  3001               	movlw	1
   768     076D  02F7               	subwf	main@aux,f
   769     076E  3000               	movlw	0
   770     076F  1C03               	skipc
   771     0770  03F8               	decf	main@aux+1,f
   772     0771  02F8               	subwf	main@aux+1,f
   773     0772  0A77               	incf	main@aux,w
   774     0773  1D03               	skipz
   775     0774  2F79               	goto	u301
   776     0775  0A78               	incf	main@aux+1,w
   777     0776  1D03               	btfss	3,2
   778     0777  2F79               	goto	u301
   779     0778  2F7A               	goto	u300
   780     0779                     u301:
   781     0779  2F47               	goto	l792
   782     077A                     u300:
   783     077A                     l810:
   784     077A  3032               	movlw	50
   785     077B  00F7               	movwf	main@aux
   786     077C  3000               	movlw	0
   787     077D  00F8               	movwf	main@aux+1
   788     077E  2FA4               	goto	l828
   789     077F                     l812:
   790     077F  01F5               	clrf	main@i_48
   791     0780                     l814:
   792     0780  3008               	movlw	8
   793     0781  0275               	subwf	main@i_48,w
   794     0782  1C03               	skipc
   795     0783  2F85               	goto	u311
   796     0784  2F86               	goto	u310
   797     0785                     u311:
   798     0785  2F87               	goto	l818
   799     0786                     u310:
   800     0786  2FA4               	goto	l828
   801     0787                     l818:
   802     0787  3001               	movlw	1
   803     0788  00F0               	movwf	??_main
   804     0789  0A75               	incf	main@i_48,w
   805     078A  2F8D               	goto	u324
   806     078B                     u325:
   807     078B  1003               	clrc
   808     078C  0DF0               	rlf	??_main,f
   809     078D                     u324:
   810     078D  3EFF               	addlw	-1
   811     078E  1D03               	skipz
   812     078F  2F8B               	goto	u325
   813     0790  0870               	movf	??_main,w
   814     0791  1283               	bcf	3,5	;RP0=0, select bank0
   815     0792  1303               	bcf	3,6	;RP1=0, select bank0
   816     0793  0086               	movwf	6	;volatile
   817     0794                     l820:
   818     0794  0875               	movf	main@i_48,w
   819     0795  3E38               	addlw	(low (_patrones5| 0))& (0+255)
   820     0796  0084               	movwf	4
   821     0797  1383               	bcf	3,7	;select IRP bank0
   822     0798  0900               	comf	0,w
   823     0799  0088               	movwf	8	;volatile
   824     079A                     l822:
   825     079A  30C7               	movlw	199
   826     079B  00F0               	movwf	??_main
   827     079C                     u417:
   828     079C  2F9D               	nop2
   829     079D  0BF0               	decfsz	??_main,f
   830     079E  2F9C               	goto	u417
   831     079F  2FA0               	nop2
   832     07A0  2FA1               	nop2
   833     07A1                     l824:
   834     07A1  3001               	movlw	1
   835     07A2  07F5               	addwf	main@i_48,f
   836     07A3  2F80               	goto	l814
   837     07A4                     l828:
   838     07A4  3001               	movlw	1
   839     07A5  02F7               	subwf	main@aux,f
   840     07A6  3000               	movlw	0
   841     07A7  1C03               	skipc
   842     07A8  03F8               	decf	main@aux+1,f
   843     07A9  02F8               	subwf	main@aux+1,f
   844     07AA  0A77               	incf	main@aux,w
   845     07AB  1D03               	skipz
   846     07AC  2FB1               	goto	u331
   847     07AD  0A78               	incf	main@aux+1,w
   848     07AE  1D03               	btfss	3,2
   849     07AF  2FB1               	goto	u331
   850     07B0  2FB2               	goto	u330
   851     07B1                     u331:
   852     07B1  2F7F               	goto	l812
   853     07B2                     u330:
   854     07B2                     l830:
   855     07B2  3032               	movlw	50
   856     07B3  00F7               	movwf	main@aux
   857     07B4  3000               	movlw	0
   858     07B5  00F8               	movwf	main@aux+1
   859     07B6  2FDC               	goto	l848
   860     07B7                     l832:
   861     07B7  01F6               	clrf	main@i_49
   862     07B8                     l834:
   863     07B8  3008               	movlw	8
   864     07B9  0276               	subwf	main@i_49,w
   865     07BA  1C03               	skipc
   866     07BB  2FBD               	goto	u341
   867     07BC  2FBE               	goto	u340
   868     07BD                     u341:
   869     07BD  2FBF               	goto	l838
   870     07BE                     u340:
   871     07BE  2FDC               	goto	l848
   872     07BF                     l838:
   873     07BF  3001               	movlw	1
   874     07C0  00F0               	movwf	??_main
   875     07C1  0A76               	incf	main@i_49,w
   876     07C2  2FC5               	goto	u354
   877     07C3                     u355:
   878     07C3  1003               	clrc
   879     07C4  0DF0               	rlf	??_main,f
   880     07C5                     u354:
   881     07C5  3EFF               	addlw	-1
   882     07C6  1D03               	skipz
   883     07C7  2FC3               	goto	u355
   884     07C8  0870               	movf	??_main,w
   885     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   886     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   887     07CB  0086               	movwf	6	;volatile
   888     07CC                     l840:
   889     07CC  0876               	movf	main@i_49,w
   890     07CD  3E30               	addlw	(low (_patrones6| 0))& (0+255)
   891     07CE  0084               	movwf	4
   892     07CF  1383               	bcf	3,7	;select IRP bank0
   893     07D0  0900               	comf	0,w
   894     07D1  0088               	movwf	8	;volatile
   895     07D2                     l842:
   896     07D2  30C7               	movlw	199
   897     07D3  00F0               	movwf	??_main
   898     07D4                     u427:
   899     07D4  2FD5               	nop2
   900     07D5  0BF0               	decfsz	??_main,f
   901     07D6  2FD4               	goto	u427
   902     07D7  2FD8               	nop2
   903     07D8  2FD9               	nop2
   904     07D9                     l844:
   905     07D9  3001               	movlw	1
   906     07DA  07F6               	addwf	main@i_49,f
   907     07DB  2FB8               	goto	l834
   908     07DC                     l848:
   909     07DC  3001               	movlw	1
   910     07DD  02F7               	subwf	main@aux,f
   911     07DE  3000               	movlw	0
   912     07DF  1C03               	skipc
   913     07E0  03F8               	decf	main@aux+1,f
   914     07E1  02F8               	subwf	main@aux+1,f
   915     07E2  0A77               	incf	main@aux,w
   916     07E3  1D03               	skipz
   917     07E4  2FE9               	goto	u361
   918     07E5  0A78               	incf	main@aux+1,w
   919     07E6  1D03               	btfss	3,2
   920     07E7  2FE9               	goto	u361
   921     07E8  2FEA               	goto	u360
   922     07E9                     u361:
   923     07E9  2FB7               	goto	l832
   924     07EA                     u360:
   925     07EA  2E9A               	goto	l730
   926     07EB  120A  118A  2800   	ljmp	start
   927     07EE                     __end_of_main:
   928     0002                     ___latbits      equ	2
   929     007E                     btemp           set	126	;btemp
   930     007E                     wtemp0          set	126
   931                           
   932                           	psect	config
   933                           
   934                           ;Config register CONFIG1 @ 0x2007
   935                           ;	Oscillator Selection bits
   936                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   937                           ;	Watchdog Timer Enable bit
   938                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   939                           ;	Power-up Timer Enable bit
   940                           ;	PWRTE = OFF, PWRT disabled
   941                           ;	RE3/MCLR pin function select bit
   942                           ;	MCLRE = 0x1, unprogrammed default
   943                           ;	Code Protection bit
   944                           ;	CP = OFF, Program memory code protection is disabled
   945                           ;	Data Code Protection bit
   946                           ;	CPD = OFF, Data memory code protection is disabled
   947                           ;	Brown Out Reset Selection bits
   948                           ;	BOREN = ON, BOR enabled
   949                           ;	Internal External Switchover bit
   950                           ;	IESO = 0x1, unprogrammed default
   951                           ;	Fail-Safe Clock Monitor Enabled bit
   952                           ;	FCMEN = 0x1, unprogrammed default
   953                           ;	Low Voltage Programming Enable bit
   954                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   955                           ;	In-Circuit Debugger Mode bit
   956                           ;	DEBUG = 0x1, unprogrammed default
   957     2007                     	org	8199
   958     2007  2FF1               	dw	12273
   959                           
   960                           ;Config register CONFIG2 @ 0x2008
   961                           ;	Brown-out Reset Selection bit
   962                           ;	BOR4V = 0x1, unprogrammed default
   963                           ;	Flash Program Memory Self Write Enable bits
   964                           ;	WRT = OFF, Write protection off
   965     2008                     	org	8200
   966     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0      48
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     679
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0      48     60.0%
BITBANK0            80      0       0      0.0%
COMMON              14      9       9     64.3%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      57      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Jun 04 17:25:06 2025

                      pc 0002                       fsr 0004                      l800 075C  
                    l810 077A                      l802 0762                      l730 069A  
                    l820 0794                      l812 077F                      l804 0769  
                    l740 06B4                      l732 069F                      l830 07B2  
                    l822 079A                      l814 0780                      l750 06D2  
                    l742 06BA                      l734 06A0                      l840 07CC  
                    l832 07B7                      l824 07A1                      l808 076C  
                    l760 06EC                      l752 06D7                      l744 06C1  
                    l728 0696                      l842 07D2                      l834 07B8  
                    l818 0787                      l770 070A                      l762 06F2  
                    l754 06D8                      l738 06A7                      l844 07D9  
                    l828 07A4                      l780 0724                      l772 070F  
                    l764 06F9                      l748 06C4                      l838 07BF  
                    l790 0742                      l782 072A                      l774 0710  
                    l758 06DF                      l848 07DC                      l792 0747  
                    l784 0731                      l768 06FC                      l794 0748  
                    l778 0717                      l788 0734                      l798 074F  
                    u210 06D2                      u211 06D1                      u300 077A  
                    u220 06DE                      u204 06AD                      u301 0779  
                    u221 06DD                      u205 06AB                      u310 0786  
                    u311 0785                      u240 070A                      u241 0709  
                    u330 07B2                      u250 0716                      u234 06E5  
                    u331 07B1                      u251 0715                      u235 06E3  
                    u340 07BE                      u324 078D                      u341 07BD  
                    u325 078B                      u270 0742                      u190 06A6  
                    u407 0764                      u271 0741                      u191 06A5  
                    u360 07EA                      u280 074E                      u264 071D  
                    u361 07E9                      u417 079C                      u281 074D  
                    u265 071B                      u354 07C5                      u427 07D4  
                    u355 07C3                      u294 0755                      u295 0753  
                    u377 06BC                      u387 06F4                      u397 072C  
                    fsr0 0004                      indf 0000                     _main 0696  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    main@i 0071                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0666               __pmaintext 0696  
                main@aux 0077     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 0653              __pdataBANK0 0020                ___latbits 0002  
              _patrones1 0048                _patrones2 0028                _patrones3 0020  
              _patrones4 0040                _patrones5 0038                _patrones6 0030  
               main@i_45 0072                 main@i_46 0073                 main@i_47 0074  
               main@i_48 0075                 main@i_49 0076                 init_ram0 0657  
