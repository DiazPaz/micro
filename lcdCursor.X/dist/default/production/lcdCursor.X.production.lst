

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 12 18:18:26 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 26/03/2025 GMT
    23                           ; 
    24                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0004                     fsr             equ	4
    57     0004                     fsr0            equ	4
    58     0000                     indf            equ	0
    59     0000                     indf0           equ	0
    60     0002                     pc              equ	2
    61     0002                     pcl             equ	2
    62     000A                     pclath          equ	10
    63     0003                     status          equ	3
    64     0000                     INDF            equ	0	;# 
    65     0001                     TMR0            equ	1	;# 
    66     0002                     PCL             equ	2	;# 
    67     0003                     STATUS          equ	3	;# 
    68     0004                     FSR             equ	4	;# 
    69     0005                     PORTA           equ	5	;# 
    70     0006                     PORTB           equ	6	;# 
    71     0007                     PORTC           equ	7	;# 
    72     0008                     PORTD           equ	8	;# 
    73     0009                     PORTE           equ	9	;# 
    74     000A                     PCLATH          equ	10	;# 
    75     000B                     INTCON          equ	11	;# 
    76     000C                     PIR1            equ	12	;# 
    77     000D                     PIR2            equ	13	;# 
    78     000E                     TMR1            equ	14	;# 
    79     000E                     TMR1L           equ	14	;# 
    80     000F                     TMR1H           equ	15	;# 
    81     0010                     T1CON           equ	16	;# 
    82     0011                     TMR2            equ	17	;# 
    83     0012                     T2CON           equ	18	;# 
    84     0013                     SSPBUF          equ	19	;# 
    85     0014                     SSPCON          equ	20	;# 
    86     0015                     CCPR1           equ	21	;# 
    87     0015                     CCPR1L          equ	21	;# 
    88     0016                     CCPR1H          equ	22	;# 
    89     0017                     CCP1CON         equ	23	;# 
    90     0018                     RCSTA           equ	24	;# 
    91     0019                     TXREG           equ	25	;# 
    92     001A                     RCREG           equ	26	;# 
    93     001B                     CCPR2           equ	27	;# 
    94     001B                     CCPR2L          equ	27	;# 
    95     001C                     CCPR2H          equ	28	;# 
    96     001D                     CCP2CON         equ	29	;# 
    97     001E                     ADRESH          equ	30	;# 
    98     001F                     ADCON0          equ	31	;# 
    99     0081                     OPTION_REG      equ	129	;# 
   100     0085                     TRISA           equ	133	;# 
   101     0086                     TRISB           equ	134	;# 
   102     0087                     TRISC           equ	135	;# 
   103     0088                     TRISD           equ	136	;# 
   104     0089                     TRISE           equ	137	;# 
   105     008C                     PIE1            equ	140	;# 
   106     008D                     PIE2            equ	141	;# 
   107     008E                     PCON            equ	142	;# 
   108     008F                     OSCCON          equ	143	;# 
   109     0090                     OSCTUNE         equ	144	;# 
   110     0091                     SSPCON2         equ	145	;# 
   111     0092                     PR2             equ	146	;# 
   112     0093                     SSPADD          equ	147	;# 
   113     0093                     SSPMSK          equ	147	;# 
   114     0093                     MSK             equ	147	;# 
   115     0094                     SSPSTAT         equ	148	;# 
   116     0095                     WPUB            equ	149	;# 
   117     0096                     IOCB            equ	150	;# 
   118     0097                     VRCON           equ	151	;# 
   119     0098                     TXSTA           equ	152	;# 
   120     0099                     SPBRG           equ	153	;# 
   121     009A                     SPBRGH          equ	154	;# 
   122     009B                     PWM1CON         equ	155	;# 
   123     009C                     ECCPAS          equ	156	;# 
   124     009D                     PSTRCON         equ	157	;# 
   125     009E                     ADRESL          equ	158	;# 
   126     009F                     ADCON1          equ	159	;# 
   127     0105                     WDTCON          equ	261	;# 
   128     0107                     CM1CON0         equ	263	;# 
   129     0108                     CM2CON0         equ	264	;# 
   130     0109                     CM2CON1         equ	265	;# 
   131     010C                     EEDATA          equ	268	;# 
   132     010C                     EEDAT           equ	268	;# 
   133     010D                     EEADR           equ	269	;# 
   134     010E                     EEDATH          equ	270	;# 
   135     010F                     EEADRH          equ	271	;# 
   136     0185                     SRCON           equ	389	;# 
   137     0187                     BAUDCTL         equ	391	;# 
   138     0188                     ANSEL           equ	392	;# 
   139     0189                     ANSELH          equ	393	;# 
   140     018C                     EECON1          equ	396	;# 
   141     018D                     EECON2          equ	397	;# 
   142     0000                     INDF            equ	0	;# 
   143     0001                     TMR0            equ	1	;# 
   144     0002                     PCL             equ	2	;# 
   145     0003                     STATUS          equ	3	;# 
   146     0004                     FSR             equ	4	;# 
   147     0005                     PORTA           equ	5	;# 
   148     0006                     PORTB           equ	6	;# 
   149     0007                     PORTC           equ	7	;# 
   150     0008                     PORTD           equ	8	;# 
   151     0009                     PORTE           equ	9	;# 
   152     000A                     PCLATH          equ	10	;# 
   153     000B                     INTCON          equ	11	;# 
   154     000C                     PIR1            equ	12	;# 
   155     000D                     PIR2            equ	13	;# 
   156     000E                     TMR1            equ	14	;# 
   157     000E                     TMR1L           equ	14	;# 
   158     000F                     TMR1H           equ	15	;# 
   159     0010                     T1CON           equ	16	;# 
   160     0011                     TMR2            equ	17	;# 
   161     0012                     T2CON           equ	18	;# 
   162     0013                     SSPBUF          equ	19	;# 
   163     0014                     SSPCON          equ	20	;# 
   164     0015                     CCPR1           equ	21	;# 
   165     0015                     CCPR1L          equ	21	;# 
   166     0016                     CCPR1H          equ	22	;# 
   167     0017                     CCP1CON         equ	23	;# 
   168     0018                     RCSTA           equ	24	;# 
   169     0019                     TXREG           equ	25	;# 
   170     001A                     RCREG           equ	26	;# 
   171     001B                     CCPR2           equ	27	;# 
   172     001B                     CCPR2L          equ	27	;# 
   173     001C                     CCPR2H          equ	28	;# 
   174     001D                     CCP2CON         equ	29	;# 
   175     001E                     ADRESH          equ	30	;# 
   176     001F                     ADCON0          equ	31	;# 
   177     0081                     OPTION_REG      equ	129	;# 
   178     0085                     TRISA           equ	133	;# 
   179     0086                     TRISB           equ	134	;# 
   180     0087                     TRISC           equ	135	;# 
   181     0088                     TRISD           equ	136	;# 
   182     0089                     TRISE           equ	137	;# 
   183     008C                     PIE1            equ	140	;# 
   184     008D                     PIE2            equ	141	;# 
   185     008E                     PCON            equ	142	;# 
   186     008F                     OSCCON          equ	143	;# 
   187     0090                     OSCTUNE         equ	144	;# 
   188     0091                     SSPCON2         equ	145	;# 
   189     0092                     PR2             equ	146	;# 
   190     0093                     SSPADD          equ	147	;# 
   191     0093                     SSPMSK          equ	147	;# 
   192     0093                     MSK             equ	147	;# 
   193     0094                     SSPSTAT         equ	148	;# 
   194     0095                     WPUB            equ	149	;# 
   195     0096                     IOCB            equ	150	;# 
   196     0097                     VRCON           equ	151	;# 
   197     0098                     TXSTA           equ	152	;# 
   198     0099                     SPBRG           equ	153	;# 
   199     009A                     SPBRGH          equ	154	;# 
   200     009B                     PWM1CON         equ	155	;# 
   201     009C                     ECCPAS          equ	156	;# 
   202     009D                     PSTRCON         equ	157	;# 
   203     009E                     ADRESL          equ	158	;# 
   204     009F                     ADCON1          equ	159	;# 
   205     0105                     WDTCON          equ	261	;# 
   206     0107                     CM1CON0         equ	263	;# 
   207     0108                     CM2CON0         equ	264	;# 
   208     0109                     CM2CON1         equ	265	;# 
   209     010C                     EEDATA          equ	268	;# 
   210     010C                     EEDAT           equ	268	;# 
   211     010D                     EEADR           equ	269	;# 
   212     010E                     EEDATH          equ	270	;# 
   213     010F                     EEADRH          equ	271	;# 
   214     0185                     SRCON           equ	389	;# 
   215     0187                     BAUDCTL         equ	391	;# 
   216     0188                     ANSEL           equ	392	;# 
   217     0189                     ANSELH          equ	393	;# 
   218     018C                     EECON1          equ	396	;# 
   219     018D                     EECON2          equ	397	;# 
   220     0000                     INDF            equ	0	;# 
   221     0001                     TMR0            equ	1	;# 
   222     0002                     PCL             equ	2	;# 
   223     0003                     STATUS          equ	3	;# 
   224     0004                     FSR             equ	4	;# 
   225     0005                     PORTA           equ	5	;# 
   226     0006                     PORTB           equ	6	;# 
   227     0007                     PORTC           equ	7	;# 
   228     0008                     PORTD           equ	8	;# 
   229     0009                     PORTE           equ	9	;# 
   230     000A                     PCLATH          equ	10	;# 
   231     000B                     INTCON          equ	11	;# 
   232     000C                     PIR1            equ	12	;# 
   233     000D                     PIR2            equ	13	;# 
   234     000E                     TMR1            equ	14	;# 
   235     000E                     TMR1L           equ	14	;# 
   236     000F                     TMR1H           equ	15	;# 
   237     0010                     T1CON           equ	16	;# 
   238     0011                     TMR2            equ	17	;# 
   239     0012                     T2CON           equ	18	;# 
   240     0013                     SSPBUF          equ	19	;# 
   241     0014                     SSPCON          equ	20	;# 
   242     0015                     CCPR1           equ	21	;# 
   243     0015                     CCPR1L          equ	21	;# 
   244     0016                     CCPR1H          equ	22	;# 
   245     0017                     CCP1CON         equ	23	;# 
   246     0018                     RCSTA           equ	24	;# 
   247     0019                     TXREG           equ	25	;# 
   248     001A                     RCREG           equ	26	;# 
   249     001B                     CCPR2           equ	27	;# 
   250     001B                     CCPR2L          equ	27	;# 
   251     001C                     CCPR2H          equ	28	;# 
   252     001D                     CCP2CON         equ	29	;# 
   253     001E                     ADRESH          equ	30	;# 
   254     001F                     ADCON0          equ	31	;# 
   255     0081                     OPTION_REG      equ	129	;# 
   256     0085                     TRISA           equ	133	;# 
   257     0086                     TRISB           equ	134	;# 
   258     0087                     TRISC           equ	135	;# 
   259     0088                     TRISD           equ	136	;# 
   260     0089                     TRISE           equ	137	;# 
   261     008C                     PIE1            equ	140	;# 
   262     008D                     PIE2            equ	141	;# 
   263     008E                     PCON            equ	142	;# 
   264     008F                     OSCCON          equ	143	;# 
   265     0090                     OSCTUNE         equ	144	;# 
   266     0091                     SSPCON2         equ	145	;# 
   267     0092                     PR2             equ	146	;# 
   268     0093                     SSPADD          equ	147	;# 
   269     0093                     SSPMSK          equ	147	;# 
   270     0093                     MSK             equ	147	;# 
   271     0094                     SSPSTAT         equ	148	;# 
   272     0095                     WPUB            equ	149	;# 
   273     0096                     IOCB            equ	150	;# 
   274     0097                     VRCON           equ	151	;# 
   275     0098                     TXSTA           equ	152	;# 
   276     0099                     SPBRG           equ	153	;# 
   277     009A                     SPBRGH          equ	154	;# 
   278     009B                     PWM1CON         equ	155	;# 
   279     009C                     ECCPAS          equ	156	;# 
   280     009D                     PSTRCON         equ	157	;# 
   281     009E                     ADRESL          equ	158	;# 
   282     009F                     ADCON1          equ	159	;# 
   283     0105                     WDTCON          equ	261	;# 
   284     0107                     CM1CON0         equ	263	;# 
   285     0108                     CM2CON0         equ	264	;# 
   286     0109                     CM2CON1         equ	265	;# 
   287     010C                     EEDATA          equ	268	;# 
   288     010C                     EEDAT           equ	268	;# 
   289     010D                     EEADR           equ	269	;# 
   290     010E                     EEDATH          equ	270	;# 
   291     010F                     EEADRH          equ	271	;# 
   292     0185                     SRCON           equ	389	;# 
   293     0187                     BAUDCTL         equ	391	;# 
   294     0188                     ANSEL           equ	392	;# 
   295     0189                     ANSELH          equ	393	;# 
   296     018C                     EECON1          equ	396	;# 
   297     018D                     EECON2          equ	397	;# 
   298                           
   299                           	psect	idataBANK0
   300     03F0                     __pidataBANK0:
   301                           
   302                           ;initializer for _lcd
   303     03F0  3407               	retlw	7
   304     03F1  3400               	retlw	0
   305     03F2  341A               	retlw	26
   306     03F3  342C               	retlw	44
   307     03F4  343E               	retlw	62
   308     0006                     _PORTBbits      set	6
   309     0006                     _PORTB          set	6
   310     0005                     _PORTA          set	5
   311     0007                     _PORTC          set	7
   312     0081                     _OPTION_REG     set	129
   313     0087                     _TRISC          set	135
   314     0086                     _TRISB          set	134
   315     0085                     _TRISA          set	133
   316     0189                     _ANSELH         set	393
   317     0188                     _ANSEL          set	392
   318                           
   319                           	psect	strings
   320     0003                     __pstrings:
   321     0003                     stringtab:
   322     0003                     __stringtab:
   323     0003                     stringcode:	
   324                           ;	String table - string pointers are 1 byte each
   325                           
   326     0003                     stringdir:
   327     0003  3000               	movlw	high stringdir
   328     0004  008A               	movwf	10
   329     0005  0804               	movf	4,w
   330     0006  0A84               	incf	4,f
   331     0007  0782               	addwf	2,f
   332     0008                     __stringbase:
   333     0008  3400               	retlw	0
   334     0009                     __end_of__stringtab:
   335     0009                     STR_6:
   336     0009  3420               	retlw	32	;' '
   337     000A  3420               	retlw	32	;' '
   338     000B  3420               	retlw	32	;' '
   339     000C  3453               	retlw	83	;'S'
   340     000D  3454               	retlw	84	;'T'
   341     000E  3441               	retlw	65	;'A'
   342     000F  3454               	retlw	84	;'T'
   343     0010  3455               	retlw	85	;'U'
   344     0011  3453               	retlw	83	;'S'
   345     0012  343A               	retlw	58	;':'
   346     0013  3420               	retlw	32	;' '
   347     0014  344F               	retlw	79	;'O'
   348     0015  344E               	retlw	78	;'N'
   349     0016  3400               	retlw	0
   350     0017                     STR_5:
   351     0017  3438               	retlw	56	;'8'
   352     0018  342D               	retlw	45	;'-'
   353     0019  342D               	retlw	45	;'-'
   354     001A  3420               	retlw	32	;' '
   355     001B  344C               	retlw	76	;'L'
   356     001C  3445               	retlw	69	;'E'
   357     001D  3444               	retlw	68	;'D'
   358     001E  3420               	retlw	32	;' '
   359     001F  3431               	retlw	49	;'1'
   360     0020  3400               	retlw	0
   361     0021                     STR_7:
   362     0021  3438               	retlw	56	;'8'
   363     0022  342D               	retlw	45	;'-'
   364     0023  342D               	retlw	45	;'-'
   365     0024  3420               	retlw	32	;' '
   366     0025  344C               	retlw	76	;'L'
   367     0026  3445               	retlw	69	;'E'
   368     0027  3444               	retlw	68	;'D'
   369     0028  3420               	retlw	32	;' '
   370     0029  3432               	retlw	50	;'2'
   371     002A  3400               	retlw	0
   372     002B                     STR_3:
   373     002B  344C               	retlw	76	;'L'
   374     002C  3445               	retlw	69	;'E'
   375     002D  3444               	retlw	68	;'D'
   376     002E  3420               	retlw	32	;' '
   377     002F  3431               	retlw	49	;'1'
   378     0030  343A               	retlw	58	;':'
   379     0031  3420               	retlw	32	;' '
   380     0032  344F               	retlw	79	;'O'
   381     0033  344E               	retlw	78	;'N'
   382     0034  3400               	retlw	0
   383     0035                     STR_4:
   384     0035  344C               	retlw	76	;'L'
   385     0036  3445               	retlw	69	;'E'
   386     0037  3444               	retlw	68	;'D'
   387     0038  3420               	retlw	32	;' '
   388     0039  3432               	retlw	50	;'2'
   389     003A  343A               	retlw	58	;':'
   390     003B  3420               	retlw	32	;' '
   391     003C  344F               	retlw	79	;'O'
   392     003D  344E               	retlw	78	;'N'
   393     003E  3400               	retlw	0
   394     003F                     STR_2:
   395     003F  3420               	retlw	32	;' '
   396     0040  3400               	retlw	0
   397     0041                     STR_1:
   398     0041  343E               	retlw	62	;'>'
   399     0042  3400               	retlw	0
   400     0009                     STR_8           equ	STR_6
   401                           
   402                           	psect	cinit
   403     07DD                     start_initialization:	
   404                           ; #config settings
   405                           
   406     07DD                     __initialization:
   407                           
   408                           ; Initialize objects allocated to BANK0
   409     07DD  120A  118A  23F0  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   410     07E2  00A0               	movwf	__pdataBANK0& (0+127)
   411     07E3  120A  118A  23F1  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   412     07E8  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   413     07E9  120A  118A  23F2  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   414     07EE  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   415     07EF  120A  118A  23F3  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   416     07F4  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   417     07F5  120A  118A  23F4  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   418     07FA  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   419                           
   420                           ; Clear objects allocated to BANK0
   421     07FB  01A7               	clrf	__pbssBANK0& (0+127)
   422     07FC                     end_of_initialization:	
   423                           ;End of C runtime variable initialization code
   424                           
   425     07FC                     __end_of__initialization:
   426     07FC  0183               	clrf	3
   427     07FD  120A  118A  2ECE   	ljmp	_main	;jump to C main() function
   428                           
   429                           	psect	bssBANK0
   430     0027                     __pbssBANK0:
   431     0027                     _boton:
   432     0027                     	ds	1
   433                           
   434                           	psect	dataBANK0
   435     0020                     __pdataBANK0:
   436     0020                     _lcd:
   437     0020                     	ds	5
   438                           
   439                           	psect	cstackCOMMON
   440     0070                     __pcstackCOMMON:
   441     0070                     ?_LED1:
   442     0070                     ?_LED2:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0070                     ?_LCD_Out:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0070                     ?_LCD_Write:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0070                     ?_LCD_putc:	
   452                           ; 1 bytes @ 0x0
   453                           
   454     0070                     ?_main:	
   455                           ; 1 bytes @ 0x0
   456                           
   457     0070                     ??_LCD_Out:	
   458                           ; 1 bytes @ 0x0
   459                           
   460                           
   461                           ; 1 bytes @ 0x0
   462     0070                     	ds	2
   463     0072                     LCD_Out@c:
   464                           
   465                           ; 1 bytes @ 0x2
   466     0072                     	ds	1
   467     0073                     ??_LCD_Write:
   468     0073                     ??_LCD_putc:	
   469                           ; 1 bytes @ 0x3
   470                           
   471                           
   472                           ; 1 bytes @ 0x3
   473     0073                     	ds	2
   474     0075                     LCD_Write@c:
   475     0075                     LCD_putc@c:	
   476                           ; 1 bytes @ 0x5
   477                           
   478                           
   479                           ; 1 bytes @ 0x5
   480     0075                     	ds	1
   481     0076                     ?_LCD_Init:
   482     0076                     ?_LCD_putrs:	
   483                           ; 1 bytes @ 0x6
   484                           
   485     0076                     LCD_putrs@a:	
   486                           ; 1 bytes @ 0x6
   487                           
   488     0076                     LCD_Init@display:	
   489                           ; 1 bytes @ 0x6
   490                           
   491                           
   492                           ; 5 bytes @ 0x6
   493     0076                     	ds	1
   494     0077                     LCD_putrs@i:
   495     0077                     ??_LCD_putrs:	
   496                           ; 2 bytes @ 0x7
   497                           
   498                           
   499                           ; 1 bytes @ 0x7
   500     0077                     	ds	2
   501     0079                     ??_LED1:
   502     0079                     ??_LED2:	
   503                           ; 1 bytes @ 0x9
   504                           
   505                           
   506                           ; 1 bytes @ 0x9
   507     0079                     	ds	2
   508     007B                     ??_LCD_Init:
   509                           
   510                           ; 1 bytes @ 0xB
   511     007B                     	ds	2
   512     007D                     LCD_Init@cmd:
   513                           
   514                           ; 1 bytes @ 0xD
   515     007D                     	ds	1
   516                           
   517                           	psect	cstackBANK0
   518     0025                     __pcstackBANK0:
   519     0025                     ??_main:
   520                           
   521                           ; 1 bytes @ 0x0
   522     0025                     	ds	2
   523                           
   524                           	psect	maintext
   525     06CE                     __pmaintext:	
   526 ;;
   527 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   528 ;;
   529 ;; *************** function _main *****************
   530 ;; Defined at:
   531 ;;		line 44 in file "main.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : B00/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0
   547 ;;      Temps:          0       2       0       0       0
   548 ;;      Totals:         0       2       0       0       0
   549 ;;Total ram usage:        2 bytes
   550 ;; Hardware stack levels required when called: 4
   551 ;; This function calls:
   552 ;;		_LCD_Init
   553 ;;		_LCD_Write
   554 ;;		_LCD_putrs
   555 ;;		_LED1
   556 ;;		_LED2
   557 ;; This function is called by:
   558 ;;		Startup code after reset
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562     06CE                     _main:	
   563                           ;psect for function _main
   564                           
   565     06CE                     l1161:	
   566                           ;incstack = 0
   567                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   568                           
   569                           
   570                           ;main.c: 46:         }
   571     06CE  1683               	bsf	3,5	;RP0=1, select bank3
   572     06CF  1703               	bsf	3,6	;RP1=1, select bank3
   573     06D0  0188               	clrf	8	;volatile
   574                           
   575                           ;main.c: 47:     }
   576     06D1  0189               	clrf	9	;volatile
   577     06D2                     l1163:
   578                           
   579                           ;main.c: 48: }
   580     06D2  307F               	movlw	127
   581     06D3  1683               	bsf	3,5	;RP0=1, select bank1
   582     06D4  1303               	bcf	3,6	;RP1=0, select bank1
   583     06D5  0581               	andwf	1,f	;volatile
   584     06D6                     l1165:
   585                           
   586                           ;main.c: 49: 
   587     06D6  3003               	movlw	3
   588     06D7  0086               	movwf	6	;volatile
   589     06D8                     l1167:
   590                           
   591                           ;main.c: 50: void LED1(void){
   592     06D8  1283               	bcf	3,5	;RP0=0, select bank0
   593     06D9  1303               	bcf	3,6	;RP1=0, select bank0
   594     06DA  0186               	clrf	6	;volatile
   595     06DB                     l1169:
   596                           
   597                           ;main.c: 53:     do { if ( 1 == 0 ) { do { LCD_Write( (0x80 + 0 & 0xF0) >> 4 ); LCD_Writ
      +                          e( 0x80 + 0 & 0x0F); } while ( 0 ); } else if ( 1 == 1 ) { do { LCD_Write( (0xC0 + 0 & 0
      +                          xF0) >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F); } while ( 0 ); } else if ( 1 == 2 ) { do { LCD
      +                          _Write( (0x94 + 0 & 0xF0) >> 4 ); LCD_Write( 0x94 + 0 & 0x0F); } while ( 0 ); } else if 
      +                          ( 1 == 3 ) { do { LCD_Write( (0xD4 + 0 & 0xF0) >> 4 ); LCD_Write( 0xD4 + 0 & 0x0F); } wh
      +                          ile ( 0 ); } } while ( 0 );
   598     06DB  3076               	movlw	LCD_Init@display& (0+255)
   599     06DC  0084               	movwf	4
   600     06DD  0820               	movf	_lcd,w
   601     06DE  0080               	movwf	0
   602     06DF  0A84               	incf	4,f
   603     06E0  0821               	movf	_lcd+1,w
   604     06E1  0080               	movwf	0
   605     06E2  0A84               	incf	4,f
   606     06E3  0822               	movf	_lcd+2,w
   607     06E4  0080               	movwf	0
   608     06E5  0A84               	incf	4,f
   609     06E6  0823               	movf	_lcd+3,w
   610     06E7  0080               	movwf	0
   611     06E8  0A84               	incf	4,f
   612     06E9  0824               	movf	_lcd+4,w
   613     06EA  0080               	movwf	0
   614     06EB  120A  118A  2568  120A  118A  	fcall	_LCD_Init
   615     06F0                     l1171:
   616                           
   617                           ;main.c: 55:     _delay((unsigned long)((3000)*(4000000/4000.0)));
   618     06F0  1283               	bcf	3,5	;RP0=0, select bank0
   619     06F1  1303               	bcf	3,6	;RP1=0, select bank0
   620     06F2  1886               	btfsc	6,1	;volatile
   621     06F3  2EF5               	goto	u661
   622     06F4  2EF6               	goto	u660
   623     06F5                     u661:
   624     06F5  2F79               	goto	l140
   625     06F6                     u660:
   626     06F6                     l1173:
   627                           
   628                           ;main.c: 56: }
   629     06F6  0827               	movf	_boton,w
   630     06F7  1903               	btfsc	3,2
   631     06F8  2EFA               	goto	u671
   632     06F9  2EFC               	goto	u670
   633     06FA                     u671:
   634     06FA  3001               	movlw	1
   635     06FB  2EFD               	goto	u680
   636     06FC                     u670:
   637     06FC  3000               	movlw	0
   638     06FD                     u680:
   639     06FD  00A7               	movwf	_boton
   640     06FE                     l104:	
   641                           ;main.c: 57: 
   642                           
   643     06FE  0827               	movf	_boton,w
   644     06FF  1D03               	btfss	3,2
   645     0700  2F02               	goto	u691
   646     0701  2F03               	goto	u690
   647     0702                     u691:
   648     0702  2F10               	goto	l1177
   649     0703                     u690:
   650     0703                     l1175:
   651     0703  3008               	movlw	8
   652     0704  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   653     0709  3000               	movlw	0
   654     070A  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   655     070F  2F45               	goto	l120
   656     0710                     l1177:
   657     0710  0327               	decf	_boton,w
   658     0711  1D03               	btfss	3,2
   659     0712  2F14               	goto	u701
   660     0713  2F15               	goto	u700
   661     0714                     u701:
   662     0714  2F22               	goto	l1181
   663     0715                     u700:
   664     0715                     l1179:
   665     0715  300C               	movlw	12
   666     0716  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   667     071B  3000               	movlw	0
   668     071C  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   669     0721  2F45               	goto	l120
   670     0722                     l1181:
   671     0722  0827               	movf	_boton,w
   672     0723  1D03               	btfss	3,2
   673     0724  2F26               	goto	u711
   674     0725  2F27               	goto	u710
   675     0726                     u711:
   676     0726  2F34               	goto	l1185
   677     0727                     u710:
   678     0727                     l1183:
   679     0727  3009               	movlw	9
   680     0728  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   681     072D  3004               	movlw	4
   682     072E  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   683     0733  2F45               	goto	l120
   684     0734                     l1185:
   685     0734  0327               	decf	_boton,w
   686     0735  1D03               	btfss	3,2
   687     0736  2F38               	goto	u721
   688     0737  2F39               	goto	u720
   689     0738                     u721:
   690     0738  2F45               	goto	l120
   691     0739                     u720:
   692     0739                     l1187:
   693     0739  300D               	movlw	13
   694     073A  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   695     073F  3004               	movlw	4
   696     0740  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   697     0745                     l120:
   698                           
   699                           ;main.c: 58: void LED2(void){
   700     0745  3039               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   701     0746  00F6               	movwf	LCD_putrs@a
   702     0747  120A  118A  23F5  120A  118A  	fcall	_LCD_putrs
   703     074C                     l1189:
   704     074C  1283               	bcf	3,5	;RP0=0, select bank0
   705     074D  1303               	bcf	3,6	;RP1=0, select bank0
   706     074E  0827               	movf	_boton,w
   707     074F  1903               	btfsc	3,2
   708     0750  2F52               	goto	u731
   709     0751  2F53               	goto	u730
   710     0752                     u731:
   711     0752  2F60               	goto	l1193
   712     0753                     u730:
   713     0753                     l1191:
   714     0753  3008               	movlw	8
   715     0754  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   716     0759  3000               	movlw	0
   717     075A  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   718     075F  2F72               	goto	l137
   719     0760                     l1193:
   720     0760  0827               	movf	_boton,w
   721     0761  1D03               	btfss	3,2
   722     0762  2F64               	goto	u741
   723     0763  2F65               	goto	u740
   724     0764                     u741:
   725     0764  2F72               	goto	l128
   726     0765                     u740:
   727     0765                     l1195:
   728     0765  300C               	movlw	12
   729     0766  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   730     076B  3000               	movlw	0
   731     076C  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   732     0771  2F72               	goto	l137
   733     0772                     l128:
   734     0772                     l137:
   735                           
   736                           ;main.c: 60:     LCD_putrs("8-- LED 2");
   737     0772  3037               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   738     0773  00F6               	movwf	LCD_putrs@a
   739     0774  120A  118A  23F5  120A  118A  	fcall	_LCD_putrs
   740     0779                     l140:
   741     0779  3008               	movlw	8
   742     077A  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   743     077F  3003               	movlw	3
   744     0780  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   745     0785                     l154:
   746                           
   747                           ;main.c: 63:     _delay((unsigned long)((3000)*(4000000/4000.0)));
   748     0785  3023               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   749     0786  00F6               	movwf	LCD_putrs@a
   750     0787  120A  118A  23F5  120A  118A  	fcall	_LCD_putrs
   751     078C                     l1209:
   752     078C  300C               	movlw	12
   753     078D  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   754     0792  3003               	movlw	3
   755     0793  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   756     0798                     l171:
   757     0798  302D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   758     0799  00F6               	movwf	LCD_putrs@a
   759     079A  120A  118A  23F5  120A  118A  	fcall	_LCD_putrs
   760     079F                     l1215:
   761     079F  300D               	movlw	13
   762     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   763     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   764     07A2  00A6               	movwf	??_main+1
   765     07A3  30FB               	movlw	251
   766     07A4  00A5               	movwf	??_main
   767     07A5                     u777:
   768     07A5  0BA5               	decfsz	??_main,f
   769     07A6  2FA5               	goto	u777
   770     07A7  0BA6               	decfsz	??_main+1,f
   771     07A8  2FA5               	goto	u777
   772     07A9                     l1217:
   773     07A9  1283               	bcf	3,5	;RP0=0, select bank0
   774     07AA  1303               	bcf	3,6	;RP1=0, select bank0
   775     07AB  1806               	btfsc	6,0	;volatile
   776     07AC  2FAE               	goto	u751
   777     07AD  2FAF               	goto	u750
   778     07AE                     u751:
   779     07AE  2EF0               	goto	l1171
   780     07AF                     u750:
   781     07AF                     l1219:
   782     07AF  3000               	movlw	0
   783     07B0  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   784     07B5  3001               	movlw	1
   785     07B6  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   786     07BB                     l1221:
   787     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   788     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   789     07BD  0827               	movf	_boton,w
   790     07BE  1D03               	btfss	3,2
   791     07BF  2FC1               	goto	u761
   792     07C0  2FC2               	goto	u760
   793     07C1                     u761:
   794     07C1  2FC8               	goto	l1225
   795     07C2                     u760:
   796     07C2                     l1223:
   797     07C2  120A  118A  2419  120A  118A  	fcall	_LED1
   798     07C7  2FCD               	goto	l177
   799     07C8                     l1225:
   800     07C8  120A  118A  244D  120A  118A  	fcall	_LED2
   801     07CD                     l177:
   802     07CD  3000               	movlw	0
   803     07CE  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   804     07D3  3001               	movlw	1
   805     07D4  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   806     07D9  2EF0               	goto	l1171
   807     07DA  120A  118A  2800   	ljmp	start
   808     07DD                     __end_of_main:
   809                           
   810                           	psect	text1
   811     044D                     __ptext1:	
   812 ;; *************** function _LED2 *****************
   813 ;; Defined at:
   814 ;;		line 89 in file "main.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0
   830 ;;      Temps:          3       0       0       0       0
   831 ;;      Totals:         3       0       0       0       0
   832 ;;Total ram usage:        3 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 3
   835 ;; This function calls:
   836 ;;		_LCD_Write
   837 ;;		_LCD_putrs
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843     044D                     _LED2:	
   844                           ;psect for function _LED2
   845                           
   846     044D                     l221:	
   847                           ;incstack = 0
   848                           ; Regs used in _LED2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   849                           
   850     044D                     l1135:
   851     044D  3008               	movlw	8
   852     044E  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   853     0453  3000               	movlw	0
   854     0454  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   855     0459                     l237:
   856     0459  3019               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   857     045A  00F6               	movwf	LCD_putrs@a
   858     045B  120A  118A  23F5  120A  118A  	fcall	_LCD_putrs
   859     0460                     l1145:
   860     0460  300C               	movlw	12
   861     0461  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   862     0466  3000               	movlw	0
   863     0467  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   864     046C                     l254:
   865     046C  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   866     046D  00F6               	movwf	LCD_putrs@a
   867     046E  120A  118A  23F5  120A  118A  	fcall	_LCD_putrs
   868     0473                     l1151:
   869     0473  3010               	movlw	16
   870     0474  00FB               	movwf	??_LED2+2
   871     0475  3039               	movlw	57
   872     0476  00FA               	movwf	??_LED2+1
   873     0477  300D               	movlw	13
   874     0478  00F9               	movwf	??_LED2
   875     0479                     u787:
   876     0479  0BF9               	decfsz	??_LED2,f
   877     047A  2C79               	goto	u787
   878     047B  0BFA               	decfsz	??_LED2+1,f
   879     047C  2C79               	goto	u787
   880     047D  0BFB               	decfsz	??_LED2+2,f
   881     047E  2C79               	goto	u787
   882     047F  2C80               	nop2
   883     0480                     l255:
   884     0480  0008               	return
   885     0481                     __end_of_LED2:
   886                           
   887                           	psect	text2
   888     0419                     __ptext2:	
   889 ;; *************** function _LED1 *****************
   890 ;; Defined at:
   891 ;;		line 81 in file "main.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0
   907 ;;      Temps:          3       0       0       0       0
   908 ;;      Totals:         3       0       0       0       0
   909 ;;Total ram usage:        3 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 3
   912 ;; This function calls:
   913 ;;		_LCD_Write
   914 ;;		_LCD_putrs
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920     0419                     _LED1:	
   921                           ;psect for function _LED1
   922                           
   923     0419                     l184:	
   924                           ;incstack = 0
   925                           ; Regs used in _LED1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   926                           
   927     0419                     l1117:
   928     0419  3008               	movlw	8
   929     041A  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   930     041F  3000               	movlw	0
   931     0420  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   932     0425                     l200:
   933     0425  300F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   934     0426  00F6               	movwf	LCD_putrs@a
   935     0427  120A  118A  23F5  120A  118A  	fcall	_LCD_putrs
   936     042C                     l1127:
   937     042C  300C               	movlw	12
   938     042D  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   939     0432  3000               	movlw	0
   940     0433  120A  118A  2481  120A  118A  	fcall	_LCD_Write
   941     0438                     l217:
   942     0438  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   943     0439  00F6               	movwf	LCD_putrs@a
   944     043A  120A  118A  23F5  120A  118A  	fcall	_LCD_putrs
   945     043F                     l1133:
   946     043F  3010               	movlw	16
   947     0440  00FB               	movwf	??_LED1+2
   948     0441  3039               	movlw	57
   949     0442  00FA               	movwf	??_LED1+1
   950     0443  300D               	movlw	13
   951     0444  00F9               	movwf	??_LED1
   952     0445                     u797:
   953     0445  0BF9               	decfsz	??_LED1,f
   954     0446  2C45               	goto	u797
   955     0447  0BFA               	decfsz	??_LED1+1,f
   956     0448  2C45               	goto	u797
   957     0449  0BFB               	decfsz	??_LED1+2,f
   958     044A  2C45               	goto	u797
   959     044B  2C4C               	nop2
   960     044C                     l218:
   961     044C  0008               	return
   962     044D                     __end_of_LED1:
   963                           
   964                           	psect	text3
   965     03F5                     __ptext3:	
   966 ;; *************** function _LCD_putrs *****************
   967 ;; Defined at:
   968 ;;		line 142 in file "lcd.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  a               1    6[COMMON] PTR const unsigned char 
   971 ;;		 -> STR_8(14), STR_7(10), STR_6(14), STR_5(10), 
   972 ;;		 -> STR_4(10), STR_3(10), STR_2(2), STR_1(2), 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  i               2    7[COMMON] int 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         1       0       0       0       0
   985 ;;      Locals:         2       0       0       0       0
   986 ;;      Temps:          0       0       0       0       0
   987 ;;      Totals:         3       0       0       0       0
   988 ;;Total ram usage:        3 bytes
   989 ;; Hardware stack levels used: 1
   990 ;; Hardware stack levels required when called: 2
   991 ;; This function calls:
   992 ;;		_LCD_putc
   993 ;; This function is called by:
   994 ;;		_main
   995 ;;		_LED1
   996 ;;		_LED2
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000     03F5                     _LCD_putrs:	
  1001                           ;psect for function _LCD_putrs
  1002                           
  1003     03F5                     l1063:	
  1004                           ;incstack = 0
  1005                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1006                           
  1007                           
  1008                           ;lcd.c: 144:     for ( int i = 0; a[i] != '\0'; ++i ) {
  1009     03F5  01F7               	clrf	LCD_putrs@i
  1010     03F6  01F8               	clrf	LCD_putrs@i+1
  1011     03F7  2C0B               	goto	l1069
  1012     03F8                     l1065:
  1013                           
  1014                           ;lcd.c: 145:         LCD_putc(a[i]);
  1015     03F8  0877               	movf	LCD_putrs@i,w
  1016     03F9  0776               	addwf	LCD_putrs@a,w
  1017     03FA  0084               	movwf	4
  1018     03FB  120A  118A  2003  120A  118A  	fcall	stringdir
  1019     0400  120A  118A  24D6  120A  118A  	fcall	_LCD_putc
  1020     0405                     l1067:
  1021                           
  1022                           ;lcd.c: 146:     }
  1023     0405  3001               	movlw	1
  1024     0406  07F7               	addwf	LCD_putrs@i,f
  1025     0407  1803               	skipnc
  1026     0408  0AF8               	incf	LCD_putrs@i+1,f
  1027     0409  3000               	movlw	0
  1028     040A  07F8               	addwf	LCD_putrs@i+1,f
  1029     040B                     l1069:
  1030     040B  0877               	movf	LCD_putrs@i,w
  1031     040C  0776               	addwf	LCD_putrs@a,w
  1032     040D  0084               	movwf	4
  1033     040E  120A  118A  2003  120A  118A  	fcall	stringdir
  1034     0413  3A00               	xorlw	0
  1035     0414  1D03               	skipz
  1036     0415  2C17               	goto	u601
  1037     0416  2C18               	goto	u600
  1038     0417                     u601:
  1039     0417  2BF8               	goto	l1065
  1040     0418                     u600:
  1041     0418                     l67:
  1042     0418  0008               	return
  1043     0419                     __end_of_LCD_putrs:
  1044                           
  1045                           	psect	text4
  1046     04D6                     __ptext4:	
  1047 ;; *************** function _LCD_putc *****************
  1048 ;; Defined at:
  1049 ;;		line 117 in file "lcd.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  c               1    wreg     unsigned char 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  c               1    5[COMMON] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       0       0       0       0
  1064 ;;      Locals:         1       0       0       0       0
  1065 ;;      Temps:          2       0       0       0       0
  1066 ;;      Totals:         3       0       0       0       0
  1067 ;;Total ram usage:        3 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 1
  1070 ;; This function calls:
  1071 ;;		_LCD_Out
  1072 ;; This function is called by:
  1073 ;;		_LCD_putrs
  1074 ;;		_LCD_puts
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078     04D6                     _LCD_putc:	
  1079                           ;psect for function _LCD_putc
  1080                           
  1081                           
  1082                           ;incstack = 0
  1083                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1084                           ;LCD_putc@c stored from wreg
  1085     04D6  00F5               	movwf	LCD_putc@c
  1086     04D7                     l1037:
  1087                           
  1088                           ;lcd.c: 119:    *(lcd.PORT) |= 1 << lcd.RS;
  1089     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1090     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  1091     04D9  0820               	movf	_lcd,w
  1092     04DA  0084               	movwf	4
  1093     04DB  1783               	bsf	3,7
  1094     04DC  1C21               	btfss	_lcd+1,0
  1095     04DD  1383               	bcf	3,7
  1096     04DE  3001               	movlw	1
  1097     04DF  00F3               	movwf	??_LCD_putc
  1098     04E0  0822               	movf	_lcd+2,w
  1099     04E1  3907               	andlw	7
  1100     04E2  3E01               	addlw	1
  1101     04E3  2CE6               	goto	u514
  1102     04E4                     u515:
  1103     04E4  1003               	clrc
  1104     04E5  0DF3               	rlf	??_LCD_putc,f
  1105     04E6                     u514:
  1106     04E6  3EFF               	addlw	-1
  1107     04E7  1D03               	skipz
  1108     04E8  2CE4               	goto	u515
  1109     04E9  0873               	movf	??_LCD_putc,w
  1110     04EA  0480               	iorwf	0,f
  1111     04EB                     l1039:
  1112                           
  1113                           ;lcd.c: 120:     LCD_Out((c & 0xF0) >> 4);
  1114     04EB  0875               	movf	LCD_putc@c,w
  1115     04EC  00F3               	movwf	??_LCD_putc
  1116     04ED  3004               	movlw	4
  1117     04EE                     u525:
  1118     04EE  1003               	clrc
  1119     04EF  0CF3               	rrf	??_LCD_putc,f
  1120     04F0  3EFF               	addlw	-1
  1121     04F1  1D03               	skipz
  1122     04F2  2CEE               	goto	u525
  1123     04F3  0873               	movf	??_LCD_putc,w
  1124     04F4  390F               	andlw	15
  1125     04F5  120A  118A  2614  120A  118A  	fcall	_LCD_Out
  1126     04FA                     l1041:
  1127                           
  1128                           ;lcd.c: 122:     *(lcd.PORT) |= 1 << lcd.EN;
  1129     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1130     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1131     04FC  0820               	movf	_lcd,w
  1132     04FD  0084               	movwf	4
  1133     04FE  1783               	bsf	3,7
  1134     04FF  1C21               	btfss	_lcd+1,0
  1135     0500  1383               	bcf	3,7
  1136     0501  3001               	movlw	1
  1137     0502  00F3               	movwf	??_LCD_putc
  1138     0503  0C22               	rrf	_lcd+2,w
  1139     0504  00F4               	movwf	??_LCD_putc+1
  1140     0505  0CF4               	rrf	??_LCD_putc+1,f
  1141     0506  0C74               	rrf	??_LCD_putc+1,w
  1142     0507  3907               	andlw	7
  1143     0508  3E01               	addlw	1
  1144     0509  2D0C               	goto	u534
  1145     050A                     u535:
  1146     050A  1003               	clrc
  1147     050B  0DF3               	rlf	??_LCD_putc,f
  1148     050C                     u534:
  1149     050C  3EFF               	addlw	-1
  1150     050D  1D03               	skipz
  1151     050E  2D0A               	goto	u535
  1152     050F  0873               	movf	??_LCD_putc,w
  1153     0510  0480               	iorwf	0,f
  1154     0511                     l1043:
  1155                           
  1156                           ;lcd.c: 123:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1157     0511  300D               	movlw	13
  1158     0512  00F3               	movwf	??_LCD_putc
  1159     0513                     u807:
  1160     0513  0BF3               	decfsz	??_LCD_putc,f
  1161     0514  2D13               	goto	u807
  1162     0515                     l1045:
  1163                           
  1164                           ;lcd.c: 124:     *(lcd.PORT) &= ~(1 << lcd.EN);
  1165     0515  1283               	bcf	3,5	;RP0=0, select bank0
  1166     0516  1303               	bcf	3,6	;RP1=0, select bank0
  1167     0517  0820               	movf	_lcd,w
  1168     0518  0084               	movwf	4
  1169     0519  1783               	bsf	3,7
  1170     051A  1C21               	btfss	_lcd+1,0
  1171     051B  1383               	bcf	3,7
  1172     051C  3001               	movlw	1
  1173     051D  00F3               	movwf	??_LCD_putc
  1174     051E  0C22               	rrf	_lcd+2,w
  1175     051F  00F4               	movwf	??_LCD_putc+1
  1176     0520  0CF4               	rrf	??_LCD_putc+1,f
  1177     0521  0C74               	rrf	??_LCD_putc+1,w
  1178     0522  3907               	andlw	7
  1179     0523  3E01               	addlw	1
  1180     0524  2D27               	goto	u544
  1181     0525                     u545:
  1182     0525  1003               	clrc
  1183     0526  0DF3               	rlf	??_LCD_putc,f
  1184     0527                     u544:
  1185     0527  3EFF               	addlw	-1
  1186     0528  1D03               	skipz
  1187     0529  2D25               	goto	u545
  1188     052A  0873               	movf	??_LCD_putc,w
  1189     052B  3AFF               	xorlw	255
  1190     052C  0580               	andwf	0,f
  1191     052D                     l1047:
  1192                           
  1193                           ;lcd.c: 126:     LCD_Out(c & 0x0F);
  1194     052D  0875               	movf	LCD_putc@c,w
  1195     052E  390F               	andlw	15
  1196     052F  120A  118A  2614  120A  118A  	fcall	_LCD_Out
  1197     0534                     l1049:
  1198                           
  1199                           ;lcd.c: 128:     *(lcd.PORT) |= 1 << lcd.EN;
  1200     0534  1283               	bcf	3,5	;RP0=0, select bank0
  1201     0535  1303               	bcf	3,6	;RP1=0, select bank0
  1202     0536  0820               	movf	_lcd,w
  1203     0537  0084               	movwf	4
  1204     0538  1783               	bsf	3,7
  1205     0539  1C21               	btfss	_lcd+1,0
  1206     053A  1383               	bcf	3,7
  1207     053B  3001               	movlw	1
  1208     053C  00F3               	movwf	??_LCD_putc
  1209     053D  0C22               	rrf	_lcd+2,w
  1210     053E  00F4               	movwf	??_LCD_putc+1
  1211     053F  0CF4               	rrf	??_LCD_putc+1,f
  1212     0540  0C74               	rrf	??_LCD_putc+1,w
  1213     0541  3907               	andlw	7
  1214     0542  3E01               	addlw	1
  1215     0543  2D46               	goto	u554
  1216     0544                     u555:
  1217     0544  1003               	clrc
  1218     0545  0DF3               	rlf	??_LCD_putc,f
  1219     0546                     u554:
  1220     0546  3EFF               	addlw	-1
  1221     0547  1D03               	skipz
  1222     0548  2D44               	goto	u555
  1223     0549  0873               	movf	??_LCD_putc,w
  1224     054A  0480               	iorwf	0,f
  1225                           
  1226                           ;lcd.c: 129:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1227     054B  300D               	movlw	13
  1228     054C  00F3               	movwf	??_LCD_putc
  1229     054D                     u817:
  1230     054D  0BF3               	decfsz	??_LCD_putc,f
  1231     054E  2D4D               	goto	u817
  1232     054F                     l1051:
  1233                           
  1234                           ;lcd.c: 130:     *(lcd.PORT) &= ~(1 << lcd.EN);
  1235     054F  1283               	bcf	3,5	;RP0=0, select bank0
  1236     0550  1303               	bcf	3,6	;RP1=0, select bank0
  1237     0551  0820               	movf	_lcd,w
  1238     0552  0084               	movwf	4
  1239     0553  1783               	bsf	3,7
  1240     0554  1C21               	btfss	_lcd+1,0
  1241     0555  1383               	bcf	3,7
  1242     0556  3001               	movlw	1
  1243     0557  00F3               	movwf	??_LCD_putc
  1244     0558  0C22               	rrf	_lcd+2,w
  1245     0559  00F4               	movwf	??_LCD_putc+1
  1246     055A  0CF4               	rrf	??_LCD_putc+1,f
  1247     055B  0C74               	rrf	??_LCD_putc+1,w
  1248     055C  3907               	andlw	7
  1249     055D  3E01               	addlw	1
  1250     055E  2D61               	goto	u564
  1251     055F                     u565:
  1252     055F  1003               	clrc
  1253     0560  0DF3               	rlf	??_LCD_putc,f
  1254     0561                     u564:
  1255     0561  3EFF               	addlw	-1
  1256     0562  1D03               	skipz
  1257     0563  2D5F               	goto	u565
  1258     0564  0873               	movf	??_LCD_putc,w
  1259     0565  3AFF               	xorlw	255
  1260     0566  0580               	andwf	0,f
  1261     0567                     l55:
  1262     0567  0008               	return
  1263     0568                     __end_of_LCD_putc:
  1264                           
  1265                           	psect	text5
  1266     0568                     __ptext5:	
  1267 ;; *************** function _LCD_Init *****************
  1268 ;; Defined at:
  1269 ;;		line 59 in file "lcd.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  display         5    6[COMMON] struct .
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  cmd             1   13[COMMON] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      _Bool 
  1276 ;; Registers used:
  1277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1283 ;;      Params:         5       0       0       0       0
  1284 ;;      Locals:         1       0       0       0       0
  1285 ;;      Temps:          2       0       0       0       0
  1286 ;;      Totals:         8       0       0       0       0
  1287 ;;Total ram usage:        8 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; Hardware stack levels required when called: 2
  1290 ;; This function calls:
  1291 ;;		_LCD_Write
  1292 ;; This function is called by:
  1293 ;;		_main
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297     0568                     _LCD_Init:	
  1298                           ;psect for function _LCD_Init
  1299                           
  1300     0568                     l1071:	
  1301                           ;incstack = 0
  1302                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1303                           
  1304                           
  1305                           ;lcd.c: 61:     lcd = display;
  1306     0568  3020               	movlw	_lcd& (0+255)
  1307     0569  0084               	movwf	4
  1308     056A  0876               	movf	LCD_Init@display,w
  1309     056B  1383               	bcf	3,7	;select IRP bank0
  1310     056C  0080               	movwf	0
  1311     056D  0A84               	incf	4,f
  1312     056E  0877               	movf	LCD_Init@display+1,w
  1313     056F  0080               	movwf	0
  1314     0570  0A84               	incf	4,f
  1315     0571  0878               	movf	LCD_Init@display+2,w
  1316     0572  0080               	movwf	0
  1317     0573  0A84               	incf	4,f
  1318     0574  0879               	movf	LCD_Init@display+3,w
  1319     0575  0080               	movwf	0
  1320     0576  0A84               	incf	4,f
  1321     0577  087A               	movf	LCD_Init@display+4,w
  1322     0578  0080               	movwf	0
  1323     0579                     l1073:
  1324                           
  1325                           ;lcd.c: 70:     if ( lcd.PORT == &PORTA ) {
  1326     0579  3000               	movlw	0
  1327     057A  1283               	bcf	3,5	;RP0=0, select bank0
  1328     057B  1303               	bcf	3,6	;RP1=0, select bank0
  1329     057C  0621               	xorwf	_lcd+1,w
  1330     057D  1D03               	skipz
  1331     057E  2D81               	goto	u615
  1332     057F  3005               	movlw	5
  1333     0580  0620               	xorwf	_lcd,w
  1334     0581                     u615:
  1335     0581  1D03               	skipz
  1336     0582  2D84               	goto	u611
  1337     0583  2D85               	goto	u610
  1338     0584                     u611:
  1339     0584  2D89               	goto	l1077
  1340     0585                     u610:
  1341     0585                     l1075:
  1342                           
  1343                           ;lcd.c: 71:         TRISA = 0x00;
  1344     0585  1683               	bsf	3,5	;RP0=1, select bank1
  1345     0586  1303               	bcf	3,6	;RP1=0, select bank1
  1346     0587  0185               	clrf	5	;volatile
  1347                           
  1348                           ;lcd.c: 72:     }
  1349     0588  2DA4               	goto	l1085
  1350     0589                     l1077:
  1351     0589  3000               	movlw	0
  1352     058A  0621               	xorwf	_lcd+1,w
  1353     058B  1D03               	skipz
  1354     058C  2D8F               	goto	u625
  1355     058D  3006               	movlw	6
  1356     058E  0620               	xorwf	_lcd,w
  1357     058F                     u625:
  1358     058F  1D03               	skipz
  1359     0590  2D92               	goto	u621
  1360     0591  2D93               	goto	u620
  1361     0592                     u621:
  1362     0592  2D97               	goto	l1081
  1363     0593                     u620:
  1364     0593                     l1079:
  1365                           
  1366                           ;lcd.c: 74:         TRISB = 0x00;
  1367     0593  1683               	bsf	3,5	;RP0=1, select bank1
  1368     0594  1303               	bcf	3,6	;RP1=0, select bank1
  1369     0595  0186               	clrf	6	;volatile
  1370                           
  1371                           ;lcd.c: 75:     }
  1372     0596  2DA4               	goto	l1085
  1373     0597                     l1081:
  1374     0597  3000               	movlw	0
  1375     0598  0621               	xorwf	_lcd+1,w
  1376     0599  1D03               	skipz
  1377     059A  2D9D               	goto	u635
  1378     059B  3007               	movlw	7
  1379     059C  0620               	xorwf	_lcd,w
  1380     059D                     u635:
  1381     059D  1D03               	skipz
  1382     059E  2DA0               	goto	u631
  1383     059F  2DA1               	goto	u630
  1384     05A0                     u631:
  1385     05A0  2E13               	goto	l39
  1386     05A1                     u630:
  1387     05A1                     l1083:
  1388                           
  1389                           ;lcd.c: 77:         TRISC = 0x00;
  1390     05A1  1683               	bsf	3,5	;RP0=1, select bank1
  1391     05A2  1303               	bcf	3,6	;RP1=0, select bank1
  1392     05A3  0187               	clrf	7	;volatile
  1393     05A4                     l1085:	
  1394                           ;lcd.c: 78:     }
  1395                           
  1396                           
  1397                           ;lcd.c: 92:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1398     05A4  301A               	movlw	26
  1399     05A5  00FC               	movwf	??_LCD_Init+1
  1400     05A6  30F8               	movlw	248
  1401     05A7  00FB               	movwf	??_LCD_Init
  1402     05A8                     u827:
  1403     05A8  0BFB               	decfsz	??_LCD_Init,f
  1404     05A9  2DA8               	goto	u827
  1405     05AA  0BFC               	decfsz	??_LCD_Init+1,f
  1406     05AB  2DA8               	goto	u827
  1407     05AC  0000               	nop
  1408     05AD                     l1087:
  1409                           
  1410                           ;lcd.c: 95:     LCD_Write(0x03);
  1411     05AD  3003               	movlw	3
  1412     05AE  120A  118A  2481  120A  118A  	fcall	_LCD_Write
  1413     05B3                     l1089:
  1414                           
  1415                           ;lcd.c: 96:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1416     05B3  3007               	movlw	7
  1417     05B4  00FC               	movwf	??_LCD_Init+1
  1418     05B5  307D               	movlw	125
  1419     05B6  00FB               	movwf	??_LCD_Init
  1420     05B7                     u837:
  1421     05B7  0BFB               	decfsz	??_LCD_Init,f
  1422     05B8  2DB7               	goto	u837
  1423     05B9  0BFC               	decfsz	??_LCD_Init+1,f
  1424     05BA  2DB7               	goto	u837
  1425                           
  1426                           ;lcd.c: 97:     LCD_Write(0x03);
  1427     05BB  3003               	movlw	3
  1428     05BC  120A  118A  2481  120A  118A  	fcall	_LCD_Write
  1429     05C1                     l1091:
  1430                           
  1431                           ;lcd.c: 98:     _delay((unsigned long)((16)*(4000000/4000.0)));
  1432     05C1  3015               	movlw	21
  1433     05C2  00FC               	movwf	??_LCD_Init+1
  1434     05C3  30C6               	movlw	198
  1435     05C4  00FB               	movwf	??_LCD_Init
  1436     05C5                     u847:
  1437     05C5  0BFB               	decfsz	??_LCD_Init,f
  1438     05C6  2DC5               	goto	u847
  1439     05C7  0BFC               	decfsz	??_LCD_Init+1,f
  1440     05C8  2DC5               	goto	u847
  1441     05C9  0000               	nop
  1442     05CA                     l1093:
  1443                           
  1444                           ;lcd.c: 99:     LCD_Write(0x03);
  1445     05CA  3003               	movlw	3
  1446     05CB  120A  118A  2481  120A  118A  	fcall	_LCD_Write
  1447     05D0                     l1095:
  1448                           
  1449                           ;lcd.c: 102:     LCD_Write(0x02);
  1450     05D0  3002               	movlw	2
  1451     05D1  120A  118A  2481  120A  118A  	fcall	_LCD_Write
  1452     05D6                     l1097:
  1453     05D6  3002               	movlw	2
  1454     05D7  120A  118A  2481  120A  118A  	fcall	_LCD_Write
  1455     05DC                     l1099:
  1456     05DC  3008               	movlw	8
  1457     05DD  120A  118A  2481  120A  118A  	fcall	_LCD_Write
  1458     05E2                     l1101:
  1459     05E2  3000               	movlw	0
  1460     05E3  120A  118A  2481  120A  118A  	fcall	_LCD_Write
  1461     05E8                     l1103:
  1462     05E8  3006               	movlw	6
  1463     05E9  120A  118A  2481  120A  118A  	fcall	_LCD_Write
  1464     05EE                     l1105:
  1465     05EE  3008               	movlw	8
  1466     05EF  00FD               	movwf	LCD_Init@cmd
  1467     05F0                     l1107:
  1468     05F0  157D               	bsf	LCD_Init@cmd,2
  1469     05F1                     l1113:
  1470     05F1  087D               	movf	LCD_Init@cmd,w
  1471     05F2  00FB               	movwf	??_LCD_Init
  1472     05F3  3004               	movlw	4
  1473     05F4                     u645:
  1474     05F4  1003               	clrc
  1475     05F5  0CFB               	rrf	??_LCD_Init,f
  1476     05F6  3EFF               	addlw	-1
  1477     05F7  1D03               	skipz
  1478     05F8  2DF4               	goto	u645
  1479     05F9  087B               	movf	??_LCD_Init,w
  1480     05FA  390F               	andlw	15
  1481     05FB  120A  118A  2481  120A  118A  	fcall	_LCD_Write
  1482     0600  087D               	movf	LCD_Init@cmd,w
  1483     0601  390F               	andlw	15
  1484     0602  120A  118A  2481  120A  118A  	fcall	_LCD_Write
  1485     0607                     l51:	
  1486                           ;lcd.c: 112:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while 
      +                          ( 0 );
  1487                           
  1488     0607  3000               	movlw	0
  1489     0608  120A  118A  2481  120A  118A  	fcall	_LCD_Write
  1490     060D  3001               	movlw	1
  1491     060E  120A  118A  2481  120A  118A  	fcall	_LCD_Write
  1492     0613                     l39:
  1493     0613  0008               	return
  1494     0614                     __end_of_LCD_Init:
  1495                           
  1496                           	psect	text6
  1497     0481                     __ptext6:	
  1498 ;; *************** function _LCD_Write *****************
  1499 ;; Defined at:
  1500 ;;		line 48 in file "lcd.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;  c               1    wreg     unsigned char 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  c               1    5[COMMON] unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1514 ;;      Params:         0       0       0       0       0
  1515 ;;      Locals:         1       0       0       0       0
  1516 ;;      Temps:          2       0       0       0       0
  1517 ;;      Totals:         3       0       0       0       0
  1518 ;;Total ram usage:        3 bytes
  1519 ;; Hardware stack levels used: 1
  1520 ;; Hardware stack levels required when called: 1
  1521 ;; This function calls:
  1522 ;;		_LCD_Out
  1523 ;; This function is called by:
  1524 ;;		_LCD_Init
  1525 ;;		_main
  1526 ;;		_LED1
  1527 ;;		_LED2
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531     0481                     _LCD_Write:	
  1532                           ;psect for function _LCD_Write
  1533                           
  1534                           
  1535                           ;incstack = 0
  1536                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1537                           ;LCD_Write@c stored from wreg
  1538     0481  00F5               	movwf	LCD_Write@c
  1539     0482                     l1053:
  1540                           
  1541                           ;lcd.c: 50:     *(lcd.PORT) &= ~(1 << lcd.RS);
  1542     0482  1283               	bcf	3,5	;RP0=0, select bank0
  1543     0483  1303               	bcf	3,6	;RP1=0, select bank0
  1544     0484  0820               	movf	_lcd,w
  1545     0485  0084               	movwf	4
  1546     0486  1783               	bsf	3,7
  1547     0487  1C21               	btfss	_lcd+1,0
  1548     0488  1383               	bcf	3,7
  1549     0489  3001               	movlw	1
  1550     048A  00F3               	movwf	??_LCD_Write
  1551     048B  0822               	movf	_lcd+2,w
  1552     048C  3907               	andlw	7
  1553     048D  3E01               	addlw	1
  1554     048E  2C91               	goto	u574
  1555     048F                     u575:
  1556     048F  1003               	clrc
  1557     0490  0DF3               	rlf	??_LCD_Write,f
  1558     0491                     u574:
  1559     0491  3EFF               	addlw	-1
  1560     0492  1D03               	skipz
  1561     0493  2C8F               	goto	u575
  1562     0494  0873               	movf	??_LCD_Write,w
  1563     0495  3AFF               	xorlw	255
  1564     0496  0580               	andwf	0,f
  1565     0497                     l1055:
  1566                           
  1567                           ;lcd.c: 51:     LCD_Out(c);
  1568     0497  0875               	movf	LCD_Write@c,w
  1569     0498  120A  118A  2614  120A  118A  	fcall	_LCD_Out
  1570     049D                     l1057:
  1571                           
  1572                           ;lcd.c: 53:     *(lcd.PORT) |= 1 << lcd.EN;
  1573     049D  1283               	bcf	3,5	;RP0=0, select bank0
  1574     049E  1303               	bcf	3,6	;RP1=0, select bank0
  1575     049F  0820               	movf	_lcd,w
  1576     04A0  0084               	movwf	4
  1577     04A1  1783               	bsf	3,7
  1578     04A2  1C21               	btfss	_lcd+1,0
  1579     04A3  1383               	bcf	3,7
  1580     04A4  3001               	movlw	1
  1581     04A5  00F3               	movwf	??_LCD_Write
  1582     04A6  0C22               	rrf	_lcd+2,w
  1583     04A7  00F4               	movwf	??_LCD_Write+1
  1584     04A8  0CF4               	rrf	??_LCD_Write+1,f
  1585     04A9  0C74               	rrf	??_LCD_Write+1,w
  1586     04AA  3907               	andlw	7
  1587     04AB  3E01               	addlw	1
  1588     04AC  2CAF               	goto	u584
  1589     04AD                     u585:
  1590     04AD  1003               	clrc
  1591     04AE  0DF3               	rlf	??_LCD_Write,f
  1592     04AF                     u584:
  1593     04AF  3EFF               	addlw	-1
  1594     04B0  1D03               	skipz
  1595     04B1  2CAD               	goto	u585
  1596     04B2  0873               	movf	??_LCD_Write,w
  1597     04B3  0480               	iorwf	0,f
  1598     04B4                     l1059:
  1599                           
  1600                           ;lcd.c: 54:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1601     04B4  3006               	movlw	6
  1602     04B5  00F4               	movwf	??_LCD_Write+1
  1603     04B6  3030               	movlw	48
  1604     04B7  00F3               	movwf	??_LCD_Write
  1605     04B8                     u857:
  1606     04B8  0BF3               	decfsz	??_LCD_Write,f
  1607     04B9  2CB8               	goto	u857
  1608     04BA  0BF4               	decfsz	??_LCD_Write+1,f
  1609     04BB  2CB8               	goto	u857
  1610     04BC  0000               	nop
  1611     04BD                     l1061:
  1612                           
  1613                           ;lcd.c: 55:     *(lcd.PORT) &= ~(1 << lcd.EN);
  1614     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1615     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1616     04BF  0820               	movf	_lcd,w
  1617     04C0  0084               	movwf	4
  1618     04C1  1783               	bsf	3,7
  1619     04C2  1C21               	btfss	_lcd+1,0
  1620     04C3  1383               	bcf	3,7
  1621     04C4  3001               	movlw	1
  1622     04C5  00F3               	movwf	??_LCD_Write
  1623     04C6  0C22               	rrf	_lcd+2,w
  1624     04C7  00F4               	movwf	??_LCD_Write+1
  1625     04C8  0CF4               	rrf	??_LCD_Write+1,f
  1626     04C9  0C74               	rrf	??_LCD_Write+1,w
  1627     04CA  3907               	andlw	7
  1628     04CB  3E01               	addlw	1
  1629     04CC  2CCF               	goto	u594
  1630     04CD                     u595:
  1631     04CD  1003               	clrc
  1632     04CE  0DF3               	rlf	??_LCD_Write,f
  1633     04CF                     u594:
  1634     04CF  3EFF               	addlw	-1
  1635     04D0  1D03               	skipz
  1636     04D1  2CCD               	goto	u595
  1637     04D2  0873               	movf	??_LCD_Write,w
  1638     04D3  3AFF               	xorlw	255
  1639     04D4  0580               	andwf	0,f
  1640     04D5                     l30:
  1641     04D5  0008               	return
  1642     04D6                     __end_of_LCD_Write:
  1643                           
  1644                           	psect	text7
  1645     0614                     __ptext7:	
  1646 ;; *************** function _LCD_Out *****************
  1647 ;; Defined at:
  1648 ;;		line 16 in file "lcd.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  c               1    wreg     unsigned char 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  c               1    2[COMMON] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1662 ;;      Params:         0       0       0       0       0
  1663 ;;      Locals:         1       0       0       0       0
  1664 ;;      Temps:          2       0       0       0       0
  1665 ;;      Totals:         3       0       0       0       0
  1666 ;;Total ram usage:        3 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_LCD_Write
  1672 ;;		_LCD_putc
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676     0614                     _LCD_Out:	
  1677                           ;psect for function _LCD_Out
  1678                           
  1679                           
  1680                           ;incstack = 0
  1681                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  1682                           ;LCD_Out@c stored from wreg
  1683     0614  00F2               	movwf	LCD_Out@c
  1684     0615                     l1013:
  1685                           
  1686                           ;lcd.c: 18:     if ( c & 1 ){
  1687     0615  1C72               	btfss	LCD_Out@c,0
  1688     0616  2E18               	goto	u391
  1689     0617  2E19               	goto	u390
  1690     0618                     u391:
  1691     0618  2E2E               	goto	l1017
  1692     0619                     u390:
  1693     0619                     l1015:
  1694                           
  1695                           ;lcd.c: 19:         *(lcd.PORT) |= 1 << lcd.D4;
  1696     0619  1283               	bcf	3,5	;RP0=0, select bank0
  1697     061A  1303               	bcf	3,6	;RP1=0, select bank0
  1698     061B  0820               	movf	_lcd,w
  1699     061C  0084               	movwf	4
  1700     061D  1783               	bsf	3,7
  1701     061E  1C21               	btfss	_lcd+1,0
  1702     061F  1383               	bcf	3,7
  1703     0620  3001               	movlw	1
  1704     0621  00F0               	movwf	??_LCD_Out
  1705     0622  0823               	movf	_lcd+3,w
  1706     0623  3907               	andlw	7
  1707     0624  3E01               	addlw	1
  1708     0625  2E28               	goto	u404
  1709     0626                     u405:
  1710     0626  1003               	clrc
  1711     0627  0DF0               	rlf	??_LCD_Out,f
  1712     0628                     u404:
  1713     0628  3EFF               	addlw	-1
  1714     0629  1D03               	skipz
  1715     062A  2E26               	goto	u405
  1716     062B  0870               	movf	??_LCD_Out,w
  1717     062C  0480               	iorwf	0,f
  1718                           
  1719                           ;lcd.c: 20:     }
  1720     062D  2E43               	goto	l1019
  1721     062E                     l1017:
  1722                           
  1723                           ;lcd.c: 22:          *(lcd.PORT) &= ~(1 << lcd.D4);
  1724     062E  1283               	bcf	3,5	;RP0=0, select bank0
  1725     062F  1303               	bcf	3,6	;RP1=0, select bank0
  1726     0630  0820               	movf	_lcd,w
  1727     0631  0084               	movwf	4
  1728     0632  1783               	bsf	3,7
  1729     0633  1C21               	btfss	_lcd+1,0
  1730     0634  1383               	bcf	3,7
  1731     0635  3001               	movlw	1
  1732     0636  00F0               	movwf	??_LCD_Out
  1733     0637  0823               	movf	_lcd+3,w
  1734     0638  3907               	andlw	7
  1735     0639  3E01               	addlw	1
  1736     063A  2E3D               	goto	u414
  1737     063B                     u415:
  1738     063B  1003               	clrc
  1739     063C  0DF0               	rlf	??_LCD_Out,f
  1740     063D                     u414:
  1741     063D  3EFF               	addlw	-1
  1742     063E  1D03               	skipz
  1743     063F  2E3B               	goto	u415
  1744     0640  0870               	movf	??_LCD_Out,w
  1745     0641  3AFF               	xorlw	255
  1746     0642  0580               	andwf	0,f
  1747     0643                     l1019:
  1748                           
  1749                           ;lcd.c: 25:     if ( c & 2 ) {
  1750     0643  1CF2               	btfss	LCD_Out@c,1
  1751     0644  2E46               	goto	u421
  1752     0645  2E47               	goto	u420
  1753     0646                     u421:
  1754     0646  2E5D               	goto	l1023
  1755     0647                     u420:
  1756     0647                     l1021:
  1757                           
  1758                           ;lcd.c: 26:         *(lcd.PORT) |= 1 << lcd.D5;
  1759     0647  0820               	movf	_lcd,w
  1760     0648  0084               	movwf	4
  1761     0649  1783               	bsf	3,7
  1762     064A  1C21               	btfss	_lcd+1,0
  1763     064B  1383               	bcf	3,7
  1764     064C  3001               	movlw	1
  1765     064D  00F0               	movwf	??_LCD_Out
  1766     064E  0C23               	rrf	_lcd+3,w
  1767     064F  00F1               	movwf	??_LCD_Out+1
  1768     0650  0CF1               	rrf	??_LCD_Out+1,f
  1769     0651  0C71               	rrf	??_LCD_Out+1,w
  1770     0652  3907               	andlw	7
  1771     0653  3E01               	addlw	1
  1772     0654  2E57               	goto	u434
  1773     0655                     u435:
  1774     0655  1003               	clrc
  1775     0656  0DF0               	rlf	??_LCD_Out,f
  1776     0657                     u434:
  1777     0657  3EFF               	addlw	-1
  1778     0658  1D03               	skipz
  1779     0659  2E55               	goto	u435
  1780     065A  0870               	movf	??_LCD_Out,w
  1781     065B  0480               	iorwf	0,f
  1782                           
  1783                           ;lcd.c: 27:     }
  1784     065C  2E73               	goto	l1025
  1785     065D                     l1023:
  1786                           
  1787                           ;lcd.c: 29:         *(lcd.PORT) &= ~(1 << lcd.D5);
  1788     065D  0820               	movf	_lcd,w
  1789     065E  0084               	movwf	4
  1790     065F  1783               	bsf	3,7
  1791     0660  1C21               	btfss	_lcd+1,0
  1792     0661  1383               	bcf	3,7
  1793     0662  3001               	movlw	1
  1794     0663  00F0               	movwf	??_LCD_Out
  1795     0664  0C23               	rrf	_lcd+3,w
  1796     0665  00F1               	movwf	??_LCD_Out+1
  1797     0666  0CF1               	rrf	??_LCD_Out+1,f
  1798     0667  0C71               	rrf	??_LCD_Out+1,w
  1799     0668  3907               	andlw	7
  1800     0669  3E01               	addlw	1
  1801     066A  2E6D               	goto	u444
  1802     066B                     u445:
  1803     066B  1003               	clrc
  1804     066C  0DF0               	rlf	??_LCD_Out,f
  1805     066D                     u444:
  1806     066D  3EFF               	addlw	-1
  1807     066E  1D03               	skipz
  1808     066F  2E6B               	goto	u445
  1809     0670  0870               	movf	??_LCD_Out,w
  1810     0671  3AFF               	xorlw	255
  1811     0672  0580               	andwf	0,f
  1812     0673                     l1025:
  1813                           
  1814                           ;lcd.c: 32:     if ( c & 4 ) {
  1815     0673  1D72               	btfss	LCD_Out@c,2
  1816     0674  2E76               	goto	u451
  1817     0675  2E77               	goto	u450
  1818     0676                     u451:
  1819     0676  2E8A               	goto	l1029
  1820     0677                     u450:
  1821     0677                     l1027:
  1822                           
  1823                           ;lcd.c: 33:         *(lcd.PORT) |= 1 << lcd.D6;
  1824     0677  0820               	movf	_lcd,w
  1825     0678  0084               	movwf	4
  1826     0679  1783               	bsf	3,7
  1827     067A  1C21               	btfss	_lcd+1,0
  1828     067B  1383               	bcf	3,7
  1829     067C  3001               	movlw	1
  1830     067D  00F0               	movwf	??_LCD_Out
  1831     067E  0824               	movf	_lcd+4,w
  1832     067F  3907               	andlw	7
  1833     0680  3E01               	addlw	1
  1834     0681  2E84               	goto	u464
  1835     0682                     u465:
  1836     0682  1003               	clrc
  1837     0683  0DF0               	rlf	??_LCD_Out,f
  1838     0684                     u464:
  1839     0684  3EFF               	addlw	-1
  1840     0685  1D03               	skipz
  1841     0686  2E82               	goto	u465
  1842     0687  0870               	movf	??_LCD_Out,w
  1843     0688  0480               	iorwf	0,f
  1844                           
  1845                           ;lcd.c: 34:     }
  1846     0689  2E9D               	goto	l1031
  1847     068A                     l1029:
  1848                           
  1849                           ;lcd.c: 36:         *(lcd.PORT) &= ~(1 << lcd.D6);
  1850     068A  0820               	movf	_lcd,w
  1851     068B  0084               	movwf	4
  1852     068C  1783               	bsf	3,7
  1853     068D  1C21               	btfss	_lcd+1,0
  1854     068E  1383               	bcf	3,7
  1855     068F  3001               	movlw	1
  1856     0690  00F0               	movwf	??_LCD_Out
  1857     0691  0824               	movf	_lcd+4,w
  1858     0692  3907               	andlw	7
  1859     0693  3E01               	addlw	1
  1860     0694  2E97               	goto	u474
  1861     0695                     u475:
  1862     0695  1003               	clrc
  1863     0696  0DF0               	rlf	??_LCD_Out,f
  1864     0697                     u474:
  1865     0697  3EFF               	addlw	-1
  1866     0698  1D03               	skipz
  1867     0699  2E95               	goto	u475
  1868     069A  0870               	movf	??_LCD_Out,w
  1869     069B  3AFF               	xorlw	255
  1870     069C  0580               	andwf	0,f
  1871     069D                     l1031:
  1872                           
  1873                           ;lcd.c: 39:     if ( c & 8 ) {
  1874     069D  1DF2               	btfss	LCD_Out@c,3
  1875     069E  2EA0               	goto	u481
  1876     069F  2EA1               	goto	u480
  1877     06A0                     u481:
  1878     06A0  2EB7               	goto	l1035
  1879     06A1                     u480:
  1880     06A1                     l1033:
  1881                           
  1882                           ;lcd.c: 40:          *(lcd.PORT) |= 1 << lcd.D7;
  1883     06A1  0820               	movf	_lcd,w
  1884     06A2  0084               	movwf	4
  1885     06A3  1783               	bsf	3,7
  1886     06A4  1C21               	btfss	_lcd+1,0
  1887     06A5  1383               	bcf	3,7
  1888     06A6  3001               	movlw	1
  1889     06A7  00F0               	movwf	??_LCD_Out
  1890     06A8  0C24               	rrf	_lcd+4,w
  1891     06A9  00F1               	movwf	??_LCD_Out+1
  1892     06AA  0CF1               	rrf	??_LCD_Out+1,f
  1893     06AB  0C71               	rrf	??_LCD_Out+1,w
  1894     06AC  3907               	andlw	7
  1895     06AD  3E01               	addlw	1
  1896     06AE  2EB1               	goto	u494
  1897     06AF                     u495:
  1898     06AF  1003               	clrc
  1899     06B0  0DF0               	rlf	??_LCD_Out,f
  1900     06B1                     u494:
  1901     06B1  3EFF               	addlw	-1
  1902     06B2  1D03               	skipz
  1903     06B3  2EAF               	goto	u495
  1904     06B4  0870               	movf	??_LCD_Out,w
  1905     06B5  0480               	iorwf	0,f
  1906                           
  1907                           ;lcd.c: 41:     }
  1908     06B6  2ECD               	goto	l27
  1909     06B7                     l1035:
  1910                           
  1911                           ;lcd.c: 43:          *(lcd.PORT) &= ~(1 << lcd.D7);
  1912     06B7  0820               	movf	_lcd,w
  1913     06B8  0084               	movwf	4
  1914     06B9  1783               	bsf	3,7
  1915     06BA  1C21               	btfss	_lcd+1,0
  1916     06BB  1383               	bcf	3,7
  1917     06BC  3001               	movlw	1
  1918     06BD  00F0               	movwf	??_LCD_Out
  1919     06BE  0C24               	rrf	_lcd+4,w
  1920     06BF  00F1               	movwf	??_LCD_Out+1
  1921     06C0  0CF1               	rrf	??_LCD_Out+1,f
  1922     06C1  0C71               	rrf	??_LCD_Out+1,w
  1923     06C2  3907               	andlw	7
  1924     06C3  3E01               	addlw	1
  1925     06C4  2EC7               	goto	u504
  1926     06C5                     u505:
  1927     06C5  1003               	clrc
  1928     06C6  0DF0               	rlf	??_LCD_Out,f
  1929     06C7                     u504:
  1930     06C7  3EFF               	addlw	-1
  1931     06C8  1D03               	skipz
  1932     06C9  2EC5               	goto	u505
  1933     06CA  0870               	movf	??_LCD_Out,w
  1934     06CB  3AFF               	xorlw	255
  1935     06CC  0580               	andwf	0,f
  1936     06CD                     l27:
  1937     06CD  0008               	return
  1938     06CE                     __end_of_LCD_Out:
  1939     0002                     ___latbits      equ	2
  1940     007E                     btemp           set	126	;btemp
  1941     007E                     wtemp0          set	126
  1942                           
  1943                           	psect	config
  1944                           
  1945                           ;Config register CONFIG1 @ 0x2007
  1946                           ;	Oscillator Selection bits
  1947                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1948                           ;	Watchdog Timer Enable bit
  1949                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1950                           ;	Power-up Timer Enable bit
  1951                           ;	PWRTE = OFF, PWRT disabled
  1952                           ;	RE3/MCLR pin function select bit
  1953                           ;	MCLRE = 0x1, unprogrammed default
  1954                           ;	Code Protection bit
  1955                           ;	CP = OFF, Program memory code protection is disabled
  1956                           ;	Data Code Protection bit
  1957                           ;	CPD = OFF, Data memory code protection is disabled
  1958                           ;	Brown Out Reset Selection bits
  1959                           ;	BOREN = ON, BOR enabled
  1960                           ;	Internal External Switchover bit
  1961                           ;	IESO = 0x1, unprogrammed default
  1962                           ;	Fail-Safe Clock Monitor Enabled bit
  1963                           ;	FCMEN = 0x1, unprogrammed default
  1964                           ;	Low Voltage Programming Enable bit
  1965                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1966                           ;	In-Circuit Debugger Mode bit
  1967                           ;	DEBUG = 0x1, unprogrammed default
  1968     2007                     	org	8199
  1969     2007  2FF1               	dw	12273
  1970                           
  1971                           ;Config register CONFIG2 @ 0x2008
  1972                           ;	Brown-out Reset Selection bit
  1973                           ;	BOR4V = 0x1, unprogrammed default
  1974                           ;	Flash Program Memory Self Write Enable bits
  1975                           ;	WRT = OFF, Write protection off
  1976     2008                     	org	8200
  1977     2008  3FFF               	dw	16383

Data Sizes:
    Strings     58
    Constant    0
    Data        5
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    lcd$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[2]), STR_2(CODE[2]), STR_3(CODE[10]), STR_4(CODE[10]), 
		 -> STR_5(CODE[10]), STR_6(CODE[14]), STR_7(CODE[10]), STR_8(CODE[14]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _LED2->_LCD_putrs
    _LED1->_LCD_putrs
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1467
                                              0 BANK0      2     2      0
                           _LCD_Init
                          _LCD_Write
                          _LCD_putrs
                               _LED1
                               _LED2
 ---------------------------------------------------------------------------------
 (1) _LED2                                                 3     3      0     417
                                              9 COMMON     3     3      0
                          _LCD_Write
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (1) _LED1                                                 3     3      0     417
                                              9 COMMON     3     3      0
                          _LCD_Write
                          _LCD_putrs
 ---------------------------------------------------------------------------------
 (2) _LCD_putrs                                            3     2      1     272
                                              6 COMMON     3     2      1
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (3) _LCD_putc                                             3     3      0     174
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     216
                                              6 COMMON     8     3      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (2) _LCD_Write                                            3     3      0     145
                                              3 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (4) _LCD_Out                                              3     3      0     116
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
   _LCD_putrs
     _LCD_putc
       _LCD_Out
   _LED1
     _LCD_Write
     _LCD_putrs
   _LED2
     _LCD_Write
     _LCD_putrs

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      2       8     10.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      22      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 12 18:18:26 2025

                      pc 0002                       l30 04D5                       l27 06CD  
                     l51 0607                       l39 0613                       l55 0567  
                     l67 0418                       fsr 0004                      l200 0425  
                    l120 0745                      l104 06FE                      l140 0779  
                    l221 044D                      l128 0772                      l217 0438  
                    l137 0772                      l218 044C                      l154 0785  
                    l171 0798                      l237 0459                      l254 046C  
                    l255 0480                      l184 0419                      l177 07CD  
                    u420 0647                      u404 0628                      u421 0646  
                    u405 0626                      u414 063D                      u415 063B  
                    u504 06C7                      u600 0418                      u505 06C5  
                    u601 0417                      u450 0677                      u434 0657  
                    u610 0585                      u514 04E6                      u451 0676  
                    u435 0655                      u611 0584                      u515 04E4  
                    u444 066D                      u620 0593                      u700 0715  
                    u445 066B                      u621 0592                      u525 04EE  
                    u701 0714                      u390 0619                      u630 05A1  
                    u534 050C                      u710 0727                      u391 0618  
                    u631 05A0                      u615 0581                      u535 050A  
                    u711 0726                      u480 06A1                      u464 0684  
                    u544 0527                      u720 0739                      u481 06A0  
                    u465 0682                      u625 058F                      u545 0525  
                    u721 0738                      u474 0697                      u554 0546  
                    u730 0753                      u475 0695                      u635 059D  
                    u555 0544                      u731 0752                      u564 0561  
                    u740 0765                      u660 06F6                      u645 05F4  
                    u565 055F                      u741 0764                      u661 06F5  
                    u494 06B1                      u574 0491                      u750 07AF  
                    u670 06FC                      u495 06AF                      u575 048F  
                    u807 0513                      u751 07AE                      u671 06FA  
                    u584 04AF                      u760 07C2                      u680 06FD  
                    u585 04AD                      u817 054D                      u761 07C1  
                    u594 04CF                      u690 0703                      u595 04CD  
                    u827 05A8                      u691 0702                      u837 05B7  
                    u847 05C5                      u857 04B8                      u777 07A5  
                    u787 0479                      u797 0445          LCD_Init@display 0076  
                    _lcd 0020                      fsr0 0004                      indf 0000  
        __end_of_LCD_Out 06CE                     l1021 0647                     l1013 0615  
                   l1101 05E2                     l1031 069D                     l1023 065D  
                   l1015 0619                     l1103 05E8                     l1033 06A1  
                   l1025 0673                     l1017 062E                     l1113 05F1  
                   l1105 05EE                     l1041 04FA                     l1035 06B7  
                   l1027 0677                     l1019 0643                     l1107 05F0  
                   l1051 054F                     l1043 0511                     l1029 068A  
                   l1061 04BD                     l1053 0482                     l1045 0515  
                   l1037 04D7                     l1133 043F                     l1117 0419  
                   l1221 07BB                     l1055 0497                     l1071 0568  
                   l1047 052D                     l1039 04EB                     l1063 03F5  
                   l1127 042C                     l1151 0473                     l1135 044D  
                   l1223 07C2                     l1215 079F                     l1057 049D  
                   l1081 0597                     l1073 0579                     l1049 0534  
                   l1065 03F8                     l1145 0460                     l1225 07C8  
                   l1217 07A9                     l1209 078C                     l1161 06CE  
                   l1059 04B4                     l1091 05C1                     l1083 05A1  
                   l1075 0585                     l1067 0405                     l1219 07AF  
                   l1171 06F0                     l1163 06D2                     l1093 05CA  
                   l1085 05A4                     l1077 0589                     l1069 040B  
                   l1181 0722                     l1173 06F6                     l1165 06D6  
                   l1095 05D0                     l1087 05AD                     l1079 0593  
                   l1191 0753                     l1183 0727                     l1175 0703  
                   l1167 06D8                     l1097 05D6                     l1089 05B3  
                   l1193 0760                     l1185 0734                     l1177 0710  
                   l1169 06DB                     l1099 05DC                     l1195 0765  
                   l1187 0739                     l1179 0715                     l1189 074C  
                   STR_1 0041                     STR_2 003F                     STR_3 002B  
                   STR_4 0035                     STR_5 0017                     STR_6 0009  
                   STR_7 0021                     STR_8 0009                     _LED1 0419  
                   _LED2 044D                     _main 06CE                     btemp 007E  
                   start 0000              LCD_Init@cmd 007D                    ?_LED1 0070  
                  ?_LED2 0070         __end_of_LCD_Init 0614         __end_of_LCD_putc 0568  
                  ?_main 0070                    _ANSEL 0188                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _boton 0027  
                  pclath 000A                    status 0003                    wtemp0 007E  
           __end_of_LED1 044D             __end_of_LED2 0481          __initialization 07DD  
           __end_of_main 07DD                   ??_LED1 0079                   ??_LED2 0079  
                 ??_main 0025                ??_LCD_Out 0070        __end_of_LCD_Write 04D6  
      __end_of_LCD_putrs 0419                   _ANSELH 0189  __end_of__initialization 07FC  
              ?_LCD_Init 0076                ?_LCD_putc 0070           __pcstackCOMMON 0070  
           __pidataBANK0 03F0                LCD_putc@c 0075               __pbssBANK0 0027  
             ??_LCD_Init 007B               ??_LCD_putc 0073               __pmaintext 06CE  
                _LCD_Out 0614               __stringtab 0003                  __ptext1 044D  
                __ptext2 0419                  __ptext3 03F5                  __ptext4 04D6  
                __ptext5 0568                  __ptext6 0481                  __ptext7 0614  
              _LCD_Write 0481     end_of_initialization 07FC                _LCD_putrs 03F5  
              _PORTBbits 0006               ?_LCD_Write 0070               ?_LCD_putrs 0076  
             LCD_Write@c 0075      start_initialization 07DD               LCD_putrs@a 0076  
             LCD_putrs@i 0077              __pdataBANK0 0020                 ?_LCD_Out 0070  
              ___latbits 0002            __pcstackBANK0 0025                 LCD_Out@c 0072  
            ??_LCD_Write 0073              ??_LCD_putrs 0077                __pstrings 0003  
               _LCD_Init 0568                 _LCD_putc 04D6              __stringbase 0008  
     __end_of__stringtab 0009                stringcode 0003               _OPTION_REG 0081  
               stringdir 0003                 stringtab 0003  
