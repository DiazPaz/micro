

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Jun 17 17:05:21 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,space=0,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=3
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=1
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,space=0,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39     0000                     
    40                           ; Generated 26/03/2025 GMT
    41                           ; 
    42                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74     0004                     fsr             equ	4
    75     0004                     fsr0            equ	4
    76     0000                     indf            equ	0
    77     0000                     indf0           equ	0
    78     0002                     pc              equ	2
    79     0002                     pcl             equ	2
    80     000A                     pclath          equ	10
    81     0003                     status          equ	3
    82     0000                     INDF            equ	0	;# 
    83     0001                     TMR0            equ	1	;# 
    84     0002                     PCL             equ	2	;# 
    85     0003                     STATUS          equ	3	;# 
    86     0004                     FSR             equ	4	;# 
    87     0005                     PORTA           equ	5	;# 
    88     0006                     PORTB           equ	6	;# 
    89     0007                     PORTC           equ	7	;# 
    90     0008                     PORTD           equ	8	;# 
    91     0009                     PORTE           equ	9	;# 
    92     000A                     PCLATH          equ	10	;# 
    93     000B                     INTCON          equ	11	;# 
    94     000C                     PIR1            equ	12	;# 
    95     000D                     PIR2            equ	13	;# 
    96     000E                     TMR1            equ	14	;# 
    97     000E                     TMR1L           equ	14	;# 
    98     000F                     TMR1H           equ	15	;# 
    99     0010                     T1CON           equ	16	;# 
   100     0011                     TMR2            equ	17	;# 
   101     0012                     T2CON           equ	18	;# 
   102     0013                     SSPBUF          equ	19	;# 
   103     0014                     SSPCON          equ	20	;# 
   104     0015                     CCPR1           equ	21	;# 
   105     0015                     CCPR1L          equ	21	;# 
   106     0016                     CCPR1H          equ	22	;# 
   107     0017                     CCP1CON         equ	23	;# 
   108     0018                     RCSTA           equ	24	;# 
   109     0019                     TXREG           equ	25	;# 
   110     001A                     RCREG           equ	26	;# 
   111     001B                     CCPR2           equ	27	;# 
   112     001B                     CCPR2L          equ	27	;# 
   113     001C                     CCPR2H          equ	28	;# 
   114     001D                     CCP2CON         equ	29	;# 
   115     001E                     ADRESH          equ	30	;# 
   116     001F                     ADCON0          equ	31	;# 
   117     0081                     OPTION_REG      equ	129	;# 
   118     0085                     TRISA           equ	133	;# 
   119     0086                     TRISB           equ	134	;# 
   120     0087                     TRISC           equ	135	;# 
   121     0088                     TRISD           equ	136	;# 
   122     0089                     TRISE           equ	137	;# 
   123     008C                     PIE1            equ	140	;# 
   124     008D                     PIE2            equ	141	;# 
   125     008E                     PCON            equ	142	;# 
   126     008F                     OSCCON          equ	143	;# 
   127     0090                     OSCTUNE         equ	144	;# 
   128     0091                     SSPCON2         equ	145	;# 
   129     0092                     PR2             equ	146	;# 
   130     0093                     SSPADD          equ	147	;# 
   131     0093                     SSPMSK          equ	147	;# 
   132     0093                     MSK             equ	147	;# 
   133     0094                     SSPSTAT         equ	148	;# 
   134     0095                     WPUB            equ	149	;# 
   135     0096                     IOCB            equ	150	;# 
   136     0097                     VRCON           equ	151	;# 
   137     0098                     TXSTA           equ	152	;# 
   138     0099                     SPBRG           equ	153	;# 
   139     009A                     SPBRGH          equ	154	;# 
   140     009B                     PWM1CON         equ	155	;# 
   141     009C                     ECCPAS          equ	156	;# 
   142     009D                     PSTRCON         equ	157	;# 
   143     009E                     ADRESL          equ	158	;# 
   144     009F                     ADCON1          equ	159	;# 
   145     0105                     WDTCON          equ	261	;# 
   146     0107                     CM1CON0         equ	263	;# 
   147     0108                     CM2CON0         equ	264	;# 
   148     0109                     CM2CON1         equ	265	;# 
   149     010C                     EEDATA          equ	268	;# 
   150     010C                     EEDAT           equ	268	;# 
   151     010D                     EEADR           equ	269	;# 
   152     010E                     EEDATH          equ	270	;# 
   153     010F                     EEADRH          equ	271	;# 
   154     0185                     SRCON           equ	389	;# 
   155     0187                     BAUDCTL         equ	391	;# 
   156     0188                     ANSEL           equ	392	;# 
   157     0189                     ANSELH          equ	393	;# 
   158     018C                     EECON1          equ	396	;# 
   159     018D                     EECON2          equ	397	;# 
   160     0000                     INDF            equ	0	;# 
   161     0001                     TMR0            equ	1	;# 
   162     0002                     PCL             equ	2	;# 
   163     0003                     STATUS          equ	3	;# 
   164     0004                     FSR             equ	4	;# 
   165     0005                     PORTA           equ	5	;# 
   166     0006                     PORTB           equ	6	;# 
   167     0007                     PORTC           equ	7	;# 
   168     0008                     PORTD           equ	8	;# 
   169     0009                     PORTE           equ	9	;# 
   170     000A                     PCLATH          equ	10	;# 
   171     000B                     INTCON          equ	11	;# 
   172     000C                     PIR1            equ	12	;# 
   173     000D                     PIR2            equ	13	;# 
   174     000E                     TMR1            equ	14	;# 
   175     000E                     TMR1L           equ	14	;# 
   176     000F                     TMR1H           equ	15	;# 
   177     0010                     T1CON           equ	16	;# 
   178     0011                     TMR2            equ	17	;# 
   179     0012                     T2CON           equ	18	;# 
   180     0013                     SSPBUF          equ	19	;# 
   181     0014                     SSPCON          equ	20	;# 
   182     0015                     CCPR1           equ	21	;# 
   183     0015                     CCPR1L          equ	21	;# 
   184     0016                     CCPR1H          equ	22	;# 
   185     0017                     CCP1CON         equ	23	;# 
   186     0018                     RCSTA           equ	24	;# 
   187     0019                     TXREG           equ	25	;# 
   188     001A                     RCREG           equ	26	;# 
   189     001B                     CCPR2           equ	27	;# 
   190     001B                     CCPR2L          equ	27	;# 
   191     001C                     CCPR2H          equ	28	;# 
   192     001D                     CCP2CON         equ	29	;# 
   193     001E                     ADRESH          equ	30	;# 
   194     001F                     ADCON0          equ	31	;# 
   195     0081                     OPTION_REG      equ	129	;# 
   196     0085                     TRISA           equ	133	;# 
   197     0086                     TRISB           equ	134	;# 
   198     0087                     TRISC           equ	135	;# 
   199     0088                     TRISD           equ	136	;# 
   200     0089                     TRISE           equ	137	;# 
   201     008C                     PIE1            equ	140	;# 
   202     008D                     PIE2            equ	141	;# 
   203     008E                     PCON            equ	142	;# 
   204     008F                     OSCCON          equ	143	;# 
   205     0090                     OSCTUNE         equ	144	;# 
   206     0091                     SSPCON2         equ	145	;# 
   207     0092                     PR2             equ	146	;# 
   208     0093                     SSPADD          equ	147	;# 
   209     0093                     SSPMSK          equ	147	;# 
   210     0093                     MSK             equ	147	;# 
   211     0094                     SSPSTAT         equ	148	;# 
   212     0095                     WPUB            equ	149	;# 
   213     0096                     IOCB            equ	150	;# 
   214     0097                     VRCON           equ	151	;# 
   215     0098                     TXSTA           equ	152	;# 
   216     0099                     SPBRG           equ	153	;# 
   217     009A                     SPBRGH          equ	154	;# 
   218     009B                     PWM1CON         equ	155	;# 
   219     009C                     ECCPAS          equ	156	;# 
   220     009D                     PSTRCON         equ	157	;# 
   221     009E                     ADRESL          equ	158	;# 
   222     009F                     ADCON1          equ	159	;# 
   223     0105                     WDTCON          equ	261	;# 
   224     0107                     CM1CON0         equ	263	;# 
   225     0108                     CM2CON0         equ	264	;# 
   226     0109                     CM2CON1         equ	265	;# 
   227     010C                     EEDATA          equ	268	;# 
   228     010C                     EEDAT           equ	268	;# 
   229     010D                     EEADR           equ	269	;# 
   230     010E                     EEDATH          equ	270	;# 
   231     010F                     EEADRH          equ	271	;# 
   232     0185                     SRCON           equ	389	;# 
   233     0187                     BAUDCTL         equ	391	;# 
   234     0188                     ANSEL           equ	392	;# 
   235     0189                     ANSELH          equ	393	;# 
   236     018C                     EECON1          equ	396	;# 
   237     018D                     EECON2          equ	397	;# 
   238     0000                     INDF            equ	0	;# 
   239     0001                     TMR0            equ	1	;# 
   240     0002                     PCL             equ	2	;# 
   241     0003                     STATUS          equ	3	;# 
   242     0004                     FSR             equ	4	;# 
   243     0005                     PORTA           equ	5	;# 
   244     0006                     PORTB           equ	6	;# 
   245     0007                     PORTC           equ	7	;# 
   246     0008                     PORTD           equ	8	;# 
   247     0009                     PORTE           equ	9	;# 
   248     000A                     PCLATH          equ	10	;# 
   249     000B                     INTCON          equ	11	;# 
   250     000C                     PIR1            equ	12	;# 
   251     000D                     PIR2            equ	13	;# 
   252     000E                     TMR1            equ	14	;# 
   253     000E                     TMR1L           equ	14	;# 
   254     000F                     TMR1H           equ	15	;# 
   255     0010                     T1CON           equ	16	;# 
   256     0011                     TMR2            equ	17	;# 
   257     0012                     T2CON           equ	18	;# 
   258     0013                     SSPBUF          equ	19	;# 
   259     0014                     SSPCON          equ	20	;# 
   260     0015                     CCPR1           equ	21	;# 
   261     0015                     CCPR1L          equ	21	;# 
   262     0016                     CCPR1H          equ	22	;# 
   263     0017                     CCP1CON         equ	23	;# 
   264     0018                     RCSTA           equ	24	;# 
   265     0019                     TXREG           equ	25	;# 
   266     001A                     RCREG           equ	26	;# 
   267     001B                     CCPR2           equ	27	;# 
   268     001B                     CCPR2L          equ	27	;# 
   269     001C                     CCPR2H          equ	28	;# 
   270     001D                     CCP2CON         equ	29	;# 
   271     001E                     ADRESH          equ	30	;# 
   272     001F                     ADCON0          equ	31	;# 
   273     0081                     OPTION_REG      equ	129	;# 
   274     0085                     TRISA           equ	133	;# 
   275     0086                     TRISB           equ	134	;# 
   276     0087                     TRISC           equ	135	;# 
   277     0088                     TRISD           equ	136	;# 
   278     0089                     TRISE           equ	137	;# 
   279     008C                     PIE1            equ	140	;# 
   280     008D                     PIE2            equ	141	;# 
   281     008E                     PCON            equ	142	;# 
   282     008F                     OSCCON          equ	143	;# 
   283     0090                     OSCTUNE         equ	144	;# 
   284     0091                     SSPCON2         equ	145	;# 
   285     0092                     PR2             equ	146	;# 
   286     0093                     SSPADD          equ	147	;# 
   287     0093                     SSPMSK          equ	147	;# 
   288     0093                     MSK             equ	147	;# 
   289     0094                     SSPSTAT         equ	148	;# 
   290     0095                     WPUB            equ	149	;# 
   291     0096                     IOCB            equ	150	;# 
   292     0097                     VRCON           equ	151	;# 
   293     0098                     TXSTA           equ	152	;# 
   294     0099                     SPBRG           equ	153	;# 
   295     009A                     SPBRGH          equ	154	;# 
   296     009B                     PWM1CON         equ	155	;# 
   297     009C                     ECCPAS          equ	156	;# 
   298     009D                     PSTRCON         equ	157	;# 
   299     009E                     ADRESL          equ	158	;# 
   300     009F                     ADCON1          equ	159	;# 
   301     0105                     WDTCON          equ	261	;# 
   302     0107                     CM1CON0         equ	263	;# 
   303     0108                     CM2CON0         equ	264	;# 
   304     0109                     CM2CON1         equ	265	;# 
   305     010C                     EEDATA          equ	268	;# 
   306     010C                     EEDAT           equ	268	;# 
   307     010D                     EEADR           equ	269	;# 
   308     010E                     EEDATH          equ	270	;# 
   309     010F                     EEADRH          equ	271	;# 
   310     0185                     SRCON           equ	389	;# 
   311     0187                     BAUDCTL         equ	391	;# 
   312     0188                     ANSEL           equ	392	;# 
   313     0189                     ANSELH          equ	393	;# 
   314     018C                     EECON1          equ	396	;# 
   315     018D                     EECON2          equ	397	;# 
   316                           
   317                           	psect	idataBANK0
   318     0777                     __pidataBANK0:
   319                           
   320                           ;initializer for _lcd
   321     0777  3407               	retlw	7
   322     0778  3400               	retlw	0
   323     0779  341A               	retlw	26
   324     077A  342C               	retlw	44
   325     077B  343E               	retlw	62
   326     0006                     _PORTB          set	6
   327     0005                     _PORTA          set	5
   328     0001                     _TMR0           set	1
   329     0007                     _PORTC          set	7
   330     005A                     _T0IF           set	90
   331     005F                     _GIE            set	95
   332     005D                     _T0IE           set	93
   333     0087                     _TRISC          set	135
   334     0086                     _TRISB          set	134
   335     0085                     _TRISA          set	133
   336     0081                     _OPTION_REG     set	129
   337                           
   338                           	psect	strings
   339     0746                     __pstrings:
   340     0746                     stringtab:
   341     0746                     __stringtab:
   342     0746                     stringcode:	
   343                           ;	String table - string pointers are 1 byte each
   344                           
   345     0746                     stringdir:
   346     0746  3007               	movlw	high stringdir
   347     0747  008A               	movwf	10
   348     0748  0804               	movf	4,w
   349     0749  0A84               	incf	4,f
   350     074A  0782               	addwf	2,f
   351     074B                     __stringbase:
   352     074B  3400               	retlw	0
   353     074C                     __end_of__stringtab:
   354     074C                     STR_3:
   355     074C  3425               	retlw	37	;'%'
   356     074D  3430               	retlw	48	;'0'
   357     074E  3432               	retlw	50	;'2'
   358     074F  3475               	retlw	117	;'u'
   359     0750  343A               	retlw	58	;':'
   360     0751  3425               	retlw	37	;'%'
   361     0752  3430               	retlw	48	;'0'
   362     0753  3432               	retlw	50	;'2'
   363     0754  3475               	retlw	117	;'u'
   364     0755  3400               	retlw	0
   365     0756                     STR_1:
   366     0756  3454               	retlw	84	;'T'
   367     0757  3469               	retlw	105	;'i'
   368     0758  3465               	retlw	101	;'e'
   369     0759  346D               	retlw	109	;'m'
   370     075A  3470               	retlw	112	;'p'
   371     075B  346F               	retlw	111	;'o'
   372     075C  343A               	retlw	58	;':'
   373     075D  3400               	retlw	0
   374     075E                     STR_2:
   375     075E  3430               	retlw	48	;'0'
   376     075F  3430               	retlw	48	;'0'
   377     0760  343A               	retlw	58	;':'
   378     0761  3430               	retlw	48	;'0'
   379     0762  3430               	retlw	48	;'0'
   380     0763  3400               	retlw	0
   381                           
   382                           	psect	cinit
   383     000F                     start_initialization:	
   384                           ; #config settings
   385                           
   386     000F                     __initialization:
   387                           
   388                           ; Initialize objects allocated to BANK0
   389     000F  120A  118A  2777  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   390     0014  00E9               	movwf	__pdataBANK0& (0+127)
   391     0015  120A  118A  2778  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   392     001A  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   393     001B  120A  118A  2779  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   394     0020  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   395     0021  120A  118A  277A  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   396     0026  00EC               	movwf	(__pdataBANK0+3)& (0+127)
   397     0027  120A  118A  277B  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   398     002C  00ED               	movwf	(__pdataBANK0+4)& (0+127)
   399                           
   400                           ; Clear objects allocated to BANK1
   401     002D  1383               	bcf	3,7	;select IRP bank0
   402     002E  30A0               	movlw	low __pbssBANK1
   403     002F  0084               	movwf	4
   404     0030  30C6               	movlw	low (__pbssBANK1+38)
   405     0031  120A  118A  276F  120A  118A  	fcall	clear_ram0
   406                           
   407                           ; Clear objects allocated to BANK0
   408     0036  01E2               	clrf	__pbssBANK0& (0+127)
   409     0037  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   410     0038  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   411     0039  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   412     003A  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   413     003B  01E7               	clrf	(__pbssBANK0+5)& (0+127)
   414     003C  01E8               	clrf	(__pbssBANK0+6)& (0+127)
   415                           
   416                           ; Clear objects allocated to COMMON
   417     003D  01FA               	clrf	__pbssCOMMON& (0+127)
   418     003E  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   419     003F                     end_of_initialization:	
   420                           ;End of C runtime variable initialization code
   421                           
   422     003F                     __end_of__initialization:
   423     003F  0183               	clrf	3
   424     0040  120A  118A  28FD   	ljmp	_main	;jump to C main() function
   425                           
   426                           	psect	bssCOMMON
   427     007A                     __pbssCOMMON:
   428     007A                     _count:
   429     007A                     	ds	2
   430                           
   431                           	psect	bssBANK0
   432     0062                     __pbssBANK0:
   433     0062                     _width:
   434     0062                     	ds	2
   435     0064                     _prec:
   436     0064                     	ds	2
   437     0066                     _timer:
   438     0066                     	ds	2
   439     0068                     _flags:
   440     0068                     	ds	1
   441                           
   442                           	psect	dataBANK0
   443     0069                     __pdataBANK0:
   444     0069                     _lcd:
   445     0069                     	ds	5
   446                           
   447                           	psect	bssBANK1
   448     00A0                     __pbssBANK1:
   449     00A0                     _dbuf:
   450     00A0                     	ds	32
   451     00C0                     _exec:
   452     00C0                     	ds	6
   453                           
   454                           	psect	clrtext
   455     076F                     clear_ram0:	
   456                           ;	Called with FSR containing the base address, and
   457                           ;	W with the last address+1
   458                           
   459     076F  0064               	clrwdt	;clear the watchdog before getting into this loop
   460     0770                     clrloop0:
   461     0770  0180               	clrf	0	;clear RAM location pointed to by FSR
   462     0771  0A84               	incf	4,f	;increment pointer
   463     0772  0604               	xorwf	4,w	;XOR with final address
   464     0773  1903               	btfsc	3,2	;have we reached the end yet?
   465     0774  3400               	retlw	0	;all done for this memory range, return
   466     0775  0604               	xorwf	4,w	;XOR again to restore value
   467     0776  2F70               	goto	clrloop0	;do the next byte
   468                           
   469                           	psect	cstackBANK1
   470     00C6                     __pcstackBANK1:
   471     00C6                     _main$892:
   472                           
   473                           ; 2 bytes @ 0x0
   474     00C6                     	ds	2
   475     00C8                     _main$893:
   476                           
   477                           ; 2 bytes @ 0x2
   478     00C8                     	ds	2
   479                           
   480                           	psect	cstackCOMMON
   481     0070                     __pcstackCOMMON:
   482     0070                     ?_LCD_Write:
   483     0070                     ?_putch:	
   484                           ; 1 bytes @ 0x0
   485                           
   486     0070                     ?_TMR0_init:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0070                     ?_ICR:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0070                     ?_main:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0070                     ?_LCD_Out:	
   496                           ; 1 bytes @ 0x0
   497                           
   498     0070                     ?_LCD_putc:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     putch@c:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     ??_ICR:	
   505                           ; 1 bytes @ 0x0
   506                           
   507                           
   508                           ; 1 bytes @ 0x0
   509     0070                     	ds	2
   510     0072                     ?_fputc:
   511     0072                     ?___wmul:	
   512                           ; 2 bytes @ 0x2
   513                           
   514     0072                     ?___lwdiv:	
   515                           ; 2 bytes @ 0x2
   516                           
   517     0072                     ?___lwmod:	
   518                           ; 2 bytes @ 0x2
   519                           
   520     0072                     ___wmul@multiplier:	
   521                           ; 2 bytes @ 0x2
   522                           
   523     0072                     ___lwdiv@divisor:	
   524                           ; 2 bytes @ 0x2
   525                           
   526     0072                     ___lwmod@divisor:	
   527                           ; 2 bytes @ 0x2
   528                           
   529     0072                     fputc@c:	
   530                           ; 2 bytes @ 0x2
   531                           
   532     0072                     ??_putch:	
   533                           ; 2 bytes @ 0x2
   534                           
   535     0072                     ??_TMR0_init:	
   536                           ; 1 bytes @ 0x2
   537                           
   538     0072                     ??_LCD_Out:	
   539                           ; 1 bytes @ 0x2
   540                           
   541                           
   542                           ; 1 bytes @ 0x2
   543     0072                     	ds	2
   544     0074                     LCD_Out@c:
   545     0074                     ___wmul@multiplicand:	
   546                           ; 1 bytes @ 0x4
   547                           
   548     0074                     ___lwdiv@dividend:	
   549                           ; 2 bytes @ 0x4
   550                           
   551     0074                     ___lwmod@dividend:	
   552                           ; 2 bytes @ 0x4
   553                           
   554     0074                     fputc@fp:	
   555                           ; 2 bytes @ 0x4
   556                           
   557                           
   558                           ; 2 bytes @ 0x4
   559     0074                     	ds	1
   560     0075                     ??_LCD_Write:
   561     0075                     ??_LCD_putc:	
   562                           ; 1 bytes @ 0x5
   563                           
   564                           
   565                           ; 1 bytes @ 0x5
   566     0075                     	ds	1
   567     0076                     ?_fputs:
   568     0076                     ___lwdiv@counter:	
   569                           ; 2 bytes @ 0x6
   570                           
   571     0076                     ___lwmod@counter:	
   572                           ; 1 bytes @ 0x6
   573                           
   574     0076                     fputs@s:	
   575                           ; 1 bytes @ 0x6
   576                           
   577     0076                     ___wmul@product:	
   578                           ; 1 bytes @ 0x6
   579                           
   580     0076                     ??___wmul:	
   581                           ; 2 bytes @ 0x6
   582                           
   583     0076                     ??___lwdiv:	
   584                           ; 1 bytes @ 0x6
   585                           
   586     0076                     ??___lwmod:	
   587                           ; 1 bytes @ 0x6
   588                           
   589                           
   590                           ; 1 bytes @ 0x6
   591     0076                     	ds	1
   592     0077                     LCD_Write@c:
   593     0077                     LCD_putc@c:	
   594                           ; 1 bytes @ 0x7
   595                           
   596     0077                     ___lwdiv@quotient:	
   597                           ; 1 bytes @ 0x7
   598                           
   599     0077                     fputs@fp:	
   600                           ; 2 bytes @ 0x7
   601                           
   602                           
   603                           ; 2 bytes @ 0x7
   604     0077                     	ds	1
   605     0078                     ?_LCD_putrs:
   606     0078                     ?_LCD_puts:	
   607                           ; 1 bytes @ 0x8
   608                           
   609     0078                     ?_read_prec_or_width:	
   610                           ; 1 bytes @ 0x8
   611                           
   612     0078                     LCD_puts@a:	
   613                           ; 2 bytes @ 0x8
   614                           
   615     0078                     LCD_putrs@a:	
   616                           ; 1 bytes @ 0x8
   617                           
   618     0078                     read_prec_or_width@fmt:	
   619                           ; 1 bytes @ 0x8
   620                           
   621     0078                     ??_LCD_Init:	
   622                           ; 1 bytes @ 0x8
   623                           
   624                           
   625                           ; 1 bytes @ 0x8
   626     0078                     	ds	1
   627     0079                     read_prec_or_width@ap:
   628     0079                     ??_LCD_putrs:	
   629                           ; 1 bytes @ 0x9
   630                           
   631     0079                     ??_LCD_puts:	
   632                           ; 1 bytes @ 0x9
   633                           
   634     0079                     ??_pad:	
   635                           ; 1 bytes @ 0x9
   636                           
   637                           
   638                           ; 1 bytes @ 0x9
   639     0079                     	ds	1
   640     007A                     ??_vfprintf:
   641     007A                     ??_main:	
   642                           ; 1 bytes @ 0xA
   643                           
   644     007A                     ??_utoa:	
   645                           ; 1 bytes @ 0xA
   646                           
   647     007A                     ??_read_prec_or_width:	
   648                           ; 1 bytes @ 0xA
   649                           
   650                           
   651                           	psect	cstackBANK0
   652     0020                     __pcstackBANK0:	
   653                           ; 1 bytes @ 0xA
   654                           
   655     0020                     ?_LCD_Init:
   656     0020                     read_prec_or_width@c:	
   657                           ; 1 bytes @ 0x0
   658                           
   659     0020                     LCD_puts@i:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0020                     LCD_putrs@i:	
   663                           ; 2 bytes @ 0x0
   664                           
   665     0020                     LCD_Init@display:	
   666                           ; 2 bytes @ 0x0
   667                           
   668     0020                     ??_fputc:	
   669                           ; 5 bytes @ 0x0
   670                           
   671                           
   672                           ; 1 bytes @ 0x0
   673     0020                     	ds	1
   674     0021                     read_prec_or_width@n:
   675                           
   676                           ; 2 bytes @ 0x1
   677     0021                     	ds	4
   678     0025                     LCD_Init@cmd:
   679                           
   680                           ; 1 bytes @ 0x5
   681     0025                     	ds	4
   682     0029                     ??_fputs:
   683                           
   684                           ; 1 bytes @ 0x9
   685     0029                     	ds	2
   686     002B                     fputs@c:
   687                           
   688                           ; 1 bytes @ 0xB
   689     002B                     	ds	1
   690     002C                     fputs@i:
   691                           
   692                           ; 2 bytes @ 0xC
   693     002C                     	ds	2
   694     002E                     ?_pad:
   695     002E                     pad@fp:	
   696                           ; 1 bytes @ 0xE
   697                           
   698                           
   699                           ; 2 bytes @ 0xE
   700     002E                     	ds	2
   701     0030                     pad@buf:
   702                           
   703                           ; 1 bytes @ 0x10
   704     0030                     	ds	1
   705     0031                     pad@p:
   706                           
   707                           ; 2 bytes @ 0x11
   708     0031                     	ds	2
   709     0033                     pad@i:
   710                           
   711                           ; 2 bytes @ 0x13
   712     0033                     	ds	2
   713     0035                     ?_utoa:
   714     0035                     utoa@fp:	
   715                           ; 1 bytes @ 0x15
   716                           
   717                           
   718                           ; 2 bytes @ 0x15
   719     0035                     	ds	2
   720     0037                     utoa@d:
   721                           
   722                           ; 2 bytes @ 0x17
   723     0037                     	ds	2
   724     0039                     utoa@p:
   725                           
   726                           ; 1 bytes @ 0x19
   727     0039                     	ds	1
   728     003A                     utoa@w:
   729                           
   730                           ; 2 bytes @ 0x1A
   731     003A                     	ds	2
   732     003C                     utoa@i:
   733                           
   734                           ; 2 bytes @ 0x1C
   735     003C                     	ds	2
   736     003E                     ?_vfpfcnvrt:
   737     003E                     vfpfcnvrt@fp:	
   738                           ; 1 bytes @ 0x1E
   739                           
   740                           
   741                           ; 2 bytes @ 0x1E
   742     003E                     	ds	2
   743     0040                     vfpfcnvrt@fmt:
   744                           
   745                           ; 1 bytes @ 0x20
   746     0040                     	ds	1
   747     0041                     vfpfcnvrt@ap:
   748                           
   749                           ; 1 bytes @ 0x21
   750     0041                     	ds	1
   751     0042                     ??_vfpfcnvrt:
   752                           
   753                           ; 1 bytes @ 0x22
   754     0042                     	ds	2
   755     0044                     vfpfcnvrt@convarg:
   756                           
   757                           ; 4 bytes @ 0x24
   758     0044                     	ds	4
   759     0048                     vfpfcnvrt@done:
   760                           
   761                           ; 1 bytes @ 0x28
   762     0048                     	ds	1
   763     0049                     vfpfcnvrt@cp:
   764                           
   765                           ; 1 bytes @ 0x29
   766     0049                     	ds	1
   767     004A                     ?_vfprintf:
   768     004A                     vfprintf@fp:	
   769                           ; 2 bytes @ 0x2A
   770                           
   771                           
   772                           ; 2 bytes @ 0x2A
   773     004A                     	ds	2
   774     004C                     vfprintf@fmt:
   775                           
   776                           ; 1 bytes @ 0x2C
   777     004C                     	ds	1
   778     004D                     vfprintf@ap:
   779                           
   780                           ; 1 bytes @ 0x2D
   781     004D                     	ds	1
   782     004E                     vfprintf@cfmt:
   783                           
   784                           ; 1 bytes @ 0x2E
   785     004E                     	ds	1
   786     004F                     ?_sprintf:
   787     004F                     sprintf@s:	
   788                           ; 2 bytes @ 0x2F
   789                           
   790                           
   791                           ; 1 bytes @ 0x2F
   792     004F                     	ds	1
   793     0050                     sprintf@fmt:
   794                           
   795                           ; 1 bytes @ 0x30
   796     0050                     	ds	5
   797     0055                     ??_sprintf:
   798                           
   799                           ; 1 bytes @ 0x35
   800     0055                     	ds	1
   801     0056                     sprintf@ap:
   802                           
   803                           ; 1 bytes @ 0x36
   804     0056                     	ds	1
   805     0057                     sprintf@f:
   806                           
   807                           ; 11 bytes @ 0x37
   808     0057                     	ds	11
   809                           
   810                           	psect	maintext
   811     00FD                     __pmaintext:	
   812 ;;
   813 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   814 ;;
   815 ;; *************** function _main *****************
   816 ;; Defined at:
   817 ;;		line 64 in file "main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : B00/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         0       0       0       0       0
   832 ;;      Locals:         0       0       4       0       0
   833 ;;      Temps:          0       0       0       0       0
   834 ;;      Totals:         0       0       4       0       0
   835 ;;Total ram usage:        4 bytes
   836 ;; Hardware stack levels required when called: 9
   837 ;; This function calls:
   838 ;;		_LCD_Init
   839 ;;		_LCD_Write
   840 ;;		_LCD_putrs
   841 ;;		_LCD_puts
   842 ;;		_TMR0_init
   843 ;;		___lwdiv
   844 ;;		___lwmod
   845 ;;		_sprintf
   846 ;; This function is called by:
   847 ;;		Startup code after reset
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851     00FD                     _main:	
   852                           ;psect for function _main
   853                           
   854     00FD                     l1927:	
   855                           ;incstack = 0
   856 ;; hardware stack exceeded
   857                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   858                           
   859     00FD  120A  118A  2764  120A  118A  	fcall	_TMR0_init
   860     0102                     l1929:
   861     0102  3020               	movlw	LCD_Init@display& (0+255)
   862     0103  0084               	movwf	4
   863     0104  1283               	bcf	3,5	;RP0=0, select bank0
   864     0105  1303               	bcf	3,6	;RP1=0, select bank0
   865     0106  0869               	movf	_lcd,w
   866     0107  1383               	bcf	3,7	;select IRP bank0
   867     0108  0080               	movwf	0
   868     0109  0A84               	incf	4,f
   869     010A  086A               	movf	_lcd+1,w
   870     010B  0080               	movwf	0
   871     010C  0A84               	incf	4,f
   872     010D  086B               	movf	_lcd+2,w
   873     010E  0080               	movwf	0
   874     010F  0A84               	incf	4,f
   875     0110  086C               	movf	_lcd+3,w
   876     0111  0080               	movwf	0
   877     0112  0A84               	incf	4,f
   878     0113  086D               	movf	_lcd+4,w
   879     0114  0080               	movwf	0
   880     0115  120A  118A  2262  120A  118A  	fcall	_LCD_Init
   881     011A                     l1931:
   882     011A  3000               	movlw	0
   883     011B  120A  118A  2519  120A  118A  	fcall	_LCD_Write
   884     0120                     l1933:
   885     0120  3001               	movlw	1
   886     0121  120A  118A  2519  120A  118A  	fcall	_LCD_Write
   887     0126                     l1935:
   888     0126  3008               	movlw	8
   889     0127  120A  118A  2519  120A  118A  	fcall	_LCD_Write
   890     012C                     l1937:
   891     012C  3000               	movlw	0
   892     012D  120A  118A  2519  120A  118A  	fcall	_LCD_Write
   893     0132                     l63:
   894     0132  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   895     0133  00F8               	movwf	LCD_putrs@a
   896     0134  120A  118A  268F  120A  118A  	fcall	_LCD_putrs
   897     0139                     l1947:
   898     0139  300C               	movlw	12
   899     013A  120A  118A  2519  120A  118A  	fcall	_LCD_Write
   900     013F  3000               	movlw	0
   901     0140  120A  118A  2519  120A  118A  	fcall	_LCD_Write
   902     0145                     l80:
   903     0145  3013               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   904     0146  00F8               	movwf	LCD_putrs@a
   905     0147  120A  118A  268F  120A  118A  	fcall	_LCD_putrs
   906     014C                     l1955:
   907     014C  300C               	movlw	12
   908     014D  120A  118A  2519  120A  118A  	fcall	_LCD_Write
   909     0152  3000               	movlw	0
   910     0153  120A  118A  2519  120A  118A  	fcall	_LCD_Write
   911     0158                     l1961:
   912     0158  303C               	movlw	60
   913     0159  00F2               	movwf	___lwdiv@divisor
   914     015A  3000               	movlw	0
   915     015B  00F3               	movwf	___lwdiv@divisor+1
   916     015C  1283               	bcf	3,5	;RP0=0, select bank0
   917     015D  1303               	bcf	3,6	;RP1=0, select bank0
   918     015E  0867               	movf	_timer+1,w	;volatile
   919     015F  00F5               	movwf	___lwdiv@dividend+1
   920     0160  0866               	movf	_timer,w	;volatile
   921     0161  00F4               	movwf	___lwdiv@dividend
   922     0162  120A  118A  25C1  120A  118A  	fcall	___lwdiv
   923     0167  0873               	movf	?___lwdiv+1,w
   924     0168  1683               	bsf	3,5	;RP0=1, select bank1
   925     0169  1303               	bcf	3,6	;RP1=0, select bank1
   926     016A  00C7               	movwf	(_main$892+1)^(0+128)
   927     016B  0872               	movf	?___lwdiv,w
   928     016C  00C6               	movwf	_main$892^(0+128)
   929     016D                     l1963:
   930     016D  303C               	movlw	60
   931     016E  00F2               	movwf	___lwmod@divisor
   932     016F  3000               	movlw	0
   933     0170  00F3               	movwf	___lwmod@divisor+1
   934     0171  1283               	bcf	3,5	;RP0=0, select bank0
   935     0172  1303               	bcf	3,6	;RP1=0, select bank0
   936     0173  0867               	movf	_timer+1,w	;volatile
   937     0174  00F5               	movwf	___lwmod@dividend+1
   938     0175  0866               	movf	_timer,w	;volatile
   939     0176  00F4               	movwf	___lwmod@dividend
   940     0177  120A  118A  2603  120A  118A  	fcall	___lwmod
   941     017C  0873               	movf	?___lwmod+1,w
   942     017D  1683               	bsf	3,5	;RP0=1, select bank1
   943     017E  1303               	bcf	3,6	;RP1=0, select bank1
   944     017F  00C9               	movwf	(_main$893+1)^(0+128)
   945     0180  0872               	movf	?___lwmod,w
   946     0181  00C8               	movwf	_main$893^(0+128)
   947     0182                     l1965:
   948     0182  30C0               	movlw	(low (_exec| 0))& (0+255)
   949     0183  1283               	bcf	3,5	;RP0=0, select bank0
   950     0184  1303               	bcf	3,6	;RP1=0, select bank0
   951     0185  00CF               	movwf	sprintf@s
   952     0186  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   953     0187  00D0               	movwf	sprintf@fmt
   954     0188  1683               	bsf	3,5	;RP0=1, select bank1
   955     0189  1303               	bcf	3,6	;RP1=0, select bank1
   956     018A  0847               	movf	(_main$892+1)^(0+128),w
   957     018B  1283               	bcf	3,5	;RP0=0, select bank0
   958     018C  1303               	bcf	3,6	;RP1=0, select bank0
   959     018D  00D2               	movwf	?_sprintf+3
   960     018E  1683               	bsf	3,5	;RP0=1, select bank1
   961     018F  1303               	bcf	3,6	;RP1=0, select bank1
   962     0190  0846               	movf	_main$892^(0+128),w
   963     0191  1283               	bcf	3,5	;RP0=0, select bank0
   964     0192  1303               	bcf	3,6	;RP1=0, select bank0
   965     0193  00D1               	movwf	?_sprintf+2
   966     0194  1683               	bsf	3,5	;RP0=1, select bank1
   967     0195  1303               	bcf	3,6	;RP1=0, select bank1
   968     0196  0849               	movf	(_main$893+1)^(0+128),w
   969     0197  1283               	bcf	3,5	;RP0=0, select bank0
   970     0198  1303               	bcf	3,6	;RP1=0, select bank0
   971     0199  00D4               	movwf	?_sprintf+5
   972     019A  1683               	bsf	3,5	;RP0=1, select bank1
   973     019B  1303               	bcf	3,6	;RP1=0, select bank1
   974     019C  0848               	movf	_main$893^(0+128),w
   975     019D  1283               	bcf	3,5	;RP0=0, select bank0
   976     019E  1303               	bcf	3,6	;RP1=0, select bank0
   977     019F  00D3               	movwf	?_sprintf+4
   978     01A0  120A  118A  2700  120A  118A  	fcall	_sprintf
   979     01A5                     l1967:
   980     01A5  30C0               	movlw	(low (_exec| 0))& (0+255)
   981     01A6  00F8               	movwf	LCD_puts@a
   982     01A7  120A  118A  26DC  120A  118A  	fcall	_LCD_puts
   983     01AC  294C               	goto	l1955
   984     01AD  120A  118A  280C   	ljmp	start
   985     01B0                     __end_of_main:
   986                           
   987                           	psect	text1
   988     0700                     __ptext1:	
   989 ;; *************** function _sprintf *****************
   990 ;; Defined at:
   991 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  s               1   47[BANK0 ] PTR unsigned char 
   994 ;;		 -> exec(6), 
   995 ;;  fmt             1   48[BANK0 ] PTR const unsigned char 
   996 ;;		 -> STR_3(10), 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  f              11   55[BANK0 ] struct _IO_FILE
   999 ;;  ret             2    0        int 
  1000 ;;  ap              1   54[BANK0 ] PTR void [1]
  1001 ;;		 -> ?_sprintf(2), 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  2   47[BANK0 ] int 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       6       0       0       0
  1012 ;;      Locals:         0      12       0       0       0
  1013 ;;      Temps:          0       1       0       0       0
  1014 ;;      Totals:         0      19       0       0       0
  1015 ;;Total ram usage:       19 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 8
  1018 ;; This function calls:
  1019 ;;		_vfprintf
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025     0700                     _sprintf:	
  1026                           ;psect for function _sprintf
  1027                           
  1028     0700                     l1905:	
  1029                           ;incstack = 0
  1030 ;; hardware stack exceeded
  1031                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1032                           
  1033     0700  3051               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1034     0701  1283               	bcf	3,5	;RP0=0, select bank0
  1035     0702  1303               	bcf	3,6	;RP1=0, select bank0
  1036     0703  00D6               	movwf	sprintf@ap
  1037     0704                     l1907:
  1038     0704  084F               	movf	sprintf@s,w
  1039     0705  00D7               	movwf	sprintf@f
  1040     0706  3000               	movlw	0
  1041     0707  00D8               	movwf	sprintf@f+1
  1042     0708                     l1909:
  1043     0708  01D9               	clrf	sprintf@f+2
  1044     0709  01DA               	clrf	sprintf@f+3
  1045     070A                     l1911:
  1046     070A  01E0               	clrf	sprintf@f+9
  1047     070B  01E1               	clrf	sprintf@f+10
  1048     070C                     l1913:
  1049     070C  3057               	movlw	low sprintf@f
  1050     070D  00CA               	movwf	vfprintf@fp
  1051     070E  3000               	movlw	high sprintf@f
  1052     070F  00CB               	movwf	vfprintf@fp+1
  1053     0710  0850               	movf	sprintf@fmt,w
  1054     0711  00CC               	movwf	vfprintf@fmt
  1055     0712  3056               	movlw	(low (sprintf@ap| 0))& (0+255)
  1056     0713  00CD               	movwf	vfprintf@ap
  1057     0714  120A  118A  2723  120A  118A  	fcall	_vfprintf
  1058     0719                     l1915:
  1059     0719  1283               	bcf	3,5	;RP0=0, select bank0
  1060     071A  1303               	bcf	3,6	;RP1=0, select bank0
  1061     071B  0859               	movf	sprintf@f+2,w
  1062     071C  074F               	addwf	sprintf@s,w
  1063     071D  00D5               	movwf	??_sprintf
  1064     071E  0855               	movf	??_sprintf,w
  1065     071F  0084               	movwf	4
  1066     0720  1383               	bcf	3,7	;select IRP bank0
  1067     0721  0180               	clrf	0
  1068     0722                     l717:
  1069     0722  0008               	return
  1070     0723                     __end_of_sprintf:
  1071                           
  1072                           	psect	text2
  1073     0723                     __ptext2:	
  1074 ;; *************** function _vfprintf *****************
  1075 ;; Defined at:
  1076 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
  1079 ;;		 -> sprintf@f(11), 
  1080 ;;  fmt             1   44[BANK0 ] PTR const unsigned char 
  1081 ;;		 -> STR_3(10), 
  1082 ;;  ap              1   45[BANK0 ] PTR PTR void 
  1083 ;;		 -> sprintf@ap(1), 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  cfmt            1   46[BANK0 ] PTR unsigned char 
  1086 ;;		 -> STR_3(10), 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2   42[BANK0 ] int 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       4       0       0       0
  1097 ;;      Locals:         0       1       0       0       0
  1098 ;;      Temps:          0       0       0       0       0
  1099 ;;      Totals:         0       5       0       0       0
  1100 ;;Total ram usage:        5 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 7
  1103 ;; This function calls:
  1104 ;;		_vfpfcnvrt
  1105 ;; This function is called by:
  1106 ;;		_sprintf
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110     0723                     _vfprintf:	
  1111                           ;psect for function _vfprintf
  1112                           
  1113     0723                     l1839:	
  1114                           ;incstack = 0
  1115 ;; hardware stack exceeded
  1116                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1117                           
  1118                           
  1119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1120     0723  1283               	bcf	3,5	;RP0=0, select bank0
  1121     0724  1303               	bcf	3,6	;RP1=0, select bank0
  1122     0725  084C               	movf	vfprintf@fmt,w
  1123     0726  00CE               	movwf	vfprintf@cfmt
  1124                           
  1125                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1126     0727  2F35               	goto	l1843
  1127     0728                     l1841:
  1128                           
  1129                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1130     0728  084A               	movf	vfprintf@fp,w
  1131     0729  00BE               	movwf	vfpfcnvrt@fp
  1132     072A  084B               	movf	vfprintf@fp+1,w
  1133     072B  00BF               	movwf	vfpfcnvrt@fp+1
  1134     072C  304E               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1135     072D  00C0               	movwf	vfpfcnvrt@fmt
  1136     072E  084D               	movf	vfprintf@ap,w
  1137     072F  00C1               	movwf	vfpfcnvrt@ap
  1138     0730  120A  118A  21B0  120A  118A  	fcall	_vfpfcnvrt
  1139     0735                     l1843:
  1140                           
  1141                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1142     0735  1283               	bcf	3,5	;RP0=0, select bank0
  1143     0736  1303               	bcf	3,6	;RP1=0, select bank0
  1144     0737  084E               	movf	vfprintf@cfmt,w
  1145     0738  0084               	movwf	4
  1146     0739  120A  118A  2746  120A  118A  	fcall	stringdir
  1147     073E  3A00               	xorlw	0
  1148     073F  1D03               	skipz
  1149     0740  2F42               	goto	u1951
  1150     0741  2F43               	goto	u1950
  1151     0742                     u1951:
  1152     0742  2F28               	goto	l1841
  1153     0743                     u1950:
  1154     0743                     l1845:
  1155                           
  1156                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1157     0743  01CA               	clrf	?_vfprintf
  1158     0744  01CB               	clrf	?_vfprintf+1
  1159     0745                     l782:
  1160     0745  0008               	return
  1161     0746                     __end_of_vfprintf:
  1162                           
  1163                           	psect	text3
  1164     01B0                     __ptext3:	
  1165 ;; *************** function _vfpfcnvrt *****************
  1166 ;; Defined at:
  1167 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  fp              2   30[BANK0 ] PTR struct _IO_FILE
  1170 ;;		 -> sprintf@f(11), 
  1171 ;;  fmt             1   32[BANK0 ] PTR PTR unsigned char 
  1172 ;;		 -> vfprintf@cfmt(1), 
  1173 ;;  ap              1   33[BANK0 ] PTR PTR void 
  1174 ;;		 -> sprintf@ap(1), 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  convarg         4   36[BANK0 ] struct .
  1177 ;;  cp              1   41[BANK0 ] PTR unsigned char 
  1178 ;;		 -> STR_3(10), 
  1179 ;;  done            1   40[BANK0 ] _Bool 
  1180 ;;  c               1    0        unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1190 ;;      Params:         0       4       0       0       0
  1191 ;;      Locals:         0       6       0       0       0
  1192 ;;      Temps:          0       2       0       0       0
  1193 ;;      Totals:         0      12       0       0       0
  1194 ;;Total ram usage:       12 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 6
  1197 ;; This function calls:
  1198 ;;		_fputc
  1199 ;;		_read_prec_or_width
  1200 ;;		_utoa
  1201 ;; This function is called by:
  1202 ;;		_vfprintf
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206     01B0                     _vfpfcnvrt:	
  1207                           ;psect for function _vfpfcnvrt
  1208                           
  1209     01B0                     l1761:	
  1210                           ;incstack = 0
  1211 ;; hardware stack exceeded
  1212                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1213                           
  1214                           
  1215                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1216     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1217     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1218     01B2  0840               	movf	vfpfcnvrt@fmt,w
  1219     01B3  0084               	movwf	4
  1220     01B4  1383               	bcf	3,7	;select IRP bank0
  1221     01B5  0800               	movf	0,w
  1222     01B6  0084               	movwf	4
  1223     01B7  120A  118A  2746  120A  118A  	fcall	stringdir
  1224     01BC  3A25               	xorlw	37
  1225     01BD  1D03               	skipz
  1226     01BE  29C0               	goto	u1821
  1227     01BF  29C1               	goto	u1820
  1228     01C0                     u1821:
  1229     01C0  2A48               	goto	l1807
  1230     01C1                     u1820:
  1231     01C1                     l1763:
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1234     01C1  0840               	movf	vfpfcnvrt@fmt,w
  1235     01C2  0084               	movwf	4
  1236     01C3  3001               	movlw	1
  1237     01C4  0780               	addwf	0,f
  1238     01C5                     l1765:
  1239                           
  1240                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1241     01C5  01E2               	clrf	_width
  1242     01C6  01E3               	clrf	_width+1
  1243     01C7  3000               	movlw	0
  1244     01C8  00E8               	movwf	_flags
  1245     01C9                     l1767:
  1246                           
  1247                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1248     01C9  30FF               	movlw	255
  1249     01CA  00E4               	movwf	_prec
  1250     01CB  30FF               	movlw	255
  1251     01CC  00E5               	movwf	_prec+1
  1252     01CD                     l1769:
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1255     01CD  01C8               	clrf	vfpfcnvrt@done
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1258     01CE  29E5               	goto	l1777
  1259     01CF                     l765:	
  1260                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  1261                           
  1262                           
  1263                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1264     01CF  14E8               	bsf	_flags,1
  1265     01D0                     l1771:
  1266                           
  1267                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1268     01D0  0840               	movf	vfpfcnvrt@fmt,w
  1269     01D1  0084               	movwf	4
  1270     01D2  3001               	movlw	1
  1271     01D3  0780               	addwf	0,f
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1274     01D4  29E5               	goto	l1777
  1275     01D5                     l767:	
  1276                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  1277                           
  1278                           
  1279                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1280     01D5  3001               	movlw	1
  1281     01D6  00C8               	movwf	vfpfcnvrt@done
  1282                           
  1283                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1284     01D7  29E5               	goto	l1777
  1285     01D8                     l1775:
  1286     01D8  0840               	movf	vfpfcnvrt@fmt,w
  1287     01D9  0084               	movwf	4
  1288     01DA  0800               	movf	0,w
  1289     01DB  0084               	movwf	4
  1290     01DC  120A  118A  2746  120A  118A  	fcall	stringdir
  1291                           
  1292                           ; Switch size 1, requested type "simple"
  1293                           ; Number of cases is 1, Range of values is 48 to 48
  1294                           ; switch strategies available:
  1295                           ; Name         Instructions Cycles
  1296                           ; simple_byte            4     3 (average)
  1297                           ; direct_byte           14    11 (fixed)
  1298                           ; jumptable            263     9 (fixed)
  1299                           ;	Chosen strategy is simple_byte
  1300     01E1  3A30               	xorlw	48	; case 48
  1301     01E2  1903               	skipnz
  1302     01E3  29CF               	goto	l765
  1303     01E4  29D5               	goto	l767
  1304     01E5                     l1777:
  1305                           
  1306                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1307     01E5  0848               	movf	vfpfcnvrt@done,w
  1308     01E6  1903               	btfsc	3,2
  1309     01E7  29E9               	goto	u1831
  1310     01E8  29EA               	goto	u1830
  1311     01E9                     u1831:
  1312     01E9  29D8               	goto	l1775
  1313     01EA                     u1830:
  1314     01EA                     l1779:
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1317     01EA  0840               	movf	vfpfcnvrt@fmt,w
  1318     01EB  00F8               	movwf	read_prec_or_width@fmt
  1319     01EC  0841               	movf	vfpfcnvrt@ap,w
  1320     01ED  00F9               	movwf	read_prec_or_width@ap
  1321     01EE  120A  118A  24C2  120A  118A  	fcall	_read_prec_or_width
  1322     01F3  0879               	movf	?_read_prec_or_width+1,w
  1323     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1324     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1325     01F6  00E3               	movwf	_width+1
  1326     01F7  0878               	movf	?_read_prec_or_width,w
  1327     01F8  00E2               	movwf	_width
  1328     01F9                     l1781:
  1329                           
  1330                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1331     01F9  1FE3               	btfss	_width+1,7
  1332     01FA  29FC               	goto	u1841
  1333     01FB  29FD               	goto	u1840
  1334     01FC                     u1841:
  1335     01FC  2A03               	goto	l1787
  1336     01FD                     u1840:
  1337     01FD                     l1783:
  1338                           
  1339                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1340     01FD  1468               	bsf	_flags,0
  1341     01FE                     l1785:
  1342                           
  1343                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1344     01FE  09E2               	comf	_width,f
  1345     01FF  09E3               	comf	_width+1,f
  1346     0200  0AE2               	incf	_width,f
  1347     0201  1903               	skipnz
  1348     0202  0AE3               	incf	_width+1,f
  1349     0203                     l1787:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1352     0203  0840               	movf	vfpfcnvrt@fmt,w
  1353     0204  0084               	movwf	4
  1354     0205  1383               	bcf	3,7	;select IRP bank0
  1355     0206  0800               	movf	0,w
  1356     0207  00C9               	movwf	vfpfcnvrt@cp
  1357     0208                     l1789:
  1358     0208  0849               	movf	vfpfcnvrt@cp,w
  1359     0209  0084               	movwf	4
  1360     020A  120A  118A  2746  120A  118A  	fcall	stringdir
  1361     020F  3A75               	xorlw	117
  1362     0210  1D03               	skipz
  1363     0211  2A13               	goto	u1851
  1364     0212  2A14               	goto	u1850
  1365     0213                     u1851:
  1366     0213  2A40               	goto	l1803
  1367     0214                     u1850:
  1368     0214                     l1791:
  1369                           
  1370                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1371     0214  0841               	movf	vfpfcnvrt@ap,w
  1372     0215  0084               	movwf	4
  1373     0216  0800               	movf	0,w
  1374     0217  00FF               	movwf	btemp+1
  1375     0218  3002               	movlw	2
  1376     0219  0780               	addwf	0,f
  1377     021A  087F               	movf	btemp+1,w
  1378     021B  0084               	movwf	4
  1379     021C  0800               	movf	0,w
  1380     021D  00C4               	movwf	vfpfcnvrt@convarg
  1381     021E  0A84               	incf	4,f
  1382     021F  0800               	movf	0,w
  1383     0220  00C5               	movwf	vfpfcnvrt@convarg+1
  1384     0221                     l1793:
  1385                           
  1386                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1387     0221  0840               	movf	vfpfcnvrt@fmt,w
  1388     0222  0084               	movwf	4
  1389     0223  0849               	movf	vfpfcnvrt@cp,w
  1390     0224  3E01               	addlw	1
  1391     0225  0080               	movwf	0
  1392                           
  1393                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1394     0226  2A35               	goto	l1801
  1395     0227                     l1795:
  1396                           
  1397                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  1398     0227  083E               	movf	vfpfcnvrt@fp,w
  1399     0228  00B5               	movwf	utoa@fp
  1400     0229  083F               	movf	vfpfcnvrt@fp+1,w
  1401     022A  00B6               	movwf	utoa@fp+1
  1402     022B  0845               	movf	vfpfcnvrt@convarg+1,w
  1403     022C  00B8               	movwf	utoa@d+1
  1404     022D  0844               	movf	vfpfcnvrt@convarg,w
  1405     022E  00B7               	movwf	utoa@d
  1406     022F  120A  118A  2444  120A  118A  	fcall	_utoa
  1407     0234  2A61               	goto	l775
  1408     0235                     l1801:
  1409     0235  0849               	movf	vfpfcnvrt@cp,w
  1410     0236  0084               	movwf	4
  1411     0237  120A  118A  2746  120A  118A  	fcall	stringdir
  1412                           
  1413                           ; Switch size 1, requested type "simple"
  1414                           ; Number of cases is 1, Range of values is 117 to 117
  1415                           ; switch strategies available:
  1416                           ; Name         Instructions Cycles
  1417                           ; simple_byte            4     3 (average)
  1418                           ; direct_byte           14    11 (fixed)
  1419                           ; jumptable            263     9 (fixed)
  1420                           ;	Chosen strategy is simple_byte
  1421     023C  3A75               	xorlw	117	; case 117
  1422     023D  1903               	skipnz
  1423     023E  2A27               	goto	l1795
  1424     023F  2A40               	goto	l1803
  1425     0240                     l1803:
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1428     0240  1283               	bcf	3,5	;RP0=0, select bank0
  1429     0241  1303               	bcf	3,6	;RP1=0, select bank0
  1430     0242  0840               	movf	vfpfcnvrt@fmt,w
  1431     0243  0084               	movwf	4
  1432     0244  3001               	movlw	1
  1433     0245  1383               	bcf	3,7	;select IRP bank0
  1434     0246  0780               	addwf	0,f
  1435     0247  2A61               	goto	l775
  1436     0248                     l1807:
  1437                           
  1438                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1439     0248  0840               	movf	vfpfcnvrt@fmt,w
  1440     0249  0084               	movwf	4
  1441     024A  0800               	movf	0,w
  1442     024B  0084               	movwf	4
  1443     024C  120A  118A  2746  120A  118A  	fcall	stringdir
  1444     0251  00C2               	movwf	??_vfpfcnvrt
  1445     0252  01C3               	clrf	??_vfpfcnvrt+1
  1446     0253  0842               	movf	??_vfpfcnvrt,w
  1447     0254  00F2               	movwf	fputc@c
  1448     0255  0843               	movf	??_vfpfcnvrt+1,w
  1449     0256  00F3               	movwf	fputc@c+1
  1450     0257  083E               	movf	vfpfcnvrt@fp,w
  1451     0258  00F4               	movwf	fputc@fp
  1452     0259  083F               	movf	vfpfcnvrt@fp+1,w
  1453     025A  00F5               	movwf	fputc@fp+1
  1454     025B  120A  118A  2312  120A  118A  	fcall	_fputc
  1455     0260  2A40               	goto	l1803
  1456     0261                     l775:
  1457     0261  0008               	return
  1458     0262                     __end_of_vfpfcnvrt:
  1459                           
  1460                           	psect	text4
  1461     0444                     __ptext4:	
  1462 ;; *************** function _utoa *****************
  1463 ;; Defined at:
  1464 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
  1467 ;;		 -> sprintf@f(11), 
  1468 ;;  d               2   23[BANK0 ] unsigned int 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  i               2   28[BANK0 ] int 
  1471 ;;  w               2   26[BANK0 ] int 
  1472 ;;  p               1   25[BANK0 ] _Bool 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       4       0       0       0
  1483 ;;      Locals:         0       5       0       0       0
  1484 ;;      Temps:          0       0       0       0       0
  1485 ;;      Totals:         0       9       0       0       0
  1486 ;;Total ram usage:        9 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; Hardware stack levels required when called: 5
  1489 ;; This function calls:
  1490 ;;		___lwdiv
  1491 ;;		___lwmod
  1492 ;;		_pad
  1493 ;; This function is called by:
  1494 ;;		_vfpfcnvrt
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498     0444                     _utoa:	
  1499                           ;psect for function _utoa
  1500                           
  1501     0444                     l1689:	
  1502                           ;incstack = 0
  1503 ;; hardware stack exceeded
  1504                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1505                           
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
  1508     0444  3001               	movlw	1
  1509     0445  1283               	bcf	3,5	;RP0=0, select bank0
  1510     0446  1303               	bcf	3,6	;RP1=0, select bank0
  1511     0447  00B9               	movwf	utoa@p
  1512     0448                     l1691:
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  1515     0448  0863               	movf	_width+1,w
  1516     0449  00BB               	movwf	utoa@w+1
  1517     044A  0862               	movf	_width,w
  1518     044B  00BA               	movwf	utoa@w
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  1521     044C  301F               	movlw	31
  1522     044D  00BC               	movwf	utoa@i
  1523     044E  3000               	movlw	0
  1524     044F  00BD               	movwf	utoa@i+1
  1525     0450                     l1693:
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  1528     0450  1683               	bsf	3,5	;RP0=1, select bank1
  1529     0451  1303               	bcf	3,6	;RP1=0, select bank1
  1530     0452  01BF               	clrf	(_dbuf^(0+128)+31)
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  1533     0453  2C8A               	goto	l1705
  1534     0454                     l1695:
  1535                           
  1536                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
  1537     0454  30FF               	movlw	255
  1538     0455  07BC               	addwf	utoa@i,f
  1539     0456  1803               	skipnc
  1540     0457  0ABD               	incf	utoa@i+1,f
  1541     0458  30FF               	movlw	255
  1542     0459  07BD               	addwf	utoa@i+1,f
  1543     045A                     l1697:
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  1546     045A  083C               	movf	utoa@i,w
  1547     045B  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1548     045C  0084               	movwf	4
  1549     045D  300A               	movlw	10
  1550     045E  00F2               	movwf	___lwmod@divisor
  1551     045F  3000               	movlw	0
  1552     0460  00F3               	movwf	___lwmod@divisor+1
  1553     0461  0838               	movf	utoa@d+1,w
  1554     0462  00F5               	movwf	___lwmod@dividend+1
  1555     0463  0837               	movf	utoa@d,w
  1556     0464  00F4               	movwf	___lwmod@dividend
  1557     0465  120A  118A  2603  120A  118A  	fcall	___lwmod
  1558     046A  0872               	movf	?___lwmod,w
  1559     046B  3E30               	addlw	48
  1560     046C  1383               	bcf	3,7	;select IRP bank1
  1561     046D  0080               	movwf	0
  1562     046E                     l1699:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
  1565     046E  1283               	bcf	3,5	;RP0=0, select bank0
  1566     046F  1303               	bcf	3,6	;RP1=0, select bank0
  1567     0470  01B9               	clrf	utoa@p
  1568     0471                     l1701:
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  1571     0471  30FF               	movlw	255
  1572     0472  07BA               	addwf	utoa@w,f
  1573     0473  1803               	skipnc
  1574     0474  0ABB               	incf	utoa@w+1,f
  1575     0475  30FF               	movlw	255
  1576     0476  07BB               	addwf	utoa@w+1,f
  1577     0477                     l1703:
  1578                           
  1579                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  1580     0477  300A               	movlw	10
  1581     0478  00F2               	movwf	___lwdiv@divisor
  1582     0479  3000               	movlw	0
  1583     047A  00F3               	movwf	___lwdiv@divisor+1
  1584     047B  0838               	movf	utoa@d+1,w
  1585     047C  00F5               	movwf	___lwdiv@dividend+1
  1586     047D  0837               	movf	utoa@d,w
  1587     047E  00F4               	movwf	___lwdiv@dividend
  1588     047F  120A  118A  25C1  120A  118A  	fcall	___lwdiv
  1589     0484  0873               	movf	?___lwdiv+1,w
  1590     0485  1283               	bcf	3,5	;RP0=0, select bank0
  1591     0486  1303               	bcf	3,6	;RP1=0, select bank0
  1592     0487  00B8               	movwf	utoa@d+1
  1593     0488  0872               	movf	?___lwdiv,w
  1594     0489  00B7               	movwf	utoa@d
  1595     048A                     l1705:
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  1598     048A  1283               	bcf	3,5	;RP0=0, select bank0
  1599     048B  083C               	movf	utoa@i,w
  1600     048C  043D               	iorwf	utoa@i+1,w
  1601     048D  1903               	btfsc	3,2
  1602     048E  2C90               	goto	u1631
  1603     048F  2C91               	goto	u1630
  1604     0490                     u1631:
  1605     0490  2CAF               	goto	l1715
  1606     0491                     u1630:
  1607     0491                     l1707:
  1608     0491  0837               	movf	utoa@d,w
  1609     0492  0438               	iorwf	utoa@d+1,w
  1610     0493  1D03               	btfss	3,2
  1611     0494  2C96               	goto	u1641
  1612     0495  2C97               	goto	u1640
  1613     0496                     u1641:
  1614     0496  2C54               	goto	l1695
  1615     0497                     u1640:
  1616     0497                     l1709:
  1617     0497  0839               	movf	utoa@p,w
  1618     0498  1D03               	btfss	3,2
  1619     0499  2C9B               	goto	u1651
  1620     049A  2C9C               	goto	u1650
  1621     049B                     u1651:
  1622     049B  2C54               	goto	l1695
  1623     049C                     u1650:
  1624     049C                     l1711:
  1625     049C  083B               	movf	utoa@w+1,w
  1626     049D  3A80               	xorlw	128
  1627     049E  00FF               	movwf	btemp+1
  1628     049F  3080               	movlw	128
  1629     04A0  027F               	subwf	btemp+1,w
  1630     04A1  1D03               	skipz
  1631     04A2  2CA5               	goto	u1665
  1632     04A3  3001               	movlw	1
  1633     04A4  023A               	subwf	utoa@w,w
  1634     04A5                     u1665:
  1635     04A5  1C03               	skipc
  1636     04A6  2CA8               	goto	u1661
  1637     04A7  2CA9               	goto	u1660
  1638     04A8                     u1661:
  1639     04A8  2CAF               	goto	l1715
  1640     04A9                     u1660:
  1641     04A9                     l1713:
  1642     04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1643     04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1644     04AB  18E8               	btfsc	_flags,1
  1645     04AC  2CAE               	goto	u1671
  1646     04AD  2CAF               	goto	u1670
  1647     04AE                     u1671:
  1648     04AE  2C54               	goto	l1695
  1649     04AF                     u1670:
  1650     04AF                     l1715:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  1653     04AF  1283               	bcf	3,5	;RP0=0, select bank0
  1654     04B0  1303               	bcf	3,6	;RP1=0, select bank0
  1655     04B1  0835               	movf	utoa@fp,w
  1656     04B2  00AE               	movwf	pad@fp
  1657     04B3  0836               	movf	utoa@fp+1,w
  1658     04B4  00AF               	movwf	pad@fp+1
  1659     04B5  083C               	movf	utoa@i,w
  1660     04B6  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1661     04B7  00B0               	movwf	pad@buf
  1662     04B8  083B               	movf	utoa@w+1,w
  1663     04B9  00B2               	movwf	pad@p+1
  1664     04BA  083A               	movf	utoa@w,w
  1665     04BB  00B1               	movwf	pad@p
  1666     04BC  120A  118A  256E  120A  118A  	fcall	_pad
  1667     04C1                     l750:
  1668     04C1  0008               	return
  1669     04C2                     __end_of_utoa:
  1670                           
  1671                           	psect	text5
  1672     056E                     __ptext5:	
  1673 ;; *************** function _pad *****************
  1674 ;; Defined at:
  1675 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  fp              2   14[BANK0 ] PTR struct _IO_FILE
  1678 ;;		 -> sprintf@f(11), 
  1679 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  1680 ;;		 -> dbuf(32), 
  1681 ;;  p               2   17[BANK0 ] int 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  i               2   19[BANK0 ] int 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       5       0       0       0
  1694 ;;      Locals:         0       2       0       0       0
  1695 ;;      Temps:          1       0       0       0       0
  1696 ;;      Totals:         1       7       0       0       0
  1697 ;;Total ram usage:        8 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; Hardware stack levels required when called: 4
  1700 ;; This function calls:
  1701 ;;		_fputc
  1702 ;;		_fputs
  1703 ;; This function is called by:
  1704 ;;		_utoa
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708     056E                     _pad:	
  1709                           ;psect for function _pad
  1710                           
  1711     056E                     l1673:	
  1712                           ;incstack = 0
  1713 ;; hardware stack exceeded
  1714                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1715                           
  1716                           
  1717                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  1718     056E  1283               	bcf	3,5	;RP0=0, select bank0
  1719     056F  1303               	bcf	3,6	;RP1=0, select bank0
  1720     0570  1C68               	btfss	_flags,0
  1721     0571  2D73               	goto	u1591
  1722     0572  2D74               	goto	u1590
  1723     0573                     u1591:
  1724     0573  2D7F               	goto	l1677
  1725     0574                     u1590:
  1726     0574                     l1675:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  1729     0574  0830               	movf	pad@buf,w
  1730     0575  00F6               	movwf	fputs@s
  1731     0576  082E               	movf	pad@fp,w
  1732     0577  00F7               	movwf	fputs@fp
  1733     0578  082F               	movf	pad@fp+1,w
  1734     0579  00F8               	movwf	fputs@fp+1
  1735     057A  120A  118A  263B  120A  118A  	fcall	_fputs
  1736     057F                     l1677:
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  1739     057F  1283               	bcf	3,5	;RP0=0, select bank0
  1740     0580  1303               	bcf	3,6	;RP1=0, select bank0
  1741     0581  1FB2               	btfss	pad@p+1,7
  1742     0582  2D84               	goto	u1601
  1743     0583  2D85               	goto	u1600
  1744     0584                     u1601:
  1745     0584  2D87               	goto	l735
  1746     0585                     u1600:
  1747     0585                     l1679:
  1748                           
  1749                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  1750     0585  01B1               	clrf	pad@p
  1751     0586  01B2               	clrf	pad@p+1
  1752     0587                     l735:	
  1753                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
  1754                           
  1755                           
  1756                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  1757     0587  01B3               	clrf	pad@i
  1758     0588  01B4               	clrf	pad@i+1
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1761     0589  2DA1               	goto	l1685
  1762     058A                     l1681:
  1763                           
  1764                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  1765     058A  3020               	movlw	32
  1766     058B  00F2               	movwf	fputc@c
  1767     058C  3000               	movlw	0
  1768     058D  00F3               	movwf	fputc@c+1
  1769     058E  1283               	bcf	3,5	;RP0=0, select bank0
  1770     058F  1303               	bcf	3,6	;RP1=0, select bank0
  1771     0590  082E               	movf	pad@fp,w
  1772     0591  00F4               	movwf	fputc@fp
  1773     0592  082F               	movf	pad@fp+1,w
  1774     0593  00F5               	movwf	fputc@fp+1
  1775     0594  120A  118A  2312  120A  118A  	fcall	_fputc
  1776     0599                     l1683:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  1779     0599  3001               	movlw	1
  1780     059A  1283               	bcf	3,5	;RP0=0, select bank0
  1781     059B  1303               	bcf	3,6	;RP1=0, select bank0
  1782     059C  07B3               	addwf	pad@i,f
  1783     059D  1803               	skipnc
  1784     059E  0AB4               	incf	pad@i+1,f
  1785     059F  3000               	movlw	0
  1786     05A0  07B4               	addwf	pad@i+1,f
  1787     05A1                     l1685:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  1790     05A1  0834               	movf	pad@i+1,w
  1791     05A2  3A80               	xorlw	128
  1792     05A3  00F9               	movwf	??_pad
  1793     05A4  0832               	movf	pad@p+1,w
  1794     05A5  3A80               	xorlw	128
  1795     05A6  0279               	subwf	??_pad,w
  1796     05A7  1D03               	skipz
  1797     05A8  2DAB               	goto	u1615
  1798     05A9  0831               	movf	pad@p,w
  1799     05AA  0233               	subwf	pad@i,w
  1800     05AB                     u1615:
  1801     05AB  1C03               	skipc
  1802     05AC  2DAE               	goto	u1611
  1803     05AD  2DAF               	goto	u1610
  1804     05AE                     u1611:
  1805     05AE  2D8A               	goto	l1681
  1806     05AF                     u1610:
  1807     05AF                     l738:
  1808                           
  1809                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  1810     05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1811     05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1812     05B1  1868               	btfsc	_flags,0
  1813     05B2  2DB4               	goto	u1621
  1814     05B3  2DB5               	goto	u1620
  1815     05B4                     u1621:
  1816     05B4  2DC0               	goto	l740
  1817     05B5                     u1620:
  1818     05B5                     l1687:
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  1821     05B5  0830               	movf	pad@buf,w
  1822     05B6  00F6               	movwf	fputs@s
  1823     05B7  082E               	movf	pad@fp,w
  1824     05B8  00F7               	movwf	fputs@fp
  1825     05B9  082F               	movf	pad@fp+1,w
  1826     05BA  00F8               	movwf	fputs@fp+1
  1827     05BB  120A  118A  263B  120A  118A  	fcall	_fputs
  1828     05C0                     l740:
  1829     05C0  0008               	return
  1830     05C1                     __end_of_pad:
  1831                           
  1832                           	psect	text6
  1833     063B                     __ptext6:	
  1834 ;; *************** function _fputs *****************
  1835 ;; Defined at:
  1836 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  s               1    6[COMMON] PTR const unsigned char 
  1839 ;;		 -> dbuf(32), 
  1840 ;;  fp              2    7[COMMON] PTR struct _IO_FILE
  1841 ;;		 -> sprintf@f(11), 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  i               2   12[BANK0 ] int 
  1844 ;;  c               1   11[BANK0 ] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  2    6[COMMON] int 
  1847 ;; Registers used:
  1848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         3       0       0       0       0
  1855 ;;      Locals:         0       3       0       0       0
  1856 ;;      Temps:          0       2       0       0       0
  1857 ;;      Totals:         3       5       0       0       0
  1858 ;;Total ram usage:        8 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 3
  1861 ;; This function calls:
  1862 ;;		_fputc
  1863 ;; This function is called by:
  1864 ;;		_pad
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868     063B                     _fputs:	
  1869                           ;psect for function _fputs
  1870                           
  1871     063B                     l1603:	
  1872                           ;incstack = 0
  1873 ;; hardware stack exceeded
  1874                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1875                           
  1876     063B  1283               	bcf	3,5	;RP0=0, select bank0
  1877     063C  1303               	bcf	3,6	;RP1=0, select bank0
  1878     063D  01AC               	clrf	fputs@i
  1879     063E  01AD               	clrf	fputs@i+1
  1880     063F  2E58               	goto	l1609
  1881     0640                     l1605:
  1882     0640  082B               	movf	fputs@c,w
  1883     0641  00A9               	movwf	??_fputs
  1884     0642  01AA               	clrf	??_fputs+1
  1885     0643  0829               	movf	??_fputs,w
  1886     0644  00F2               	movwf	fputc@c
  1887     0645  082A               	movf	??_fputs+1,w
  1888     0646  00F3               	movwf	fputc@c+1
  1889     0647  0877               	movf	fputs@fp,w
  1890     0648  00F4               	movwf	fputc@fp
  1891     0649  0878               	movf	fputs@fp+1,w
  1892     064A  00F5               	movwf	fputc@fp+1
  1893     064B  120A  118A  2312  120A  118A  	fcall	_fputc
  1894     0650                     l1607:
  1895     0650  3001               	movlw	1
  1896     0651  1283               	bcf	3,5	;RP0=0, select bank0
  1897     0652  1303               	bcf	3,6	;RP1=0, select bank0
  1898     0653  07AC               	addwf	fputs@i,f
  1899     0654  1803               	skipnc
  1900     0655  0AAD               	incf	fputs@i+1,f
  1901     0656  3000               	movlw	0
  1902     0657  07AD               	addwf	fputs@i+1,f
  1903     0658                     l1609:
  1904     0658  082C               	movf	fputs@i,w
  1905     0659  0776               	addwf	fputs@s,w
  1906     065A  00A9               	movwf	??_fputs
  1907     065B  0829               	movf	??_fputs,w
  1908     065C  0084               	movwf	4
  1909     065D  1383               	bcf	3,7	;select IRP bank0
  1910     065E  0800               	movf	0,w
  1911     065F  00AB               	movwf	fputs@c
  1912     0660  082B               	movf	fputs@c,w
  1913     0661  1D03               	btfss	3,2
  1914     0662  2E64               	goto	u1411
  1915     0663  2E65               	goto	u1410
  1916     0664                     u1411:
  1917     0664  2E40               	goto	l1605
  1918     0665                     u1410:
  1919     0665                     l802:
  1920     0665  0008               	return
  1921     0666                     __end_of_fputs:
  1922                           
  1923                           	psect	text7
  1924     0312                     __ptext7:	
  1925 ;; *************** function _fputc *****************
  1926 ;; Defined at:
  1927 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  c               2    2[COMMON] int 
  1930 ;;  fp              2    4[COMMON] PTR struct _IO_FILE
  1931 ;;		 -> sprintf@f(11), 
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  2    2[COMMON] int 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         4       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0
  1945 ;;      Temps:          0       9       0       0       0
  1946 ;;      Totals:         4       9       0       0       0
  1947 ;;Total ram usage:       13 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 2
  1950 ;; This function calls:
  1951 ;;		_putch
  1952 ;; This function is called by:
  1953 ;;		_pad
  1954 ;;		_vfpfcnvrt
  1955 ;;		_fputs
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959     0312                     _fputc:	
  1960                           ;psect for function _fputc
  1961                           
  1962     0312                     l1589:	
  1963                           ;incstack = 0
  1964 ;; hardware stack exceeded
  1965                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1966                           
  1967     0312  0874               	movf	fputc@fp,w
  1968     0313  0475               	iorwf	fputc@fp+1,w
  1969     0314  1903               	btfsc	3,2
  1970     0315  2B17               	goto	u1361
  1971     0316  2B18               	goto	u1360
  1972     0317                     u1361:
  1973     0317  2B1E               	goto	l1593
  1974     0318                     u1360:
  1975     0318                     l1591:
  1976     0318  0874               	movf	fputc@fp,w
  1977     0319  0475               	iorwf	fputc@fp+1,w
  1978     031A  1D03               	btfss	3,2
  1979     031B  2B1D               	goto	u1371
  1980     031C  2B1E               	goto	u1370
  1981     031D                     u1371:
  1982     031D  2B25               	goto	l1595
  1983     031E                     u1370:
  1984     031E                     l1593:
  1985     031E  0872               	movf	fputc@c,w
  1986     031F  120A  118A  277C  120A  118A  	fcall	_putch
  1987     0324  2BB1               	goto	l794
  1988     0325                     l1595:
  1989     0325  0874               	movf	fputc@fp,w
  1990     0326  3E09               	addlw	9
  1991     0327  1283               	bcf	3,5	;RP0=0, select bank0
  1992     0328  1303               	bcf	3,6	;RP1=0, select bank0
  1993     0329  00A0               	movwf	??_fputc
  1994     032A  0875               	movf	fputc@fp+1,w
  1995     032B  1803               	skipnc
  1996     032C  3E01               	addlw	1
  1997     032D  3E00               	addlw	0
  1998     032E  00A1               	movwf	??_fputc+1
  1999     032F  0820               	movf	??_fputc,w
  2000     0330  0084               	movwf	4
  2001     0331  1783               	bsf	3,7
  2002     0332  1C21               	btfss	??_fputc+1,0
  2003     0333  1383               	bcf	3,7
  2004     0334  0800               	movf	0,w
  2005     0335  00A2               	movwf	??_fputc+2
  2006     0336  0A84               	incf	4,f
  2007     0337  0800               	movf	0,w
  2008     0338  00A3               	movwf	??_fputc+3
  2009     0339  0822               	movf	??_fputc+2,w
  2010     033A  0423               	iorwf	??_fputc+3,w
  2011     033B  1903               	btfsc	3,2
  2012     033C  2B3E               	goto	u1381
  2013     033D  2B3F               	goto	u1380
  2014     033E                     u1381:
  2015     033E  2B71               	goto	l1599
  2016     033F                     u1380:
  2017     033F                     l1597:
  2018     033F  0874               	movf	fputc@fp,w
  2019     0340  3E09               	addlw	9
  2020     0341  00A0               	movwf	??_fputc
  2021     0342  0875               	movf	fputc@fp+1,w
  2022     0343  1803               	skipnc
  2023     0344  3E01               	addlw	1
  2024     0345  3E00               	addlw	0
  2025     0346  00A1               	movwf	??_fputc+1
  2026     0347  0820               	movf	??_fputc,w
  2027     0348  0084               	movwf	4
  2028     0349  1783               	bsf	3,7
  2029     034A  1C21               	btfss	??_fputc+1,0
  2030     034B  1383               	bcf	3,7
  2031     034C  0800               	movf	0,w
  2032     034D  00A2               	movwf	??_fputc+2
  2033     034E  0A84               	incf	4,f
  2034     034F  0800               	movf	0,w
  2035     0350  00A3               	movwf	??_fputc+3
  2036     0351  0874               	movf	fputc@fp,w
  2037     0352  3E02               	addlw	2
  2038     0353  00A4               	movwf	??_fputc+4
  2039     0354  0875               	movf	fputc@fp+1,w
  2040     0355  1803               	skipnc
  2041     0356  3E01               	addlw	1
  2042     0357  3E00               	addlw	0
  2043     0358  00A5               	movwf	??_fputc+5
  2044     0359  0824               	movf	??_fputc+4,w
  2045     035A  0084               	movwf	4
  2046     035B  1783               	bsf	3,7
  2047     035C  1C25               	btfss	??_fputc+5,0
  2048     035D  1383               	bcf	3,7
  2049     035E  0800               	movf	0,w
  2050     035F  00A6               	movwf	??_fputc+6
  2051     0360  0A84               	incf	4,f
  2052     0361  0800               	movf	0,w
  2053     0362  00A7               	movwf	??_fputc+7
  2054     0363  0827               	movf	??_fputc+7,w
  2055     0364  3A80               	xorlw	128
  2056     0365  00A8               	movwf	??_fputc+8
  2057     0366  0823               	movf	??_fputc+3,w
  2058     0367  3A80               	xorlw	128
  2059     0368  0228               	subwf	??_fputc+8,w
  2060     0369  1D03               	skipz
  2061     036A  2B6D               	goto	u1395
  2062     036B  0822               	movf	??_fputc+2,w
  2063     036C  0226               	subwf	??_fputc+6,w
  2064     036D                     u1395:
  2065     036D  1803               	skipnc
  2066     036E  2B70               	goto	u1391
  2067     036F  2B71               	goto	u1390
  2068     0370                     u1391:
  2069     0370  2BB1               	goto	l794
  2070     0371                     u1390:
  2071     0371                     l1599:
  2072     0371  0874               	movf	fputc@fp,w
  2073     0372  0084               	movwf	4
  2074     0373  1783               	bsf	3,7
  2075     0374  1C75               	btfss	fputc@fp+1,0
  2076     0375  1383               	bcf	3,7
  2077     0376  0800               	movf	0,w
  2078     0377  1283               	bcf	3,5	;RP0=0, select bank0
  2079     0378  1303               	bcf	3,6	;RP1=0, select bank0
  2080     0379  00A0               	movwf	??_fputc
  2081     037A  0A84               	incf	4,f
  2082     037B  0800               	movf	0,w
  2083     037C  00A1               	movwf	??_fputc+1
  2084     037D  0874               	movf	fputc@fp,w
  2085     037E  3E02               	addlw	2
  2086     037F  00A2               	movwf	??_fputc+2
  2087     0380  0875               	movf	fputc@fp+1,w
  2088     0381  1803               	skipnc
  2089     0382  3E01               	addlw	1
  2090     0383  3E00               	addlw	0
  2091     0384  00A3               	movwf	??_fputc+3
  2092     0385  0822               	movf	??_fputc+2,w
  2093     0386  0084               	movwf	4
  2094     0387  1783               	bsf	3,7
  2095     0388  1C23               	btfss	??_fputc+3,0
  2096     0389  1383               	bcf	3,7
  2097     038A  0800               	movf	0,w
  2098     038B  0720               	addwf	??_fputc,w
  2099     038C  00A5               	movwf	??_fputc+5
  2100     038D  0821               	movf	??_fputc+1,w
  2101     038E  00A4               	movwf	??_fputc+4
  2102     038F  1803               	skipnc
  2103     0390  0AA4               	incf	??_fputc+4,f
  2104     0391  1F80               	btfss	0,7
  2105     0392  2B94               	goto	u1400
  2106     0393  03A4               	decf	??_fputc+4,f
  2107     0394                     u1400:
  2108     0394  1283               	bcf	3,5	;RP0=0, select bank0
  2109     0395  1303               	bcf	3,6	;RP1=0, select bank0
  2110     0396  0824               	movf	??_fputc+4,w
  2111     0397  00A6               	movwf	??_fputc+6
  2112     0398  0825               	movf	??_fputc+5,w
  2113     0399  0084               	movwf	4
  2114     039A  1783               	bsf	3,7
  2115     039B  1C26               	btfss	??_fputc+6,0
  2116     039C  1383               	bcf	3,7
  2117     039D  0872               	movf	fputc@c,w
  2118     039E  0080               	movwf	0
  2119     039F  0874               	movf	fputc@fp,w
  2120     03A0  3E02               	addlw	2
  2121     03A1  00A0               	movwf	??_fputc
  2122     03A2  0875               	movf	fputc@fp+1,w
  2123     03A3  1803               	skipnc
  2124     03A4  3E01               	addlw	1
  2125     03A5  3E00               	addlw	0
  2126     03A6  00A1               	movwf	??_fputc+1
  2127     03A7  0820               	movf	??_fputc,w
  2128     03A8  0084               	movwf	4
  2129     03A9  1783               	bsf	3,7
  2130     03AA  1C21               	btfss	??_fputc+1,0
  2131     03AB  1383               	bcf	3,7
  2132     03AC  3001               	movlw	1
  2133     03AD  0780               	addwf	0,f
  2134     03AE  0A84               	incf	4,f
  2135     03AF  1803               	skipnc
  2136     03B0  0A80               	incf	0,f
  2137     03B1                     l794:
  2138     03B1  0008               	return
  2139     03B2                     __end_of_fputc:
  2140                           
  2141                           	psect	text8
  2142     077C                     __ptext8:	
  2143 ;; *************** function _putch *****************
  2144 ;; Defined at:
  2145 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  c               1    wreg     unsigned char 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  c               1    0[COMMON] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2159 ;;      Params:         0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0
  2162 ;;      Totals:         0       0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 1
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_fputc
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173     077C                     _putch:	
  2174                           ;psect for function _putch
  2175                           
  2176     077C                     l805:	
  2177                           ;incstack = 0
  2178 ;; hardware stack exceeded
  2179                           ; Regs used in _putch: [wreg]
  2180                           
  2181     077C  0008               	return
  2182     077D                     __end_of_putch:
  2183                           
  2184                           	psect	text9
  2185     0603                     __ptext9:	
  2186 ;; *************** function ___lwmod *****************
  2187 ;; Defined at:
  2188 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  divisor         2    2[COMMON] unsigned int 
  2191 ;;  dividend        2    4[COMMON] unsigned int 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  counter         1    6[COMMON] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  2    2[COMMON] unsigned int 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         4       0       0       0       0
  2204 ;;      Locals:         1       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0
  2206 ;;      Totals:         5       0       0       0       0
  2207 ;;Total ram usage:        5 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 1
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;;		_utoa
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218     0603                     ___lwmod:	
  2219                           ;psect for function ___lwmod
  2220                           
  2221     0603                     l1651:	
  2222                           ;incstack = 0
  2223                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2224                           
  2225     0603  0872               	movf	___lwmod@divisor,w
  2226     0604  0473               	iorwf	___lwmod@divisor+1,w
  2227     0605  1903               	btfsc	3,2
  2228     0606  2E08               	goto	u1531
  2229     0607  2E09               	goto	u1530
  2230     0608                     u1531:
  2231     0608  2E36               	goto	l1669
  2232     0609                     u1530:
  2233     0609                     l1653:
  2234     0609  3001               	movlw	1
  2235     060A  00F6               	movwf	___lwmod@counter
  2236     060B  2E15               	goto	l1659
  2237     060C                     l1655:
  2238     060C  3001               	movlw	1
  2239     060D                     u1545:
  2240     060D  1003               	clrc
  2241     060E  0DF2               	rlf	___lwmod@divisor,f
  2242     060F  0DF3               	rlf	___lwmod@divisor+1,f
  2243     0610  3EFF               	addlw	-1
  2244     0611  1D03               	skipz
  2245     0612  2E0D               	goto	u1545
  2246     0613                     l1657:
  2247     0613  3001               	movlw	1
  2248     0614  07F6               	addwf	___lwmod@counter,f
  2249     0615                     l1659:
  2250     0615  1FF3               	btfss	___lwmod@divisor+1,7
  2251     0616  2E18               	goto	u1551
  2252     0617  2E19               	goto	u1550
  2253     0618                     u1551:
  2254     0618  2E0C               	goto	l1655
  2255     0619                     u1550:
  2256     0619                     l1661:
  2257     0619  0873               	movf	___lwmod@divisor+1,w
  2258     061A  0275               	subwf	___lwmod@dividend+1,w
  2259     061B  1D03               	skipz
  2260     061C  2E1F               	goto	u1565
  2261     061D  0872               	movf	___lwmod@divisor,w
  2262     061E  0274               	subwf	___lwmod@dividend,w
  2263     061F                     u1565:
  2264     061F  1C03               	skipc
  2265     0620  2E22               	goto	u1561
  2266     0621  2E23               	goto	u1560
  2267     0622                     u1561:
  2268     0622  2E29               	goto	l1665
  2269     0623                     u1560:
  2270     0623                     l1663:
  2271     0623  0872               	movf	___lwmod@divisor,w
  2272     0624  02F4               	subwf	___lwmod@dividend,f
  2273     0625  0873               	movf	___lwmod@divisor+1,w
  2274     0626  1C03               	skipc
  2275     0627  03F5               	decf	___lwmod@dividend+1,f
  2276     0628  02F5               	subwf	___lwmod@dividend+1,f
  2277     0629                     l1665:
  2278     0629  3001               	movlw	1
  2279     062A                     u1575:
  2280     062A  1003               	clrc
  2281     062B  0CF3               	rrf	___lwmod@divisor+1,f
  2282     062C  0CF2               	rrf	___lwmod@divisor,f
  2283     062D  3EFF               	addlw	-1
  2284     062E  1D03               	skipz
  2285     062F  2E2A               	goto	u1575
  2286     0630                     l1667:
  2287     0630  3001               	movlw	1
  2288     0631  02F6               	subwf	___lwmod@counter,f
  2289     0632  1D03               	btfss	3,2
  2290     0633  2E35               	goto	u1581
  2291     0634  2E36               	goto	u1580
  2292     0635                     u1581:
  2293     0635  2E19               	goto	l1661
  2294     0636                     u1580:
  2295     0636                     l1669:
  2296     0636  0875               	movf	___lwmod@dividend+1,w
  2297     0637  00F3               	movwf	?___lwmod+1
  2298     0638  0874               	movf	___lwmod@dividend,w
  2299     0639  00F2               	movwf	?___lwmod
  2300     063A                     l544:
  2301     063A  0008               	return
  2302     063B                     __end_of___lwmod:
  2303                           
  2304                           	psect	text10
  2305     05C1                     __ptext10:	
  2306 ;; *************** function ___lwdiv *****************
  2307 ;; Defined at:
  2308 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  divisor         2    2[COMMON] unsigned int 
  2311 ;;  dividend        2    4[COMMON] unsigned int 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  quotient        2    7[COMMON] unsigned int 
  2314 ;;  counter         1    6[COMMON] unsigned char 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  2    2[COMMON] unsigned int 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2324 ;;      Params:         4       0       0       0       0
  2325 ;;      Locals:         3       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0
  2327 ;;      Totals:         7       0       0       0       0
  2328 ;;Total ram usage:        7 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; Hardware stack levels required when called: 1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;;		_utoa
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339     05C1                     ___lwdiv:	
  2340                           ;psect for function ___lwdiv
  2341                           
  2342     05C1                     l1625:	
  2343                           ;incstack = 0
  2344                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2345                           
  2346     05C1  01F7               	clrf	___lwdiv@quotient
  2347     05C2  01F8               	clrf	___lwdiv@quotient+1
  2348     05C3                     l1627:
  2349     05C3  0872               	movf	___lwdiv@divisor,w
  2350     05C4  0473               	iorwf	___lwdiv@divisor+1,w
  2351     05C5  1903               	btfsc	3,2
  2352     05C6  2DC8               	goto	u1461
  2353     05C7  2DC9               	goto	u1460
  2354     05C8                     u1461:
  2355     05C8  2DFE               	goto	l1647
  2356     05C9                     u1460:
  2357     05C9                     l1629:
  2358     05C9  3001               	movlw	1
  2359     05CA  00F6               	movwf	___lwdiv@counter
  2360     05CB  2DD5               	goto	l1635
  2361     05CC                     l1631:
  2362     05CC  3001               	movlw	1
  2363     05CD                     u1475:
  2364     05CD  1003               	clrc
  2365     05CE  0DF2               	rlf	___lwdiv@divisor,f
  2366     05CF  0DF3               	rlf	___lwdiv@divisor+1,f
  2367     05D0  3EFF               	addlw	-1
  2368     05D1  1D03               	skipz
  2369     05D2  2DCD               	goto	u1475
  2370     05D3                     l1633:
  2371     05D3  3001               	movlw	1
  2372     05D4  07F6               	addwf	___lwdiv@counter,f
  2373     05D5                     l1635:
  2374     05D5  1FF3               	btfss	___lwdiv@divisor+1,7
  2375     05D6  2DD8               	goto	u1481
  2376     05D7  2DD9               	goto	u1480
  2377     05D8                     u1481:
  2378     05D8  2DCC               	goto	l1631
  2379     05D9                     u1480:
  2380     05D9                     l1637:
  2381     05D9  3001               	movlw	1
  2382     05DA                     u1495:
  2383     05DA  1003               	clrc
  2384     05DB  0DF7               	rlf	___lwdiv@quotient,f
  2385     05DC  0DF8               	rlf	___lwdiv@quotient+1,f
  2386     05DD  3EFF               	addlw	-1
  2387     05DE  1D03               	skipz
  2388     05DF  2DDA               	goto	u1495
  2389     05E0  0873               	movf	___lwdiv@divisor+1,w
  2390     05E1  0275               	subwf	___lwdiv@dividend+1,w
  2391     05E2  1D03               	skipz
  2392     05E3  2DE6               	goto	u1505
  2393     05E4  0872               	movf	___lwdiv@divisor,w
  2394     05E5  0274               	subwf	___lwdiv@dividend,w
  2395     05E6                     u1505:
  2396     05E6  1C03               	skipc
  2397     05E7  2DE9               	goto	u1501
  2398     05E8  2DEA               	goto	u1500
  2399     05E9                     u1501:
  2400     05E9  2DF1               	goto	l1643
  2401     05EA                     u1500:
  2402     05EA                     l1639:
  2403     05EA  0872               	movf	___lwdiv@divisor,w
  2404     05EB  02F4               	subwf	___lwdiv@dividend,f
  2405     05EC  0873               	movf	___lwdiv@divisor+1,w
  2406     05ED  1C03               	skipc
  2407     05EE  03F5               	decf	___lwdiv@dividend+1,f
  2408     05EF  02F5               	subwf	___lwdiv@dividend+1,f
  2409     05F0                     l1641:
  2410     05F0  1477               	bsf	___lwdiv@quotient,0
  2411     05F1                     l1643:
  2412     05F1  3001               	movlw	1
  2413     05F2                     u1515:
  2414     05F2  1003               	clrc
  2415     05F3  0CF3               	rrf	___lwdiv@divisor+1,f
  2416     05F4  0CF2               	rrf	___lwdiv@divisor,f
  2417     05F5  3EFF               	addlw	-1
  2418     05F6  1D03               	skipz
  2419     05F7  2DF2               	goto	u1515
  2420     05F8                     l1645:
  2421     05F8  3001               	movlw	1
  2422     05F9  02F6               	subwf	___lwdiv@counter,f
  2423     05FA  1D03               	btfss	3,2
  2424     05FB  2DFD               	goto	u1521
  2425     05FC  2DFE               	goto	u1520
  2426     05FD                     u1521:
  2427     05FD  2DD9               	goto	l1637
  2428     05FE                     u1520:
  2429     05FE                     l1647:
  2430     05FE  0878               	movf	___lwdiv@quotient+1,w
  2431     05FF  00F3               	movwf	?___lwdiv+1
  2432     0600  0877               	movf	___lwdiv@quotient,w
  2433     0601  00F2               	movwf	?___lwdiv
  2434     0602                     l534:
  2435     0602  0008               	return
  2436     0603                     __end_of___lwdiv:
  2437                           
  2438                           	psect	text11
  2439     04C2                     __ptext11:	
  2440 ;; *************** function _read_prec_or_width *****************
  2441 ;; Defined at:
  2442 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  fmt             1    8[COMMON] PTR PTR const unsigned c
  2445 ;;		 -> vfprintf@cfmt(1), 
  2446 ;;  ap              1    9[COMMON] PTR PTR void [1]
  2447 ;;		 -> sprintf@ap(1), 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  c               1    0[BANK0 ] unsigned char 
  2450 ;;  n               2    1[BANK0 ] int 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  2    8[COMMON] int 
  2453 ;; Registers used:
  2454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2460 ;;      Params:         2       0       0       0       0
  2461 ;;      Locals:         0       3       0       0       0
  2462 ;;      Temps:          0       0       0       0       0
  2463 ;;      Totals:         2       3       0       0       0
  2464 ;;Total ram usage:        5 bytes
  2465 ;; Hardware stack levels used: 1
  2466 ;; Hardware stack levels required when called: 2
  2467 ;; This function calls:
  2468 ;;		___wmul
  2469 ;; This function is called by:
  2470 ;;		_vfpfcnvrt
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474     04C2                     _read_prec_or_width:	
  2475                           ;psect for function _read_prec_or_width
  2476                           
  2477     04C2                     l1719:	
  2478                           ;incstack = 0
  2479                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2480                           
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2483     04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2484     04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2485     04C4  01A1               	clrf	read_prec_or_width@n
  2486     04C5  01A2               	clrf	read_prec_or_width@n+1
  2487     04C6                     l1721:
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2490     04C6  0878               	movf	read_prec_or_width@fmt,w
  2491     04C7  0084               	movwf	4
  2492     04C8  1383               	bcf	3,7	;select IRP bank0
  2493     04C9  0800               	movf	0,w
  2494     04CA  0084               	movwf	4
  2495     04CB  120A  118A  2746  120A  118A  	fcall	stringdir
  2496     04D0  3A2A               	xorlw	42
  2497     04D1  1D03               	skipz
  2498     04D2  2CD4               	goto	u1681
  2499     04D3  2CD5               	goto	u1680
  2500     04D4                     u1681:
  2501     04D4  2D03               	goto	l1731
  2502     04D5                     u1680:
  2503     04D5                     l1723:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2506     04D5  0878               	movf	read_prec_or_width@fmt,w
  2507     04D6  0084               	movwf	4
  2508     04D7  3001               	movlw	1
  2509     04D8  0780               	addwf	0,f
  2510     04D9                     l1725:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2513     04D9  0879               	movf	read_prec_or_width@ap,w
  2514     04DA  0084               	movwf	4
  2515     04DB  0800               	movf	0,w
  2516     04DC  00FF               	movwf	btemp+1
  2517     04DD  3002               	movlw	2
  2518     04DE  0780               	addwf	0,f
  2519     04DF  087F               	movf	btemp+1,w
  2520     04E0  0084               	movwf	4
  2521     04E1  0800               	movf	0,w
  2522     04E2  00A1               	movwf	read_prec_or_width@n
  2523     04E3  0A84               	incf	4,f
  2524     04E4  0800               	movf	0,w
  2525     04E5  00A2               	movwf	read_prec_or_width@n+1
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2528     04E6  2D14               	goto	l1733
  2529     04E7                     l1727:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2532     04E7  0822               	movf	read_prec_or_width@n+1,w
  2533     04E8  00F3               	movwf	___wmul@multiplier+1
  2534     04E9  0821               	movf	read_prec_or_width@n,w
  2535     04EA  00F2               	movwf	___wmul@multiplier
  2536     04EB  300A               	movlw	10
  2537     04EC  00F4               	movwf	___wmul@multiplicand
  2538     04ED  3000               	movlw	0
  2539     04EE  00F5               	movwf	___wmul@multiplicand+1
  2540     04EF  120A  118A  26B7  120A  118A  	fcall	___wmul
  2541     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2542     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2543     04F6  0820               	movf	read_prec_or_width@c,w
  2544     04F7  0772               	addwf	?___wmul,w
  2545     04F8  00A1               	movwf	read_prec_or_width@n
  2546     04F9  3000               	movlw	0
  2547     04FA  1803               	skipnc
  2548     04FB  3001               	movlw	1
  2549     04FC  0773               	addwf	?___wmul+1,w
  2550     04FD  00A2               	movwf	read_prec_or_width@n+1
  2551     04FE                     l1729:
  2552                           
  2553                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2554     04FE  0878               	movf	read_prec_or_width@fmt,w
  2555     04FF  0084               	movwf	4
  2556     0500  3001               	movlw	1
  2557     0501  1383               	bcf	3,7	;select IRP bank0
  2558     0502  0780               	addwf	0,f
  2559     0503                     l1731:
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2562     0503  0878               	movf	read_prec_or_width@fmt,w
  2563     0504  0084               	movwf	4
  2564     0505  0800               	movf	0,w
  2565     0506  0084               	movwf	4
  2566     0507  120A  118A  2746  120A  118A  	fcall	stringdir
  2567     050C  3ED0               	addlw	208
  2568     050D  00A0               	movwf	read_prec_or_width@c
  2569     050E  300A               	movlw	10
  2570     050F  0220               	subwf	read_prec_or_width@c,w
  2571     0510  1C03               	skipc
  2572     0511  2D13               	goto	u1691
  2573     0512  2D14               	goto	u1690
  2574     0513                     u1691:
  2575     0513  2CE7               	goto	l1727
  2576     0514                     u1690:
  2577     0514                     l1733:
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2580     0514  0822               	movf	read_prec_or_width@n+1,w
  2581     0515  00F9               	movwf	?_read_prec_or_width+1
  2582     0516  0821               	movf	read_prec_or_width@n,w
  2583     0517  00F8               	movwf	?_read_prec_or_width
  2584     0518                     l758:
  2585     0518  0008               	return
  2586     0519                     __end_of_read_prec_or_width:
  2587                           
  2588                           	psect	text12
  2589     06B7                     __ptext12:	
  2590 ;; *************** function ___wmul *****************
  2591 ;; Defined at:
  2592 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  multiplier      2    2[COMMON] unsigned int 
  2595 ;;  multiplicand    2    4[COMMON] unsigned int 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  product         2    6[COMMON] unsigned int 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  2    2[COMMON] unsigned int 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         4       0       0       0       0
  2608 ;;      Locals:         2       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0
  2610 ;;      Totals:         6       0       0       0       0
  2611 ;;Total ram usage:        6 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; Hardware stack levels required when called: 1
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_read_prec_or_width
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621     06B7                     ___wmul:	
  2622                           ;psect for function ___wmul
  2623                           
  2624     06B7                     l1611:	
  2625                           ;incstack = 0
  2626                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2627                           
  2628     06B7  01F6               	clrf	___wmul@product
  2629     06B8  01F7               	clrf	___wmul@product+1
  2630     06B9                     l1613:
  2631     06B9  1C72               	btfss	___wmul@multiplier,0
  2632     06BA  2EBC               	goto	u1421
  2633     06BB  2EBD               	goto	u1420
  2634     06BC                     u1421:
  2635     06BC  2EC3               	goto	l254
  2636     06BD                     u1420:
  2637     06BD                     l1615:
  2638     06BD  0874               	movf	___wmul@multiplicand,w
  2639     06BE  07F6               	addwf	___wmul@product,f
  2640     06BF  1803               	skipnc
  2641     06C0  0AF7               	incf	___wmul@product+1,f
  2642     06C1  0875               	movf	___wmul@multiplicand+1,w
  2643     06C2  07F7               	addwf	___wmul@product+1,f
  2644     06C3                     l254:
  2645     06C3  3001               	movlw	1
  2646     06C4                     u1435:
  2647     06C4  1003               	clrc
  2648     06C5  0DF4               	rlf	___wmul@multiplicand,f
  2649     06C6  0DF5               	rlf	___wmul@multiplicand+1,f
  2650     06C7  3EFF               	addlw	-1
  2651     06C8  1D03               	skipz
  2652     06C9  2EC4               	goto	u1435
  2653     06CA                     l1617:
  2654     06CA  3001               	movlw	1
  2655     06CB                     u1445:
  2656     06CB  1003               	clrc
  2657     06CC  0CF3               	rrf	___wmul@multiplier+1,f
  2658     06CD  0CF2               	rrf	___wmul@multiplier,f
  2659     06CE  3EFF               	addlw	-1
  2660     06CF  1D03               	skipz
  2661     06D0  2ECB               	goto	u1445
  2662     06D1                     l1619:
  2663     06D1  0872               	movf	___wmul@multiplier,w
  2664     06D2  0473               	iorwf	___wmul@multiplier+1,w
  2665     06D3  1D03               	btfss	3,2
  2666     06D4  2ED6               	goto	u1451
  2667     06D5  2ED7               	goto	u1450
  2668     06D6                     u1451:
  2669     06D6  2EB9               	goto	l1613
  2670     06D7                     u1450:
  2671     06D7                     l1621:
  2672     06D7  0877               	movf	___wmul@product+1,w
  2673     06D8  00F3               	movwf	?___wmul+1
  2674     06D9  0876               	movf	___wmul@product,w
  2675     06DA  00F2               	movwf	?___wmul
  2676     06DB                     l256:
  2677     06DB  0008               	return
  2678     06DC                     __end_of___wmul:
  2679                           
  2680                           	psect	text13
  2681     0764                     __ptext13:	
  2682 ;; *************** function _TMR0_init *****************
  2683 ;; Defined at:
  2684 ;;		line 41 in file "main.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		None
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       0       0       0       0
  2699 ;;      Locals:         0       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0
  2701 ;;      Totals:         0       0       0       0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; Hardware stack levels required when called: 1
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_main
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712     0764                     _TMR0_init:	
  2713                           ;psect for function _TMR0_init
  2714                           
  2715     0764                     l1849:	
  2716                           ;incstack = 0
  2717                           ; Regs used in _TMR0_init: []
  2718                           
  2719                           
  2720                           ;main.c: 43:     LCD_putrs("Tiempo:");
  2721     0764  3007               	movlw	7
  2722     0765  1683               	bsf	3,5	;RP0=1, select bank1
  2723     0766  1303               	bcf	3,6	;RP1=0, select bank1
  2724     0767  0081               	movwf	1	;volatile
  2725                           
  2726                           ;main.c: 44: 
  2727     0768  30D9               	movlw	217
  2728     0769  1283               	bcf	3,5	;RP0=0, select bank0
  2729     076A  1303               	bcf	3,6	;RP1=0, select bank0
  2730     076B  0081               	movwf	1	;volatile
  2731                           
  2732                           ;main.c: 45:     do { if ( 1 == 0 ) { do { LCD_Write( (0x80 + 0 & 0xF0) >> 4 ); LCD_Writ
      +                          e( 0x80 + 0 & 0x0F); } while ( 0 ); } else if ( 1 == 1 ) { do { LCD_Write( (0xC0 + 0 & 0
      +                          xF0) >> 4 ); LCD_Write( 0xC0 + 0 & 0x0F); } while ( 0 ); } else if ( 1 == 2 ) { do { LCD
      +                          _Write( (0x94 + 0 & 0xF0) >> 4 ); LCD_Write( 0x94 + 0 & 0x0F); } while ( 0 ); } else if 
      +                          ( 1 == 3 ) { do { LCD_Write( (0xD4 + 0 & 0xF0) >> 4 ); LCD_Write( 0xD4 + 0 & 0x0F); } wh
      +                          ile ( 0 ); } } while ( 0 );
  2733     076C  168B               	bsf	11,5	;volatile
  2734                           
  2735                           ;main.c: 46:     LCD_putrs("00:00");
  2736     076D  178B               	bsf	11,7	;volatile
  2737     076E                     l33:
  2738     076E  0008               	return
  2739     076F                     __end_of_TMR0_init:
  2740                           
  2741                           	psect	text14
  2742     06DC                     __ptext14:	
  2743 ;; *************** function _LCD_puts *****************
  2744 ;; Defined at:
  2745 ;;		line 128 in file "lcd.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  a               1    8[COMMON] PTR unsigned char 
  2748 ;;		 -> exec(6), 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;  i               2    0[BANK0 ] int 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2760 ;;      Params:         1       0       0       0       0
  2761 ;;      Locals:         0       2       0       0       0
  2762 ;;      Temps:          1       0       0       0       0
  2763 ;;      Totals:         2       2       0       0       0
  2764 ;;Total ram usage:        4 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 3
  2767 ;; This function calls:
  2768 ;;		_LCD_putc
  2769 ;; This function is called by:
  2770 ;;		_main
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774     06DC                     _LCD_puts:	
  2775                           ;psect for function _LCD_puts
  2776                           
  2777     06DC                     l1919:	
  2778                           ;incstack = 0
  2779                           ; Regs used in _LCD_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2780                           
  2781                           
  2782                           ;lcd.c: 130:     for ( int i = 0; a[i] != '\0'; ++i ) {
  2783     06DC  1283               	bcf	3,5	;RP0=0, select bank0
  2784     06DD  1303               	bcf	3,6	;RP1=0, select bank0
  2785     06DE  01A0               	clrf	LCD_puts@i
  2786     06DF  01A1               	clrf	LCD_puts@i+1
  2787     06E0  2EF4               	goto	l1925
  2788     06E1                     l1921:
  2789                           
  2790                           ;lcd.c: 131:         LCD_putc(a[i]);
  2791     06E1  0820               	movf	LCD_puts@i,w
  2792     06E2  0778               	addwf	LCD_puts@a,w
  2793     06E3  00F9               	movwf	??_LCD_puts
  2794     06E4  0879               	movf	??_LCD_puts,w
  2795     06E5  0084               	movwf	4
  2796     06E6  0800               	movf	0,w
  2797     06E7  120A  118A  23B2  120A  118A  	fcall	_LCD_putc
  2798     06EC                     l1923:
  2799                           
  2800                           ;lcd.c: 132:     }
  2801     06EC  3001               	movlw	1
  2802     06ED  1283               	bcf	3,5	;RP0=0, select bank0
  2803     06EE  1303               	bcf	3,6	;RP1=0, select bank0
  2804     06EF  07A0               	addwf	LCD_puts@i,f
  2805     06F0  1803               	skipnc
  2806     06F1  0AA1               	incf	LCD_puts@i+1,f
  2807     06F2  3000               	movlw	0
  2808     06F3  07A1               	addwf	LCD_puts@i+1,f
  2809     06F4                     l1925:
  2810     06F4  0820               	movf	LCD_puts@i,w
  2811     06F5  0778               	addwf	LCD_puts@a,w
  2812     06F6  00F9               	movwf	??_LCD_puts
  2813     06F7  0879               	movf	??_LCD_puts,w
  2814     06F8  0084               	movwf	4
  2815     06F9  1383               	bcf	3,7	;select IRP bank0
  2816     06FA  0800               	movf	0,w
  2817     06FB  1D03               	btfss	3,2
  2818     06FC  2EFE               	goto	u2011
  2819     06FD  2EFF               	goto	u2010
  2820     06FE                     u2011:
  2821     06FE  2EE1               	goto	l1921
  2822     06FF                     u2010:
  2823     06FF                     l162:
  2824     06FF  0008               	return
  2825     0700                     __end_of_LCD_puts:
  2826                           
  2827                           	psect	text15
  2828     068F                     __ptext15:	
  2829 ;; *************** function _LCD_putrs *****************
  2830 ;; Defined at:
  2831 ;;		line 136 in file "lcd.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  a               1    8[COMMON] PTR const unsigned char 
  2834 ;;		 -> STR_2(6), STR_1(8), 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  i               2    0[BANK0 ] int 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         1       0       0       0       0
  2847 ;;      Locals:         0       2       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         1       2       0       0       0
  2850 ;;Total ram usage:        3 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 3
  2853 ;; This function calls:
  2854 ;;		_LCD_putc
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860     068F                     _LCD_putrs:	
  2861                           ;psect for function _LCD_putrs
  2862                           
  2863     068F                     l1897:	
  2864                           ;incstack = 0
  2865                           ; Regs used in _LCD_putrs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2866                           
  2867                           
  2868                           ;lcd.c: 138:     for ( int i = 0; a[i] != '\0'; ++i ) {
  2869     068F  1283               	bcf	3,5	;RP0=0, select bank0
  2870     0690  1303               	bcf	3,6	;RP1=0, select bank0
  2871     0691  01A0               	clrf	LCD_putrs@i
  2872     0692  01A1               	clrf	LCD_putrs@i+1
  2873     0693  2EA9               	goto	l1903
  2874     0694                     l1899:
  2875                           
  2876                           ;lcd.c: 139:         LCD_putc(a[i]);
  2877     0694  0820               	movf	LCD_putrs@i,w
  2878     0695  0778               	addwf	LCD_putrs@a,w
  2879     0696  0084               	movwf	4
  2880     0697  120A  118A  2746  120A  118A  	fcall	stringdir
  2881     069C  120A  118A  23B2  120A  118A  	fcall	_LCD_putc
  2882     06A1                     l1901:
  2883                           
  2884                           ;lcd.c: 140:     }
  2885     06A1  3001               	movlw	1
  2886     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  2887     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  2888     06A4  07A0               	addwf	LCD_putrs@i,f
  2889     06A5  1803               	skipnc
  2890     06A6  0AA1               	incf	LCD_putrs@i+1,f
  2891     06A7  3000               	movlw	0
  2892     06A8  07A1               	addwf	LCD_putrs@i+1,f
  2893     06A9                     l1903:
  2894     06A9  0820               	movf	LCD_putrs@i,w
  2895     06AA  0778               	addwf	LCD_putrs@a,w
  2896     06AB  0084               	movwf	4
  2897     06AC  120A  118A  2746  120A  118A  	fcall	stringdir
  2898     06B1  3A00               	xorlw	0
  2899     06B2  1D03               	skipz
  2900     06B3  2EB5               	goto	u2001
  2901     06B4  2EB6               	goto	u2000
  2902     06B5                     u2001:
  2903     06B5  2E94               	goto	l1899
  2904     06B6                     u2000:
  2905     06B6                     l168:
  2906     06B6  0008               	return
  2907     06B7                     __end_of_LCD_putrs:
  2908                           
  2909                           	psect	text16
  2910     03B2                     __ptext16:	
  2911 ;; *************** function _LCD_putc *****************
  2912 ;; Defined at:
  2913 ;;		line 111 in file "lcd.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  c               1    wreg     unsigned char 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  c               1    7[COMMON] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2927 ;;      Params:         0       0       0       0       0
  2928 ;;      Locals:         1       0       0       0       0
  2929 ;;      Temps:          2       0       0       0       0
  2930 ;;      Totals:         3       0       0       0       0
  2931 ;;Total ram usage:        3 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 2
  2934 ;; This function calls:
  2935 ;;		_LCD_Out
  2936 ;; This function is called by:
  2937 ;;		_LCD_puts
  2938 ;;		_LCD_putrs
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942     03B2                     _LCD_putc:	
  2943                           ;psect for function _LCD_putc
  2944                           
  2945                           
  2946                           ;incstack = 0
  2947                           ; Regs used in _LCD_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2948                           ;LCD_putc@c stored from wreg
  2949     03B2  00F7               	movwf	LCD_putc@c
  2950     03B3                     l1823:
  2951                           
  2952                           ;lcd.c: 113:    *(lcd.PORT) |= 1 << lcd.RS;
  2953     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2954     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2955     03B5  0869               	movf	_lcd,w
  2956     03B6  0084               	movwf	4
  2957     03B7  1783               	bsf	3,7
  2958     03B8  1C6A               	btfss	_lcd+1,0
  2959     03B9  1383               	bcf	3,7
  2960     03BA  3001               	movlw	1
  2961     03BB  00F5               	movwf	??_LCD_putc
  2962     03BC  086B               	movf	_lcd+2,w
  2963     03BD  3907               	andlw	7
  2964     03BE  3E01               	addlw	1
  2965     03BF  2BC2               	goto	u1894
  2966     03C0                     u1895:
  2967     03C0  1003               	clrc
  2968     03C1  0DF5               	rlf	??_LCD_putc,f
  2969     03C2                     u1894:
  2970     03C2  3EFF               	addlw	-1
  2971     03C3  1D03               	skipz
  2972     03C4  2BC0               	goto	u1895
  2973     03C5  0875               	movf	??_LCD_putc,w
  2974     03C6  0480               	iorwf	0,f
  2975     03C7                     l1825:
  2976                           
  2977                           ;lcd.c: 114:     LCD_Out((c & 0xF0) >> 4);
  2978     03C7  0877               	movf	LCD_putc@c,w
  2979     03C8  00F5               	movwf	??_LCD_putc
  2980     03C9  3004               	movlw	4
  2981     03CA                     u1905:
  2982     03CA  1003               	clrc
  2983     03CB  0CF5               	rrf	??_LCD_putc,f
  2984     03CC  3EFF               	addlw	-1
  2985     03CD  1D03               	skipz
  2986     03CE  2BCA               	goto	u1905
  2987     03CF  0875               	movf	??_LCD_putc,w
  2988     03D0  390F               	andlw	15
  2989     03D1  120A  118A  2043  120A  118A  	fcall	_LCD_Out
  2990     03D6                     l1827:
  2991                           
  2992                           ;lcd.c: 116:     *(lcd.PORT) |= 1 << lcd.EN;
  2993     03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2994     03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2995     03D8  0869               	movf	_lcd,w
  2996     03D9  0084               	movwf	4
  2997     03DA  1783               	bsf	3,7
  2998     03DB  1C6A               	btfss	_lcd+1,0
  2999     03DC  1383               	bcf	3,7
  3000     03DD  3001               	movlw	1
  3001     03DE  00F5               	movwf	??_LCD_putc
  3002     03DF  0C6B               	rrf	_lcd+2,w
  3003     03E0  00F6               	movwf	??_LCD_putc+1
  3004     03E1  0CF6               	rrf	??_LCD_putc+1,f
  3005     03E2  0C76               	rrf	??_LCD_putc+1,w
  3006     03E3  3907               	andlw	7
  3007     03E4  3E01               	addlw	1
  3008     03E5  2BE8               	goto	u1914
  3009     03E6                     u1915:
  3010     03E6  1003               	clrc
  3011     03E7  0DF5               	rlf	??_LCD_putc,f
  3012     03E8                     u1914:
  3013     03E8  3EFF               	addlw	-1
  3014     03E9  1D03               	skipz
  3015     03EA  2BE6               	goto	u1915
  3016     03EB  0875               	movf	??_LCD_putc,w
  3017     03EC  0480               	iorwf	0,f
  3018     03ED                     l1829:
  3019                           
  3020                           ;lcd.c: 117:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3021     03ED  300D               	movlw	13
  3022     03EE  00F5               	movwf	??_LCD_putc
  3023     03EF                     u2027:
  3024     03EF  0BF5               	decfsz	??_LCD_putc,f
  3025     03F0  2BEF               	goto	u2027
  3026     03F1                     l1831:
  3027                           
  3028                           ;lcd.c: 118:     *(lcd.PORT) &= ~(1 << lcd.EN);
  3029     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  3030     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  3031     03F3  0869               	movf	_lcd,w
  3032     03F4  0084               	movwf	4
  3033     03F5  1783               	bsf	3,7
  3034     03F6  1C6A               	btfss	_lcd+1,0
  3035     03F7  1383               	bcf	3,7
  3036     03F8  3001               	movlw	1
  3037     03F9  00F5               	movwf	??_LCD_putc
  3038     03FA  0C6B               	rrf	_lcd+2,w
  3039     03FB  00F6               	movwf	??_LCD_putc+1
  3040     03FC  0CF6               	rrf	??_LCD_putc+1,f
  3041     03FD  0C76               	rrf	??_LCD_putc+1,w
  3042     03FE  3907               	andlw	7
  3043     03FF  3E01               	addlw	1
  3044     0400  2C03               	goto	u1924
  3045     0401                     u1925:
  3046     0401  1003               	clrc
  3047     0402  0DF5               	rlf	??_LCD_putc,f
  3048     0403                     u1924:
  3049     0403  3EFF               	addlw	-1
  3050     0404  1D03               	skipz
  3051     0405  2C01               	goto	u1925
  3052     0406  0875               	movf	??_LCD_putc,w
  3053     0407  3AFF               	xorlw	255
  3054     0408  0580               	andwf	0,f
  3055     0409                     l1833:
  3056                           
  3057                           ;lcd.c: 120:     LCD_Out(c & 0x0F);
  3058     0409  0877               	movf	LCD_putc@c,w
  3059     040A  390F               	andlw	15
  3060     040B  120A  118A  2043  120A  118A  	fcall	_LCD_Out
  3061     0410                     l1835:
  3062                           
  3063                           ;lcd.c: 122:     *(lcd.PORT) |= 1 << lcd.EN;
  3064     0410  1283               	bcf	3,5	;RP0=0, select bank0
  3065     0411  1303               	bcf	3,6	;RP1=0, select bank0
  3066     0412  0869               	movf	_lcd,w
  3067     0413  0084               	movwf	4
  3068     0414  1783               	bsf	3,7
  3069     0415  1C6A               	btfss	_lcd+1,0
  3070     0416  1383               	bcf	3,7
  3071     0417  3001               	movlw	1
  3072     0418  00F5               	movwf	??_LCD_putc
  3073     0419  0C6B               	rrf	_lcd+2,w
  3074     041A  00F6               	movwf	??_LCD_putc+1
  3075     041B  0CF6               	rrf	??_LCD_putc+1,f
  3076     041C  0C76               	rrf	??_LCD_putc+1,w
  3077     041D  3907               	andlw	7
  3078     041E  3E01               	addlw	1
  3079     041F  2C22               	goto	u1934
  3080     0420                     u1935:
  3081     0420  1003               	clrc
  3082     0421  0DF5               	rlf	??_LCD_putc,f
  3083     0422                     u1934:
  3084     0422  3EFF               	addlw	-1
  3085     0423  1D03               	skipz
  3086     0424  2C20               	goto	u1935
  3087     0425  0875               	movf	??_LCD_putc,w
  3088     0426  0480               	iorwf	0,f
  3089                           
  3090                           ;lcd.c: 123:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3091     0427  300D               	movlw	13
  3092     0428  00F5               	movwf	??_LCD_putc
  3093     0429                     u2037:
  3094     0429  0BF5               	decfsz	??_LCD_putc,f
  3095     042A  2C29               	goto	u2037
  3096     042B                     l1837:
  3097                           
  3098                           ;lcd.c: 124:     *(lcd.PORT) &= ~(1 << lcd.EN);
  3099     042B  1283               	bcf	3,5	;RP0=0, select bank0
  3100     042C  1303               	bcf	3,6	;RP1=0, select bank0
  3101     042D  0869               	movf	_lcd,w
  3102     042E  0084               	movwf	4
  3103     042F  1783               	bsf	3,7
  3104     0430  1C6A               	btfss	_lcd+1,0
  3105     0431  1383               	bcf	3,7
  3106     0432  3001               	movlw	1
  3107     0433  00F5               	movwf	??_LCD_putc
  3108     0434  0C6B               	rrf	_lcd+2,w
  3109     0435  00F6               	movwf	??_LCD_putc+1
  3110     0436  0CF6               	rrf	??_LCD_putc+1,f
  3111     0437  0C76               	rrf	??_LCD_putc+1,w
  3112     0438  3907               	andlw	7
  3113     0439  3E01               	addlw	1
  3114     043A  2C3D               	goto	u1944
  3115     043B                     u1945:
  3116     043B  1003               	clrc
  3117     043C  0DF5               	rlf	??_LCD_putc,f
  3118     043D                     u1944:
  3119     043D  3EFF               	addlw	-1
  3120     043E  1D03               	skipz
  3121     043F  2C3B               	goto	u1945
  3122     0440  0875               	movf	??_LCD_putc,w
  3123     0441  3AFF               	xorlw	255
  3124     0442  0580               	andwf	0,f
  3125     0443                     l156:
  3126     0443  0008               	return
  3127     0444                     __end_of_LCD_putc:
  3128                           
  3129                           	psect	text17
  3130     0262                     __ptext17:	
  3131 ;; *************** function _LCD_Init *****************
  3132 ;; Defined at:
  3133 ;;		line 53 in file "lcd.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  display         5    0[BANK0 ] struct .
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  cmd             1    5[BANK0 ] unsigned char 
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      _Bool 
  3140 ;; Registers used:
  3141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3147 ;;      Params:         0       5       0       0       0
  3148 ;;      Locals:         0       1       0       0       0
  3149 ;;      Temps:          2       0       0       0       0
  3150 ;;      Totals:         2       6       0       0       0
  3151 ;;Total ram usage:        8 bytes
  3152 ;; Hardware stack levels used: 1
  3153 ;; Hardware stack levels required when called: 3
  3154 ;; This function calls:
  3155 ;;		_LCD_Write
  3156 ;; This function is called by:
  3157 ;;		_main
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161     0262                     _LCD_Init:	
  3162                           ;psect for function _LCD_Init
  3163                           
  3164     0262                     l1851:	
  3165                           ;incstack = 0
  3166                           ; Regs used in _LCD_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3167                           
  3168                           
  3169                           ;lcd.c: 55:     lcd = display;
  3170     0262  3069               	movlw	_lcd& (0+255)
  3171     0263  0084               	movwf	4
  3172     0264  1283               	bcf	3,5	;RP0=0, select bank0
  3173     0265  1303               	bcf	3,6	;RP1=0, select bank0
  3174     0266  0820               	movf	LCD_Init@display,w
  3175     0267  1383               	bcf	3,7	;select IRP bank0
  3176     0268  0080               	movwf	0
  3177     0269  0A84               	incf	4,f
  3178     026A  0821               	movf	LCD_Init@display+1,w
  3179     026B  0080               	movwf	0
  3180     026C  0A84               	incf	4,f
  3181     026D  0822               	movf	LCD_Init@display+2,w
  3182     026E  0080               	movwf	0
  3183     026F  0A84               	incf	4,f
  3184     0270  0823               	movf	LCD_Init@display+3,w
  3185     0271  0080               	movwf	0
  3186     0272  0A84               	incf	4,f
  3187     0273  0824               	movf	LCD_Init@display+4,w
  3188     0274  0080               	movwf	0
  3189     0275                     l1853:
  3190                           
  3191                           ;lcd.c: 64:     if ( lcd.PORT == &PORTA ) {
  3192     0275  3000               	movlw	0
  3193     0276  066A               	xorwf	_lcd+1,w
  3194     0277  1D03               	skipz
  3195     0278  2A7B               	goto	u1965
  3196     0279  3005               	movlw	5
  3197     027A  0669               	xorwf	_lcd,w
  3198     027B                     u1965:
  3199     027B  1D03               	skipz
  3200     027C  2A7E               	goto	u1961
  3201     027D  2A7F               	goto	u1960
  3202     027E                     u1961:
  3203     027E  2A83               	goto	l1857
  3204     027F                     u1960:
  3205     027F                     l1855:
  3206                           
  3207                           ;lcd.c: 65:         TRISA = 0x00;
  3208     027F  1683               	bsf	3,5	;RP0=1, select bank1
  3209     0280  1303               	bcf	3,6	;RP1=0, select bank1
  3210     0281  0185               	clrf	5	;volatile
  3211                           
  3212                           ;lcd.c: 66:     }
  3213     0282  2A9E               	goto	l1865
  3214     0283                     l1857:
  3215     0283  3000               	movlw	0
  3216     0284  066A               	xorwf	_lcd+1,w
  3217     0285  1D03               	skipz
  3218     0286  2A89               	goto	u1975
  3219     0287  3006               	movlw	6
  3220     0288  0669               	xorwf	_lcd,w
  3221     0289                     u1975:
  3222     0289  1D03               	skipz
  3223     028A  2A8C               	goto	u1971
  3224     028B  2A8D               	goto	u1970
  3225     028C                     u1971:
  3226     028C  2A91               	goto	l1861
  3227     028D                     u1970:
  3228     028D                     l1859:
  3229                           
  3230                           ;lcd.c: 68:         TRISB = 0x00;
  3231     028D  1683               	bsf	3,5	;RP0=1, select bank1
  3232     028E  1303               	bcf	3,6	;RP1=0, select bank1
  3233     028F  0186               	clrf	6	;volatile
  3234                           
  3235                           ;lcd.c: 69:     }
  3236     0290  2A9E               	goto	l1865
  3237     0291                     l1861:
  3238     0291  3000               	movlw	0
  3239     0292  066A               	xorwf	_lcd+1,w
  3240     0293  1D03               	skipz
  3241     0294  2A97               	goto	u1985
  3242     0295  3007               	movlw	7
  3243     0296  0669               	xorwf	_lcd,w
  3244     0297                     u1985:
  3245     0297  1D03               	skipz
  3246     0298  2A9A               	goto	u1981
  3247     0299  2A9B               	goto	u1980
  3248     029A                     u1981:
  3249     029A  2B11               	goto	l140
  3250     029B                     u1980:
  3251     029B                     l1863:
  3252                           
  3253                           ;lcd.c: 71:         TRISC = 0x00;
  3254     029B  1683               	bsf	3,5	;RP0=1, select bank1
  3255     029C  1303               	bcf	3,6	;RP1=0, select bank1
  3256     029D  0187               	clrf	7	;volatile
  3257     029E                     l1865:	
  3258                           ;lcd.c: 72:     }
  3259                           
  3260                           
  3261                           ;lcd.c: 86:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3262     029E  301A               	movlw	26
  3263     029F  00F9               	movwf	??_LCD_Init+1
  3264     02A0  30F8               	movlw	248
  3265     02A1  00F8               	movwf	??_LCD_Init
  3266     02A2                     u2047:
  3267     02A2  0BF8               	decfsz	??_LCD_Init,f
  3268     02A3  2AA2               	goto	u2047
  3269     02A4  0BF9               	decfsz	??_LCD_Init+1,f
  3270     02A5  2AA2               	goto	u2047
  3271     02A6  0000               	nop
  3272     02A7                     l1867:
  3273                           
  3274                           ;lcd.c: 89:     LCD_Write(0x03);
  3275     02A7  3003               	movlw	3
  3276     02A8  120A  118A  2519  120A  118A  	fcall	_LCD_Write
  3277     02AD                     l1869:
  3278                           
  3279                           ;lcd.c: 90:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3280     02AD  3007               	movlw	7
  3281     02AE  00F9               	movwf	??_LCD_Init+1
  3282     02AF  307D               	movlw	125
  3283     02B0  00F8               	movwf	??_LCD_Init
  3284     02B1                     u2057:
  3285     02B1  0BF8               	decfsz	??_LCD_Init,f
  3286     02B2  2AB1               	goto	u2057
  3287     02B3  0BF9               	decfsz	??_LCD_Init+1,f
  3288     02B4  2AB1               	goto	u2057
  3289                           
  3290                           ;lcd.c: 91:     LCD_Write(0x03);
  3291     02B5  3003               	movlw	3
  3292     02B6  120A  118A  2519  120A  118A  	fcall	_LCD_Write
  3293     02BB                     l1871:
  3294                           
  3295                           ;lcd.c: 92:     _delay((unsigned long)((16)*(4000000/4000.0)));
  3296     02BB  3015               	movlw	21
  3297     02BC  00F9               	movwf	??_LCD_Init+1
  3298     02BD  30C6               	movlw	198
  3299     02BE  00F8               	movwf	??_LCD_Init
  3300     02BF                     u2067:
  3301     02BF  0BF8               	decfsz	??_LCD_Init,f
  3302     02C0  2ABF               	goto	u2067
  3303     02C1  0BF9               	decfsz	??_LCD_Init+1,f
  3304     02C2  2ABF               	goto	u2067
  3305     02C3  0000               	nop
  3306     02C4                     l1873:
  3307                           
  3308                           ;lcd.c: 93:     LCD_Write(0x03);
  3309     02C4  3003               	movlw	3
  3310     02C5  120A  118A  2519  120A  118A  	fcall	_LCD_Write
  3311     02CA                     l1875:
  3312                           
  3313                           ;lcd.c: 96:     LCD_Write(0x02);
  3314     02CA  3002               	movlw	2
  3315     02CB  120A  118A  2519  120A  118A  	fcall	_LCD_Write
  3316     02D0                     l1877:
  3317     02D0  3002               	movlw	2
  3318     02D1  120A  118A  2519  120A  118A  	fcall	_LCD_Write
  3319     02D6                     l1879:
  3320     02D6  3008               	movlw	8
  3321     02D7  120A  118A  2519  120A  118A  	fcall	_LCD_Write
  3322     02DC                     l1881:
  3323     02DC  3000               	movlw	0
  3324     02DD  120A  118A  2519  120A  118A  	fcall	_LCD_Write
  3325     02E2                     l1883:
  3326     02E2  3006               	movlw	6
  3327     02E3  120A  118A  2519  120A  118A  	fcall	_LCD_Write
  3328     02E8                     l1885:
  3329     02E8  3008               	movlw	8
  3330     02E9  1283               	bcf	3,5	;RP0=0, select bank0
  3331     02EA  1303               	bcf	3,6	;RP1=0, select bank0
  3332     02EB  00A5               	movwf	LCD_Init@cmd
  3333     02EC                     l1887:
  3334     02EC  1525               	bsf	LCD_Init@cmd,2
  3335     02ED                     l1893:
  3336     02ED  0825               	movf	LCD_Init@cmd,w
  3337     02EE  00F8               	movwf	??_LCD_Init
  3338     02EF  3004               	movlw	4
  3339     02F0                     u1995:
  3340     02F0  1003               	clrc
  3341     02F1  0CF8               	rrf	??_LCD_Init,f
  3342     02F2  3EFF               	addlw	-1
  3343     02F3  1D03               	skipz
  3344     02F4  2AF0               	goto	u1995
  3345     02F5  0878               	movf	??_LCD_Init,w
  3346     02F6  390F               	andlw	15
  3347     02F7  120A  118A  2519  120A  118A  	fcall	_LCD_Write
  3348     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  3349     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  3350     02FE  0825               	movf	LCD_Init@cmd,w
  3351     02FF  390F               	andlw	15
  3352     0300  120A  118A  2519  120A  118A  	fcall	_LCD_Write
  3353     0305                     l152:	
  3354                           ;lcd.c: 106:     do { LCD_Write( (0x01 & 0xF0) >> 4 ); LCD_Write( 0x01 & 0x0F); } while 
      +                          ( 0 );
  3355                           
  3356     0305  3000               	movlw	0
  3357     0306  120A  118A  2519  120A  118A  	fcall	_LCD_Write
  3358     030B  3001               	movlw	1
  3359     030C  120A  118A  2519  120A  118A  	fcall	_LCD_Write
  3360     0311                     l140:
  3361     0311  0008               	return
  3362     0312                     __end_of_LCD_Init:
  3363                           
  3364                           	psect	text18
  3365     0519                     __ptext18:	
  3366 ;; *************** function _LCD_Write *****************
  3367 ;; Defined at:
  3368 ;;		line 42 in file "lcd.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  c               1    wreg     unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  c               1    7[COMMON] unsigned char 
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3382 ;;      Params:         0       0       0       0       0
  3383 ;;      Locals:         1       0       0       0       0
  3384 ;;      Temps:          2       0       0       0       0
  3385 ;;      Totals:         3       0       0       0       0
  3386 ;;Total ram usage:        3 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 2
  3389 ;; This function calls:
  3390 ;;		_LCD_Out
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;;		_LCD_Init
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397     0519                     _LCD_Write:	
  3398                           ;psect for function _LCD_Write
  3399                           
  3400                           
  3401                           ;incstack = 0
  3402                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3403                           ;LCD_Write@c stored from wreg
  3404     0519  00F7               	movwf	LCD_Write@c
  3405     051A                     l1813:
  3406                           
  3407                           ;lcd.c: 44:     *(lcd.PORT) &= ~(1 << lcd.RS);
  3408     051A  1283               	bcf	3,5	;RP0=0, select bank0
  3409     051B  1303               	bcf	3,6	;RP1=0, select bank0
  3410     051C  0869               	movf	_lcd,w
  3411     051D  0084               	movwf	4
  3412     051E  1783               	bsf	3,7
  3413     051F  1C6A               	btfss	_lcd+1,0
  3414     0520  1383               	bcf	3,7
  3415     0521  3001               	movlw	1
  3416     0522  00F5               	movwf	??_LCD_Write
  3417     0523  086B               	movf	_lcd+2,w
  3418     0524  3907               	andlw	7
  3419     0525  3E01               	addlw	1
  3420     0526  2D29               	goto	u1864
  3421     0527                     u1865:
  3422     0527  1003               	clrc
  3423     0528  0DF5               	rlf	??_LCD_Write,f
  3424     0529                     u1864:
  3425     0529  3EFF               	addlw	-1
  3426     052A  1D03               	skipz
  3427     052B  2D27               	goto	u1865
  3428     052C  0875               	movf	??_LCD_Write,w
  3429     052D  3AFF               	xorlw	255
  3430     052E  0580               	andwf	0,f
  3431     052F                     l1815:
  3432                           
  3433                           ;lcd.c: 45:     LCD_Out(c);
  3434     052F  0877               	movf	LCD_Write@c,w
  3435     0530  120A  118A  2043  120A  118A  	fcall	_LCD_Out
  3436     0535                     l1817:
  3437                           
  3438                           ;lcd.c: 47:     *(lcd.PORT) |= 1 << lcd.EN;
  3439     0535  1283               	bcf	3,5	;RP0=0, select bank0
  3440     0536  1303               	bcf	3,6	;RP1=0, select bank0
  3441     0537  0869               	movf	_lcd,w
  3442     0538  0084               	movwf	4
  3443     0539  1783               	bsf	3,7
  3444     053A  1C6A               	btfss	_lcd+1,0
  3445     053B  1383               	bcf	3,7
  3446     053C  3001               	movlw	1
  3447     053D  00F5               	movwf	??_LCD_Write
  3448     053E  0C6B               	rrf	_lcd+2,w
  3449     053F  00F6               	movwf	??_LCD_Write+1
  3450     0540  0CF6               	rrf	??_LCD_Write+1,f
  3451     0541  0C76               	rrf	??_LCD_Write+1,w
  3452     0542  3907               	andlw	7
  3453     0543  3E01               	addlw	1
  3454     0544  2D47               	goto	u1874
  3455     0545                     u1875:
  3456     0545  1003               	clrc
  3457     0546  0DF5               	rlf	??_LCD_Write,f
  3458     0547                     u1874:
  3459     0547  3EFF               	addlw	-1
  3460     0548  1D03               	skipz
  3461     0549  2D45               	goto	u1875
  3462     054A  0875               	movf	??_LCD_Write,w
  3463     054B  0480               	iorwf	0,f
  3464     054C                     l1819:
  3465                           
  3466                           ;lcd.c: 48:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3467     054C  3006               	movlw	6
  3468     054D  00F6               	movwf	??_LCD_Write+1
  3469     054E  3030               	movlw	48
  3470     054F  00F5               	movwf	??_LCD_Write
  3471     0550                     u2077:
  3472     0550  0BF5               	decfsz	??_LCD_Write,f
  3473     0551  2D50               	goto	u2077
  3474     0552  0BF6               	decfsz	??_LCD_Write+1,f
  3475     0553  2D50               	goto	u2077
  3476     0554  0000               	nop
  3477     0555                     l1821:
  3478                           
  3479                           ;lcd.c: 49:     *(lcd.PORT) &= ~(1 << lcd.EN);
  3480     0555  1283               	bcf	3,5	;RP0=0, select bank0
  3481     0556  1303               	bcf	3,6	;RP1=0, select bank0
  3482     0557  0869               	movf	_lcd,w
  3483     0558  0084               	movwf	4
  3484     0559  1783               	bsf	3,7
  3485     055A  1C6A               	btfss	_lcd+1,0
  3486     055B  1383               	bcf	3,7
  3487     055C  3001               	movlw	1
  3488     055D  00F5               	movwf	??_LCD_Write
  3489     055E  0C6B               	rrf	_lcd+2,w
  3490     055F  00F6               	movwf	??_LCD_Write+1
  3491     0560  0CF6               	rrf	??_LCD_Write+1,f
  3492     0561  0C76               	rrf	??_LCD_Write+1,w
  3493     0562  3907               	andlw	7
  3494     0563  3E01               	addlw	1
  3495     0564  2D67               	goto	u1884
  3496     0565                     u1885:
  3497     0565  1003               	clrc
  3498     0566  0DF5               	rlf	??_LCD_Write,f
  3499     0567                     u1884:
  3500     0567  3EFF               	addlw	-1
  3501     0568  1D03               	skipz
  3502     0569  2D65               	goto	u1885
  3503     056A  0875               	movf	??_LCD_Write,w
  3504     056B  3AFF               	xorlw	255
  3505     056C  0580               	andwf	0,f
  3506     056D                     l131:
  3507     056D  0008               	return
  3508     056E                     __end_of_LCD_Write:
  3509                           
  3510                           	psect	text19
  3511     0043                     __ptext19:	
  3512 ;; *************** function _LCD_Out *****************
  3513 ;; Defined at:
  3514 ;;		line 10 in file "lcd.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  c               1    wreg     unsigned char 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  c               1    4[COMMON] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3528 ;;      Params:         0       0       0       0       0
  3529 ;;      Locals:         1       0       0       0       0
  3530 ;;      Temps:          2       0       0       0       0
  3531 ;;      Totals:         3       0       0       0       0
  3532 ;;Total ram usage:        3 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 1
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_LCD_Write
  3539 ;;		_LCD_putc
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543     0043                     _LCD_Out:	
  3544                           ;psect for function _LCD_Out
  3545                           
  3546                           
  3547                           ;incstack = 0
  3548                           ; Regs used in _LCD_Out: [wreg-fsr0h+status,2+status,0]
  3549                           ;LCD_Out@c stored from wreg
  3550     0043  00F4               	movwf	LCD_Out@c
  3551     0044                     l1737:
  3552                           
  3553                           ;lcd.c: 12:     if ( c & 1 ){
  3554     0044  1C74               	btfss	LCD_Out@c,0
  3555     0045  2847               	goto	u1701
  3556     0046  2848               	goto	u1700
  3557     0047                     u1701:
  3558     0047  285D               	goto	l1741
  3559     0048                     u1700:
  3560     0048                     l1739:
  3561                           
  3562                           ;lcd.c: 13:         *(lcd.PORT) |= 1 << lcd.D4;
  3563     0048  1283               	bcf	3,5	;RP0=0, select bank0
  3564     0049  1303               	bcf	3,6	;RP1=0, select bank0
  3565     004A  0869               	movf	_lcd,w
  3566     004B  0084               	movwf	4
  3567     004C  1783               	bsf	3,7
  3568     004D  1C6A               	btfss	_lcd+1,0
  3569     004E  1383               	bcf	3,7
  3570     004F  3001               	movlw	1
  3571     0050  00F2               	movwf	??_LCD_Out
  3572     0051  086C               	movf	_lcd+3,w
  3573     0052  3907               	andlw	7
  3574     0053  3E01               	addlw	1
  3575     0054  2857               	goto	u1714
  3576     0055                     u1715:
  3577     0055  1003               	clrc
  3578     0056  0DF2               	rlf	??_LCD_Out,f
  3579     0057                     u1714:
  3580     0057  3EFF               	addlw	-1
  3581     0058  1D03               	skipz
  3582     0059  2855               	goto	u1715
  3583     005A  0872               	movf	??_LCD_Out,w
  3584     005B  0480               	iorwf	0,f
  3585                           
  3586                           ;lcd.c: 14:     }
  3587     005C  2872               	goto	l1743
  3588     005D                     l1741:
  3589                           
  3590                           ;lcd.c: 16:          *(lcd.PORT) &= ~(1 << lcd.D4);
  3591     005D  1283               	bcf	3,5	;RP0=0, select bank0
  3592     005E  1303               	bcf	3,6	;RP1=0, select bank0
  3593     005F  0869               	movf	_lcd,w
  3594     0060  0084               	movwf	4
  3595     0061  1783               	bsf	3,7
  3596     0062  1C6A               	btfss	_lcd+1,0
  3597     0063  1383               	bcf	3,7
  3598     0064  3001               	movlw	1
  3599     0065  00F2               	movwf	??_LCD_Out
  3600     0066  086C               	movf	_lcd+3,w
  3601     0067  3907               	andlw	7
  3602     0068  3E01               	addlw	1
  3603     0069  286C               	goto	u1724
  3604     006A                     u1725:
  3605     006A  1003               	clrc
  3606     006B  0DF2               	rlf	??_LCD_Out,f
  3607     006C                     u1724:
  3608     006C  3EFF               	addlw	-1
  3609     006D  1D03               	skipz
  3610     006E  286A               	goto	u1725
  3611     006F  0872               	movf	??_LCD_Out,w
  3612     0070  3AFF               	xorlw	255
  3613     0071  0580               	andwf	0,f
  3614     0072                     l1743:
  3615                           
  3616                           ;lcd.c: 19:     if ( c & 2 ) {
  3617     0072  1CF4               	btfss	LCD_Out@c,1
  3618     0073  2875               	goto	u1731
  3619     0074  2876               	goto	u1730
  3620     0075                     u1731:
  3621     0075  288C               	goto	l1747
  3622     0076                     u1730:
  3623     0076                     l1745:
  3624                           
  3625                           ;lcd.c: 20:         *(lcd.PORT) |= 1 << lcd.D5;
  3626     0076  0869               	movf	_lcd,w
  3627     0077  0084               	movwf	4
  3628     0078  1783               	bsf	3,7
  3629     0079  1C6A               	btfss	_lcd+1,0
  3630     007A  1383               	bcf	3,7
  3631     007B  3001               	movlw	1
  3632     007C  00F2               	movwf	??_LCD_Out
  3633     007D  0C6C               	rrf	_lcd+3,w
  3634     007E  00F3               	movwf	??_LCD_Out+1
  3635     007F  0CF3               	rrf	??_LCD_Out+1,f
  3636     0080  0C73               	rrf	??_LCD_Out+1,w
  3637     0081  3907               	andlw	7
  3638     0082  3E01               	addlw	1
  3639     0083  2886               	goto	u1744
  3640     0084                     u1745:
  3641     0084  1003               	clrc
  3642     0085  0DF2               	rlf	??_LCD_Out,f
  3643     0086                     u1744:
  3644     0086  3EFF               	addlw	-1
  3645     0087  1D03               	skipz
  3646     0088  2884               	goto	u1745
  3647     0089  0872               	movf	??_LCD_Out,w
  3648     008A  0480               	iorwf	0,f
  3649                           
  3650                           ;lcd.c: 21:     }
  3651     008B  28A2               	goto	l1749
  3652     008C                     l1747:
  3653                           
  3654                           ;lcd.c: 23:         *(lcd.PORT) &= ~(1 << lcd.D5);
  3655     008C  0869               	movf	_lcd,w
  3656     008D  0084               	movwf	4
  3657     008E  1783               	bsf	3,7
  3658     008F  1C6A               	btfss	_lcd+1,0
  3659     0090  1383               	bcf	3,7
  3660     0091  3001               	movlw	1
  3661     0092  00F2               	movwf	??_LCD_Out
  3662     0093  0C6C               	rrf	_lcd+3,w
  3663     0094  00F3               	movwf	??_LCD_Out+1
  3664     0095  0CF3               	rrf	??_LCD_Out+1,f
  3665     0096  0C73               	rrf	??_LCD_Out+1,w
  3666     0097  3907               	andlw	7
  3667     0098  3E01               	addlw	1
  3668     0099  289C               	goto	u1754
  3669     009A                     u1755:
  3670     009A  1003               	clrc
  3671     009B  0DF2               	rlf	??_LCD_Out,f
  3672     009C                     u1754:
  3673     009C  3EFF               	addlw	-1
  3674     009D  1D03               	skipz
  3675     009E  289A               	goto	u1755
  3676     009F  0872               	movf	??_LCD_Out,w
  3677     00A0  3AFF               	xorlw	255
  3678     00A1  0580               	andwf	0,f
  3679     00A2                     l1749:
  3680                           
  3681                           ;lcd.c: 26:     if ( c & 4 ) {
  3682     00A2  1D74               	btfss	LCD_Out@c,2
  3683     00A3  28A5               	goto	u1761
  3684     00A4  28A6               	goto	u1760
  3685     00A5                     u1761:
  3686     00A5  28B9               	goto	l1753
  3687     00A6                     u1760:
  3688     00A6                     l1751:
  3689                           
  3690                           ;lcd.c: 27:         *(lcd.PORT) |= 1 << lcd.D6;
  3691     00A6  0869               	movf	_lcd,w
  3692     00A7  0084               	movwf	4
  3693     00A8  1783               	bsf	3,7
  3694     00A9  1C6A               	btfss	_lcd+1,0
  3695     00AA  1383               	bcf	3,7
  3696     00AB  3001               	movlw	1
  3697     00AC  00F2               	movwf	??_LCD_Out
  3698     00AD  086D               	movf	_lcd+4,w
  3699     00AE  3907               	andlw	7
  3700     00AF  3E01               	addlw	1
  3701     00B0  28B3               	goto	u1774
  3702     00B1                     u1775:
  3703     00B1  1003               	clrc
  3704     00B2  0DF2               	rlf	??_LCD_Out,f
  3705     00B3                     u1774:
  3706     00B3  3EFF               	addlw	-1
  3707     00B4  1D03               	skipz
  3708     00B5  28B1               	goto	u1775
  3709     00B6  0872               	movf	??_LCD_Out,w
  3710     00B7  0480               	iorwf	0,f
  3711                           
  3712                           ;lcd.c: 28:     }
  3713     00B8  28CC               	goto	l1755
  3714     00B9                     l1753:
  3715                           
  3716                           ;lcd.c: 30:         *(lcd.PORT) &= ~(1 << lcd.D6);
  3717     00B9  0869               	movf	_lcd,w
  3718     00BA  0084               	movwf	4
  3719     00BB  1783               	bsf	3,7
  3720     00BC  1C6A               	btfss	_lcd+1,0
  3721     00BD  1383               	bcf	3,7
  3722     00BE  3001               	movlw	1
  3723     00BF  00F2               	movwf	??_LCD_Out
  3724     00C0  086D               	movf	_lcd+4,w
  3725     00C1  3907               	andlw	7
  3726     00C2  3E01               	addlw	1
  3727     00C3  28C6               	goto	u1784
  3728     00C4                     u1785:
  3729     00C4  1003               	clrc
  3730     00C5  0DF2               	rlf	??_LCD_Out,f
  3731     00C6                     u1784:
  3732     00C6  3EFF               	addlw	-1
  3733     00C7  1D03               	skipz
  3734     00C8  28C4               	goto	u1785
  3735     00C9  0872               	movf	??_LCD_Out,w
  3736     00CA  3AFF               	xorlw	255
  3737     00CB  0580               	andwf	0,f
  3738     00CC                     l1755:
  3739                           
  3740                           ;lcd.c: 33:     if ( c & 8 ) {
  3741     00CC  1DF4               	btfss	LCD_Out@c,3
  3742     00CD  28CF               	goto	u1791
  3743     00CE  28D0               	goto	u1790
  3744     00CF                     u1791:
  3745     00CF  28E6               	goto	l1759
  3746     00D0                     u1790:
  3747     00D0                     l1757:
  3748                           
  3749                           ;lcd.c: 34:          *(lcd.PORT) |= 1 << lcd.D7;
  3750     00D0  0869               	movf	_lcd,w
  3751     00D1  0084               	movwf	4
  3752     00D2  1783               	bsf	3,7
  3753     00D3  1C6A               	btfss	_lcd+1,0
  3754     00D4  1383               	bcf	3,7
  3755     00D5  3001               	movlw	1
  3756     00D6  00F2               	movwf	??_LCD_Out
  3757     00D7  0C6D               	rrf	_lcd+4,w
  3758     00D8  00F3               	movwf	??_LCD_Out+1
  3759     00D9  0CF3               	rrf	??_LCD_Out+1,f
  3760     00DA  0C73               	rrf	??_LCD_Out+1,w
  3761     00DB  3907               	andlw	7
  3762     00DC  3E01               	addlw	1
  3763     00DD  28E0               	goto	u1804
  3764     00DE                     u1805:
  3765     00DE  1003               	clrc
  3766     00DF  0DF2               	rlf	??_LCD_Out,f
  3767     00E0                     u1804:
  3768     00E0  3EFF               	addlw	-1
  3769     00E1  1D03               	skipz
  3770     00E2  28DE               	goto	u1805
  3771     00E3  0872               	movf	??_LCD_Out,w
  3772     00E4  0480               	iorwf	0,f
  3773                           
  3774                           ;lcd.c: 35:     }
  3775     00E5  28FC               	goto	l128
  3776     00E6                     l1759:
  3777                           
  3778                           ;lcd.c: 37:          *(lcd.PORT) &= ~(1 << lcd.D7);
  3779     00E6  0869               	movf	_lcd,w
  3780     00E7  0084               	movwf	4
  3781     00E8  1783               	bsf	3,7
  3782     00E9  1C6A               	btfss	_lcd+1,0
  3783     00EA  1383               	bcf	3,7
  3784     00EB  3001               	movlw	1
  3785     00EC  00F2               	movwf	??_LCD_Out
  3786     00ED  0C6D               	rrf	_lcd+4,w
  3787     00EE  00F3               	movwf	??_LCD_Out+1
  3788     00EF  0CF3               	rrf	??_LCD_Out+1,f
  3789     00F0  0C73               	rrf	??_LCD_Out+1,w
  3790     00F1  3907               	andlw	7
  3791     00F2  3E01               	addlw	1
  3792     00F3  28F6               	goto	u1814
  3793     00F4                     u1815:
  3794     00F4  1003               	clrc
  3795     00F5  0DF2               	rlf	??_LCD_Out,f
  3796     00F6                     u1814:
  3797     00F6  3EFF               	addlw	-1
  3798     00F7  1D03               	skipz
  3799     00F8  28F4               	goto	u1815
  3800     00F9  0872               	movf	??_LCD_Out,w
  3801     00FA  3AFF               	xorlw	255
  3802     00FB  0580               	andwf	0,f
  3803     00FC                     l128:
  3804     00FC  0008               	return
  3805     00FD                     __end_of_LCD_Out:
  3806                           
  3807                           	psect	text20
  3808     0666                     __ptext20:	
  3809 ;; *************** function _ICR *****************
  3810 ;; Defined at:
  3811 ;;		line 49 in file "main.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3825 ;;      Params:         0       0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0
  3827 ;;      Temps:          2       0       0       0       0
  3828 ;;      Totals:         2       0       0       0       0
  3829 ;;Total ram usage:        2 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; This function calls:
  3832 ;;		Nothing
  3833 ;; This function is called by:
  3834 ;;		Interrupt level 1
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838     0666                     _ICR:	
  3839                           ;psect for function _ICR
  3840                           
  3841     0666                     i1l1535:
  3842                           
  3843                           ;main.c: 51:         sprintf(exec,"%02u:%02u",timer/60,timer%60);
  3844     0666  1D0B               	btfss	11,2	;volatile
  3845     0667  2E69               	goto	u134_21
  3846     0668  2E6A               	goto	u134_20
  3847     0669                     u134_21:
  3848     0669  2E88               	goto	i1l40
  3849     066A                     u134_20:
  3850     066A                     i1l1537:
  3851                           
  3852                           ;main.c: 52:         LCD_puts(exec);;main.c: 53:     }
  3853     066A  3001               	movlw	1
  3854     066B  07FA               	addwf	_count,f	;volatile
  3855     066C  1803               	skipnc
  3856     066D  0AFB               	incf	_count+1,f	;volatile
  3857     066E  3000               	movlw	0
  3858     066F  07FB               	addwf	_count+1,f	;volatile
  3859                           
  3860                           ;main.c: 54: }
  3861     0670  3000               	movlw	0
  3862     0671  027B               	subwf	_count+1,w	;volatile
  3863     0672  3065               	movlw	101
  3864     0673  1903               	skipnz
  3865     0674  027A               	subwf	_count,w	;volatile
  3866     0675  1C03               	skipc
  3867     0676  2E78               	goto	u135_21
  3868     0677  2E79               	goto	u135_20
  3869     0678                     u135_21:
  3870     0678  2E83               	goto	i1l1543
  3871     0679                     u135_20:
  3872     0679                     i1l1539:
  3873     0679  3001               	movlw	1
  3874     067A  1283               	bcf	3,5	;RP0=0, select bank0
  3875     067B  1303               	bcf	3,6	;RP1=0, select bank0
  3876     067C  07E6               	addwf	_timer,f	;volatile
  3877     067D  1803               	skipnc
  3878     067E  0AE7               	incf	_timer+1,f	;volatile
  3879     067F  3000               	movlw	0
  3880     0680  07E7               	addwf	_timer+1,f	;volatile
  3881     0681                     i1l1541:
  3882     0681  01FA               	clrf	_count	;volatile
  3883     0682  01FB               	clrf	_count+1	;volatile
  3884     0683                     i1l1543:
  3885     0683  30D9               	movlw	217
  3886     0684  1283               	bcf	3,5	;RP0=0, select bank0
  3887     0685  1303               	bcf	3,6	;RP1=0, select bank0
  3888     0686  0081               	movwf	1	;volatile
  3889     0687                     i1l1545:
  3890     0687  110B               	bcf	11,2	;volatile
  3891     0688                     i1l40:
  3892     0688  0871               	movf	??_ICR+1,w
  3893     0689  008A               	movwf	10
  3894     068A  0E70               	swapf	??_ICR,w
  3895     068B  0083               	movwf	3
  3896     068C  0EFE               	swapf	btemp,f
  3897     068D  0E7E               	swapf	btemp,w
  3898     068E  0009               	retfie
  3899     068F                     __end_of_ICR:
  3900     0002                     ___latbits      equ	2
  3901     007E                     btemp           set	126	;btemp
  3902     007E                     wtemp0          set	126
  3903                           
  3904                           	psect	intentry
  3905     0004                     __pintentry:	
  3906                           ;incstack = 0
  3907 ;; hardware stack exceeded
  3908                           ; Regs used in _ICR: [wreg+status,2]
  3909                           
  3910     0004                     interrupt_function:
  3911     007E                     saved_w         set	btemp
  3912     0004  00FE               	movwf	btemp
  3913     0005  0E03               	swapf	3,w
  3914     0006  00F0               	movwf	??_ICR
  3915     0007  080A               	movf	10,w
  3916     0008  00F1               	movwf	??_ICR+1
  3917     0009  120A  118A  2E66   	ljmp	_ICR
  3918                           
  3919                           	psect	config
  3920                           
  3921                           ;Config register CONFIG1 @ 0x2007
  3922                           ;	Oscillator Selection bits
  3923                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  3924                           ;	Watchdog Timer Enable bit
  3925                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3926                           ;	Power-up Timer Enable bit
  3927                           ;	PWRTE = OFF, PWRT disabled
  3928                           ;	RE3/MCLR pin function select bit
  3929                           ;	MCLRE = 0x1, unprogrammed default
  3930                           ;	Code Protection bit
  3931                           ;	CP = OFF, Program memory code protection is disabled
  3932                           ;	Data Code Protection bit
  3933                           ;	CPD = OFF, Data memory code protection is disabled
  3934                           ;	Brown Out Reset Selection bits
  3935                           ;	BOREN = ON, BOR enabled
  3936                           ;	Internal External Switchover bit
  3937                           ;	IESO = 0x1, unprogrammed default
  3938                           ;	Fail-Safe Clock Monitor Enabled bit
  3939                           ;	FCMEN = 0x1, unprogrammed default
  3940                           ;	Low Voltage Programming Enable bit
  3941                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3942                           ;	In-Circuit Debugger Mode bit
  3943                           ;	DEBUG = 0x1, unprogrammed default
  3944     2007                     	org	8199
  3945     2007  2FF1               	dw	12273
  3946                           
  3947                           ;Config register CONFIG2 @ 0x2008
  3948                           ;	Brown-out Reset Selection bit
  3949                           ;	BOR4V = 0x1, unprogrammed default
  3950                           ;	Flash Program Memory Self Write Enable bits
  3951                           ;	WRT = OFF, Write protection off
  3952     2008                     	org	8200
  3953     2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    0
    Data        5
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     66      78
    BANK1            80      4      42
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> exec(BANK1[6]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> exec(BANK1[6]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    LCD_putrs@a	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[6]), 

    LCD_puts@a	PTR unsigned char  size(1) Largest target is 6
		 -> exec(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S22$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    S574$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> exec(BANK1[6]), 

    S574$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[10]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> exec(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[10]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[10]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[10]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_puts
    _vfpfcnvrt->_read_prec_or_width
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _read_prec_or_width->___wmul
    _LCD_puts->_LCD_putc
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _ICR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc

Critical Paths under _ICR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ICR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ICR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ICR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5827
                                              0 BANK1      4     4      0
                           _LCD_Init
                          _LCD_Write
                          _LCD_putrs
                           _LCD_puts
                          _TMR0_init
                            ___lwdiv
                            ___lwmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    3851
                                             47 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    3533
                                             42 BANK0      5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4    3306
                                             30 BANK0     12     8      4
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     5      4    1953
                                             21 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    1088
                                              9 COMMON     1     1      0
                                             14 BANK0      7     2      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     487
                                              6 COMMON     3     0      3
                                              9 BANK0      5     5      0
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                               13     9      4     335
                                              2 COMMON     4     0      4
                                              0 BANK0      9     9      0
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     244
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     253
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     408
                                              8 COMMON     2     0      2
                                              0 BANK0      3     3      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     142
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_puts                                             4     3      1     415
                                              8 COMMON     2     1      1
                                              0 BANK0      2     2      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (1) _LCD_putrs                                            3     2      1     418
                                              8 COMMON     1     0      1
                                              0 BANK0      2     2      0
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             3     3      0     282
                                              5 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             8     3      5     343
                                              8 COMMON     2     2      0
                                              0 BANK0      6     1      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            3     3      0     235
                                              5 COMMON     3     3      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Out                                              3     3      0     188
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ICR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
   _LCD_putrs
     _LCD_putc
       _LCD_Out
   _LCD_puts
     _LCD_putc
   _TMR0_init
   ___lwdiv
   ___lwmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad
             _fputc
             _fputs
               _fputc

 _ICR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      4      42     52.5%
BITBANK1            80      0       0      0.0%
BANK0               80     66      78     97.5%
BITBANK0            80      0       0      0.0%
COMMON              14     10      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     131      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Jun 17 17:05:21 2025

                         pc 0002                          l33 076E                          l63 0132  
                        l80 0145                          fsr 0004         ___wmul@multiplicand 0074  
                       l131 056D                         l140 0311                         l128 00FC  
                       l152 0305                         l162 06FF                         l156 0443  
                       l254 06C3                         l168 06B6                         l256 06DB  
                       l534 0602                         l544 063A                         l802 0665  
                       l740 05C0                         l805 077C                         l717 0722  
                       l750 04C1                         l735 0587                         l738 05AF  
                       l765 01CF                         l758 0518                         l782 0745  
                       l775 0261                         l767 01D5                         l794 03B1  
                       _GIE 005F                         _ICR 0666             LCD_Init@display 0020  
                       _lcd 0069                         _pad 056E                         fsr0 0004  
                       indf 0000                        ?_ICR 0070             __end_of_LCD_Out 00FD  
                      l1611 06B7                        l1603 063B                        l1621 06D7  
                      l1613 06B9                        l1605 0640                        l1701 0471  
                      l1615 06BD                        l1631 05CC                        l1607 0650  
                      l1711 049C                        l1703 0477                        l1617 06CA  
                      l1721 04C6                        l1641 05F0                        l1633 05D3  
                      l1625 05C1                        l1609 0658                        l1713 04A9  
                      l1705 048A                        l1801 0235                        l1619 06D1  
                      l1723 04D5                        l1731 0503                        l1643 05F1  
                      l1635 05D5                        l1627 05C3                        l1651 0603  
                      l1707 0491                        l1715 04AF                        l1803 0240  
                      l1741 005D                        l1821 0555                        l1813 051A  
                      l1901 06A1                        l1733 0514                        l1725 04D9  
                      l1645 05F8                        l1637 05D9                        l1629 05C9  
                      l1661 0619                        l1653 0609                        l1709 0497  
                      l1751 00A6                        l1743 0072                        l1815 052F  
                      l1831 03F1                        l1823 03B3                        l1903 06A9  
                      l1727 04E7                        l1719 04C2                        l1639 05EA  
                      l1647 05FE                        l1663 0623                        l1655 060C  
                      l1591 0318                        l1807 0248                        l1911 070A  
                      l1753 00B9                        l1745 0076                        l1737 0044  
                      l1817 0535                        l1833 0409                        l1825 03C7  
                      l1921 06E1                        l1729 04FE                        l1665 0629  
                      l1657 0613                        l1593 031E                        l1681 058A  
                      l1673 056E                        l1761 01B0                        l1841 0728  
                      l1913 070C                        l1905 0700                        l1755 00CC  
                      l1747 008C                        l1739 0048                        l1819 054C  
                      l1851 0262                        l1835 0410                        l1827 03D6  
                      l1923 06EC                        l1667 0630                        l1659 0615  
                      l1595 0325                        l1683 0599                        l1675 0574  
                      l1691 0448                        l1771 01D0                        l1763 01C1  
                      l1843 0735                        l1915 0719                        l1907 0704  
                      l1931 011A                        l1757 00D0                        l1749 00A2  
                      l1861 0291                        l1853 0275                        l1837 042B  
                      l1829 03ED                        l1925 06F4                        l1669 0636  
                      l1597 033F                        l1589 0312                        l1685 05A1  
                      l1677 057F                        l1693 0450                        l1781 01F9  
                      l1765 01C5                        l1845 0743                        l1909 0708  
                      l1933 0120                        l1759 00E6                        l1871 02BB  
                      l1863 029B                        l1855 027F                        l1919 06DC  
                      l1599 0371                        l1687 05B5                        l1679 0585  
                      l1695 0454                        l1791 0214                        l1783 01FD  
                      l1775 01D8                        l1767 01C9                        l1839 0723  
                      l1935 0126                        l1927 00FD                        l1881 02DC  
                      l1873 02C4                        l1865 029E                        l1857 0283  
                      l1849 0764                        l1697 045A                        l1689 0444  
                      l1793 0221                        l1785 01FE                        l1777 01E5  
                      l1769 01CD                        l1961 0158                        l1937 012C  
                      l1929 0102                        l1883 02E2                        l1875 02CA  
                      l1867 02A7                        l1859 028D                        l1699 046E  
                      l1795 0227                        l1787 0203                        l1779 01EA  
                      l1963 016D                        l1955 014C                        l1947 0139  
                      l1893 02ED                        l1885 02E8                        l1877 02D0  
                      l1869 02AD                        l1789 0208                        l1965 0182  
                      ?_pad 002E                        l1887 02EC                        l1879 02D6  
                      l1967 01A5                        l1897 068F                        l1899 0694  
                      STR_1 0756                        STR_2 075E                        STR_3 074C  
                      _T0IE 005D                        _T0IF 005A                        u2000 06B6  
                      u2001 06B5                        u2010 06FF                        u2011 06FE  
                      u1400 0394                        u1410 0665                        u2027 03EF  
                      u1411 0664                        u1420 06BD                        u1500 05EA  
                      u2037 0429                        u1421 06BC                        u1501 05E9  
                      u2047 02A2                        u1520 05FE                        u1360 0318  
                      u1600 0585                        u2057 02B1                        u1521 05FD  
                      u1505 05E6                        u1361 0317                        u1601 0584  
                      u1450 06D7                        u1530 0609                        u1370 031E  
                      u1610 05AF                        u2067 02BF                        u1451 06D6  
                      u1435 06C4                        u1515 05F2                        u1531 0608  
                      u1371 031D                        u1611 05AE                        u1700 0048  
                      u1460 05C9                        u1380 033F                        u1620 05B5  
                      u1701 0047                        u2077 0550                        u1445 06CB  
                      u1461 05C8                        u1381 033E                        u1621 05B4  
                      u1550 0619                        u1390 0371                        u1630 0491  
                      u1551 0618                        u1391 0370                        u1615 05AB  
                      u1631 0490                        u1480 05D9                        u1560 0623  
                      u1640 0497                        u1481 05D8                        u1561 0622  
                      u1545 060D                        u1641 0496                        u1730 0076  
                      u1714 0057                        u1650 049C                        u1731 0075  
                      u1715 0055                        u1475 05CD                        u1395 036D  
                      u1651 049B                        u1804 00E0                        u1724 006C  
                      u1580 0636                        u1660 04A9                        u1820 01C1  
                      u1805 00DE                        u1725 006A                        u1581 0635  
                      u1565 061F                        u1661 04A8                        u1821 01C0  
                      u1814 00F6                        u1590 0574                        u1670 04AF  
                      u1830 01EA                        u1815 00F4                        u1495 05DA  
                      u1575 062A                        u1591 0573                        u1671 04AE  
                      u1831 01E9                        u1760 00A6                        u1744 0086  
                      u1680 04D5                        u1840 01FD                        u1761 00A5  
                      u1745 0084                        u1905 03CA                        u1681 04D4  
                      u1665 04A5                        u1841 01FC                        u1754 009C  
                      u1914 03E8                        u1690 0514                        u1850 0214  
                      u1755 009A                        u1915 03E6                        u1691 0513  
                      u1851 0213                        u1924 0403                        u1925 0401  
                      u1790 00D0                        u1774 00B3                        u1934 0422  
                      u1950 0743                        u1791 00CF                        u1775 00B1  
                      u1935 0420                        u1951 0742                        u1784 00C6  
                      u1864 0529                        u1960 027F                        u1944 043D  
                      u1785 00C4                        u1865 0527                        u1961 027E  
                      u1945 043B                        u1874 0547                        u1970 028D  
                      u1875 0545                        u1971 028C                        u1884 0567  
                      u1980 029B                        u1885 0565                        u1981 029A  
                      u1965 027B                        u1894 03C2                        u1975 0289  
                      u1895 03C0                        i1l40 0688                        u1985 0297  
                      u1995 02F0                        _TMR0 0001                        _dbuf 00A0  
                      _main 00FD                        _exec 00C0                        _prec 0064  
                      pad@i 0033                        pad@p 0031                        btemp 007E  
                      _utoa 0444                        start 000C                 LCD_Init@cmd 0025  
                     ??_ICR 0070                       ??_pad 0079            __end_of_LCD_Init 0312  
          __end_of_LCD_putc 0444            __end_of_LCD_puts 0700                       ?_main 0070  
                     ?_utoa 0035             __end_of___lwdiv 0603             __end_of___lwmod 063B  
              vfpfcnvrt@fmt 0040                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _flags 0068                       _count 007A  
       read_prec_or_width@c 0020         read_prec_or_width@n 0021                       _fputc 0312  
                     _fputs 063B                       _timer 0066                       pad@fp 002E  
                     _width 0062                       _putch 077C                       pclath 000A  
                     utoa@d 0037                       utoa@i 003C                       utoa@p 0039  
                     utoa@w 003A                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0723             __initialization 000F                __end_of_main 01B0  
              __end_of_utoa 04C2                      ??_main 007A                      ??_utoa 007A  
                 ??_LCD_Out 0072           __end_of_LCD_Write 056E  __end_of_read_prec_or_width 0519  
         __end_of_LCD_putrs 06B7                      ?_fputc 0072                      ?_fputs 0076  
                    ?_putch 0070                      i1l1541 0681                      i1l1543 0683  
                    i1l1535 0666                      i1l1545 0687                      i1l1537 066A  
                    i1l1539 0679                      u134_20 066A                      u134_21 0669  
                    u135_20 0679                      u135_21 0678               vfpfcnvrt@done 0048  
              vfprintf@cfmt 004E                      ___wmul 06B7           __end_of_TMR0_init 076F  
                 ??___lwdiv 0076                   ??___lwmod 0076        read_prec_or_width@ap 0079  
                    pad@buf 0030                      fputc@c 0072                      fputs@c 002B  
                    fputs@i 002C                      fputs@s 0076                      saved_w 007E  
                    putch@c 0070            __end_of_vfprintf 0746                      utoa@fp 0035  
                 ??_sprintf 0055     __end_of__initialization 003F                   ?_LCD_Init 0020  
                 ?_LCD_putc 0070                   ?_LCD_puts 0078              __pcstackCOMMON 0070  
              __pidataBANK0 0777               __end_of_fputc 03B2               __end_of_fputs 0666  
             __end_of_putch 077D                   LCD_putc@c 0077                   LCD_puts@a 0078  
                 LCD_puts@i 0020                     ??_fputc 0020                     ??_fputs 0029  
                   ??_putch 0072                  __pbssBANK0 0062                  __pbssBANK1 00A0  
                ??_LCD_Init 0078                  ??_LCD_putc 0075                  ??_LCD_puts 0079  
                __pmaintext 00FD                     ?___wmul 0072                  __pintentry 0004  
                   _LCD_Out 0043                  __stringtab 0746                     ___lwdiv 05C1  
                   ___lwmod 0603                   ?_vfprintf 004A                     __ptext1 0700  
                   __ptext2 0723                     __ptext3 01B0                     __ptext4 0444  
                   __ptext5 056E                     __ptext6 063B                     __ptext7 0312  
                   __ptext8 077C                     __ptext9 0603       read_prec_or_width@fmt 0078  
                   _sprintf 0700                     clrloop0 0770                   _LCD_Write 0519  
      end_of_initialization 003F                   _LCD_putrs 068F                     fputc@fp 0074  
                   fputs@fp 0077          _read_prec_or_width 04C2           __end_of_vfpfcnvrt 0262  
       ?_read_prec_or_width 0078            vfpfcnvrt@convarg 0044                  ??_vfprintf 007A  
                 _TMR0_init 0764        ??_read_prec_or_width 007A                  ?_LCD_Write 0070  
                ?_LCD_putrs 0078                 vfpfcnvrt@ap 0041                 vfpfcnvrt@cp 0049  
               vfpfcnvrt@fp 003E              __end_of___wmul 06DC                  LCD_Write@c 0077  
                ?_TMR0_init 0070         start_initialization 000F                 __end_of_ICR 068F  
               __end_of_pad 05C1                  LCD_putrs@a 0078                  LCD_putrs@i 0020  
               vfprintf@fmt 004C                    ??___wmul 0076                 __pdataBANK0 0069  
                  ?_LCD_Out 0070                 __pbssCOMMON 007A                   ___latbits 0002  
             __pcstackBANK0 0020               __pcstackBANK1 00C6                    LCD_Out@c 0074  
               ??_LCD_Write 0075                 ??_LCD_putrs 0079            ___lwdiv@dividend 0074  
                  ?___lwdiv 0072                    ?___lwmod 0072                   __pstrings 0746  
               ??_TMR0_init 0072            ___lwdiv@quotient 0077                    ?_sprintf 004F  
         interrupt_function 0004                    _LCD_Init 0262              ___wmul@product 0076  
                 clear_ram0 076F                    _LCD_putc 03B2                    _LCD_puts 06DC  
                 _vfpfcnvrt 01B0                 __stringbase 074B           ___wmul@multiplier 0072  
                vfprintf@ap 004D                  vfprintf@fp 004A                  ?_vfpfcnvrt 003E  
        __end_of__stringtab 074C                  sprintf@fmt 0050                    _main$892 00C6  
                  _main$893 00C8             ___lwdiv@divisor 0072             ___lwdiv@counter 0076  
                  __ptext10 05C1                    __ptext11 04C2                    __ptext20 0666  
                  __ptext12 06B7                    __ptext13 0764                    __ptext14 06DC  
                  __ptext15 068F                    __ptext16 03B2                    __ptext17 0262  
                  __ptext18 0519                    __ptext19 0043                    _vfprintf 0723  
                  intlevel1 0000                   sprintf@ap 0056            ___lwmod@dividend 0074  
                 stringcode 0746                 ??_vfpfcnvrt 0042                  _OPTION_REG 0081  
                  sprintf@f 0057                    sprintf@s 004F             ___lwmod@divisor 0072  
           ___lwmod@counter 0076                    stringdir 0746                    stringtab 0746  
