

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 19 16:35:53 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=1
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 26/03/2025 GMT
    18                           ; 
    19                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0004                     fsr             equ	4
    52     0004                     fsr0            equ	4
    53     0000                     indf            equ	0
    54     0000                     indf0           equ	0
    55     0002                     pc              equ	2
    56     0002                     pcl             equ	2
    57     000A                     pclath          equ	10
    58     0003                     status          equ	3
    59     0000                     INDF            equ	0	;# 
    60     0001                     TMR0            equ	1	;# 
    61     0002                     PCL             equ	2	;# 
    62     0003                     STATUS          equ	3	;# 
    63     0004                     FSR             equ	4	;# 
    64     0005                     PORTA           equ	5	;# 
    65     0006                     PORTB           equ	6	;# 
    66     0007                     PORTC           equ	7	;# 
    67     0008                     PORTD           equ	8	;# 
    68     0009                     PORTE           equ	9	;# 
    69     000A                     PCLATH          equ	10	;# 
    70     000B                     INTCON          equ	11	;# 
    71     000C                     PIR1            equ	12	;# 
    72     000D                     PIR2            equ	13	;# 
    73     000E                     TMR1            equ	14	;# 
    74     000E                     TMR1L           equ	14	;# 
    75     000F                     TMR1H           equ	15	;# 
    76     0010                     T1CON           equ	16	;# 
    77     0011                     TMR2            equ	17	;# 
    78     0012                     T2CON           equ	18	;# 
    79     0013                     SSPBUF          equ	19	;# 
    80     0014                     SSPCON          equ	20	;# 
    81     0015                     CCPR1           equ	21	;# 
    82     0015                     CCPR1L          equ	21	;# 
    83     0016                     CCPR1H          equ	22	;# 
    84     0017                     CCP1CON         equ	23	;# 
    85     0018                     RCSTA           equ	24	;# 
    86     0019                     TXREG           equ	25	;# 
    87     001A                     RCREG           equ	26	;# 
    88     001B                     CCPR2           equ	27	;# 
    89     001B                     CCPR2L          equ	27	;# 
    90     001C                     CCPR2H          equ	28	;# 
    91     001D                     CCP2CON         equ	29	;# 
    92     001E                     ADRESH          equ	30	;# 
    93     001F                     ADCON0          equ	31	;# 
    94     0081                     OPTION_REG      equ	129	;# 
    95     0085                     TRISA           equ	133	;# 
    96     0086                     TRISB           equ	134	;# 
    97     0087                     TRISC           equ	135	;# 
    98     0088                     TRISD           equ	136	;# 
    99     0089                     TRISE           equ	137	;# 
   100     008C                     PIE1            equ	140	;# 
   101     008D                     PIE2            equ	141	;# 
   102     008E                     PCON            equ	142	;# 
   103     008F                     OSCCON          equ	143	;# 
   104     0090                     OSCTUNE         equ	144	;# 
   105     0091                     SSPCON2         equ	145	;# 
   106     0092                     PR2             equ	146	;# 
   107     0093                     SSPADD          equ	147	;# 
   108     0093                     SSPMSK          equ	147	;# 
   109     0093                     MSK             equ	147	;# 
   110     0094                     SSPSTAT         equ	148	;# 
   111     0095                     WPUB            equ	149	;# 
   112     0096                     IOCB            equ	150	;# 
   113     0097                     VRCON           equ	151	;# 
   114     0098                     TXSTA           equ	152	;# 
   115     0099                     SPBRG           equ	153	;# 
   116     009A                     SPBRGH          equ	154	;# 
   117     009B                     PWM1CON         equ	155	;# 
   118     009C                     ECCPAS          equ	156	;# 
   119     009D                     PSTRCON         equ	157	;# 
   120     009E                     ADRESL          equ	158	;# 
   121     009F                     ADCON1          equ	159	;# 
   122     0105                     WDTCON          equ	261	;# 
   123     0107                     CM1CON0         equ	263	;# 
   124     0108                     CM2CON0         equ	264	;# 
   125     0109                     CM2CON1         equ	265	;# 
   126     010C                     EEDATA          equ	268	;# 
   127     010C                     EEDAT           equ	268	;# 
   128     010D                     EEADR           equ	269	;# 
   129     010E                     EEDATH          equ	270	;# 
   130     010F                     EEADRH          equ	271	;# 
   131     0185                     SRCON           equ	389	;# 
   132     0187                     BAUDCTL         equ	391	;# 
   133     0188                     ANSEL           equ	392	;# 
   134     0189                     ANSELH          equ	393	;# 
   135     018C                     EECON1          equ	396	;# 
   136     018D                     EECON2          equ	397	;# 
   137     0000                     INDF            equ	0	;# 
   138     0001                     TMR0            equ	1	;# 
   139     0002                     PCL             equ	2	;# 
   140     0003                     STATUS          equ	3	;# 
   141     0004                     FSR             equ	4	;# 
   142     0005                     PORTA           equ	5	;# 
   143     0006                     PORTB           equ	6	;# 
   144     0007                     PORTC           equ	7	;# 
   145     0008                     PORTD           equ	8	;# 
   146     0009                     PORTE           equ	9	;# 
   147     000A                     PCLATH          equ	10	;# 
   148     000B                     INTCON          equ	11	;# 
   149     000C                     PIR1            equ	12	;# 
   150     000D                     PIR2            equ	13	;# 
   151     000E                     TMR1            equ	14	;# 
   152     000E                     TMR1L           equ	14	;# 
   153     000F                     TMR1H           equ	15	;# 
   154     0010                     T1CON           equ	16	;# 
   155     0011                     TMR2            equ	17	;# 
   156     0012                     T2CON           equ	18	;# 
   157     0013                     SSPBUF          equ	19	;# 
   158     0014                     SSPCON          equ	20	;# 
   159     0015                     CCPR1           equ	21	;# 
   160     0015                     CCPR1L          equ	21	;# 
   161     0016                     CCPR1H          equ	22	;# 
   162     0017                     CCP1CON         equ	23	;# 
   163     0018                     RCSTA           equ	24	;# 
   164     0019                     TXREG           equ	25	;# 
   165     001A                     RCREG           equ	26	;# 
   166     001B                     CCPR2           equ	27	;# 
   167     001B                     CCPR2L          equ	27	;# 
   168     001C                     CCPR2H          equ	28	;# 
   169     001D                     CCP2CON         equ	29	;# 
   170     001E                     ADRESH          equ	30	;# 
   171     001F                     ADCON0          equ	31	;# 
   172     0081                     OPTION_REG      equ	129	;# 
   173     0085                     TRISA           equ	133	;# 
   174     0086                     TRISB           equ	134	;# 
   175     0087                     TRISC           equ	135	;# 
   176     0088                     TRISD           equ	136	;# 
   177     0089                     TRISE           equ	137	;# 
   178     008C                     PIE1            equ	140	;# 
   179     008D                     PIE2            equ	141	;# 
   180     008E                     PCON            equ	142	;# 
   181     008F                     OSCCON          equ	143	;# 
   182     0090                     OSCTUNE         equ	144	;# 
   183     0091                     SSPCON2         equ	145	;# 
   184     0092                     PR2             equ	146	;# 
   185     0093                     SSPADD          equ	147	;# 
   186     0093                     SSPMSK          equ	147	;# 
   187     0093                     MSK             equ	147	;# 
   188     0094                     SSPSTAT         equ	148	;# 
   189     0095                     WPUB            equ	149	;# 
   190     0096                     IOCB            equ	150	;# 
   191     0097                     VRCON           equ	151	;# 
   192     0098                     TXSTA           equ	152	;# 
   193     0099                     SPBRG           equ	153	;# 
   194     009A                     SPBRGH          equ	154	;# 
   195     009B                     PWM1CON         equ	155	;# 
   196     009C                     ECCPAS          equ	156	;# 
   197     009D                     PSTRCON         equ	157	;# 
   198     009E                     ADRESL          equ	158	;# 
   199     009F                     ADCON1          equ	159	;# 
   200     0105                     WDTCON          equ	261	;# 
   201     0107                     CM1CON0         equ	263	;# 
   202     0108                     CM2CON0         equ	264	;# 
   203     0109                     CM2CON1         equ	265	;# 
   204     010C                     EEDATA          equ	268	;# 
   205     010C                     EEDAT           equ	268	;# 
   206     010D                     EEADR           equ	269	;# 
   207     010E                     EEDATH          equ	270	;# 
   208     010F                     EEADRH          equ	271	;# 
   209     0185                     SRCON           equ	389	;# 
   210     0187                     BAUDCTL         equ	391	;# 
   211     0188                     ANSEL           equ	392	;# 
   212     0189                     ANSELH          equ	393	;# 
   213     018C                     EECON1          equ	396	;# 
   214     018D                     EECON2          equ	397	;# 
   215     0015                     _CCPR1L         set	21
   216     001E                     _ADRESH         set	30
   217     001F                     _ADCON0         set	31
   218     0012                     _T2CONbits      set	18
   219     0017                     _CCP1CONbits    set	23
   220     00F9                     _GO_nDONE       set	249
   221     0087                     _TRISCbits      set	135
   222     009E                     _ADRESL         set	158
   223     009F                     _ADCON1         set	159
   224     0092                     _PR2            set	146
   225     0188                     _ANSEL          set	392
   226                           
   227                           	psect	cinit
   228     07FC                     start_initialization:	
   229                           ; #config settings
   230                           
   231     07FC                     __initialization:
   232     07FC                     end_of_initialization:	
   233                           ;End of C runtime variable initialization code
   234                           
   235     07FC                     __end_of__initialization:
   236     07FC  0183               	clrf	3
   237     07FD  120A  118A  2F3B   	ljmp	_main	;jump to C main() function
   238                           
   239                           	psect	cstackCOMMON
   240     0070                     __pcstackCOMMON:
   241     0070                     ?_PWM_init:
   242     0070                     ?_ADC_Initialize:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ?_PWM_val:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     ?_main:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0070                     ?_ADC_read:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     ?___lmul:	
   255                           ; 2 bytes @ 0x0
   256                           
   257     0070                     PWM_val@intensidad:	
   258                           ; 4 bytes @ 0x0
   259                           
   260     0070                     ___lmul@multiplier:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     ??_PWM_init:	
   264                           ; 4 bytes @ 0x0
   265                           
   266     0070                     ??_ADC_Initialize:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0070                     ??_PWM_val:	
   270                           ; 1 bytes @ 0x0
   271                           
   272                           
   273                           ; 1 bytes @ 0x0
   274     0070                     	ds	2
   275     0072                     ??_ADC_read:
   276                           
   277                           ; 1 bytes @ 0x2
   278     0072                     	ds	2
   279     0074                     ___lmul@multiplicand:
   280                           
   281                           ; 4 bytes @ 0x4
   282     0074                     	ds	4
   283     0078                     ??___lmul:
   284                           
   285                           ; 1 bytes @ 0x8
   286     0078                     	ds	1
   287     0079                     ___lmul@product:
   288                           
   289                           ; 4 bytes @ 0x9
   290     0079                     	ds	4
   291     007D                     ??___lldiv:
   292                           
   293                           ; 1 bytes @ 0xD
   294     007D                     	ds	1
   295                           
   296                           	psect	cstackBANK0
   297     0020                     __pcstackBANK0:
   298     0020                     ?___lldiv:
   299     0020                     ___lldiv@divisor:	
   300                           ; 4 bytes @ 0x0
   301                           
   302                           
   303                           ; 4 bytes @ 0x0
   304     0020                     	ds	4
   305     0024                     ___lldiv@dividend:
   306                           
   307                           ; 4 bytes @ 0x4
   308     0024                     	ds	4
   309     0028                     ___lldiv@quotient:
   310                           
   311                           ; 4 bytes @ 0x8
   312     0028                     	ds	4
   313     002C                     ___lldiv@counter:
   314                           
   315                           ; 1 bytes @ 0xC
   316     002C                     	ds	1
   317     002D                     ??_main:
   318                           
   319                           ; 1 bytes @ 0xD
   320     002D                     	ds	2
   321     002F                     main@adc_result_152:
   322                           
   323                           ; 2 bytes @ 0xF
   324     002F                     	ds	2
   325     0031                     main@aux_154:
   326                           
   327                           ; 1 bytes @ 0x11
   328     0031                     	ds	1
   329                           
   330                           	psect	maintext
   331     073B                     __pmaintext:	
   332 ;;
   333 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   334 ;;
   335 ;; *************** function _main *****************
   336 ;; Defined at:
   337 ;;		line 48 in file "main.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;  adc_result      2   15[BANK0 ] unsigned int 
   342 ;;  aux             1   17[BANK0 ] unsigned char 
   343 ;;  aux             2    0        unsigned int 
   344 ;;  adc_result      2    0        unsigned int 
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2, status,0, pclath, cstack
   349 ;; Tracked objects:
   350 ;;		On entry : B00/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   354 ;;      Params:         0       0       0       0       0
   355 ;;      Locals:         0       3       0       0       0
   356 ;;      Temps:          0       2       0       0       0
   357 ;;      Totals:         0       5       0       0       0
   358 ;;Total ram usage:        5 bytes
   359 ;; Hardware stack levels required when called: 1
   360 ;; This function calls:
   361 ;;		_ADC_Initialize
   362 ;;		_ADC_read
   363 ;;		_PWM_init
   364 ;;		_PWM_val
   365 ;;		___lldiv
   366 ;;		___lmul
   367 ;; This function is called by:
   368 ;;		Startup code after reset
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372     073B                     _main:	
   373                           ;psect for function _main
   374                           
   375     073B                     l713:	
   376                           ;incstack = 0
   377                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   378                           
   379                           
   380                           ;main.c: 50: }
   381     073B  1683               	bsf	3,5	;RP0=1, select bank1
   382     073C  1303               	bcf	3,6	;RP1=0, select bank1
   383     073D  1107               	bcf	7,2	;volatile
   384     073E                     l715:
   385     073E  120A  118A  26C7  120A  118A  	fcall	_ADC_Initialize
   386     0743                     l717:
   387     0743  120A  118A  26D4  120A  118A  	fcall	_PWM_init
   388     0748                     l719:
   389     0748  120A  118A  26E4  120A  118A  	fcall	_ADC_read
   390     074D  0871               	movf	?_ADC_read+1,w
   391     074E  1283               	bcf	3,5	;RP0=0, select bank0
   392     074F  1303               	bcf	3,6	;RP1=0, select bank0
   393     0750  00B0               	movwf	main@adc_result_152+1
   394     0751  0870               	movf	?_ADC_read,w
   395     0752  00AF               	movwf	main@adc_result_152
   396     0753                     l721:
   397     0753  3000               	movlw	0
   398     0754  00A3               	movwf	___lldiv@divisor+3
   399     0755  3000               	movlw	0
   400     0756  00A2               	movwf	___lldiv@divisor+2
   401     0757  3003               	movlw	3
   402     0758  00A1               	movwf	___lldiv@divisor+1
   403     0759  30FF               	movlw	255
   404     075A  00A0               	movwf	___lldiv@divisor
   405     075B  082F               	movf	main@adc_result_152,w
   406     075C  00F0               	movwf	___lmul@multiplier
   407     075D  0830               	movf	main@adc_result_152+1,w
   408     075E  00F1               	movwf	___lmul@multiplier+1
   409     075F  01F2               	clrf	___lmul@multiplier+2
   410     0760  01F3               	clrf	___lmul@multiplier+3
   411     0761  3000               	movlw	0
   412     0762  00F7               	movwf	___lmul@multiplicand+3
   413     0763  3000               	movlw	0
   414     0764  00F6               	movwf	___lmul@multiplicand+2
   415     0765  3000               	movlw	0
   416     0766  00F5               	movwf	___lmul@multiplicand+1
   417     0767  30FF               	movlw	255
   418     0768  00F4               	movwf	___lmul@multiplicand
   419     0769  120A  118A  26F5  120A  118A  	fcall	___lmul
   420     076E  0873               	movf	?___lmul+3,w
   421     076F  1283               	bcf	3,5	;RP0=0, select bank0
   422     0770  1303               	bcf	3,6	;RP1=0, select bank0
   423     0771  00A7               	movwf	___lldiv@dividend+3
   424     0772  0872               	movf	?___lmul+2,w
   425     0773  00A6               	movwf	___lldiv@dividend+2
   426     0774  0871               	movf	?___lmul+1,w
   427     0775  00A5               	movwf	___lldiv@dividend+1
   428     0776  0870               	movf	?___lmul,w
   429     0777  00A4               	movwf	___lldiv@dividend
   430     0778  120A  118A  2796  120A  118A  	fcall	___lldiv
   431     077D  1283               	bcf	3,5	;RP0=0, select bank0
   432     077E  1303               	bcf	3,6	;RP1=0, select bank0
   433     077F  0820               	movf	?___lldiv,w
   434     0780  00B1               	movwf	main@aux_154
   435     0781                     l723:
   436     0781  0831               	movf	main@aux_154,w
   437     0782  120A  118A  26C1  120A  118A  	fcall	_PWM_val
   438     0787                     l725:
   439     0787  301A               	movlw	26
   440     0788  1283               	bcf	3,5	;RP0=0, select bank0
   441     0789  1303               	bcf	3,6	;RP1=0, select bank0
   442     078A  00AE               	movwf	??_main+1
   443     078B  30F7               	movlw	247
   444     078C  00AD               	movwf	??_main
   445     078D                     u277:
   446     078D  0BAD               	decfsz	??_main,f
   447     078E  2F8D               	goto	u277
   448     078F  0BAE               	decfsz	??_main+1,f
   449     0790  2F8D               	goto	u277
   450     0791  2F92               	nop2
   451     0792  2F48               	goto	l719
   452     0793  120A  118A  2800   	ljmp	start
   453     0796                     __end_of_main:
   454                           
   455                           	psect	text1
   456     06F5                     __ptext1:	
   457 ;; *************** function ___lmul *****************
   458 ;; Defined at:
   459 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;  multiplier      4    0[COMMON] unsigned long 
   462 ;;  multiplicand    4    4[COMMON] unsigned long 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  product         4    9[COMMON] unsigned long 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  4    0[COMMON] unsigned long 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   474 ;;      Params:         8       0       0       0       0
   475 ;;      Locals:         4       0       0       0       0
   476 ;;      Temps:          1       0       0       0       0
   477 ;;      Totals:        13       0       0       0       0
   478 ;;Total ram usage:       13 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487     06F5                     ___lmul:	
   488                           ;psect for function ___lmul
   489                           
   490     06F5                     l675:	
   491                           ;incstack = 0
   492                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   493                           
   494     06F5  3000               	movlw	0
   495     06F6  00FC               	movwf	___lmul@product+3
   496     06F7  3000               	movlw	0
   497     06F8  00FB               	movwf	___lmul@product+2
   498     06F9  3000               	movlw	0
   499     06FA  00FA               	movwf	___lmul@product+1
   500     06FB  3000               	movlw	0
   501     06FC  00F9               	movwf	___lmul@product
   502     06FD                     l677:
   503     06FD  1C70               	btfss	___lmul@multiplier,0
   504     06FE  2F00               	goto	u151
   505     06FF  2F01               	goto	u150
   506     0700                     u151:
   507     0700  2F18               	goto	l681
   508     0701                     u150:
   509     0701                     l679:
   510     0701  0874               	movf	___lmul@multiplicand,w
   511     0702  07F9               	addwf	___lmul@product,f
   512     0703  0875               	movf	___lmul@multiplicand+1,w
   513     0704  1103               	clrz
   514     0705  1803               	skipnc
   515     0706  3E01               	addlw	1
   516     0707  1903               	skipnz
   517     0708  2F0A               	goto	u161
   518     0709  07FA               	addwf	___lmul@product+1,f
   519     070A                     u161:
   520     070A  0876               	movf	___lmul@multiplicand+2,w
   521     070B  1103               	clrz
   522     070C  1803               	skipnc
   523     070D  3E01               	addlw	1
   524     070E  1903               	skipnz
   525     070F  2F11               	goto	u162
   526     0710  07FB               	addwf	___lmul@product+2,f
   527     0711                     u162:
   528     0711  0877               	movf	___lmul@multiplicand+3,w
   529     0712  1103               	clrz
   530     0713  1803               	skipnc
   531     0714  3E01               	addlw	1
   532     0715  1903               	skipnz
   533     0716  2F18               	goto	u163
   534     0717  07FC               	addwf	___lmul@product+3,f
   535     0718                     u163:
   536     0718                     l681:
   537     0718  3001               	movlw	1
   538     0719  00F8               	movwf	??___lmul
   539     071A                     u175:
   540     071A  1003               	clrc
   541     071B  0DF4               	rlf	___lmul@multiplicand,f
   542     071C  0DF5               	rlf	___lmul@multiplicand+1,f
   543     071D  0DF6               	rlf	___lmul@multiplicand+2,f
   544     071E  0DF7               	rlf	___lmul@multiplicand+3,f
   545     071F  0BF8               	decfsz	??___lmul,f
   546     0720  2F1A               	goto	u175
   547     0721                     l683:
   548     0721  3001               	movlw	1
   549     0722                     u185:
   550     0722  1003               	clrc
   551     0723  0CF3               	rrf	___lmul@multiplier+3,f
   552     0724  0CF2               	rrf	___lmul@multiplier+2,f
   553     0725  0CF1               	rrf	___lmul@multiplier+1,f
   554     0726  0CF0               	rrf	___lmul@multiplier,f
   555     0727  3EFF               	addlw	-1
   556     0728  1D03               	skipz
   557     0729  2F22               	goto	u185
   558     072A  0873               	movf	___lmul@multiplier+3,w
   559     072B  0472               	iorwf	___lmul@multiplier+2,w
   560     072C  0471               	iorwf	___lmul@multiplier+1,w
   561     072D  0470               	iorwf	___lmul@multiplier,w
   562     072E  1D03               	skipz
   563     072F  2F31               	goto	u191
   564     0730  2F32               	goto	u190
   565     0731                     u191:
   566     0731  2EFD               	goto	l677
   567     0732                     u190:
   568     0732                     l685:
   569     0732  087C               	movf	___lmul@product+3,w
   570     0733  00F3               	movwf	?___lmul+3
   571     0734  087B               	movf	___lmul@product+2,w
   572     0735  00F2               	movwf	?___lmul+2
   573     0736  087A               	movf	___lmul@product+1,w
   574     0737  00F1               	movwf	?___lmul+1
   575     0738  0879               	movf	___lmul@product,w
   576     0739  00F0               	movwf	?___lmul
   577     073A                     l147:
   578     073A  0008               	return
   579     073B                     __end_of___lmul:
   580                           
   581                           	psect	text2
   582     0796                     __ptext2:	
   583 ;; *************** function ___lldiv *****************
   584 ;; Defined at:
   585 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  divisor         4    0[BANK0 ] unsigned long 
   588 ;;  dividend        4    4[BANK0 ] unsigned long 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  quotient        4    8[BANK0 ] unsigned long 
   591 ;;  counter         1   12[BANK0 ] unsigned char 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  4    0[BANK0 ] unsigned long 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       8       0       0       0
   602 ;;      Locals:         0       5       0       0       0
   603 ;;      Temps:          1       0       0       0       0
   604 ;;      Totals:         1      13       0       0       0
   605 ;;Total ram usage:       14 bytes
   606 ;; Hardware stack levels used: 1
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614     0796                     ___lldiv:	
   615                           ;psect for function ___lldiv
   616                           
   617     0796                     l689:	
   618                           ;incstack = 0
   619                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   620                           
   621     0796  3000               	movlw	0
   622     0797  1283               	bcf	3,5	;RP0=0, select bank0
   623     0798  1303               	bcf	3,6	;RP1=0, select bank0
   624     0799  00AB               	movwf	___lldiv@quotient+3
   625     079A  3000               	movlw	0
   626     079B  00AA               	movwf	___lldiv@quotient+2
   627     079C  3000               	movlw	0
   628     079D  00A9               	movwf	___lldiv@quotient+1
   629     079E  3000               	movlw	0
   630     079F  00A8               	movwf	___lldiv@quotient
   631     07A0  0823               	movf	___lldiv@divisor+3,w
   632     07A1  0422               	iorwf	___lldiv@divisor+2,w
   633     07A2  0421               	iorwf	___lldiv@divisor+1,w
   634     07A3  0420               	iorwf	___lldiv@divisor,w
   635     07A4  1903               	skipnz
   636     07A5  2FA7               	goto	u201
   637     07A6  2FA8               	goto	u200
   638     07A7                     u201:
   639     07A7  2FF3               	goto	l709
   640     07A8                     u200:
   641     07A8                     l691:
   642     07A8  3001               	movlw	1
   643     07A9  00AC               	movwf	___lldiv@counter
   644     07AA  2FB6               	goto	l695
   645     07AB                     l693:
   646     07AB  3001               	movlw	1
   647     07AC  00FD               	movwf	??___lldiv
   648     07AD                     u215:
   649     07AD  1003               	clrc
   650     07AE  0DA0               	rlf	___lldiv@divisor,f
   651     07AF  0DA1               	rlf	___lldiv@divisor+1,f
   652     07B0  0DA2               	rlf	___lldiv@divisor+2,f
   653     07B1  0DA3               	rlf	___lldiv@divisor+3,f
   654     07B2  0BFD               	decfsz	??___lldiv,f
   655     07B3  2FAD               	goto	u215
   656     07B4  3001               	movlw	1
   657     07B5  07AC               	addwf	___lldiv@counter,f
   658     07B6                     l695:
   659     07B6  1FA3               	btfss	___lldiv@divisor+3,7
   660     07B7  2FB9               	goto	u221
   661     07B8  2FBA               	goto	u220
   662     07B9                     u221:
   663     07B9  2FAB               	goto	l693
   664     07BA                     u220:
   665     07BA                     l697:
   666     07BA  3001               	movlw	1
   667     07BB  00FD               	movwf	??___lldiv
   668     07BC                     u235:
   669     07BC  1003               	clrc
   670     07BD  0DA8               	rlf	___lldiv@quotient,f
   671     07BE  0DA9               	rlf	___lldiv@quotient+1,f
   672     07BF  0DAA               	rlf	___lldiv@quotient+2,f
   673     07C0  0DAB               	rlf	___lldiv@quotient+3,f
   674     07C1  0BFD               	decfsz	??___lldiv,f
   675     07C2  2FBC               	goto	u235
   676     07C3                     l699:
   677     07C3  0823               	movf	___lldiv@divisor+3,w
   678     07C4  0227               	subwf	___lldiv@dividend+3,w
   679     07C5  1D03               	skipz
   680     07C6  2FD1               	goto	u245
   681     07C7  0822               	movf	___lldiv@divisor+2,w
   682     07C8  0226               	subwf	___lldiv@dividend+2,w
   683     07C9  1D03               	skipz
   684     07CA  2FD1               	goto	u245
   685     07CB  0821               	movf	___lldiv@divisor+1,w
   686     07CC  0225               	subwf	___lldiv@dividend+1,w
   687     07CD  1D03               	skipz
   688     07CE  2FD1               	goto	u245
   689     07CF  0820               	movf	___lldiv@divisor,w
   690     07D0  0224               	subwf	___lldiv@dividend,w
   691     07D1                     u245:
   692     07D1  1C03               	skipc
   693     07D2  2FD4               	goto	u241
   694     07D3  2FD5               	goto	u240
   695     07D4                     u241:
   696     07D4  2FE4               	goto	l705
   697     07D5                     u240:
   698     07D5                     l701:
   699     07D5  0820               	movf	___lldiv@divisor,w
   700     07D6  02A4               	subwf	___lldiv@dividend,f
   701     07D7  0821               	movf	___lldiv@divisor+1,w
   702     07D8  1C03               	skipc
   703     07D9  0F21               	incfsz	___lldiv@divisor+1,w
   704     07DA  02A5               	subwf	___lldiv@dividend+1,f
   705     07DB  0822               	movf	___lldiv@divisor+2,w
   706     07DC  1C03               	skipc
   707     07DD  0F22               	incfsz	___lldiv@divisor+2,w
   708     07DE  02A6               	subwf	___lldiv@dividend+2,f
   709     07DF  0823               	movf	___lldiv@divisor+3,w
   710     07E0  1C03               	skipc
   711     07E1  0F23               	incfsz	___lldiv@divisor+3,w
   712     07E2  02A7               	subwf	___lldiv@dividend+3,f
   713     07E3                     l703:
   714     07E3  1428               	bsf	___lldiv@quotient,0
   715     07E4                     l705:
   716     07E4  3001               	movlw	1
   717     07E5                     u255:
   718     07E5  1003               	clrc
   719     07E6  0CA3               	rrf	___lldiv@divisor+3,f
   720     07E7  0CA2               	rrf	___lldiv@divisor+2,f
   721     07E8  0CA1               	rrf	___lldiv@divisor+1,f
   722     07E9  0CA0               	rrf	___lldiv@divisor,f
   723     07EA  3EFF               	addlw	-1
   724     07EB  1D03               	skipz
   725     07EC  2FE5               	goto	u255
   726     07ED                     l707:
   727     07ED  3001               	movlw	1
   728     07EE  02AC               	subwf	___lldiv@counter,f
   729     07EF  1D03               	btfss	3,2
   730     07F0  2FF2               	goto	u261
   731     07F1  2FF3               	goto	u260
   732     07F2                     u261:
   733     07F2  2FBA               	goto	l697
   734     07F3                     u260:
   735     07F3                     l709:
   736     07F3  082B               	movf	___lldiv@quotient+3,w
   737     07F4  00A3               	movwf	?___lldiv+3
   738     07F5  082A               	movf	___lldiv@quotient+2,w
   739     07F6  00A2               	movwf	?___lldiv+2
   740     07F7  0829               	movf	___lldiv@quotient+1,w
   741     07F8  00A1               	movwf	?___lldiv+1
   742     07F9  0828               	movf	___lldiv@quotient,w
   743     07FA  00A0               	movwf	?___lldiv
   744     07FB                     l169:
   745     07FB  0008               	return
   746     07FC                     __end_of___lldiv:
   747                           
   748                           	psect	text3
   749     06C1                     __ptext3:	
   750 ;; *************** function _PWM_val *****************
   751 ;; Defined at:
   752 ;;		line 43 in file "main.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;  intensidad      1    wreg     unsigned char 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  intensidad      1    0[COMMON] unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         1       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0
   769 ;;      Totals:         1       0       0       0       0
   770 ;;Total ram usage:        1 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779     06C1                     _PWM_val:	
   780                           ;psect for function _PWM_val
   781                           
   782                           
   783                           ;incstack = 0
   784                           ; Regs used in _PWM_val: [wreg]
   785                           ;PWM_val@intensidad stored from wreg
   786     06C1  00F0               	movwf	PWM_val@intensidad
   787     06C2                     l673:
   788                           
   789                           ;main.c: 43:         unsigned int adc_result = ADC_read();;main.c: 44:         unsigned 
      +                          char aux = (unsigned char)((adc_result * 255UL) / 1023);;main.c: 45: 
   790     06C2  0870               	movf	PWM_val@intensidad,w
   791     06C3  1283               	bcf	3,5	;RP0=0, select bank0
   792     06C4  1303               	bcf	3,6	;RP1=0, select bank0
   793     06C5  0095               	movwf	21	;volatile
   794     06C6                     l39:
   795     06C6  0008               	return
   796     06C7                     __end_of_PWM_val:
   797                           
   798                           	psect	text4
   799     06D4                     __ptext4:	
   800 ;; *************** function _PWM_init *****************
   801 ;; Defined at:
   802 ;;		line 15 in file "main.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, status,2, status,0
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used: 1
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829     06D4                     _PWM_init:	
   830                           ;psect for function _PWM_init
   831                           
   832     06D4                     l659:	
   833                           ;incstack = 0
   834                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
   835                           
   836                           
   837                           ;main.c: 17: void ADC_Initialize(){
   838     06D4  1283               	bcf	3,5	;RP0=0, select bank0
   839     06D5  1303               	bcf	3,6	;RP1=0, select bank0
   840     06D6  0817               	movf	23,w	;volatile
   841     06D7  39F0               	andlw	-16
   842     06D8  380C               	iorlw	12
   843     06D9  0097               	movwf	23	;volatile
   844                           
   845                           ;main.c: 18:     ANSEL = 0x01;
   846     06DA  303F               	movlw	-193
   847     06DB  0597               	andwf	23,f	;volatile
   848                           
   849                           ;main.c: 21: }
   850     06DC  3003               	movlw	3
   851     06DD  0492               	iorwf	18,f	;volatile
   852     06DE                     l661:
   853                           
   854                           ;main.c: 22: 
   855     06DE  1512               	bsf	18,2	;volatile
   856     06DF                     l663:
   857                           
   858                           ;main.c: 24:     _delay((unsigned long)((5)*(4000000/4000000.0)));
   859     06DF  30FF               	movlw	255
   860     06E0  1683               	bsf	3,5	;RP0=1, select bank1
   861     06E1  1303               	bcf	3,6	;RP1=0, select bank1
   862     06E2  0092               	movwf	18	;volatile
   863     06E3                     l27:
   864     06E3  0008               	return
   865     06E4                     __end_of_PWM_init:
   866                           
   867                           	psect	text5
   868     06E4                     __ptext5:	
   869 ;; *************** function _ADC_read *****************
   870 ;; Defined at:
   871 ;;		line 36 in file "main.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;                  2    0[COMMON] unsigned int 
   878 ;; Registers used:
   879 ;;		wreg
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   885 ;;      Params:         2       0       0       0       0
   886 ;;      Locals:         0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0
   888 ;;      Totals:         2       0       0       0       0
   889 ;;Total ram usage:        2 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898     06E4                     _ADC_read:	
   899                           ;psect for function _ADC_read
   900                           
   901     06E4                     l667:	
   902                           ;incstack = 0
   903                           ; Regs used in _ADC_read: [wreg]
   904                           
   905                           
   906                           ;main.c: 37:     unsigned int adc_result, aux;
   907     06E4  2EE5               	nop2	;2 cycle nop
   908     06E5  2EE6               	nop2	;2 cycle nop
   909     06E6  0000               	nop
   910                           
   911                           ;main.c: 38:     TRISCbits.TRISC2 = 0;
   912     06E7  1283               	bcf	3,5	;RP0=0, select bank0
   913     06E8  1303               	bcf	3,6	;RP1=0, select bank0
   914     06E9  149F               	bsf	31,1	;volatile
   915     06EA                     l33:	
   916                           ;main.c: 39:     ADC_Initialize();
   917                           
   918     06EA  189F               	btfsc	31,1	;volatile
   919     06EB  2EED               	goto	u141
   920     06EC  2EEE               	goto	u140
   921     06ED                     u141:
   922     06ED  2EEA               	goto	l33
   923     06EE                     u140:
   924     06EE                     l669:
   925                           
   926                           ;main.c: 40:     PWM_init();
   927     06EE  081E               	movf	30,w	;volatile
   928     06EF  00F1               	movwf	?_ADC_read+1
   929     06F0  1683               	bsf	3,5	;RP0=1, select bank1
   930     06F1  1303               	bcf	3,6	;RP1=0, select bank1
   931     06F2  081E               	movf	30,w	;volatile
   932     06F3  00F0               	movwf	?_ADC_read
   933     06F4                     l36:
   934     06F4  0008               	return
   935     06F5                     __end_of_ADC_read:
   936                           
   937                           	psect	text6
   938     06C7                     __ptext6:	
   939 ;; *************** function _ADC_Initialize *****************
   940 ;; Defined at:
   941 ;;		line 30 in file "main.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		None
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0
   958 ;;      Totals:         0       0       0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_main
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968     06C7                     _ADC_Initialize:	
   969                           ;psect for function _ADC_Initialize
   970                           
   971     06C7                     l665:	
   972                           ;incstack = 0
   973                           ; Regs used in _ADC_Initialize: []
   974                           
   975                           
   976                           ;main.c: 31: {
   977     06C7  3001               	movlw	1
   978     06C8  1683               	bsf	3,5	;RP0=1, select bank3
   979     06C9  1703               	bsf	3,6	;RP1=1, select bank3
   980     06CA  0088               	movwf	8	;volatile
   981                           
   982                           ;main.c: 32:     CCPR1L = intensidad;
   983     06CB  3081               	movlw	129
   984     06CC  1283               	bcf	3,5	;RP0=0, select bank0
   985     06CD  1303               	bcf	3,6	;RP1=0, select bank0
   986     06CE  009F               	movwf	31	;volatile
   987                           
   988                           ;main.c: 33: }
   989     06CF  3080               	movlw	128
   990     06D0  1683               	bsf	3,5	;RP0=1, select bank1
   991     06D1  1303               	bcf	3,6	;RP1=0, select bank1
   992     06D2  009F               	movwf	31	;volatile
   993     06D3                     l30:
   994     06D3  0008               	return
   995     06D4                     __end_of_ADC_Initialize:
   996     0002                     ___latbits      equ	2
   997     007E                     btemp           set	126	;btemp
   998     007E                     wtemp0          set	126
   999                           
  1000                           	psect	config
  1001                           
  1002                           ;Config register CONFIG1 @ 0x2007
  1003                           ;	Oscillator Selection bits
  1004                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1005                           ;	Watchdog Timer Enable bit
  1006                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1007                           ;	Power-up Timer Enable bit
  1008                           ;	PWRTE = OFF, PWRT disabled
  1009                           ;	RE3/MCLR pin function select bit
  1010                           ;	MCLRE = 0x1, unprogrammed default
  1011                           ;	Code Protection bit
  1012                           ;	CP = OFF, Program memory code protection is disabled
  1013                           ;	Data Code Protection bit
  1014                           ;	CPD = OFF, Data memory code protection is disabled
  1015                           ;	Brown Out Reset Selection bits
  1016                           ;	BOREN = ON, BOR enabled
  1017                           ;	Internal External Switchover bit
  1018                           ;	IESO = 0x1, unprogrammed default
  1019                           ;	Fail-Safe Clock Monitor Enabled bit
  1020                           ;	FCMEN = 0x1, unprogrammed default
  1021                           ;	Low Voltage Programming Enable bit
  1022                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1023                           ;	In-Circuit Debugger Mode bit
  1024                           ;	DEBUG = 0x1, unprogrammed default
  1025     2007                     	org	8199
  1026     2007  2FF1               	dw	12273
  1027                           
  1028                           ;Config register CONFIG2 @ 0x2008
  1029                           ;	Brown-out Reset Selection bit
  1030                           ;	BOR4V = 0x1, unprogrammed default
  1031                           ;	Flash Program Memory Self Write Enable bits
  1032                           ;	WRT = OFF, Write protection off
  1033     2008                     	org	8200
  1034     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     333
                                             13 BANK0      5     5      0
                     _ADC_Initialize
                           _ADC_read
                           _PWM_init
                            _PWM_val
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8      94
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     164
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM_val                                              1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_read
   _PWM_init
   _PWM_val
   ___lldiv
     ___lmul (ARG)
   ___lmul

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     18      18     22.5%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      32      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 19 16:35:53 2025

                     l30 06D3                       l33 06EA                       l27 06E3  
                     l36 06F4                       l39 06C6                      l147 073A  
                    l169 07FB                      l701 07D5                      l703 07E3  
                    l705 07E4                      l721 0753                      l713 073B  
                    l707 07ED                      l723 0781                      l715 073E  
                    l661 06DE                      l709 07F3                      l725 0787  
                    l717 0743                      l663 06DF                      l719 0748  
                    l665 06C7                      l673 06C2                      l681 0718  
                    l667 06E4                      l659 06D4                      l691 07A8  
                    l683 0721                      l675 06F5                      l669 06EE  
                    l693 07AB                      l685 0732                      l677 06FD  
                    l695 07B6                      l679 0701                      l697 07BA  
                    l689 0796                      l699 07C3                      u200 07A8  
                    u201 07A7                      u140 06EE                      u220 07BA  
                    u141 06ED                      u221 07B9                      u150 0701  
                    u215 07AD                      u151 0700                      u240 07D5  
                    u241 07D4                      u161 070A                      u162 0711  
                    u235 07BC                      u163 0718                      u260 07F3  
                    u261 07F2                      u245 07D1                      u190 0732  
                    _PR2 0092                      u255 07E5                      u191 0731  
                    u175 071A                      u185 0722                      u277 078D  
            main@aux_154 0031                     _main 073B                     btemp 007E  
        __end_of_PWM_val 06C7                     start 0000         __end_of_ADC_read 06F5  
                  ?_main 0070                    _ANSEL 0188          __end_of___lldiv 07FC  
    ___lmul@multiplicand 0074         __end_of_PWM_init 06E4                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0796  
      PWM_val@intensidad 0070                   ??_main 002D                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR1L 0015                ??_PWM_val 0070                   ___lmul 06F5  
              ??___lldiv 007D                ?_ADC_read 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070                ?_PWM_init 0070               ??_ADC_read 0072  
             __pmaintext 073B                  ?___lmul 0070           ___lmul@product 0079  
             ??_PWM_init 0070                  _PWM_val 06C1                  ___lldiv 0796  
                __ptext1 06F5                  __ptext2 0796                  __ptext3 06C1  
                __ptext4 06D4                  __ptext5 06E4                  __ptext6 06C7  
              _T2CONbits 0012     end_of_initialization 07FC          ___lldiv@divisor 0020  
        ___lldiv@counter 002C                _TRISCbits 0087              _CCP1CONbits 0017  
         __end_of___lmul 073B           _ADC_Initialize 06C7      start_initialization 07FC  
               ??___lmul 0078   __end_of_ADC_Initialize 06D4                ___latbits 0002  
          __pcstackBANK0 0020                 ?_PWM_val 0070                 ?___lldiv 0020  
        ?_ADC_Initialize 0070                 _ADC_read 06E4                 _GO_nDONE 00F9  
               _PWM_init 06D4        ___lmul@multiplier 0070         ___lldiv@dividend 0024  
     main@adc_result_152 002F         ??_ADC_Initialize 0070         ___lldiv@quotient 0028  
