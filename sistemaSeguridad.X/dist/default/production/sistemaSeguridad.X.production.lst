

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 12 11:43:03 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,space=0,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 26/03/2025 GMT
    24                           ; 
    25                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0004                     fsr             equ	4
    58     0004                     fsr0            equ	4
    59     0000                     indf            equ	0
    60     0000                     indf0           equ	0
    61     0002                     pc              equ	2
    62     0002                     pcl             equ	2
    63     000A                     pclath          equ	10
    64     0003                     status          equ	3
    65     0000                     INDF            equ	0	;# 
    66     0001                     TMR0            equ	1	;# 
    67     0002                     PCL             equ	2	;# 
    68     0003                     STATUS          equ	3	;# 
    69     0004                     FSR             equ	4	;# 
    70     0005                     PORTA           equ	5	;# 
    71     0006                     PORTB           equ	6	;# 
    72     0007                     PORTC           equ	7	;# 
    73     0008                     PORTD           equ	8	;# 
    74     0009                     PORTE           equ	9	;# 
    75     000A                     PCLATH          equ	10	;# 
    76     000B                     INTCON          equ	11	;# 
    77     000C                     PIR1            equ	12	;# 
    78     000D                     PIR2            equ	13	;# 
    79     000E                     TMR1            equ	14	;# 
    80     000E                     TMR1L           equ	14	;# 
    81     000F                     TMR1H           equ	15	;# 
    82     0010                     T1CON           equ	16	;# 
    83     0011                     TMR2            equ	17	;# 
    84     0012                     T2CON           equ	18	;# 
    85     0013                     SSPBUF          equ	19	;# 
    86     0014                     SSPCON          equ	20	;# 
    87     0015                     CCPR1           equ	21	;# 
    88     0015                     CCPR1L          equ	21	;# 
    89     0016                     CCPR1H          equ	22	;# 
    90     0017                     CCP1CON         equ	23	;# 
    91     0018                     RCSTA           equ	24	;# 
    92     0019                     TXREG           equ	25	;# 
    93     001A                     RCREG           equ	26	;# 
    94     001B                     CCPR2           equ	27	;# 
    95     001B                     CCPR2L          equ	27	;# 
    96     001C                     CCPR2H          equ	28	;# 
    97     001D                     CCP2CON         equ	29	;# 
    98     001E                     ADRESH          equ	30	;# 
    99     001F                     ADCON0          equ	31	;# 
   100     0081                     OPTION_REG      equ	129	;# 
   101     0085                     TRISA           equ	133	;# 
   102     0086                     TRISB           equ	134	;# 
   103     0087                     TRISC           equ	135	;# 
   104     0088                     TRISD           equ	136	;# 
   105     0089                     TRISE           equ	137	;# 
   106     008C                     PIE1            equ	140	;# 
   107     008D                     PIE2            equ	141	;# 
   108     008E                     PCON            equ	142	;# 
   109     008F                     OSCCON          equ	143	;# 
   110     0090                     OSCTUNE         equ	144	;# 
   111     0091                     SSPCON2         equ	145	;# 
   112     0092                     PR2             equ	146	;# 
   113     0093                     SSPADD          equ	147	;# 
   114     0093                     SSPMSK          equ	147	;# 
   115     0093                     MSK             equ	147	;# 
   116     0094                     SSPSTAT         equ	148	;# 
   117     0095                     WPUB            equ	149	;# 
   118     0096                     IOCB            equ	150	;# 
   119     0097                     VRCON           equ	151	;# 
   120     0098                     TXSTA           equ	152	;# 
   121     0099                     SPBRG           equ	153	;# 
   122     009A                     SPBRGH          equ	154	;# 
   123     009B                     PWM1CON         equ	155	;# 
   124     009C                     ECCPAS          equ	156	;# 
   125     009D                     PSTRCON         equ	157	;# 
   126     009E                     ADRESL          equ	158	;# 
   127     009F                     ADCON1          equ	159	;# 
   128     0105                     WDTCON          equ	261	;# 
   129     0107                     CM1CON0         equ	263	;# 
   130     0108                     CM2CON0         equ	264	;# 
   131     0109                     CM2CON1         equ	265	;# 
   132     010C                     EEDATA          equ	268	;# 
   133     010C                     EEDAT           equ	268	;# 
   134     010D                     EEADR           equ	269	;# 
   135     010E                     EEDATH          equ	270	;# 
   136     010F                     EEADRH          equ	271	;# 
   137     0185                     SRCON           equ	389	;# 
   138     0187                     BAUDCTL         equ	391	;# 
   139     0188                     ANSEL           equ	392	;# 
   140     0189                     ANSELH          equ	393	;# 
   141     018C                     EECON1          equ	396	;# 
   142     018D                     EECON2          equ	397	;# 
   143     0000                     INDF            equ	0	;# 
   144     0001                     TMR0            equ	1	;# 
   145     0002                     PCL             equ	2	;# 
   146     0003                     STATUS          equ	3	;# 
   147     0004                     FSR             equ	4	;# 
   148     0005                     PORTA           equ	5	;# 
   149     0006                     PORTB           equ	6	;# 
   150     0007                     PORTC           equ	7	;# 
   151     0008                     PORTD           equ	8	;# 
   152     0009                     PORTE           equ	9	;# 
   153     000A                     PCLATH          equ	10	;# 
   154     000B                     INTCON          equ	11	;# 
   155     000C                     PIR1            equ	12	;# 
   156     000D                     PIR2            equ	13	;# 
   157     000E                     TMR1            equ	14	;# 
   158     000E                     TMR1L           equ	14	;# 
   159     000F                     TMR1H           equ	15	;# 
   160     0010                     T1CON           equ	16	;# 
   161     0011                     TMR2            equ	17	;# 
   162     0012                     T2CON           equ	18	;# 
   163     0013                     SSPBUF          equ	19	;# 
   164     0014                     SSPCON          equ	20	;# 
   165     0015                     CCPR1           equ	21	;# 
   166     0015                     CCPR1L          equ	21	;# 
   167     0016                     CCPR1H          equ	22	;# 
   168     0017                     CCP1CON         equ	23	;# 
   169     0018                     RCSTA           equ	24	;# 
   170     0019                     TXREG           equ	25	;# 
   171     001A                     RCREG           equ	26	;# 
   172     001B                     CCPR2           equ	27	;# 
   173     001B                     CCPR2L          equ	27	;# 
   174     001C                     CCPR2H          equ	28	;# 
   175     001D                     CCP2CON         equ	29	;# 
   176     001E                     ADRESH          equ	30	;# 
   177     001F                     ADCON0          equ	31	;# 
   178     0081                     OPTION_REG      equ	129	;# 
   179     0085                     TRISA           equ	133	;# 
   180     0086                     TRISB           equ	134	;# 
   181     0087                     TRISC           equ	135	;# 
   182     0088                     TRISD           equ	136	;# 
   183     0089                     TRISE           equ	137	;# 
   184     008C                     PIE1            equ	140	;# 
   185     008D                     PIE2            equ	141	;# 
   186     008E                     PCON            equ	142	;# 
   187     008F                     OSCCON          equ	143	;# 
   188     0090                     OSCTUNE         equ	144	;# 
   189     0091                     SSPCON2         equ	145	;# 
   190     0092                     PR2             equ	146	;# 
   191     0093                     SSPADD          equ	147	;# 
   192     0093                     SSPMSK          equ	147	;# 
   193     0093                     MSK             equ	147	;# 
   194     0094                     SSPSTAT         equ	148	;# 
   195     0095                     WPUB            equ	149	;# 
   196     0096                     IOCB            equ	150	;# 
   197     0097                     VRCON           equ	151	;# 
   198     0098                     TXSTA           equ	152	;# 
   199     0099                     SPBRG           equ	153	;# 
   200     009A                     SPBRGH          equ	154	;# 
   201     009B                     PWM1CON         equ	155	;# 
   202     009C                     ECCPAS          equ	156	;# 
   203     009D                     PSTRCON         equ	157	;# 
   204     009E                     ADRESL          equ	158	;# 
   205     009F                     ADCON1          equ	159	;# 
   206     0105                     WDTCON          equ	261	;# 
   207     0107                     CM1CON0         equ	263	;# 
   208     0108                     CM2CON0         equ	264	;# 
   209     0109                     CM2CON1         equ	265	;# 
   210     010C                     EEDATA          equ	268	;# 
   211     010C                     EEDAT           equ	268	;# 
   212     010D                     EEADR           equ	269	;# 
   213     010E                     EEDATH          equ	270	;# 
   214     010F                     EEADRH          equ	271	;# 
   215     0185                     SRCON           equ	389	;# 
   216     0187                     BAUDCTL         equ	391	;# 
   217     0188                     ANSEL           equ	392	;# 
   218     0189                     ANSELH          equ	393	;# 
   219     018C                     EECON1          equ	396	;# 
   220     018D                     EECON2          equ	397	;# 
   221                           
   222                           	psect	idataCOMMON
   223     0221                     __pidataCOMMON:
   224                           
   225                           ;initializer for _tries
   226     0221  3403               	retlw	3
   227     0222  3400               	retlw	0
   228                           
   229                           	psect	idataBANK0
   230     01F5                     __pidataBANK0:
   231                           
   232                           ;initializer for _password
   233     01F5  3401               	retlw	1
   234     01F6  3400               	retlw	0
   235     01F7  3401               	retlw	1
   236     01F8  3400               	retlw	0
   237     01F9  3401               	retlw	1
   238     01FA  3400               	retlw	0
   239     01FB  3401               	retlw	1
   240     01FC  3400               	retlw	0
   241                           
   242                           ;initializer for _FAIL
   243     01FD  3471               	retlw	113
   244     01FE  3477               	retlw	119
   245     01FF  3430               	retlw	48
   246     0200  3438               	retlw	56
   247                           
   248                           ;initializer for _PASS
   249     0201  3473               	retlw	115
   250     0202  3477               	retlw	119
   251     0203  346D               	retlw	109
   252     0204  346D               	retlw	109
   253                           
   254                           ;initializer for _digits
   255     0205  3406               	retlw	6
   256     0206  345B               	retlw	91
   257     0207  344F               	retlw	79
   258     0006                     _PORTBbits      set	6
   259     0008                     _PORTD          set	8
   260     0007                     _PORTC          set	7
   261     0006                     _PORTB          set	6
   262     0059                     _INTF           set	89
   263     005F                     _GIE            set	95
   264     005C                     _INTE           set	92
   265     0088                     _TRISD          set	136
   266     0087                     _TRISC          set	135
   267     0086                     _TRISB          set	134
   268     0081                     _OPTION_REG     set	129
   269     040E                     _INTEDG         set	1038
   270     0189                     _ANSELH         set	393
   271     0188                     _ANSEL          set	392
   272                           
   273                           	psect	cinit
   274     0015                     start_initialization:	
   275                           ; #config settings
   276                           
   277     0015                     __initialization:
   278                           
   279                           ; Initialize objects allocated to BANK0
   280     0015  1383               	bcf	3,7	;select IRP bank0
   281     0016  3033               	movlw	low (__pdataBANK0+19)
   282     0017  00FD               	movwf	btemp+-1
   283     0018  3001               	movlw	high __pidataBANK0
   284     0019  00FE               	movwf	btemp
   285     001A  30F5               	movlw	low __pidataBANK0
   286     001B  00FF               	movwf	btemp+1
   287     001C  3020               	movlw	low __pdataBANK0
   288     001D  0084               	movwf	4
   289     001E  120A  118A  220C  120A  118A  	fcall	init_ram0
   290                           
   291                           ; Initialize objects allocated to COMMON
   292     0023  120A  118A  2221  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   293     0028  00FC               	movwf	__pdataCOMMON& (0+127)
   294     0029  120A  118A  2222  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   295     002E  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
   296                           
   297                           ; Clear objects allocated to BANK0
   298     002F  01B3               	clrf	__pbssBANK0& (0+127)
   299     0030  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   300     0031  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   301     0032  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   302     0033  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   303     0034  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   304     0035  01B9               	clrf	(__pbssBANK0+6)& (0+127)
   305     0036  01BA               	clrf	(__pbssBANK0+7)& (0+127)
   306     0037  01BB               	clrf	(__pbssBANK0+8)& (0+127)
   307     0038  01BC               	clrf	(__pbssBANK0+9)& (0+127)
   308     0039                     end_of_initialization:	
   309                           ;End of C runtime variable initialization code
   310                           
   311     0039                     __end_of__initialization:
   312     0039  0183               	clrf	3
   313     003A  120A  118A  2966   	ljmp	_main	;jump to C main() function
   314                           
   315                           	psect	dataCOMMON
   316     007C                     __pdataCOMMON:
   317     007C                     _tries:
   318     007C                     	ds	2
   319                           
   320                           	psect	bssBANK0
   321     0033                     __pbssBANK0:
   322     0033                     _userInput:
   323     0033                     	ds	8
   324     003B                     _correct:
   325     003B                     	ds	2
   326                           
   327                           	psect	dataBANK0
   328     0020                     __pdataBANK0:
   329     0020                     _password:
   330     0020                     	ds	8
   331     0028                     _FAIL:
   332     0028                     	ds	4
   333     002C                     _PASS:
   334     002C                     	ds	4
   335     0030                     _digits:
   336     0030                     	ds	3
   337                           
   338                           	psect	inittext
   339     0208                     init_fetch0:	
   340                           ;	Called with low address in FSR and high address in W
   341                           
   342     0208  087E               	movf	btemp,w
   343     0209  008A               	movwf	10
   344     020A  087F               	movf	btemp+1,w
   345     020B  0082               	movwf	2
   346     020C                     init_ram0:	
   347                           ;Called with:
   348                           ;	high address of idata address in btemp 
   349                           ;	low address of idata address in btemp+1 
   350                           ;	low address of data in FSR
   351                           ;	high address + 1 of data in btemp-1
   352                           
   353     020C  120A  118A  2208  120A  118A  	fcall	init_fetch0
   354     0211  0080               	movwf	0
   355     0212  0A84               	incf	4,f
   356     0213  0804               	movf	4,w
   357     0214  067D               	xorwf	btemp+-1,w
   358     0215  1903               	btfsc	3,2
   359     0216  3400               	retlw	0
   360     0217  0AFF               	incf	btemp+1,f
   361     0218  1903               	btfsc	3,2
   362     0219  0AFE               	incf	btemp,f
   363     021A  2A0C               	goto	init_ram0
   364                           
   365                           	psect	cstackCOMMON
   366     0070                     __pcstackCOMMON:
   367     0070                     ?_offLED:
   368     0070                     ?_main:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ?_printPass:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ?_printFail:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     ?_ISR:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0070                     ?_confirm:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ??_offLED:	
   384                           ; 2 bytes @ 0x0
   385                           
   386     0070                     ??_printPass:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     ??_printFail:	
   390                           ; 1 bytes @ 0x0
   391                           
   392                           
   393                           ; 1 bytes @ 0x0
   394     0070                     	ds	1
   395     0071                     printPass@i:
   396     0071                     printFail@i:	
   397                           ; 2 bytes @ 0x1
   398                           
   399                           
   400                           ; 2 bytes @ 0x1
   401     0071                     	ds	1
   402     0072                     ??_confirm:
   403                           
   404                           ; 1 bytes @ 0x2
   405     0072                     	ds	6
   406     0078                     confirm@i:
   407                           
   408                           ; 2 bytes @ 0x8
   409     0078                     	ds	2
   410     007A                     ISR@i:
   411                           
   412                           ; 2 bytes @ 0xA
   413     007A                     	ds	2
   414                           
   415                           	psect	cstackBANK0
   416     003D                     __pcstackBANK0:
   417     003D                     ??_ISR:
   418                           
   419                           ; 1 bytes @ 0x0
   420     003D                     	ds	5
   421     0042                     ??_main:
   422                           
   423                           ; 1 bytes @ 0x5
   424     0042                     	ds	1
   425                           
   426                           	psect	maintext
   427     0166                     __pmaintext:	
   428 ;;
   429 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   430 ;;
   431 ;; *************** function _main *****************
   432 ;; Defined at:
   433 ;;		line 52 in file "newmain.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   442 ;; Tracked objects:
   443 ;;		On entry : B00/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          0       1       0       0       0
   450 ;;      Totals:         0       1       0       0       0
   451 ;;Total ram usage:        1 bytes
   452 ;; Hardware stack levels required when called: 3
   453 ;; This function calls:
   454 ;;		Nothing
   455 ;; This function is called by:
   456 ;;		Startup code after reset
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460     0166                     _main:	
   461                           ;psect for function _main
   462                           
   463     0166                     l851:	
   464                           ;incstack = 0
   465                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   466                           
   467                           
   468                           ;newmain.c: 53:     ANSEL = 0;
   469     0166  1683               	bsf	3,5	;RP0=1, select bank3
   470     0167  1703               	bsf	3,6	;RP1=1, select bank3
   471     0168  0188               	clrf	8	;volatile
   472                           
   473                           ;newmain.c: 54:     ANSELH = 0;
   474     0169  0189               	clrf	9	;volatile
   475     016A                     l853:
   476                           
   477                           ;newmain.c: 55:     OPTION_REG &= 0b01111111;
   478     016A  307F               	movlw	127
   479     016B  1683               	bsf	3,5	;RP0=1, select bank1
   480     016C  1303               	bcf	3,6	;RP1=0, select bank1
   481     016D  0581               	andwf	1,f	;volatile
   482     016E                     l855:
   483                           
   484                           ;newmain.c: 57:     TRISB = 0b00011111;
   485     016E  301F               	movlw	31
   486     016F  0086               	movwf	6	;volatile
   487     0170                     l857:
   488                           
   489                           ;newmain.c: 58:     TRISC = 0x00;
   490     0170  0187               	clrf	7	;volatile
   491     0171                     l859:
   492                           
   493                           ;newmain.c: 59:     TRISD = 0x00;
   494     0171  0188               	clrf	8	;volatile
   495     0172                     l861:
   496                           
   497                           ;newmain.c: 61:     PORTB = 0;
   498     0172  1283               	bcf	3,5	;RP0=0, select bank0
   499     0173  1303               	bcf	3,6	;RP1=0, select bank0
   500     0174  0186               	clrf	6	;volatile
   501     0175                     l863:
   502                           
   503                           ;newmain.c: 62:     PORTC = 0;
   504     0175  0187               	clrf	7	;volatile
   505     0176                     l865:
   506                           
   507                           ;newmain.c: 63:     PORTD = 0;
   508     0176  0188               	clrf	8	;volatile
   509     0177                     l867:
   510                           
   511                           ;newmain.c: 65:     INTEDG = 0;
   512     0177  1683               	bsf	3,5	;RP0=1, select bank1
   513     0178  1303               	bcf	3,6	;RP1=0, select bank1
   514     0179  1301               	bcf	1,6	;volatile
   515     017A                     l869:
   516                           
   517                           ;newmain.c: 66:     INTE = 1;
   518     017A  160B               	bsf	11,4	;volatile
   519     017B                     l871:
   520                           
   521                           ;newmain.c: 67:     GIE = 1;
   522     017B  178B               	bsf	11,7	;volatile
   523     017C                     l873:
   524                           
   525                           ;newmain.c: 70:         if(!PORTBbits.RB1)
   526     017C  1283               	bcf	3,5	;RP0=0, select bank0
   527     017D  1303               	bcf	3,6	;RP1=0, select bank0
   528     017E  1886               	btfsc	6,1	;volatile
   529     017F  2981               	goto	u221
   530     0180  2982               	goto	u220
   531     0181                     u221:
   532     0181  2986               	goto	l877
   533     0182                     u220:
   534     0182                     l875:
   535                           
   536                           ;newmain.c: 71:             userInput[0] = 1;
   537     0182  3001               	movlw	1
   538     0183  00B3               	movwf	_userInput
   539     0184  3000               	movlw	0
   540     0185  00B4               	movwf	_userInput+1
   541     0186                     l877:
   542                           
   543                           ;newmain.c: 73:         if(!PORTBbits.RB2)
   544     0186  1906               	btfsc	6,2	;volatile
   545     0187  2989               	goto	u231
   546     0188  298A               	goto	u230
   547     0189                     u231:
   548     0189  298E               	goto	l881
   549     018A                     u230:
   550     018A                     l879:
   551                           
   552                           ;newmain.c: 74:             userInput[1] = 1;
   553     018A  3001               	movlw	1
   554     018B  00B5               	movwf	_userInput+2
   555     018C  3000               	movlw	0
   556     018D  00B6               	movwf	_userInput+3
   557     018E                     l881:
   558                           
   559                           ;newmain.c: 76:         if(!PORTBbits.RB3)
   560     018E  1986               	btfsc	6,3	;volatile
   561     018F  2991               	goto	u241
   562     0190  2992               	goto	u240
   563     0191                     u241:
   564     0191  2996               	goto	l885
   565     0192                     u240:
   566     0192                     l883:
   567                           
   568                           ;newmain.c: 77:             userInput[2] = 1;
   569     0192  3001               	movlw	1
   570     0193  00B7               	movwf	_userInput+4
   571     0194  3000               	movlw	0
   572     0195  00B8               	movwf	_userInput+5
   573     0196                     l885:
   574                           
   575                           ;newmain.c: 79:         if(!PORTBbits.RB4)
   576     0196  1A06               	btfsc	6,4	;volatile
   577     0197  2999               	goto	u251
   578     0198  299A               	goto	u250
   579     0199                     u251:
   580     0199  299E               	goto	l889
   581     019A                     u250:
   582     019A                     l887:
   583                           
   584                           ;newmain.c: 80:             userInput[3] = 1;
   585     019A  3001               	movlw	1
   586     019B  00B9               	movwf	_userInput+6
   587     019C  3000               	movlw	0
   588     019D  00BA               	movwf	_userInput+7
   589     019E                     l889:
   590                           
   591                           ;newmain.c: 82:         PORTC = 0b11111110;
   592     019E  30FE               	movlw	254
   593     019F  0087               	movwf	7	;volatile
   594     01A0                     l891:
   595                           
   596                           ;newmain.c: 83:         PORTD = digits[tries - 1];
   597     01A0  087C               	movf	_tries,w
   598     01A1  3E2F               	addlw	(low ((_digits| 0+-1)))& (0+255)
   599     01A2  0084               	movwf	4
   600     01A3  1383               	bcf	3,7	;select IRP bank0
   601     01A4  0800               	movf	0,w
   602     01A5  0088               	movwf	8	;volatile
   603     01A6                     l893:
   604                           
   605                           ;newmain.c: 84:         _delay((unsigned long)((1)*(4000000/4000.0)));
   606     01A6  30C7               	movlw	199
   607     01A7  1283               	bcf	3,5	;RP0=0, select bank0
   608     01A8  1303               	bcf	3,6	;RP1=0, select bank0
   609     01A9  00C2               	movwf	??_main
   610     01AA                     u317:
   611     01AA  29AB               	nop2
   612     01AB  0BC2               	decfsz	??_main,f
   613     01AC  29AA               	goto	u317
   614     01AD  29AE               	nop2
   615     01AE  297C               	goto	l873
   616     01AF  120A  118A  2812   	ljmp	start
   617     01B2                     __end_of_main:
   618                           
   619                           	psect	text1
   620     003D                     __ptext1:	
   621 ;; *************** function _ISR *****************
   622 ;; Defined at:
   623 ;;		line 163 in file "newmain.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  i               2   10[COMMON] int 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   637 ;;      Params:         0       0       0       0       0
   638 ;;      Locals:         2       0       0       0       0
   639 ;;      Temps:          0       5       0       0       0
   640 ;;      Totals:         2       5       0       0       0
   641 ;;Total ram usage:        7 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; Hardware stack levels required when called: 2
   644 ;; This function calls:
   645 ;;		_confirm
   646 ;;		_printFail
   647 ;;		_printPass
   648 ;; This function is called by:
   649 ;;		Interrupt level 1
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653     003D                     _ISR:	
   654                           ;psect for function _ISR
   655                           
   656     003D                     i1l895:
   657                           
   658                           ;newmain.c: 164:     if(INTF){
   659     003D  1C8B               	btfss	11,1	;volatile
   660     003E  2840               	goto	u26_21
   661     003F  2841               	goto	u26_20
   662     0040                     u26_21:
   663     0040  289E               	goto	i1l99
   664     0041                     u26_20:
   665     0041                     i1l897:
   666                           
   667                           ;newmain.c: 165:         GIE = 0;
   668     0041  138B               	bcf	11,7	;volatile
   669     0042                     i1l899:
   670                           
   671                           ;newmain.c: 166:         correct = confirm();
   672     0042  120A  118A  21B2  120A  118A  	fcall	_confirm
   673     0047  0871               	movf	?_confirm+1,w
   674     0048  1283               	bcf	3,5	;RP0=0, select bank0
   675     0049  1303               	bcf	3,6	;RP1=0, select bank0
   676     004A  00BC               	movwf	_correct+1
   677     004B  0870               	movf	?_confirm,w
   678     004C  00BB               	movwf	_correct
   679     004D                     i1l901:
   680                           
   681                           ;newmain.c: 167:         for(int i = 0; i < 4; i++)
   682     004D  01FA               	clrf	ISR@i
   683     004E  01FB               	clrf	ISR@i+1
   684     004F                     i1l907:
   685                           
   686                           ;newmain.c: 168:             userInput[i] = 0;
   687     004F  087A               	movf	ISR@i,w
   688     0050  1283               	bcf	3,5	;RP0=0, select bank0
   689     0051  1303               	bcf	3,6	;RP1=0, select bank0
   690     0052  00BD               	movwf	??_ISR
   691     0053  073D               	addwf	??_ISR,w
   692     0054  3E33               	addlw	(low (_userInput| 0))& (0+255)
   693     0055  0084               	movwf	4
   694     0056  1383               	bcf	3,7	;select IRP bank0
   695     0057  0180               	clrf	0
   696     0058  0A84               	incf	4,f
   697     0059  0180               	clrf	0
   698     005A                     i1l909:
   699     005A  3001               	movlw	1
   700     005B  07FA               	addwf	ISR@i,f
   701     005C  1803               	skipnc
   702     005D  0AFB               	incf	ISR@i+1,f
   703     005E  3000               	movlw	0
   704     005F  07FB               	addwf	ISR@i+1,f
   705     0060                     i1l911:
   706     0060  087B               	movf	ISR@i+1,w
   707     0061  3A80               	xorlw	128
   708     0062  00FF               	movwf	btemp+1
   709     0063  3080               	movlw	128
   710     0064  027F               	subwf	btemp+1,w
   711     0065  1D03               	skipz
   712     0066  2869               	goto	u27_25
   713     0067  3004               	movlw	4
   714     0068  027A               	subwf	ISR@i,w
   715     0069                     u27_25:
   716     0069  1C03               	skipc
   717     006A  286C               	goto	u27_21
   718     006B  286D               	goto	u27_20
   719     006C                     u27_21:
   720     006C  284F               	goto	i1l907
   721     006D                     u27_20:
   722     006D                     i1l913:
   723                           
   724                           ;newmain.c: 169:         if (correct) {
   725     006D  1283               	bcf	3,5	;RP0=0, select bank0
   726     006E  1303               	bcf	3,6	;RP1=0, select bank0
   727     006F  083B               	movf	_correct,w
   728     0070  043C               	iorwf	_correct+1,w
   729     0071  1903               	btfsc	3,2
   730     0072  2874               	goto	u28_21
   731     0073  2875               	goto	u28_20
   732     0074                     u28_21:
   733     0074  287F               	goto	i1l919
   734     0075                     u28_20:
   735     0075                     i1l915:
   736                           
   737                           ;newmain.c: 170:             printPass();
   738     0075  120A  118A  210D  120A  118A  	fcall	_printPass
   739     007A                     i1l917:
   740                           
   741                           ;newmain.c: 171:             tries = 3;
   742     007A  3003               	movlw	3
   743     007B  00FC               	movwf	_tries
   744     007C  3000               	movlw	0
   745     007D  00FD               	movwf	_tries+1
   746                           
   747                           ;newmain.c: 172:         } else {
   748     007E  288A               	goto	i1l92
   749     007F                     i1l919:
   750                           
   751                           ;newmain.c: 173:             printFail();
   752     007F  120A  118A  20A9  120A  118A  	fcall	_printFail
   753     0084                     i1l921:
   754                           
   755                           ;newmain.c: 174:             tries--;
   756     0084  3001               	movlw	1
   757     0085  02FC               	subwf	_tries,f
   758     0086  3000               	movlw	0
   759     0087  1C03               	skipc
   760     0088  03FD               	decf	_tries+1,f
   761     0089  02FD               	subwf	_tries+1,f
   762     008A                     i1l92:
   763     008A  1283               	bcf	3,5	;RP0=0, select bank0
   764     008B  1303               	bcf	3,6	;RP1=0, select bank0
   765     008C  1C06               	btfss	6,0	;volatile
   766     008D  288F               	goto	u29_21
   767     008E  2890               	goto	u29_20
   768     008F                     u29_21:
   769     008F  288A               	goto	i1l92
   770     0090                     u29_20:
   771     0090                     i1l923:
   772                           
   773                           ;newmain.c: 177:         if (tries == 0) {
   774     0090  087C               	movf	_tries,w
   775     0091  047D               	iorwf	_tries+1,w
   776     0092  1D03               	btfss	3,2
   777     0093  2895               	goto	u30_21
   778     0094  2896               	goto	u30_20
   779     0095                     u30_21:
   780     0095  289C               	goto	i1l95
   781     0096                     u30_20:
   782     0096                     i1l925:
   783                           
   784                           ;newmain.c: 179:                 printFail();
   785     0096  120A  118A  20A9  120A  118A  	fcall	_printFail
   786     009B  2896               	goto	i1l925
   787     009C                     i1l95:	
   788                           ;newmain.c: 181:         }
   789                           
   790                           
   791                           ;newmain.c: 182:         GIE = 1;
   792     009C  178B               	bsf	11,7	;volatile
   793                           
   794                           ;newmain.c: 183:         INTF = 0;
   795     009D  108B               	bcf	11,1	;volatile
   796     009E                     i1l99:
   797     009E  0841               	movf	??_ISR+4,w
   798     009F  00FF               	movwf	btemp+1
   799     00A0  0840               	movf	??_ISR+3,w
   800     00A1  008A               	movwf	10
   801     00A2  083F               	movf	??_ISR+2,w
   802     00A3  0084               	movwf	4
   803     00A4  0E3E               	swapf	??_ISR+1,w
   804     00A5  0083               	movwf	3
   805     00A6  0EFE               	swapf	btemp,f
   806     00A7  0E7E               	swapf	btemp,w
   807     00A8  0009               	retfie
   808     00A9                     __end_of_ISR:
   809                           
   810                           	psect	intentry
   811     0004                     __pintentry:	
   812                           ;incstack = 0
   813                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   814                           
   815     0004                     interrupt_function:
   816     007E                     saved_w         set	btemp
   817     0004  00FE               	movwf	btemp
   818     0005  0E03               	swapf	3,w
   819     0006  1283               	bcf	3,5	;RP0=0, select bank0
   820     0007  1303               	bcf	3,6	;RP1=0, select bank0
   821     0008  00BE               	movwf	??_ISR+1
   822     0009  0804               	movf	4,w
   823     000A  00BF               	movwf	??_ISR+2
   824     000B  080A               	movf	10,w
   825     000C  00C0               	movwf	??_ISR+3
   826     000D  087F               	movf	btemp+1,w
   827     000E  00C1               	movwf	??_ISR+4
   828     000F  120A  118A  283D   	ljmp	_ISR
   829                           
   830                           	psect	text2
   831     010D                     __ptext2:	
   832 ;; *************** function _printPass *****************
   833 ;; Defined at:
   834 ;;		line 88 in file "newmain.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  i               2    1[COMMON] int 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       0       0       0       0
   849 ;;      Locals:         2       0       0       0       0
   850 ;;      Temps:          1       0       0       0       0
   851 ;;      Totals:         3       0       0       0       0
   852 ;;Total ram usage:        3 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; Hardware stack levels required when called: 1
   855 ;; This function calls:
   856 ;;		_offLED
   857 ;; This function is called by:
   858 ;;		_ISR
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862     010D                     _printPass:	
   863                           ;psect for function _printPass
   864                           
   865     010D                     i1l787:	
   866                           ;incstack = 0
   867                           ; Regs used in _printPass: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   868                           
   869                           
   870                           ;newmain.c: 90:     for(int i = 0; i < 25; i++)
   871     010D  01F1               	clrf	printPass@i
   872     010E  01F2               	clrf	printPass@i+1
   873     010F                     i1l61:
   874                           
   875                           ;newmain.c: 91:     {;newmain.c: 92:         PORTC = 0b11111110;
   876     010F  30FE               	movlw	254
   877     0110  1283               	bcf	3,5	;RP0=0, select bank0
   878     0111  1303               	bcf	3,6	;RP1=0, select bank0
   879     0112  0087               	movwf	7	;volatile
   880     0113                     i1l793:
   881                           
   882                           ;newmain.c: 93:         PORTD = PASS[0];
   883     0113  082C               	movf	_PASS,w
   884     0114  0088               	movwf	8	;volatile
   885                           
   886                           ;newmain.c: 94:         _delay((unsigned long)((1)*(4000000/4000.0)));
   887     0115  30C7               	movlw	199
   888     0116  00F0               	movwf	??_printPass
   889     0117                     u32_27:
   890     0117  2918               	nop2
   891     0118  0BF0               	decfsz	??_printPass,f
   892     0119  2917               	goto	u32_27
   893     011A  291B               	nop2
   894     011B  291C               	nop2
   895     011C                     i1l795:
   896                           
   897                           ;newmain.c: 96:         PORTC = 0b11111101;
   898     011C  30FD               	movlw	253
   899     011D  1283               	bcf	3,5	;RP0=0, select bank0
   900     011E  1303               	bcf	3,6	;RP1=0, select bank0
   901     011F  0087               	movwf	7	;volatile
   902                           
   903                           ;newmain.c: 97:         PORTD = PASS[1];
   904     0120  082D               	movf	_PASS+1,w
   905     0121  0088               	movwf	8	;volatile
   906                           
   907                           ;newmain.c: 98:         _delay((unsigned long)((1)*(4000000/4000.0)));
   908     0122  30C7               	movlw	199
   909     0123  00F0               	movwf	??_printPass
   910     0124                     u33_27:
   911     0124  2925               	nop2
   912     0125  0BF0               	decfsz	??_printPass,f
   913     0126  2924               	goto	u33_27
   914     0127  2928               	nop2
   915     0128  2929               	nop2
   916     0129                     i1l797:
   917                           
   918                           ;newmain.c: 100:         PORTC = 0b11111011;
   919     0129  30FB               	movlw	251
   920     012A  1283               	bcf	3,5	;RP0=0, select bank0
   921     012B  1303               	bcf	3,6	;RP1=0, select bank0
   922     012C  0087               	movwf	7	;volatile
   923                           
   924                           ;newmain.c: 101:         PORTD = PASS[2];
   925     012D  082E               	movf	_PASS+2,w
   926     012E  0088               	movwf	8	;volatile
   927                           
   928                           ;newmain.c: 102:         _delay((unsigned long)((1)*(4000000/4000.0)));
   929     012F  30C7               	movlw	199
   930     0130  00F0               	movwf	??_printPass
   931     0131                     u34_27:
   932     0131  2932               	nop2
   933     0132  0BF0               	decfsz	??_printPass,f
   934     0133  2931               	goto	u34_27
   935     0134  2935               	nop2
   936     0135  2936               	nop2
   937     0136                     i1l799:
   938                           
   939                           ;newmain.c: 104:         PORTC = 0b11110111;
   940     0136  30F7               	movlw	247
   941     0137  1283               	bcf	3,5	;RP0=0, select bank0
   942     0138  1303               	bcf	3,6	;RP1=0, select bank0
   943     0139  0087               	movwf	7	;volatile
   944                           
   945                           ;newmain.c: 105:         PORTD = PASS[3];
   946     013A  082F               	movf	_PASS+3,w
   947     013B  0088               	movwf	8	;volatile
   948                           
   949                           ;newmain.c: 106:         _delay((unsigned long)((1)*(4000000/4000.0)));
   950     013C  30C7               	movlw	199
   951     013D  00F0               	movwf	??_printPass
   952     013E                     u35_27:
   953     013E  293F               	nop2
   954     013F  0BF0               	decfsz	??_printPass,f
   955     0140  293E               	goto	u35_27
   956     0141  2942               	nop2
   957     0142  2943               	nop2
   958     0143                     i1l801:
   959                           
   960                           ;newmain.c: 108:         PORTBbits.RB5 = 1;
   961     0143  1283               	bcf	3,5	;RP0=0, select bank0
   962     0144  1303               	bcf	3,6	;RP1=0, select bank0
   963     0145  1686               	bsf	6,5	;volatile
   964                           
   965                           ;newmain.c: 109:         _delay((unsigned long)((1)*(4000000/4000.0)));
   966     0146  30C7               	movlw	199
   967     0147  00F0               	movwf	??_printPass
   968     0148                     u36_27:
   969     0148  2949               	nop2
   970     0149  0BF0               	decfsz	??_printPass,f
   971     014A  2948               	goto	u36_27
   972     014B  294C               	nop2
   973     014C  294D               	nop2
   974                           
   975                           ;newmain.c: 110:     }
   976     014D  3001               	movlw	1
   977     014E  07F1               	addwf	printPass@i,f
   978     014F  1803               	skipnc
   979     0150  0AF2               	incf	printPass@i+1,f
   980     0151  3000               	movlw	0
   981     0152  07F2               	addwf	printPass@i+1,f
   982     0153                     i1l803:
   983     0153  0872               	movf	printPass@i+1,w
   984     0154  3A80               	xorlw	128
   985     0155  00FF               	movwf	btemp+1
   986     0156  3080               	movlw	128
   987     0157  027F               	subwf	btemp+1,w
   988     0158  1D03               	skipz
   989     0159  295C               	goto	u16_25
   990     015A  3019               	movlw	25
   991     015B  0271               	subwf	printPass@i,w
   992     015C                     u16_25:
   993     015C  1C03               	skipc
   994     015D  295F               	goto	u16_21
   995     015E  2960               	goto	u16_20
   996     015F                     u16_21:
   997     015F  290F               	goto	i1l61
   998     0160                     u16_20:
   999     0160                     i1l805:
  1000                           
  1001                           ;newmain.c: 111:     offLED();
  1002     0160  120A  118A  221B  120A  118A  	fcall	_offLED
  1003     0165                     i1l63:
  1004     0165  0008               	return
  1005     0166                     __end_of_printPass:
  1006                           
  1007                           	psect	text3
  1008     00A9                     __ptext3:	
  1009 ;; *************** function _printFail *****************
  1010 ;; Defined at:
  1011 ;;		line 114 in file "newmain.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;		None
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  i               2    1[COMMON] int 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1025 ;;      Params:         0       0       0       0       0
  1026 ;;      Locals:         2       0       0       0       0
  1027 ;;      Temps:          1       0       0       0       0
  1028 ;;      Totals:         3       0       0       0       0
  1029 ;;Total ram usage:        3 bytes
  1030 ;; Hardware stack levels used: 1
  1031 ;; Hardware stack levels required when called: 1
  1032 ;; This function calls:
  1033 ;;		_offLED
  1034 ;; This function is called by:
  1035 ;;		_ISR
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039     00A9                     _printFail:	
  1040                           ;psect for function _printFail
  1041                           
  1042     00A9                     i1l807:	
  1043                           ;incstack = 0
  1044                           ; Regs used in _printFail: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1045                           
  1046                           
  1047                           ;newmain.c: 116:     for(int i = 0; i < 25; i++)
  1048     00A9  01F1               	clrf	printFail@i
  1049     00AA  01F2               	clrf	printFail@i+1
  1050     00AB                     i1l66:
  1051                           
  1052                           ;newmain.c: 117:     {;newmain.c: 118:         PORTC = 0b11111110;
  1053     00AB  30FE               	movlw	254
  1054     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1055     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1056     00AE  0087               	movwf	7	;volatile
  1057     00AF                     i1l813:
  1058                           
  1059                           ;newmain.c: 119:         PORTD = FAIL[0];
  1060     00AF  0828               	movf	_FAIL,w
  1061     00B0  0088               	movwf	8	;volatile
  1062                           
  1063                           ;newmain.c: 120:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1064     00B1  30C7               	movlw	199
  1065     00B2  00F0               	movwf	??_printFail
  1066     00B3                     u37_27:
  1067     00B3  28B4               	nop2
  1068     00B4  0BF0               	decfsz	??_printFail,f
  1069     00B5  28B3               	goto	u37_27
  1070     00B6  28B7               	nop2
  1071     00B7  28B8               	nop2
  1072     00B8                     i1l815:
  1073                           
  1074                           ;newmain.c: 122:         PORTC = 0b11111101;
  1075     00B8  30FD               	movlw	253
  1076     00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1077     00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1078     00BB  0087               	movwf	7	;volatile
  1079                           
  1080                           ;newmain.c: 123:         PORTD = FAIL[1];
  1081     00BC  0829               	movf	_FAIL+1,w
  1082     00BD  0088               	movwf	8	;volatile
  1083                           
  1084                           ;newmain.c: 124:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1085     00BE  30C7               	movlw	199
  1086     00BF  00F0               	movwf	??_printFail
  1087     00C0                     u38_27:
  1088     00C0  28C1               	nop2
  1089     00C1  0BF0               	decfsz	??_printFail,f
  1090     00C2  28C0               	goto	u38_27
  1091     00C3  28C4               	nop2
  1092     00C4  28C5               	nop2
  1093     00C5                     i1l817:
  1094                           
  1095                           ;newmain.c: 126:         PORTC = 0b11111011;
  1096     00C5  30FB               	movlw	251
  1097     00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1098     00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1099     00C8  0087               	movwf	7	;volatile
  1100                           
  1101                           ;newmain.c: 127:         PORTD = FAIL[2];
  1102     00C9  082A               	movf	_FAIL+2,w
  1103     00CA  0088               	movwf	8	;volatile
  1104                           
  1105                           ;newmain.c: 128:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1106     00CB  30C7               	movlw	199
  1107     00CC  00F0               	movwf	??_printFail
  1108     00CD                     u39_27:
  1109     00CD  28CE               	nop2
  1110     00CE  0BF0               	decfsz	??_printFail,f
  1111     00CF  28CD               	goto	u39_27
  1112     00D0  28D1               	nop2
  1113     00D1  28D2               	nop2
  1114     00D2                     i1l819:
  1115                           
  1116                           ;newmain.c: 130:         PORTC = 0b11110111;
  1117     00D2  30F7               	movlw	247
  1118     00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1119     00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1120     00D5  0087               	movwf	7	;volatile
  1121                           
  1122                           ;newmain.c: 131:         PORTD = FAIL[3];
  1123     00D6  082B               	movf	_FAIL+3,w
  1124     00D7  0088               	movwf	8	;volatile
  1125                           
  1126                           ;newmain.c: 132:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1127     00D8  30C7               	movlw	199
  1128     00D9  00F0               	movwf	??_printFail
  1129     00DA                     u40_27:
  1130     00DA  28DB               	nop2
  1131     00DB  0BF0               	decfsz	??_printFail,f
  1132     00DC  28DA               	goto	u40_27
  1133     00DD  28DE               	nop2
  1134     00DE  28DF               	nop2
  1135     00DF                     i1l821:
  1136                           
  1137                           ;newmain.c: 134:         if(tries > 0)
  1138     00DF  087C               	movf	_tries,w
  1139     00E0  047D               	iorwf	_tries+1,w
  1140     00E1  1903               	btfsc	3,2
  1141     00E2  28E4               	goto	u17_21
  1142     00E3  28E5               	goto	u17_20
  1143     00E4                     u17_21:
  1144     00E4  28F0               	goto	i1l68
  1145     00E5                     u17_20:
  1146     00E5                     i1l823:
  1147                           
  1148                           ;newmain.c: 135:         {;newmain.c: 136:             PORTBbits.RB7 = 1;
  1149     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1150     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1151     00E7  1786               	bsf	6,7	;volatile
  1152     00E8                     i1l825:
  1153                           
  1154                           ;newmain.c: 137:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1155     00E8  30C7               	movlw	199
  1156     00E9  00F0               	movwf	??_printFail
  1157     00EA                     u41_27:
  1158     00EA  28EB               	nop2
  1159     00EB  0BF0               	decfsz	??_printFail,f
  1160     00EC  28EA               	goto	u41_27
  1161     00ED  28EE               	nop2
  1162     00EE  28EF               	nop2
  1163                           
  1164                           ;newmain.c: 138:         }
  1165     00EF  28F4               	goto	i1l69
  1166     00F0                     i1l68:	
  1167                           ;newmain.c: 139:         else
  1168                           
  1169                           
  1170                           ;newmain.c: 140:         {;newmain.c: 141:             PORTBbits.RB6 = 1;
  1171     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1172     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1173     00F2  1706               	bsf	6,6	;volatile
  1174     00F3  28E8               	goto	i1l825
  1175     00F4                     i1l69:	
  1176                           ;newmain.c: 143:         }
  1177                           
  1178                           
  1179                           ;newmain.c: 144:     }
  1180     00F4  3001               	movlw	1
  1181     00F5  07F1               	addwf	printFail@i,f
  1182     00F6  1803               	skipnc
  1183     00F7  0AF2               	incf	printFail@i+1,f
  1184     00F8  3000               	movlw	0
  1185     00F9  07F2               	addwf	printFail@i+1,f
  1186     00FA                     i1l829:
  1187     00FA  0872               	movf	printFail@i+1,w
  1188     00FB  3A80               	xorlw	128
  1189     00FC  00FF               	movwf	btemp+1
  1190     00FD  3080               	movlw	128
  1191     00FE  027F               	subwf	btemp+1,w
  1192     00FF  1D03               	skipz
  1193     0100  2903               	goto	u18_25
  1194     0101  3019               	movlw	25
  1195     0102  0271               	subwf	printFail@i,w
  1196     0103                     u18_25:
  1197     0103  1C03               	skipc
  1198     0104  2906               	goto	u18_21
  1199     0105  2907               	goto	u18_20
  1200     0106                     u18_21:
  1201     0106  28AB               	goto	i1l66
  1202     0107                     u18_20:
  1203     0107                     i1l831:
  1204                           
  1205                           ;newmain.c: 145:     offLED();
  1206     0107  120A  118A  221B  120A  118A  	fcall	_offLED
  1207     010C                     i1l70:
  1208     010C  0008               	return
  1209     010D                     __end_of_printFail:
  1210                           
  1211                           	psect	text4
  1212     021B                     __ptext4:	
  1213 ;; *************** function _offLED *****************
  1214 ;; Defined at:
  1215 ;;		line 156 in file "newmain.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		None
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0
  1232 ;;      Totals:         0       0       0       0       0
  1233 ;;Total ram usage:        0 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_printPass
  1239 ;;		_printFail
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243     021B                     _offLED:	
  1244                           ;psect for function _offLED
  1245                           
  1246     021B                     i1l785:	
  1247                           ;incstack = 0
  1248                           ; Regs used in _offLED: []
  1249                           
  1250                           
  1251                           ;newmain.c: 158:     PORTBbits.RB6 = 0;
  1252     021B  1283               	bcf	3,5	;RP0=0, select bank0
  1253     021C  1303               	bcf	3,6	;RP1=0, select bank0
  1254     021D  1306               	bcf	6,6	;volatile
  1255                           
  1256                           ;newmain.c: 159:     PORTBbits.RB7 = 0;
  1257     021E  1386               	bcf	6,7	;volatile
  1258                           
  1259                           ;newmain.c: 160:     PORTBbits.RB5 = 0;
  1260     021F  1286               	bcf	6,5	;volatile
  1261     0220                     i1l82:
  1262     0220  0008               	return
  1263     0221                     __end_of_offLED:
  1264                           
  1265                           	psect	text5
  1266     01B2                     __ptext5:	
  1267 ;; *************** function _confirm *****************
  1268 ;; Defined at:
  1269 ;;		line 148 in file "newmain.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  i               2    8[COMMON] int 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  2    0[COMMON] int 
  1276 ;; Registers used:
  1277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1283 ;;      Params:         2       0       0       0       0
  1284 ;;      Locals:         2       0       0       0       0
  1285 ;;      Temps:          6       0       0       0       0
  1286 ;;      Totals:        10       0       0       0       0
  1287 ;;Total ram usage:       10 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_ISR
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296     01B2                     _confirm:	
  1297                           ;psect for function _confirm
  1298                           
  1299     01B2                     i1l833:	
  1300                           ;incstack = 0
  1301                           ; Regs used in _confirm: [wreg-fsr0h+status,2+status,0+btemp+1]
  1302                           
  1303                           
  1304                           ;newmain.c: 150:     for(int i = 0; i < 4 && tries > 0; i++)
  1305     01B2  01F8               	clrf	confirm@i
  1306     01B3  01F9               	clrf	confirm@i+1
  1307     01B4  29DD               	goto	i1l843
  1308     01B5                     i1l835:
  1309                           
  1310                           ;newmain.c: 151:         if(password[i] != userInput[i])
  1311     01B5  0878               	movf	confirm@i,w
  1312     01B6  00F2               	movwf	??_confirm
  1313     01B7  0772               	addwf	??_confirm,w
  1314     01B8  3E33               	addlw	(low (_userInput| 0))& (0+255)
  1315     01B9  0084               	movwf	4
  1316     01BA  1383               	bcf	3,7	;select IRP bank0
  1317     01BB  0800               	movf	0,w
  1318     01BC  00F3               	movwf	??_confirm+1
  1319     01BD  0A84               	incf	4,f
  1320     01BE  0800               	movf	0,w
  1321     01BF  00F4               	movwf	??_confirm+2
  1322     01C0  0878               	movf	confirm@i,w
  1323     01C1  00F5               	movwf	??_confirm+3
  1324     01C2  0775               	addwf	??_confirm+3,w
  1325     01C3  3E20               	addlw	(low (_password| 0))& (0+255)
  1326     01C4  0084               	movwf	4
  1327     01C5  0800               	movf	0,w
  1328     01C6  00F6               	movwf	??_confirm+4
  1329     01C7  0A84               	incf	4,f
  1330     01C8  0800               	movf	0,w
  1331     01C9  00F7               	movwf	??_confirm+5
  1332     01CA  0874               	movf	??_confirm+2,w
  1333     01CB  0677               	xorwf	??_confirm+5,w
  1334     01CC  1D03               	skipz
  1335     01CD  29D0               	goto	u19_25
  1336     01CE  0873               	movf	??_confirm+1,w
  1337     01CF  0676               	xorwf	??_confirm+4,w
  1338     01D0                     u19_25:
  1339     01D0  1903               	skipnz
  1340     01D1  29D3               	goto	u19_21
  1341     01D2  29D4               	goto	u19_20
  1342     01D3                     u19_21:
  1343     01D3  29D7               	goto	i1l841
  1344     01D4                     u19_20:
  1345     01D4                     i1l837:
  1346                           
  1347                           ;newmain.c: 152:             return 0;
  1348     01D4  01F0               	clrf	?_confirm
  1349     01D5  01F1               	clrf	?_confirm+1
  1350     01D6  29F4               	goto	i1l76
  1351     01D7                     i1l841:
  1352     01D7  3001               	movlw	1
  1353     01D8  07F8               	addwf	confirm@i,f
  1354     01D9  1803               	skipnc
  1355     01DA  0AF9               	incf	confirm@i+1,f
  1356     01DB  3000               	movlw	0
  1357     01DC  07F9               	addwf	confirm@i+1,f
  1358     01DD                     i1l843:
  1359     01DD  0879               	movf	confirm@i+1,w
  1360     01DE  3A80               	xorlw	128
  1361     01DF  00FF               	movwf	btemp+1
  1362     01E0  3080               	movlw	128
  1363     01E1  027F               	subwf	btemp+1,w
  1364     01E2  1D03               	skipz
  1365     01E3  29E6               	goto	u20_25
  1366     01E4  3004               	movlw	4
  1367     01E5  0278               	subwf	confirm@i,w
  1368     01E6                     u20_25:
  1369     01E6  1803               	skipnc
  1370     01E7  29E9               	goto	u20_21
  1371     01E8  29EA               	goto	u20_20
  1372     01E9                     u20_21:
  1373     01E9  29F0               	goto	i1l847
  1374     01EA                     u20_20:
  1375     01EA                     i1l845:
  1376     01EA  087C               	movf	_tries,w
  1377     01EB  047D               	iorwf	_tries+1,w
  1378     01EC  1D03               	btfss	3,2
  1379     01ED  29EF               	goto	u21_21
  1380     01EE  29F0               	goto	u21_20
  1381     01EF                     u21_21:
  1382     01EF  29B5               	goto	i1l835
  1383     01F0                     u21_20:
  1384     01F0                     i1l847:
  1385                           
  1386                           ;newmain.c: 153:     return 1;
  1387     01F0  3001               	movlw	1
  1388     01F1  00F0               	movwf	?_confirm
  1389     01F2  3000               	movlw	0
  1390     01F3  00F1               	movwf	?_confirm+1
  1391     01F4                     i1l76:
  1392     01F4  0008               	return
  1393     01F5                     __end_of_confirm:
  1394     0002                     ___latbits      equ	2
  1395     007E                     btemp           set	126	;btemp
  1396     007E                     wtemp0          set	126
  1397                           
  1398                           	psect	config
  1399                           
  1400                           ;Config register CONFIG1 @ 0x2007
  1401                           ;	Oscillator Selection bits
  1402                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1403                           ;	Watchdog Timer Enable bit
  1404                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1405                           ;	Power-up Timer Enable bit
  1406                           ;	PWRTE = OFF, PWRT disabled
  1407                           ;	RE3/MCLR pin function select bit
  1408                           ;	MCLRE = 0x1, unprogrammed default
  1409                           ;	Code Protection bit
  1410                           ;	CP = OFF, Program memory code protection is disabled
  1411                           ;	Data Code Protection bit
  1412                           ;	CPD = OFF, Data memory code protection is disabled
  1413                           ;	Brown Out Reset Selection bits
  1414                           ;	BOREN = ON, BOR enabled
  1415                           ;	Internal External Switchover bit
  1416                           ;	IESO = 0x1, unprogrammed default
  1417                           ;	Fail-Safe Clock Monitor Enabled bit
  1418                           ;	FCMEN = 0x1, unprogrammed default
  1419                           ;	Low Voltage Programming Enable bit
  1420                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1421                           ;	In-Circuit Debugger Mode bit
  1422                           ;	DEBUG = 0x1, unprogrammed default
  1423     2007                     	org	8199
  1424     2007  2FF1               	dw	12273
  1425                           
  1426                           ;Config register CONFIG2 @ 0x2008
  1427                           ;	Brown-out Reset Selection bit
  1428                           ;	BOR4V = 0x1, unprogrammed default
  1429                           ;	Flash Program Memory Self Write Enable bits
  1430                           ;	WRT = OFF, Write protection off
  1431     2008                     	org	8200
  1432     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        21
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      6      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_confirm

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  7     7      0     228
                                             10 COMMON     2     2      0
                                              0 BANK0      5     5      0
                            _confirm
                          _printFail
                          _printPass
 ---------------------------------------------------------------------------------
 (2) _printPass                                            3     3      0      46
                                              0 COMMON     3     3      0
                             _offLED
 ---------------------------------------------------------------------------------
 (2) _printFail                                            3     3      0      46
                                              0 COMMON     3     3      0
                             _offLED
 ---------------------------------------------------------------------------------
 (3) _offLED                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _confirm                                             10     8      2      68
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _confirm
   _printFail
     _offLED
   _printPass
     _offLED

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      6      35     43.8%
BITBANK0            80      0       0      0.0%
COMMON              14     12      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      49      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 12 11:43:03 2025

                      pc 0002                       fsr 0004                      l851 0166  
                    l861 0172                      l853 016A                      l871 017B  
                    l863 0175                      l855 016E                      l881 018E  
                    l873 017C                      l865 0176                      l857 0170  
                    l891 01A0                      l883 0192                      l875 0182  
                    l867 0177                      l859 0171                      l893 01A6  
                    l885 0196                      l877 0186                      l869 017A  
                    l887 019A                      l879 018A                      l889 019E  
                    _GIE 005F                      u220 0182                      u221 0181  
                    u230 018A                      u231 0189                      u240 0192  
                    u241 0191                      u250 019A                      u251 0199  
                    u317 01AA                      _ISR 003D                      fsr0 0004  
                    indf 0000                     ?_ISR 0070                     ISR@i 007A  
                   _FAIL 0028                     _INTE 005C                     _INTF 0059  
                   i1l61 010F                     i1l70 010C                     i1l63 0165  
                   i1l82 0220                     i1l66 00AB                     i1l76 01F4  
                   i1l68 00F0                     i1l92 008A                     i1l69 00F4  
                   _PASS 002C                     i1l95 009C                     i1l99 009E  
                   _main 0166                     btemp 007E                     start 0012  
                  ??_ISR 003D                    ?_main 0070                    _ANSEL 0188  
                  i1l801 0143                    i1l803 0153                    i1l821 00DF  
                  i1l813 00AF                    i1l805 0160                    i1l901 004D  
                  i1l831 0107                    i1l823 00E5                    i1l815 00B8  
                  i1l807 00A9                    i1l911 0060                    i1l841 01D7  
                  i1l833 01B2                    i1l825 00E8                    i1l817 00C5  
                  i1l921 0084                    i1l913 006D                    i1l835 01B5  
                  i1l843 01DD                    i1l819 00D2                    i1l923 0090  
                  i1l915 0075                    i1l907 004F                    i1l845 01EA  
                  i1l837 01D4                    i1l829 00FA                    i1l925 0096  
                  i1l917 007A                    i1l909 005A                    i1l847 01F0  
                  i1l919 007F                    i1l785 021B                    i1l793 0113  
                  i1l795 011C                    i1l787 010D                    i1l797 0129  
                  i1l799 0136                    i1l895 003D                    i1l897 0041  
                  i1l899 0042                    u20_20 01EA                    u20_21 01E9  
                  u20_25 01E6                    u21_20 01F0                    u21_21 01EF  
                  u30_20 0096                    u30_21 0095                    u16_20 0160  
                  u16_21 015F                    u16_25 015C                    u40_27 00DA  
                  u32_27 0117                    u17_20 00E5                    u17_21 00E4  
                  u41_27 00EA                    u33_27 0124                    u18_20 0107  
                  u26_20 0041                    u18_21 0106                    u26_21 0040  
                  u18_25 0103                    u34_27 0131                    u19_20 01D4  
                  u27_20 006D                    u19_21 01D3                    u27_21 006C  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u19_25 01D0                    u27_25 0069                    u35_27 013E  
                  u28_20 0075                    u28_21 0074                    u36_27 0148  
                  u29_20 0090                    u29_21 008F                    u37_27 00B3  
                  u38_27 00C0                    u39_27 00CD                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088          __end_of_confirm 01F5  
                  _tries 007C                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 01B2  
                 ??_main 0042                   _ANSELH 0189                   _INTEDG 040E  
                 _digits 0030                   _offLED 021B                ??_confirm 0072  
           __pdataCOMMON 007C                   saved_w 007E  __end_of__initialization 0039  
         __pcstackCOMMON 0070             __pidataBANK0 01F5               __pbssBANK0 0033  
             __pmaintext 0166               __pintentry 0004                  ?_offLED 0070  
                __ptext1 003D                  __ptext2 010D                  __ptext3 00A9  
                __ptext4 021B                  __ptext5 01B2                  _confirm 01B2  
                _correct 003B     end_of_initialization 0039        __end_of_printFail 010D  
      __end_of_printPass 0166                _PORTBbits 0006            __pidataCOMMON 0221  
         __end_of_offLED 0221      start_initialization 0015              __end_of_ISR 00A9  
             init_fetch0 0208                 ??_offLED 0070              __pdataBANK0 0020  
              ___latbits 0002            __pcstackBANK0 003D                 ?_confirm 0070  
      interrupt_function 0004                _printFail 00A9                _printPass 010D  
             printFail@i 0071               printPass@i 0071                _userInput 0033  
             ?_printFail 0070               ?_printPass 0070                 _password 0020  
               confirm@i 0078                 init_ram0 020C                 intlevel1 0000  
            ??_printFail 0070              ??_printPass 0070               _OPTION_REG 0081  
