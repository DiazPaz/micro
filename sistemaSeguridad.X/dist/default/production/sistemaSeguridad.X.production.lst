

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 12 16:23:00 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,space=0,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 26/03/2025 GMT
    24                           ; 
    25                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0004                     fsr             equ	4
    58     0004                     fsr0            equ	4
    59     0000                     indf            equ	0
    60     0000                     indf0           equ	0
    61     0002                     pc              equ	2
    62     0002                     pcl             equ	2
    63     000A                     pclath          equ	10
    64     0003                     status          equ	3
    65     0000                     INDF            equ	0	;# 
    66     0001                     TMR0            equ	1	;# 
    67     0002                     PCL             equ	2	;# 
    68     0003                     STATUS          equ	3	;# 
    69     0004                     FSR             equ	4	;# 
    70     0005                     PORTA           equ	5	;# 
    71     0006                     PORTB           equ	6	;# 
    72     0007                     PORTC           equ	7	;# 
    73     0008                     PORTD           equ	8	;# 
    74     0009                     PORTE           equ	9	;# 
    75     000A                     PCLATH          equ	10	;# 
    76     000B                     INTCON          equ	11	;# 
    77     000C                     PIR1            equ	12	;# 
    78     000D                     PIR2            equ	13	;# 
    79     000E                     TMR1            equ	14	;# 
    80     000E                     TMR1L           equ	14	;# 
    81     000F                     TMR1H           equ	15	;# 
    82     0010                     T1CON           equ	16	;# 
    83     0011                     TMR2            equ	17	;# 
    84     0012                     T2CON           equ	18	;# 
    85     0013                     SSPBUF          equ	19	;# 
    86     0014                     SSPCON          equ	20	;# 
    87     0015                     CCPR1           equ	21	;# 
    88     0015                     CCPR1L          equ	21	;# 
    89     0016                     CCPR1H          equ	22	;# 
    90     0017                     CCP1CON         equ	23	;# 
    91     0018                     RCSTA           equ	24	;# 
    92     0019                     TXREG           equ	25	;# 
    93     001A                     RCREG           equ	26	;# 
    94     001B                     CCPR2           equ	27	;# 
    95     001B                     CCPR2L          equ	27	;# 
    96     001C                     CCPR2H          equ	28	;# 
    97     001D                     CCP2CON         equ	29	;# 
    98     001E                     ADRESH          equ	30	;# 
    99     001F                     ADCON0          equ	31	;# 
   100     0081                     OPTION_REG      equ	129	;# 
   101     0085                     TRISA           equ	133	;# 
   102     0086                     TRISB           equ	134	;# 
   103     0087                     TRISC           equ	135	;# 
   104     0088                     TRISD           equ	136	;# 
   105     0089                     TRISE           equ	137	;# 
   106     008C                     PIE1            equ	140	;# 
   107     008D                     PIE2            equ	141	;# 
   108     008E                     PCON            equ	142	;# 
   109     008F                     OSCCON          equ	143	;# 
   110     0090                     OSCTUNE         equ	144	;# 
   111     0091                     SSPCON2         equ	145	;# 
   112     0092                     PR2             equ	146	;# 
   113     0093                     SSPADD          equ	147	;# 
   114     0093                     SSPMSK          equ	147	;# 
   115     0093                     MSK             equ	147	;# 
   116     0094                     SSPSTAT         equ	148	;# 
   117     0095                     WPUB            equ	149	;# 
   118     0096                     IOCB            equ	150	;# 
   119     0097                     VRCON           equ	151	;# 
   120     0098                     TXSTA           equ	152	;# 
   121     0099                     SPBRG           equ	153	;# 
   122     009A                     SPBRGH          equ	154	;# 
   123     009B                     PWM1CON         equ	155	;# 
   124     009C                     ECCPAS          equ	156	;# 
   125     009D                     PSTRCON         equ	157	;# 
   126     009E                     ADRESL          equ	158	;# 
   127     009F                     ADCON1          equ	159	;# 
   128     0105                     WDTCON          equ	261	;# 
   129     0107                     CM1CON0         equ	263	;# 
   130     0108                     CM2CON0         equ	264	;# 
   131     0109                     CM2CON1         equ	265	;# 
   132     010C                     EEDATA          equ	268	;# 
   133     010C                     EEDAT           equ	268	;# 
   134     010D                     EEADR           equ	269	;# 
   135     010E                     EEDATH          equ	270	;# 
   136     010F                     EEADRH          equ	271	;# 
   137     0185                     SRCON           equ	389	;# 
   138     0187                     BAUDCTL         equ	391	;# 
   139     0188                     ANSEL           equ	392	;# 
   140     0189                     ANSELH          equ	393	;# 
   141     018C                     EECON1          equ	396	;# 
   142     018D                     EECON2          equ	397	;# 
   143     0000                     INDF            equ	0	;# 
   144     0001                     TMR0            equ	1	;# 
   145     0002                     PCL             equ	2	;# 
   146     0003                     STATUS          equ	3	;# 
   147     0004                     FSR             equ	4	;# 
   148     0005                     PORTA           equ	5	;# 
   149     0006                     PORTB           equ	6	;# 
   150     0007                     PORTC           equ	7	;# 
   151     0008                     PORTD           equ	8	;# 
   152     0009                     PORTE           equ	9	;# 
   153     000A                     PCLATH          equ	10	;# 
   154     000B                     INTCON          equ	11	;# 
   155     000C                     PIR1            equ	12	;# 
   156     000D                     PIR2            equ	13	;# 
   157     000E                     TMR1            equ	14	;# 
   158     000E                     TMR1L           equ	14	;# 
   159     000F                     TMR1H           equ	15	;# 
   160     0010                     T1CON           equ	16	;# 
   161     0011                     TMR2            equ	17	;# 
   162     0012                     T2CON           equ	18	;# 
   163     0013                     SSPBUF          equ	19	;# 
   164     0014                     SSPCON          equ	20	;# 
   165     0015                     CCPR1           equ	21	;# 
   166     0015                     CCPR1L          equ	21	;# 
   167     0016                     CCPR1H          equ	22	;# 
   168     0017                     CCP1CON         equ	23	;# 
   169     0018                     RCSTA           equ	24	;# 
   170     0019                     TXREG           equ	25	;# 
   171     001A                     RCREG           equ	26	;# 
   172     001B                     CCPR2           equ	27	;# 
   173     001B                     CCPR2L          equ	27	;# 
   174     001C                     CCPR2H          equ	28	;# 
   175     001D                     CCP2CON         equ	29	;# 
   176     001E                     ADRESH          equ	30	;# 
   177     001F                     ADCON0          equ	31	;# 
   178     0081                     OPTION_REG      equ	129	;# 
   179     0085                     TRISA           equ	133	;# 
   180     0086                     TRISB           equ	134	;# 
   181     0087                     TRISC           equ	135	;# 
   182     0088                     TRISD           equ	136	;# 
   183     0089                     TRISE           equ	137	;# 
   184     008C                     PIE1            equ	140	;# 
   185     008D                     PIE2            equ	141	;# 
   186     008E                     PCON            equ	142	;# 
   187     008F                     OSCCON          equ	143	;# 
   188     0090                     OSCTUNE         equ	144	;# 
   189     0091                     SSPCON2         equ	145	;# 
   190     0092                     PR2             equ	146	;# 
   191     0093                     SSPADD          equ	147	;# 
   192     0093                     SSPMSK          equ	147	;# 
   193     0093                     MSK             equ	147	;# 
   194     0094                     SSPSTAT         equ	148	;# 
   195     0095                     WPUB            equ	149	;# 
   196     0096                     IOCB            equ	150	;# 
   197     0097                     VRCON           equ	151	;# 
   198     0098                     TXSTA           equ	152	;# 
   199     0099                     SPBRG           equ	153	;# 
   200     009A                     SPBRGH          equ	154	;# 
   201     009B                     PWM1CON         equ	155	;# 
   202     009C                     ECCPAS          equ	156	;# 
   203     009D                     PSTRCON         equ	157	;# 
   204     009E                     ADRESL          equ	158	;# 
   205     009F                     ADCON1          equ	159	;# 
   206     0105                     WDTCON          equ	261	;# 
   207     0107                     CM1CON0         equ	263	;# 
   208     0108                     CM2CON0         equ	264	;# 
   209     0109                     CM2CON1         equ	265	;# 
   210     010C                     EEDATA          equ	268	;# 
   211     010C                     EEDAT           equ	268	;# 
   212     010D                     EEADR           equ	269	;# 
   213     010E                     EEDATH          equ	270	;# 
   214     010F                     EEADRH          equ	271	;# 
   215     0185                     SRCON           equ	389	;# 
   216     0187                     BAUDCTL         equ	391	;# 
   217     0188                     ANSEL           equ	392	;# 
   218     0189                     ANSELH          equ	393	;# 
   219     018C                     EECON1          equ	396	;# 
   220     018D                     EECON2          equ	397	;# 
   221                           
   222                           	psect	idataCOMMON
   223     0222                     __pidataCOMMON:
   224                           
   225                           ;initializer for _tries
   226     0222  3403               	retlw	3
   227     0223  3400               	retlw	0
   228                           
   229                           	psect	idataBANK0
   230     01F6                     __pidataBANK0:
   231                           
   232                           ;initializer for _password
   233     01F6  3401               	retlw	1
   234     01F7  3400               	retlw	0
   235     01F8  3401               	retlw	1
   236     01F9  3400               	retlw	0
   237     01FA  3401               	retlw	1
   238     01FB  3400               	retlw	0
   239     01FC  3401               	retlw	1
   240     01FD  3400               	retlw	0
   241                           
   242                           ;initializer for _FAIL
   243     01FE  3471               	retlw	113
   244     01FF  3477               	retlw	119
   245     0200  3430               	retlw	48
   246     0201  3438               	retlw	56
   247                           
   248                           ;initializer for _PASS
   249     0202  3473               	retlw	115
   250     0203  3477               	retlw	119
   251     0204  346D               	retlw	109
   252     0205  346D               	retlw	109
   253                           
   254                           ;initializer for _digits
   255     0206  3406               	retlw	6
   256     0207  345B               	retlw	91
   257     0208  344F               	retlw	79
   258     0006                     _PORTBbits      set	6
   259     0008                     _PORTD          set	8
   260     0007                     _PORTC          set	7
   261     0006                     _PORTB          set	6
   262     005F                     _GIE            set	95
   263     005C                     _INTE           set	92
   264     0059                     _INTF           set	89
   265     0088                     _TRISD          set	136
   266     0087                     _TRISC          set	135
   267     0086                     _TRISB          set	134
   268     0081                     _OPTION_REG     set	129
   269     040E                     _INTEDG         set	1038
   270     0189                     _ANSELH         set	393
   271     0188                     _ANSEL          set	392
   272                           
   273                           	psect	cinit
   274     0015                     start_initialization:	
   275                           ; #config settings
   276                           
   277     0015                     __initialization:
   278                           
   279                           ; Initialize objects allocated to BANK0
   280     0015  1383               	bcf	3,7	;select IRP bank0
   281     0016  3033               	movlw	low (__pdataBANK0+19)
   282     0017  00FD               	movwf	btemp+-1
   283     0018  3001               	movlw	high __pidataBANK0
   284     0019  00FE               	movwf	btemp
   285     001A  30F6               	movlw	low __pidataBANK0
   286     001B  00FF               	movwf	btemp+1
   287     001C  3020               	movlw	low __pdataBANK0
   288     001D  0084               	movwf	4
   289     001E  120A  118A  220D  120A  118A  	fcall	init_ram0
   290                           
   291                           ; Initialize objects allocated to COMMON
   292     0023  120A  118A  2222  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   293     0028  00FC               	movwf	__pdataCOMMON& (0+127)
   294     0029  120A  118A  2223  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   295     002E  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
   296                           
   297                           ; Clear objects allocated to BANK0
   298     002F  01B3               	clrf	__pbssBANK0& (0+127)
   299     0030  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   300     0031  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   301     0032  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   302     0033  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   303     0034  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   304     0035  01B9               	clrf	(__pbssBANK0+6)& (0+127)
   305     0036  01BA               	clrf	(__pbssBANK0+7)& (0+127)
   306     0037  01BB               	clrf	(__pbssBANK0+8)& (0+127)
   307     0038  01BC               	clrf	(__pbssBANK0+9)& (0+127)
   308     0039                     end_of_initialization:	
   309                           ;End of C runtime variable initialization code
   310                           
   311     0039                     __end_of__initialization:
   312     0039  0183               	clrf	3
   313     003A  120A  118A  2966   	ljmp	_main	;jump to C main() function
   314                           
   315                           	psect	dataCOMMON
   316     007C                     __pdataCOMMON:
   317     007C                     _tries:
   318     007C                     	ds	2
   319                           
   320                           	psect	bssBANK0
   321     0033                     __pbssBANK0:
   322     0033                     _userInput:
   323     0033                     	ds	8
   324     003B                     _correct:
   325     003B                     	ds	2
   326                           
   327                           	psect	dataBANK0
   328     0020                     __pdataBANK0:
   329     0020                     _password:
   330     0020                     	ds	8
   331     0028                     _FAIL:
   332     0028                     	ds	4
   333     002C                     _PASS:
   334     002C                     	ds	4
   335     0030                     _digits:
   336     0030                     	ds	3
   337                           
   338                           	psect	inittext
   339     0209                     init_fetch0:	
   340                           ;	Called with low address in FSR and high address in W
   341                           
   342     0209  087E               	movf	btemp,w
   343     020A  008A               	movwf	10
   344     020B  087F               	movf	btemp+1,w
   345     020C  0082               	movwf	2
   346     020D                     init_ram0:	
   347                           ;Called with:
   348                           ;	high address of idata address in btemp 
   349                           ;	low address of idata address in btemp+1 
   350                           ;	low address of data in FSR
   351                           ;	high address + 1 of data in btemp-1
   352                           
   353     020D  120A  118A  2209  120A  118A  	fcall	init_fetch0
   354     0212  0080               	movwf	0
   355     0213  0A84               	incf	4,f
   356     0214  0804               	movf	4,w
   357     0215  067D               	xorwf	btemp+-1,w
   358     0216  1903               	btfsc	3,2
   359     0217  3400               	retlw	0
   360     0218  0AFF               	incf	btemp+1,f
   361     0219  1903               	btfsc	3,2
   362     021A  0AFE               	incf	btemp,f
   363     021B  2A0D               	goto	init_ram0
   364                           
   365                           	psect	cstackCOMMON
   366     0070                     __pcstackCOMMON:
   367     0070                     ?_offLED:
   368     0070                     ?_main:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ?_printPass:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ?_printFail:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     ?_ISR:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0070                     ?_confirm:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ??_offLED:	
   384                           ; 2 bytes @ 0x0
   385                           
   386     0070                     ??_printPass:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     ??_printFail:	
   390                           ; 1 bytes @ 0x0
   391                           
   392                           
   393                           ; 1 bytes @ 0x0
   394     0070                     	ds	1
   395     0071                     printPass@i:
   396     0071                     printFail@i:	
   397                           ; 2 bytes @ 0x1
   398                           
   399                           
   400                           ; 2 bytes @ 0x1
   401     0071                     	ds	1
   402     0072                     ??_confirm:
   403                           
   404                           ; 1 bytes @ 0x2
   405     0072                     	ds	6
   406     0078                     confirm@i:
   407                           
   408                           ; 2 bytes @ 0x8
   409     0078                     	ds	2
   410     007A                     ISR@i:
   411                           
   412                           ; 2 bytes @ 0xA
   413     007A                     	ds	2
   414                           
   415                           	psect	cstackBANK0
   416     003D                     __pcstackBANK0:
   417     003D                     ??_ISR:
   418                           
   419                           ; 1 bytes @ 0x0
   420     003D                     	ds	5
   421     0042                     ??_main:
   422                           
   423                           ; 1 bytes @ 0x5
   424     0042                     	ds	1
   425                           
   426                           	psect	maintext
   427     0166                     __pmaintext:	
   428 ;;
   429 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   430 ;;
   431 ;; *************** function _main *****************
   432 ;; Defined at:
   433 ;;		line 43 in file "newmain.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   442 ;; Tracked objects:
   443 ;;		On entry : B00/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          0       1       0       0       0
   450 ;;      Totals:         0       1       0       0       0
   451 ;;Total ram usage:        1 bytes
   452 ;; Hardware stack levels required when called: 3
   453 ;; This function calls:
   454 ;;		Nothing
   455 ;; This function is called by:
   456 ;;		Startup code after reset
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460     0166                     _main:	
   461                           ;psect for function _main
   462                           
   463     0166                     l853:	
   464                           ;incstack = 0
   465                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   466                           
   467                           
   468                           ;newmain.c: 44:     ANSEL = 0;
   469     0166  1683               	bsf	3,5	;RP0=1, select bank3
   470     0167  1703               	bsf	3,6	;RP1=1, select bank3
   471     0168  0188               	clrf	8	;volatile
   472                           
   473                           ;newmain.c: 45:     ANSELH = 0;
   474     0169  0189               	clrf	9	;volatile
   475     016A                     l855:
   476                           
   477                           ;newmain.c: 46:     OPTION_REG &= 0b01111111;
   478     016A  307F               	movlw	127
   479     016B  1683               	bsf	3,5	;RP0=1, select bank1
   480     016C  1303               	bcf	3,6	;RP1=0, select bank1
   481     016D  0581               	andwf	1,f	;volatile
   482     016E                     l857:
   483                           
   484                           ;newmain.c: 48:     TRISB = 0b00011111;
   485     016E  301F               	movlw	31
   486     016F  0086               	movwf	6	;volatile
   487     0170                     l859:
   488                           
   489                           ;newmain.c: 49:     TRISC = 0;
   490     0170  0187               	clrf	7	;volatile
   491     0171                     l861:
   492                           
   493                           ;newmain.c: 50:     TRISD = 0;
   494     0171  0188               	clrf	8	;volatile
   495     0172                     l863:
   496                           
   497                           ;newmain.c: 52:     PORTB = 0;
   498     0172  1283               	bcf	3,5	;RP0=0, select bank0
   499     0173  1303               	bcf	3,6	;RP1=0, select bank0
   500     0174  0186               	clrf	6	;volatile
   501     0175                     l865:
   502                           
   503                           ;newmain.c: 53:     PORTC = 0;
   504     0175  0187               	clrf	7	;volatile
   505     0176                     l867:
   506                           
   507                           ;newmain.c: 54:     PORTD = 0;
   508     0176  0188               	clrf	8	;volatile
   509     0177                     l869:
   510                           
   511                           ;newmain.c: 56:     INTF = 0;
   512     0177  108B               	bcf	11,1	;volatile
   513     0178                     l871:
   514                           
   515                           ;newmain.c: 57:     INTEDG = 0;
   516     0178  1683               	bsf	3,5	;RP0=1, select bank1
   517     0179  1303               	bcf	3,6	;RP1=0, select bank1
   518     017A  1301               	bcf	1,6	;volatile
   519     017B                     l873:
   520                           
   521                           ;newmain.c: 58:     INTE = 1;
   522     017B  160B               	bsf	11,4	;volatile
   523     017C                     l875:
   524                           
   525                           ;newmain.c: 59:     GIE = 1;
   526     017C  178B               	bsf	11,7	;volatile
   527     017D                     l877:
   528                           
   529                           ;newmain.c: 62:         if(!PORTBbits.RB1)
   530     017D  1283               	bcf	3,5	;RP0=0, select bank0
   531     017E  1303               	bcf	3,6	;RP1=0, select bank0
   532     017F  1886               	btfsc	6,1	;volatile
   533     0180  2982               	goto	u221
   534     0181  2983               	goto	u220
   535     0182                     u221:
   536     0182  2987               	goto	l881
   537     0183                     u220:
   538     0183                     l879:
   539                           
   540                           ;newmain.c: 63:             userInput[0] = 1;
   541     0183  3001               	movlw	1
   542     0184  00B3               	movwf	_userInput
   543     0185  3000               	movlw	0
   544     0186  00B4               	movwf	_userInput+1
   545     0187                     l881:
   546                           
   547                           ;newmain.c: 65:         if(!PORTBbits.RB2)
   548     0187  1906               	btfsc	6,2	;volatile
   549     0188  298A               	goto	u231
   550     0189  298B               	goto	u230
   551     018A                     u231:
   552     018A  298F               	goto	l885
   553     018B                     u230:
   554     018B                     l883:
   555                           
   556                           ;newmain.c: 66:             userInput[1] = 1;
   557     018B  3001               	movlw	1
   558     018C  00B5               	movwf	_userInput+2
   559     018D  3000               	movlw	0
   560     018E  00B6               	movwf	_userInput+3
   561     018F                     l885:
   562                           
   563                           ;newmain.c: 68:         if(!PORTBbits.RB3)
   564     018F  1986               	btfsc	6,3	;volatile
   565     0190  2992               	goto	u241
   566     0191  2993               	goto	u240
   567     0192                     u241:
   568     0192  2997               	goto	l889
   569     0193                     u240:
   570     0193                     l887:
   571                           
   572                           ;newmain.c: 69:             userInput[2] = 1;
   573     0193  3001               	movlw	1
   574     0194  00B7               	movwf	_userInput+4
   575     0195  3000               	movlw	0
   576     0196  00B8               	movwf	_userInput+5
   577     0197                     l889:
   578                           
   579                           ;newmain.c: 71:         if(!PORTBbits.RB4)
   580     0197  1A06               	btfsc	6,4	;volatile
   581     0198  299A               	goto	u251
   582     0199  299B               	goto	u250
   583     019A                     u251:
   584     019A  299F               	goto	l893
   585     019B                     u250:
   586     019B                     l891:
   587                           
   588                           ;newmain.c: 72:             userInput[3] = 1;
   589     019B  3001               	movlw	1
   590     019C  00B9               	movwf	_userInput+6
   591     019D  3000               	movlw	0
   592     019E  00BA               	movwf	_userInput+7
   593     019F                     l893:
   594                           
   595                           ;newmain.c: 74:         PORTC = 0b11111110;
   596     019F  30FE               	movlw	254
   597     01A0  0087               	movwf	7	;volatile
   598     01A1                     l895:
   599                           
   600                           ;newmain.c: 75:         PORTD = digits[tries - 1];
   601     01A1  087C               	movf	_tries,w
   602     01A2  3E2F               	addlw	(low ((_digits| 0+-1)))& (0+255)
   603     01A3  0084               	movwf	4
   604     01A4  1383               	bcf	3,7	;select IRP bank0
   605     01A5  0800               	movf	0,w
   606     01A6  0088               	movwf	8	;volatile
   607     01A7                     l897:
   608                           
   609                           ;newmain.c: 76:         _delay((unsigned long)((1)*(4000000/4000.0)));
   610     01A7  30C7               	movlw	199
   611     01A8  1283               	bcf	3,5	;RP0=0, select bank0
   612     01A9  1303               	bcf	3,6	;RP1=0, select bank0
   613     01AA  00C2               	movwf	??_main
   614     01AB                     u317:
   615     01AB  29AC               	nop2
   616     01AC  0BC2               	decfsz	??_main,f
   617     01AD  29AB               	goto	u317
   618     01AE  29AF               	nop2
   619     01AF  297D               	goto	l877
   620     01B0  120A  118A  2812   	ljmp	start
   621     01B3                     __end_of_main:
   622                           
   623                           	psect	text1
   624     003D                     __ptext1:	
   625 ;; *************** function _ISR *****************
   626 ;; Defined at:
   627 ;;		line 155 in file "newmain.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  i               2   10[COMMON] int 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         2       0       0       0       0
   643 ;;      Temps:          0       5       0       0       0
   644 ;;      Totals:         2       5       0       0       0
   645 ;;Total ram usage:        7 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 2
   648 ;; This function calls:
   649 ;;		_confirm
   650 ;;		_printFail
   651 ;;		_printPass
   652 ;; This function is called by:
   653 ;;		Interrupt level 1
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657     003D                     _ISR:	
   658                           ;psect for function _ISR
   659                           
   660     003D                     i1l899:
   661                           
   662                           ;newmain.c: 156:     if(INTF){
   663     003D  1C8B               	btfss	11,1	;volatile
   664     003E  2840               	goto	u26_21
   665     003F  2841               	goto	u26_20
   666     0040                     u26_21:
   667     0040  289E               	goto	i1l99
   668     0041                     u26_20:
   669     0041                     i1l901:
   670                           
   671                           ;newmain.c: 157:         GIE = 0;
   672     0041  138B               	bcf	11,7	;volatile
   673     0042                     i1l903:
   674                           
   675                           ;newmain.c: 158:         correct = confirm();
   676     0042  120A  118A  21B3  120A  118A  	fcall	_confirm
   677     0047  0871               	movf	?_confirm+1,w
   678     0048  1283               	bcf	3,5	;RP0=0, select bank0
   679     0049  1303               	bcf	3,6	;RP1=0, select bank0
   680     004A  00BC               	movwf	_correct+1
   681     004B  0870               	movf	?_confirm,w
   682     004C  00BB               	movwf	_correct
   683     004D                     i1l905:
   684                           
   685                           ;newmain.c: 159:         for(int i = 0; i < 4; i++)
   686     004D  01FA               	clrf	ISR@i
   687     004E  01FB               	clrf	ISR@i+1
   688     004F                     i1l911:
   689                           
   690                           ;newmain.c: 160:             userInput[i] = 0;
   691     004F  087A               	movf	ISR@i,w
   692     0050  1283               	bcf	3,5	;RP0=0, select bank0
   693     0051  1303               	bcf	3,6	;RP1=0, select bank0
   694     0052  00BD               	movwf	??_ISR
   695     0053  073D               	addwf	??_ISR,w
   696     0054  3E33               	addlw	(low (_userInput| 0))& (0+255)
   697     0055  0084               	movwf	4
   698     0056  1383               	bcf	3,7	;select IRP bank0
   699     0057  0180               	clrf	0
   700     0058  0A84               	incf	4,f
   701     0059  0180               	clrf	0
   702     005A                     i1l913:
   703     005A  3001               	movlw	1
   704     005B  07FA               	addwf	ISR@i,f
   705     005C  1803               	skipnc
   706     005D  0AFB               	incf	ISR@i+1,f
   707     005E  3000               	movlw	0
   708     005F  07FB               	addwf	ISR@i+1,f
   709     0060                     i1l915:
   710     0060  087B               	movf	ISR@i+1,w
   711     0061  3A80               	xorlw	128
   712     0062  00FF               	movwf	btemp+1
   713     0063  3080               	movlw	128
   714     0064  027F               	subwf	btemp+1,w
   715     0065  1D03               	skipz
   716     0066  2869               	goto	u27_25
   717     0067  3004               	movlw	4
   718     0068  027A               	subwf	ISR@i,w
   719     0069                     u27_25:
   720     0069  1C03               	skipc
   721     006A  286C               	goto	u27_21
   722     006B  286D               	goto	u27_20
   723     006C                     u27_21:
   724     006C  284F               	goto	i1l911
   725     006D                     u27_20:
   726     006D                     i1l917:
   727                           
   728                           ;newmain.c: 161:         if (correct) {
   729     006D  1283               	bcf	3,5	;RP0=0, select bank0
   730     006E  1303               	bcf	3,6	;RP1=0, select bank0
   731     006F  083B               	movf	_correct,w
   732     0070  043C               	iorwf	_correct+1,w
   733     0071  1903               	btfsc	3,2
   734     0072  2874               	goto	u28_21
   735     0073  2875               	goto	u28_20
   736     0074                     u28_21:
   737     0074  287F               	goto	i1l923
   738     0075                     u28_20:
   739     0075                     i1l919:
   740                           
   741                           ;newmain.c: 162:             printPass();
   742     0075  120A  118A  210D  120A  118A  	fcall	_printPass
   743     007A                     i1l921:
   744                           
   745                           ;newmain.c: 163:             tries = 3;
   746     007A  3003               	movlw	3
   747     007B  00FC               	movwf	_tries
   748     007C  3000               	movlw	0
   749     007D  00FD               	movwf	_tries+1
   750                           
   751                           ;newmain.c: 164:         } else {
   752     007E  288A               	goto	i1l92
   753     007F                     i1l923:
   754                           
   755                           ;newmain.c: 165:             printFail();
   756     007F  120A  118A  20A9  120A  118A  	fcall	_printFail
   757     0084                     i1l925:
   758                           
   759                           ;newmain.c: 166:             tries--;
   760     0084  3001               	movlw	1
   761     0085  02FC               	subwf	_tries,f
   762     0086  3000               	movlw	0
   763     0087  1C03               	skipc
   764     0088  03FD               	decf	_tries+1,f
   765     0089  02FD               	subwf	_tries+1,f
   766     008A                     i1l92:
   767     008A  1283               	bcf	3,5	;RP0=0, select bank0
   768     008B  1303               	bcf	3,6	;RP1=0, select bank0
   769     008C  1C06               	btfss	6,0	;volatile
   770     008D  288F               	goto	u29_21
   771     008E  2890               	goto	u29_20
   772     008F                     u29_21:
   773     008F  288A               	goto	i1l92
   774     0090                     u29_20:
   775     0090                     i1l927:
   776                           
   777                           ;newmain.c: 169:         if (tries == 0) {
   778     0090  087C               	movf	_tries,w
   779     0091  047D               	iorwf	_tries+1,w
   780     0092  1D03               	btfss	3,2
   781     0093  2895               	goto	u30_21
   782     0094  2896               	goto	u30_20
   783     0095                     u30_21:
   784     0095  289C               	goto	i1l95
   785     0096                     u30_20:
   786     0096                     i1l929:
   787                           
   788                           ;newmain.c: 171:                 printFail();
   789     0096  120A  118A  20A9  120A  118A  	fcall	_printFail
   790     009B  2896               	goto	i1l929
   791     009C                     i1l95:	
   792                           ;newmain.c: 173:         }
   793                           
   794                           
   795                           ;newmain.c: 174:         GIE = 1;
   796     009C  178B               	bsf	11,7	;volatile
   797                           
   798                           ;newmain.c: 175:         INTF = 0;
   799     009D  108B               	bcf	11,1	;volatile
   800     009E                     i1l99:
   801     009E  0841               	movf	??_ISR+4,w
   802     009F  00FF               	movwf	btemp+1
   803     00A0  0840               	movf	??_ISR+3,w
   804     00A1  008A               	movwf	10
   805     00A2  083F               	movf	??_ISR+2,w
   806     00A3  0084               	movwf	4
   807     00A4  0E3E               	swapf	??_ISR+1,w
   808     00A5  0083               	movwf	3
   809     00A6  0EFE               	swapf	btemp,f
   810     00A7  0E7E               	swapf	btemp,w
   811     00A8  0009               	retfie
   812     00A9                     __end_of_ISR:
   813                           
   814                           	psect	intentry
   815     0004                     __pintentry:	
   816                           ;incstack = 0
   817                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   818                           
   819     0004                     interrupt_function:
   820     007E                     saved_w         set	btemp
   821     0004  00FE               	movwf	btemp
   822     0005  0E03               	swapf	3,w
   823     0006  1283               	bcf	3,5	;RP0=0, select bank0
   824     0007  1303               	bcf	3,6	;RP1=0, select bank0
   825     0008  00BE               	movwf	??_ISR+1
   826     0009  0804               	movf	4,w
   827     000A  00BF               	movwf	??_ISR+2
   828     000B  080A               	movf	10,w
   829     000C  00C0               	movwf	??_ISR+3
   830     000D  087F               	movf	btemp+1,w
   831     000E  00C1               	movwf	??_ISR+4
   832     000F  120A  118A  283D   	ljmp	_ISR
   833                           
   834                           	psect	text2
   835     010D                     __ptext2:	
   836 ;; *************** function _printPass *****************
   837 ;; Defined at:
   838 ;;		line 80 in file "newmain.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  i               2    1[COMMON] int 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   852 ;;      Params:         0       0       0       0       0
   853 ;;      Locals:         2       0       0       0       0
   854 ;;      Temps:          1       0       0       0       0
   855 ;;      Totals:         3       0       0       0       0
   856 ;;Total ram usage:        3 bytes
   857 ;; Hardware stack levels used: 1
   858 ;; Hardware stack levels required when called: 1
   859 ;; This function calls:
   860 ;;		_offLED
   861 ;; This function is called by:
   862 ;;		_ISR
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866     010D                     _printPass:	
   867                           ;psect for function _printPass
   868                           
   869     010D                     i1l789:	
   870                           ;incstack = 0
   871                           ; Regs used in _printPass: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   872                           
   873                           
   874                           ;newmain.c: 82:     for(int i = 0; i < 25; i++)
   875     010D  01F1               	clrf	printPass@i
   876     010E  01F2               	clrf	printPass@i+1
   877     010F                     i1l61:
   878                           
   879                           ;newmain.c: 83:     {;newmain.c: 84:         PORTC = 0b11111110;
   880     010F  30FE               	movlw	254
   881     0110  1283               	bcf	3,5	;RP0=0, select bank0
   882     0111  1303               	bcf	3,6	;RP1=0, select bank0
   883     0112  0087               	movwf	7	;volatile
   884     0113                     i1l795:
   885                           
   886                           ;newmain.c: 85:         PORTD = PASS[0];
   887     0113  082C               	movf	_PASS,w
   888     0114  0088               	movwf	8	;volatile
   889                           
   890                           ;newmain.c: 86:         _delay((unsigned long)((1)*(4000000/4000.0)));
   891     0115  30C7               	movlw	199
   892     0116  00F0               	movwf	??_printPass
   893     0117                     u32_27:
   894     0117  2918               	nop2
   895     0118  0BF0               	decfsz	??_printPass,f
   896     0119  2917               	goto	u32_27
   897     011A  291B               	nop2
   898     011B  291C               	nop2
   899     011C                     i1l797:
   900                           
   901                           ;newmain.c: 88:         PORTC = 0b11111101;
   902     011C  30FD               	movlw	253
   903     011D  1283               	bcf	3,5	;RP0=0, select bank0
   904     011E  1303               	bcf	3,6	;RP1=0, select bank0
   905     011F  0087               	movwf	7	;volatile
   906                           
   907                           ;newmain.c: 89:         PORTD = PASS[1];
   908     0120  082D               	movf	_PASS+1,w
   909     0121  0088               	movwf	8	;volatile
   910                           
   911                           ;newmain.c: 90:         _delay((unsigned long)((1)*(4000000/4000.0)));
   912     0122  30C7               	movlw	199
   913     0123  00F0               	movwf	??_printPass
   914     0124                     u33_27:
   915     0124  2925               	nop2
   916     0125  0BF0               	decfsz	??_printPass,f
   917     0126  2924               	goto	u33_27
   918     0127  2928               	nop2
   919     0128  2929               	nop2
   920     0129                     i1l799:
   921                           
   922                           ;newmain.c: 92:         PORTC = 0b11111011;
   923     0129  30FB               	movlw	251
   924     012A  1283               	bcf	3,5	;RP0=0, select bank0
   925     012B  1303               	bcf	3,6	;RP1=0, select bank0
   926     012C  0087               	movwf	7	;volatile
   927                           
   928                           ;newmain.c: 93:         PORTD = PASS[2];
   929     012D  082E               	movf	_PASS+2,w
   930     012E  0088               	movwf	8	;volatile
   931                           
   932                           ;newmain.c: 94:         _delay((unsigned long)((1)*(4000000/4000.0)));
   933     012F  30C7               	movlw	199
   934     0130  00F0               	movwf	??_printPass
   935     0131                     u34_27:
   936     0131  2932               	nop2
   937     0132  0BF0               	decfsz	??_printPass,f
   938     0133  2931               	goto	u34_27
   939     0134  2935               	nop2
   940     0135  2936               	nop2
   941     0136                     i1l801:
   942                           
   943                           ;newmain.c: 96:         PORTC = 0b11110111;
   944     0136  30F7               	movlw	247
   945     0137  1283               	bcf	3,5	;RP0=0, select bank0
   946     0138  1303               	bcf	3,6	;RP1=0, select bank0
   947     0139  0087               	movwf	7	;volatile
   948                           
   949                           ;newmain.c: 97:         PORTD = PASS[3];
   950     013A  082F               	movf	_PASS+3,w
   951     013B  0088               	movwf	8	;volatile
   952                           
   953                           ;newmain.c: 98:         _delay((unsigned long)((1)*(4000000/4000.0)));
   954     013C  30C7               	movlw	199
   955     013D  00F0               	movwf	??_printPass
   956     013E                     u35_27:
   957     013E  293F               	nop2
   958     013F  0BF0               	decfsz	??_printPass,f
   959     0140  293E               	goto	u35_27
   960     0141  2942               	nop2
   961     0142  2943               	nop2
   962     0143                     i1l803:
   963                           
   964                           ;newmain.c: 100:         PORTBbits.RB5 = 1;
   965     0143  1283               	bcf	3,5	;RP0=0, select bank0
   966     0144  1303               	bcf	3,6	;RP1=0, select bank0
   967     0145  1686               	bsf	6,5	;volatile
   968                           
   969                           ;newmain.c: 101:         _delay((unsigned long)((1)*(4000000/4000.0)));
   970     0146  30C7               	movlw	199
   971     0147  00F0               	movwf	??_printPass
   972     0148                     u36_27:
   973     0148  2949               	nop2
   974     0149  0BF0               	decfsz	??_printPass,f
   975     014A  2948               	goto	u36_27
   976     014B  294C               	nop2
   977     014C  294D               	nop2
   978                           
   979                           ;newmain.c: 102:     }
   980     014D  3001               	movlw	1
   981     014E  07F1               	addwf	printPass@i,f
   982     014F  1803               	skipnc
   983     0150  0AF2               	incf	printPass@i+1,f
   984     0151  3000               	movlw	0
   985     0152  07F2               	addwf	printPass@i+1,f
   986     0153                     i1l805:
   987     0153  0872               	movf	printPass@i+1,w
   988     0154  3A80               	xorlw	128
   989     0155  00FF               	movwf	btemp+1
   990     0156  3080               	movlw	128
   991     0157  027F               	subwf	btemp+1,w
   992     0158  1D03               	skipz
   993     0159  295C               	goto	u16_25
   994     015A  3019               	movlw	25
   995     015B  0271               	subwf	printPass@i,w
   996     015C                     u16_25:
   997     015C  1C03               	skipc
   998     015D  295F               	goto	u16_21
   999     015E  2960               	goto	u16_20
  1000     015F                     u16_21:
  1001     015F  290F               	goto	i1l61
  1002     0160                     u16_20:
  1003     0160                     i1l807:
  1004                           
  1005                           ;newmain.c: 103:     offLED();
  1006     0160  120A  118A  221C  120A  118A  	fcall	_offLED
  1007     0165                     i1l63:
  1008     0165  0008               	return
  1009     0166                     __end_of_printPass:
  1010                           
  1011                           	psect	text3
  1012     00A9                     __ptext3:	
  1013 ;; *************** function _printFail *****************
  1014 ;; Defined at:
  1015 ;;		line 106 in file "newmain.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  i               2    1[COMMON] int 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1029 ;;      Params:         0       0       0       0       0
  1030 ;;      Locals:         2       0       0       0       0
  1031 ;;      Temps:          1       0       0       0       0
  1032 ;;      Totals:         3       0       0       0       0
  1033 ;;Total ram usage:        3 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 1
  1036 ;; This function calls:
  1037 ;;		_offLED
  1038 ;; This function is called by:
  1039 ;;		_ISR
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043     00A9                     _printFail:	
  1044                           ;psect for function _printFail
  1045                           
  1046     00A9                     i1l809:	
  1047                           ;incstack = 0
  1048                           ; Regs used in _printFail: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1049                           
  1050                           
  1051                           ;newmain.c: 108:     for(int i = 0; i < 25; i++)
  1052     00A9  01F1               	clrf	printFail@i
  1053     00AA  01F2               	clrf	printFail@i+1
  1054     00AB                     i1l66:
  1055                           
  1056                           ;newmain.c: 109:     {;newmain.c: 110:         PORTC = 0b11111110;
  1057     00AB  30FE               	movlw	254
  1058     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1059     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1060     00AE  0087               	movwf	7	;volatile
  1061     00AF                     i1l815:
  1062                           
  1063                           ;newmain.c: 111:         PORTD = FAIL[0];
  1064     00AF  0828               	movf	_FAIL,w
  1065     00B0  0088               	movwf	8	;volatile
  1066                           
  1067                           ;newmain.c: 112:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1068     00B1  30C7               	movlw	199
  1069     00B2  00F0               	movwf	??_printFail
  1070     00B3                     u37_27:
  1071     00B3  28B4               	nop2
  1072     00B4  0BF0               	decfsz	??_printFail,f
  1073     00B5  28B3               	goto	u37_27
  1074     00B6  28B7               	nop2
  1075     00B7  28B8               	nop2
  1076     00B8                     i1l817:
  1077                           
  1078                           ;newmain.c: 114:         PORTC = 0b11111101;
  1079     00B8  30FD               	movlw	253
  1080     00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1081     00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1082     00BB  0087               	movwf	7	;volatile
  1083                           
  1084                           ;newmain.c: 115:         PORTD = FAIL[1];
  1085     00BC  0829               	movf	_FAIL+1,w
  1086     00BD  0088               	movwf	8	;volatile
  1087                           
  1088                           ;newmain.c: 116:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1089     00BE  30C7               	movlw	199
  1090     00BF  00F0               	movwf	??_printFail
  1091     00C0                     u38_27:
  1092     00C0  28C1               	nop2
  1093     00C1  0BF0               	decfsz	??_printFail,f
  1094     00C2  28C0               	goto	u38_27
  1095     00C3  28C4               	nop2
  1096     00C4  28C5               	nop2
  1097     00C5                     i1l819:
  1098                           
  1099                           ;newmain.c: 118:         PORTC = 0b11111011;
  1100     00C5  30FB               	movlw	251
  1101     00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1102     00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1103     00C8  0087               	movwf	7	;volatile
  1104                           
  1105                           ;newmain.c: 119:         PORTD = FAIL[2];
  1106     00C9  082A               	movf	_FAIL+2,w
  1107     00CA  0088               	movwf	8	;volatile
  1108                           
  1109                           ;newmain.c: 120:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1110     00CB  30C7               	movlw	199
  1111     00CC  00F0               	movwf	??_printFail
  1112     00CD                     u39_27:
  1113     00CD  28CE               	nop2
  1114     00CE  0BF0               	decfsz	??_printFail,f
  1115     00CF  28CD               	goto	u39_27
  1116     00D0  28D1               	nop2
  1117     00D1  28D2               	nop2
  1118     00D2                     i1l821:
  1119                           
  1120                           ;newmain.c: 122:         PORTC = 0b11110111;
  1121     00D2  30F7               	movlw	247
  1122     00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1123     00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1124     00D5  0087               	movwf	7	;volatile
  1125                           
  1126                           ;newmain.c: 123:         PORTD = FAIL[3];
  1127     00D6  082B               	movf	_FAIL+3,w
  1128     00D7  0088               	movwf	8	;volatile
  1129                           
  1130                           ;newmain.c: 124:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1131     00D8  30C7               	movlw	199
  1132     00D9  00F0               	movwf	??_printFail
  1133     00DA                     u40_27:
  1134     00DA  28DB               	nop2
  1135     00DB  0BF0               	decfsz	??_printFail,f
  1136     00DC  28DA               	goto	u40_27
  1137     00DD  28DE               	nop2
  1138     00DE  28DF               	nop2
  1139     00DF                     i1l823:
  1140                           
  1141                           ;newmain.c: 126:         if(tries > 0)
  1142     00DF  087C               	movf	_tries,w
  1143     00E0  047D               	iorwf	_tries+1,w
  1144     00E1  1903               	btfsc	3,2
  1145     00E2  28E4               	goto	u17_21
  1146     00E3  28E5               	goto	u17_20
  1147     00E4                     u17_21:
  1148     00E4  28F0               	goto	i1l68
  1149     00E5                     u17_20:
  1150     00E5                     i1l825:
  1151                           
  1152                           ;newmain.c: 127:         {;newmain.c: 128:             PORTBbits.RB7 = 1;
  1153     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1154     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1155     00E7  1786               	bsf	6,7	;volatile
  1156     00E8                     i1l827:
  1157                           
  1158                           ;newmain.c: 129:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1159     00E8  30C7               	movlw	199
  1160     00E9  00F0               	movwf	??_printFail
  1161     00EA                     u41_27:
  1162     00EA  28EB               	nop2
  1163     00EB  0BF0               	decfsz	??_printFail,f
  1164     00EC  28EA               	goto	u41_27
  1165     00ED  28EE               	nop2
  1166     00EE  28EF               	nop2
  1167                           
  1168                           ;newmain.c: 130:         }
  1169     00EF  28F4               	goto	i1l69
  1170     00F0                     i1l68:	
  1171                           ;newmain.c: 131:         else
  1172                           
  1173                           
  1174                           ;newmain.c: 132:         {;newmain.c: 133:             PORTBbits.RB6 = 1;
  1175     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1176     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1177     00F2  1706               	bsf	6,6	;volatile
  1178     00F3  28E8               	goto	i1l827
  1179     00F4                     i1l69:	
  1180                           ;newmain.c: 135:         }
  1181                           
  1182                           
  1183                           ;newmain.c: 136:     }
  1184     00F4  3001               	movlw	1
  1185     00F5  07F1               	addwf	printFail@i,f
  1186     00F6  1803               	skipnc
  1187     00F7  0AF2               	incf	printFail@i+1,f
  1188     00F8  3000               	movlw	0
  1189     00F9  07F2               	addwf	printFail@i+1,f
  1190     00FA                     i1l831:
  1191     00FA  0872               	movf	printFail@i+1,w
  1192     00FB  3A80               	xorlw	128
  1193     00FC  00FF               	movwf	btemp+1
  1194     00FD  3080               	movlw	128
  1195     00FE  027F               	subwf	btemp+1,w
  1196     00FF  1D03               	skipz
  1197     0100  2903               	goto	u18_25
  1198     0101  3019               	movlw	25
  1199     0102  0271               	subwf	printFail@i,w
  1200     0103                     u18_25:
  1201     0103  1C03               	skipc
  1202     0104  2906               	goto	u18_21
  1203     0105  2907               	goto	u18_20
  1204     0106                     u18_21:
  1205     0106  28AB               	goto	i1l66
  1206     0107                     u18_20:
  1207     0107                     i1l833:
  1208                           
  1209                           ;newmain.c: 137:     offLED();
  1210     0107  120A  118A  221C  120A  118A  	fcall	_offLED
  1211     010C                     i1l70:
  1212     010C  0008               	return
  1213     010D                     __end_of_printFail:
  1214                           
  1215                           	psect	text4
  1216     021C                     __ptext4:	
  1217 ;; *************** function _offLED *****************
  1218 ;; Defined at:
  1219 ;;		line 148 in file "newmain.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		None
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1233 ;;      Params:         0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0
  1236 ;;      Totals:         0       0       0       0       0
  1237 ;;Total ram usage:        0 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_printPass
  1243 ;;		_printFail
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247     021C                     _offLED:	
  1248                           ;psect for function _offLED
  1249                           
  1250     021C                     i1l787:	
  1251                           ;incstack = 0
  1252                           ; Regs used in _offLED: []
  1253                           
  1254                           
  1255                           ;newmain.c: 150:     PORTBbits.RB6 = 0;
  1256     021C  1283               	bcf	3,5	;RP0=0, select bank0
  1257     021D  1303               	bcf	3,6	;RP1=0, select bank0
  1258     021E  1306               	bcf	6,6	;volatile
  1259                           
  1260                           ;newmain.c: 151:     PORTBbits.RB7 = 0;
  1261     021F  1386               	bcf	6,7	;volatile
  1262                           
  1263                           ;newmain.c: 152:     PORTBbits.RB5 = 0;
  1264     0220  1286               	bcf	6,5	;volatile
  1265     0221                     i1l82:
  1266     0221  0008               	return
  1267     0222                     __end_of_offLED:
  1268                           
  1269                           	psect	text5
  1270     01B3                     __ptext5:	
  1271 ;; *************** function _confirm *****************
  1272 ;; Defined at:
  1273 ;;		line 140 in file "newmain.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;  i               2    8[COMMON] int 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  2    0[COMMON] int 
  1280 ;; Registers used:
  1281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         2       0       0       0       0
  1288 ;;      Locals:         2       0       0       0       0
  1289 ;;      Temps:          6       0       0       0       0
  1290 ;;      Totals:        10       0       0       0       0
  1291 ;;Total ram usage:       10 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_ISR
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300     01B3                     _confirm:	
  1301                           ;psect for function _confirm
  1302                           
  1303     01B3                     i1l835:	
  1304                           ;incstack = 0
  1305                           ; Regs used in _confirm: [wreg-fsr0h+status,2+status,0+btemp+1]
  1306                           
  1307                           
  1308                           ;newmain.c: 142:     for(int i = 0; i < 4 && tries > 0; i++)
  1309     01B3  01F8               	clrf	confirm@i
  1310     01B4  01F9               	clrf	confirm@i+1
  1311     01B5  29DE               	goto	i1l845
  1312     01B6                     i1l837:
  1313                           
  1314                           ;newmain.c: 143:         if(password[i] != userInput[i])
  1315     01B6  0878               	movf	confirm@i,w
  1316     01B7  00F2               	movwf	??_confirm
  1317     01B8  0772               	addwf	??_confirm,w
  1318     01B9  3E33               	addlw	(low (_userInput| 0))& (0+255)
  1319     01BA  0084               	movwf	4
  1320     01BB  1383               	bcf	3,7	;select IRP bank0
  1321     01BC  0800               	movf	0,w
  1322     01BD  00F3               	movwf	??_confirm+1
  1323     01BE  0A84               	incf	4,f
  1324     01BF  0800               	movf	0,w
  1325     01C0  00F4               	movwf	??_confirm+2
  1326     01C1  0878               	movf	confirm@i,w
  1327     01C2  00F5               	movwf	??_confirm+3
  1328     01C3  0775               	addwf	??_confirm+3,w
  1329     01C4  3E20               	addlw	(low (_password| 0))& (0+255)
  1330     01C5  0084               	movwf	4
  1331     01C6  0800               	movf	0,w
  1332     01C7  00F6               	movwf	??_confirm+4
  1333     01C8  0A84               	incf	4,f
  1334     01C9  0800               	movf	0,w
  1335     01CA  00F7               	movwf	??_confirm+5
  1336     01CB  0874               	movf	??_confirm+2,w
  1337     01CC  0677               	xorwf	??_confirm+5,w
  1338     01CD  1D03               	skipz
  1339     01CE  29D1               	goto	u19_25
  1340     01CF  0873               	movf	??_confirm+1,w
  1341     01D0  0676               	xorwf	??_confirm+4,w
  1342     01D1                     u19_25:
  1343     01D1  1903               	skipnz
  1344     01D2  29D4               	goto	u19_21
  1345     01D3  29D5               	goto	u19_20
  1346     01D4                     u19_21:
  1347     01D4  29D8               	goto	i1l843
  1348     01D5                     u19_20:
  1349     01D5                     i1l839:
  1350                           
  1351                           ;newmain.c: 144:             return 0;
  1352     01D5  01F0               	clrf	?_confirm
  1353     01D6  01F1               	clrf	?_confirm+1
  1354     01D7  29F5               	goto	i1l76
  1355     01D8                     i1l843:
  1356     01D8  3001               	movlw	1
  1357     01D9  07F8               	addwf	confirm@i,f
  1358     01DA  1803               	skipnc
  1359     01DB  0AF9               	incf	confirm@i+1,f
  1360     01DC  3000               	movlw	0
  1361     01DD  07F9               	addwf	confirm@i+1,f
  1362     01DE                     i1l845:
  1363     01DE  0879               	movf	confirm@i+1,w
  1364     01DF  3A80               	xorlw	128
  1365     01E0  00FF               	movwf	btemp+1
  1366     01E1  3080               	movlw	128
  1367     01E2  027F               	subwf	btemp+1,w
  1368     01E3  1D03               	skipz
  1369     01E4  29E7               	goto	u20_25
  1370     01E5  3004               	movlw	4
  1371     01E6  0278               	subwf	confirm@i,w
  1372     01E7                     u20_25:
  1373     01E7  1803               	skipnc
  1374     01E8  29EA               	goto	u20_21
  1375     01E9  29EB               	goto	u20_20
  1376     01EA                     u20_21:
  1377     01EA  29F1               	goto	i1l849
  1378     01EB                     u20_20:
  1379     01EB                     i1l847:
  1380     01EB  087C               	movf	_tries,w
  1381     01EC  047D               	iorwf	_tries+1,w
  1382     01ED  1D03               	btfss	3,2
  1383     01EE  29F0               	goto	u21_21
  1384     01EF  29F1               	goto	u21_20
  1385     01F0                     u21_21:
  1386     01F0  29B6               	goto	i1l837
  1387     01F1                     u21_20:
  1388     01F1                     i1l849:
  1389                           
  1390                           ;newmain.c: 145:     return 1;
  1391     01F1  3001               	movlw	1
  1392     01F2  00F0               	movwf	?_confirm
  1393     01F3  3000               	movlw	0
  1394     01F4  00F1               	movwf	?_confirm+1
  1395     01F5                     i1l76:
  1396     01F5  0008               	return
  1397     01F6                     __end_of_confirm:
  1398     0002                     ___latbits      equ	2
  1399     007E                     btemp           set	126	;btemp
  1400     007E                     wtemp0          set	126
  1401                           
  1402                           	psect	config
  1403                           
  1404                           ;Config register CONFIG1 @ 0x2007
  1405                           ;	Oscillator Selection bits
  1406                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1407                           ;	Watchdog Timer Enable bit
  1408                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1409                           ;	Power-up Timer Enable bit
  1410                           ;	PWRTE = OFF, PWRT disabled
  1411                           ;	RE3/MCLR pin function select bit
  1412                           ;	MCLRE = 0x1, unprogrammed default
  1413                           ;	Code Protection bit
  1414                           ;	CP = OFF, Program memory code protection is disabled
  1415                           ;	Data Code Protection bit
  1416                           ;	CPD = OFF, Data memory code protection is disabled
  1417                           ;	Brown Out Reset Selection bits
  1418                           ;	BOREN = ON, BOR enabled
  1419                           ;	Internal External Switchover bit
  1420                           ;	IESO = 0x1, unprogrammed default
  1421                           ;	Fail-Safe Clock Monitor Enabled bit
  1422                           ;	FCMEN = 0x1, unprogrammed default
  1423                           ;	Low Voltage Programming Enable bit
  1424                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1425                           ;	In-Circuit Debugger Mode bit
  1426                           ;	DEBUG = 0x1, unprogrammed default
  1427     2007                     	org	8199
  1428     2007  2FF1               	dw	12273
  1429                           
  1430                           ;Config register CONFIG2 @ 0x2008
  1431                           ;	Brown-out Reset Selection bit
  1432                           ;	BOR4V = 0x1, unprogrammed default
  1433                           ;	Flash Program Memory Self Write Enable bits
  1434                           ;	WRT = OFF, Write protection off
  1435     2008                     	org	8200
  1436     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        21
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      6      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_confirm

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  7     7      0     228
                                             10 COMMON     2     2      0
                                              0 BANK0      5     5      0
                            _confirm
                          _printFail
                          _printPass
 ---------------------------------------------------------------------------------
 (2) _printPass                                            3     3      0      46
                                              0 COMMON     3     3      0
                             _offLED
 ---------------------------------------------------------------------------------
 (2) _printFail                                            3     3      0      46
                                              0 COMMON     3     3      0
                             _offLED
 ---------------------------------------------------------------------------------
 (3) _offLED                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _confirm                                             10     8      2      68
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _confirm
   _printFail
     _offLED
   _printPass
     _offLED

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      6      35     43.8%
BITBANK0            80      0       0      0.0%
COMMON              14     12      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      49      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 12 16:23:00 2025

                      pc 0002                       fsr 0004                      l861 0171  
                    l853 0166                      l871 0178                      l863 0172  
                    l855 016A                      l881 0187                      l873 017B  
                    l865 0175                      l857 016E                      l891 019B  
                    l883 018B                      l875 017C                      l867 0176  
                    l859 0170                      l893 019F                      l885 018F  
                    l877 017D                      l869 0177                      l895 01A1  
                    l887 0193                      l879 0183                      l897 01A7  
                    l889 0197                      _GIE 005F                      u220 0183  
                    u221 0182                      u230 018B                      u231 018A  
                    u240 0193                      u241 0192                      u250 019B  
                    u251 019A                      u317 01AB                      _ISR 003D  
                    fsr0 0004                      indf 0000                     ?_ISR 0070  
                   ISR@i 007A                     _FAIL 0028                     _INTE 005C  
                   _INTF 0059                     i1l61 010F                     i1l70 010C  
                   i1l63 0165                     i1l82 0221                     i1l66 00AB  
                   i1l76 01F5                     i1l68 00F0                     i1l92 008A  
                   i1l69 00F4                     _PASS 002C                     i1l95 009C  
                   i1l99 009E                     _main 0166                     btemp 007E  
                   start 0012                    ??_ISR 003D                    ?_main 0070  
                  _ANSEL 0188                    i1l801 0136                    i1l803 0143  
                  i1l821 00D2                    i1l805 0153                    i1l901 0041  
                  i1l831 00FA                    i1l823 00DF                    i1l815 00AF  
                  i1l807 0160                    i1l911 004F                    i1l903 0042  
                  i1l833 0107                    i1l825 00E5                    i1l817 00B8  
                  i1l809 00A9                    i1l921 007A                    i1l913 005A  
                  i1l905 004D                    i1l843 01D8                    i1l835 01B3  
                  i1l827 00E8                    i1l819 00C5                    i1l923 007F  
                  i1l915 0060                    i1l837 01B6                    i1l845 01DE  
                  i1l925 0084                    i1l917 006D                    i1l847 01EB  
                  i1l839 01D5                    i1l927 0090                    i1l919 0075  
                  i1l849 01F1                    i1l929 0096                    i1l787 021C  
                  i1l795 0113                    i1l797 011C                    i1l789 010D  
                  i1l799 0129                    i1l899 003D                    u20_20 01EB  
                  u20_21 01EA                    u20_25 01E7                    u21_20 01F1  
                  u21_21 01F0                    u30_20 0096                    u30_21 0095  
                  u16_20 0160                    u16_21 015F                    u16_25 015C  
                  u40_27 00DA                    u32_27 0117                    u17_20 00E5  
                  u17_21 00E4                    u41_27 00EA                    u33_27 0124  
                  u18_20 0107                    u26_20 0041                    u18_21 0106  
                  u26_21 0040                    u18_25 0103                    u34_27 0131  
                  u19_20 01D5                    u27_20 006D                    u19_21 01D4  
                  u27_21 006C                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u19_25 01D1                    u27_25 0069  
                  u35_27 013E                    u28_20 0075                    u28_21 0074  
                  u36_27 0148                    u29_20 0090                    u29_21 008F  
                  u37_27 00B3                    u38_27 00C0                    u39_27 00CD  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_confirm 01F6                    _tries 007C                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
           __end_of_main 01B3                   ??_main 0042                   _ANSELH 0189  
                 _INTEDG 040E                   _digits 0030                   _offLED 021C  
              ??_confirm 0072             __pdataCOMMON 007C                   saved_w 007E  
__end_of__initialization 0039           __pcstackCOMMON 0070             __pidataBANK0 01F6  
             __pbssBANK0 0033               __pmaintext 0166               __pintentry 0004  
                ?_offLED 0070                  __ptext1 003D                  __ptext2 010D  
                __ptext3 00A9                  __ptext4 021C                  __ptext5 01B3  
                _confirm 01B3                  _correct 003B     end_of_initialization 0039  
      __end_of_printFail 010D        __end_of_printPass 0166                _PORTBbits 0006  
          __pidataCOMMON 0222           __end_of_offLED 0222      start_initialization 0015  
            __end_of_ISR 00A9               init_fetch0 0209                 ??_offLED 0070  
            __pdataBANK0 0020                ___latbits 0002            __pcstackBANK0 003D  
               ?_confirm 0070        interrupt_function 0004                _printFail 00A9  
              _printPass 010D               printFail@i 0071               printPass@i 0071  
              _userInput 0033               ?_printFail 0070               ?_printPass 0070  
               _password 0020                 confirm@i 0078                 init_ram0 020D  
               intlevel1 0000              ??_printFail 0070              ??_printPass 0070  
             _OPTION_REG 0081  
