

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Jun 11 23:56:00 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,space=0,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 26/03/2025 GMT
    22                           ; 
    23                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0004                     fsr             equ	4
    56     0004                     fsr0            equ	4
    57     0000                     indf            equ	0
    58     0000                     indf0           equ	0
    59     0002                     pc              equ	2
    60     0002                     pcl             equ	2
    61     000A                     pclath          equ	10
    62     0003                     status          equ	3
    63     0000                     INDF            equ	0	;# 
    64     0001                     TMR0            equ	1	;# 
    65     0002                     PCL             equ	2	;# 
    66     0003                     STATUS          equ	3	;# 
    67     0004                     FSR             equ	4	;# 
    68     0005                     PORTA           equ	5	;# 
    69     0006                     PORTB           equ	6	;# 
    70     0007                     PORTC           equ	7	;# 
    71     0008                     PORTD           equ	8	;# 
    72     0009                     PORTE           equ	9	;# 
    73     000A                     PCLATH          equ	10	;# 
    74     000B                     INTCON          equ	11	;# 
    75     000C                     PIR1            equ	12	;# 
    76     000D                     PIR2            equ	13	;# 
    77     000E                     TMR1            equ	14	;# 
    78     000E                     TMR1L           equ	14	;# 
    79     000F                     TMR1H           equ	15	;# 
    80     0010                     T1CON           equ	16	;# 
    81     0011                     TMR2            equ	17	;# 
    82     0012                     T2CON           equ	18	;# 
    83     0013                     SSPBUF          equ	19	;# 
    84     0014                     SSPCON          equ	20	;# 
    85     0015                     CCPR1           equ	21	;# 
    86     0015                     CCPR1L          equ	21	;# 
    87     0016                     CCPR1H          equ	22	;# 
    88     0017                     CCP1CON         equ	23	;# 
    89     0018                     RCSTA           equ	24	;# 
    90     0019                     TXREG           equ	25	;# 
    91     001A                     RCREG           equ	26	;# 
    92     001B                     CCPR2           equ	27	;# 
    93     001B                     CCPR2L          equ	27	;# 
    94     001C                     CCPR2H          equ	28	;# 
    95     001D                     CCP2CON         equ	29	;# 
    96     001E                     ADRESH          equ	30	;# 
    97     001F                     ADCON0          equ	31	;# 
    98     0081                     OPTION_REG      equ	129	;# 
    99     0085                     TRISA           equ	133	;# 
   100     0086                     TRISB           equ	134	;# 
   101     0087                     TRISC           equ	135	;# 
   102     0088                     TRISD           equ	136	;# 
   103     0089                     TRISE           equ	137	;# 
   104     008C                     PIE1            equ	140	;# 
   105     008D                     PIE2            equ	141	;# 
   106     008E                     PCON            equ	142	;# 
   107     008F                     OSCCON          equ	143	;# 
   108     0090                     OSCTUNE         equ	144	;# 
   109     0091                     SSPCON2         equ	145	;# 
   110     0092                     PR2             equ	146	;# 
   111     0093                     SSPADD          equ	147	;# 
   112     0093                     SSPMSK          equ	147	;# 
   113     0093                     MSK             equ	147	;# 
   114     0094                     SSPSTAT         equ	148	;# 
   115     0095                     WPUB            equ	149	;# 
   116     0096                     IOCB            equ	150	;# 
   117     0097                     VRCON           equ	151	;# 
   118     0098                     TXSTA           equ	152	;# 
   119     0099                     SPBRG           equ	153	;# 
   120     009A                     SPBRGH          equ	154	;# 
   121     009B                     PWM1CON         equ	155	;# 
   122     009C                     ECCPAS          equ	156	;# 
   123     009D                     PSTRCON         equ	157	;# 
   124     009E                     ADRESL          equ	158	;# 
   125     009F                     ADCON1          equ	159	;# 
   126     0105                     WDTCON          equ	261	;# 
   127     0107                     CM1CON0         equ	263	;# 
   128     0108                     CM2CON0         equ	264	;# 
   129     0109                     CM2CON1         equ	265	;# 
   130     010C                     EEDATA          equ	268	;# 
   131     010C                     EEDAT           equ	268	;# 
   132     010D                     EEADR           equ	269	;# 
   133     010E                     EEDATH          equ	270	;# 
   134     010F                     EEADRH          equ	271	;# 
   135     0185                     SRCON           equ	389	;# 
   136     0187                     BAUDCTL         equ	391	;# 
   137     0188                     ANSEL           equ	392	;# 
   138     0189                     ANSELH          equ	393	;# 
   139     018C                     EECON1          equ	396	;# 
   140     018D                     EECON2          equ	397	;# 
   141     0000                     INDF            equ	0	;# 
   142     0001                     TMR0            equ	1	;# 
   143     0002                     PCL             equ	2	;# 
   144     0003                     STATUS          equ	3	;# 
   145     0004                     FSR             equ	4	;# 
   146     0005                     PORTA           equ	5	;# 
   147     0006                     PORTB           equ	6	;# 
   148     0007                     PORTC           equ	7	;# 
   149     0008                     PORTD           equ	8	;# 
   150     0009                     PORTE           equ	9	;# 
   151     000A                     PCLATH          equ	10	;# 
   152     000B                     INTCON          equ	11	;# 
   153     000C                     PIR1            equ	12	;# 
   154     000D                     PIR2            equ	13	;# 
   155     000E                     TMR1            equ	14	;# 
   156     000E                     TMR1L           equ	14	;# 
   157     000F                     TMR1H           equ	15	;# 
   158     0010                     T1CON           equ	16	;# 
   159     0011                     TMR2            equ	17	;# 
   160     0012                     T2CON           equ	18	;# 
   161     0013                     SSPBUF          equ	19	;# 
   162     0014                     SSPCON          equ	20	;# 
   163     0015                     CCPR1           equ	21	;# 
   164     0015                     CCPR1L          equ	21	;# 
   165     0016                     CCPR1H          equ	22	;# 
   166     0017                     CCP1CON         equ	23	;# 
   167     0018                     RCSTA           equ	24	;# 
   168     0019                     TXREG           equ	25	;# 
   169     001A                     RCREG           equ	26	;# 
   170     001B                     CCPR2           equ	27	;# 
   171     001B                     CCPR2L          equ	27	;# 
   172     001C                     CCPR2H          equ	28	;# 
   173     001D                     CCP2CON         equ	29	;# 
   174     001E                     ADRESH          equ	30	;# 
   175     001F                     ADCON0          equ	31	;# 
   176     0081                     OPTION_REG      equ	129	;# 
   177     0085                     TRISA           equ	133	;# 
   178     0086                     TRISB           equ	134	;# 
   179     0087                     TRISC           equ	135	;# 
   180     0088                     TRISD           equ	136	;# 
   181     0089                     TRISE           equ	137	;# 
   182     008C                     PIE1            equ	140	;# 
   183     008D                     PIE2            equ	141	;# 
   184     008E                     PCON            equ	142	;# 
   185     008F                     OSCCON          equ	143	;# 
   186     0090                     OSCTUNE         equ	144	;# 
   187     0091                     SSPCON2         equ	145	;# 
   188     0092                     PR2             equ	146	;# 
   189     0093                     SSPADD          equ	147	;# 
   190     0093                     SSPMSK          equ	147	;# 
   191     0093                     MSK             equ	147	;# 
   192     0094                     SSPSTAT         equ	148	;# 
   193     0095                     WPUB            equ	149	;# 
   194     0096                     IOCB            equ	150	;# 
   195     0097                     VRCON           equ	151	;# 
   196     0098                     TXSTA           equ	152	;# 
   197     0099                     SPBRG           equ	153	;# 
   198     009A                     SPBRGH          equ	154	;# 
   199     009B                     PWM1CON         equ	155	;# 
   200     009C                     ECCPAS          equ	156	;# 
   201     009D                     PSTRCON         equ	157	;# 
   202     009E                     ADRESL          equ	158	;# 
   203     009F                     ADCON1          equ	159	;# 
   204     0105                     WDTCON          equ	261	;# 
   205     0107                     CM1CON0         equ	263	;# 
   206     0108                     CM2CON0         equ	264	;# 
   207     0109                     CM2CON1         equ	265	;# 
   208     010C                     EEDATA          equ	268	;# 
   209     010C                     EEDAT           equ	268	;# 
   210     010D                     EEADR           equ	269	;# 
   211     010E                     EEDATH          equ	270	;# 
   212     010F                     EEADRH          equ	271	;# 
   213     0185                     SRCON           equ	389	;# 
   214     0187                     BAUDCTL         equ	391	;# 
   215     0188                     ANSEL           equ	392	;# 
   216     0189                     ANSELH          equ	393	;# 
   217     018C                     EECON1          equ	396	;# 
   218     018D                     EECON2          equ	397	;# 
   219                           
   220                           	psect	idataBANK0
   221     024E                     __pidataBANK0:
   222                           
   223                           ;initializer for _password
   224     024E  3401               	retlw	1
   225     024F  3400               	retlw	0
   226     0250  3400               	retlw	0
   227     0251  3400               	retlw	0
   228     0252  3400               	retlw	0
   229     0253  3400               	retlw	0
   230     0254  3400               	retlw	0
   231     0255  3400               	retlw	0
   232                           
   233                           ;initializer for _FAIL
   234     0256  3471               	retlw	113
   235     0257  3477               	retlw	119
   236     0258  3430               	retlw	48
   237     0259  3438               	retlw	56
   238                           
   239                           ;initializer for _PASS
   240     025A  3473               	retlw	115
   241     025B  3477               	retlw	119
   242     025C  346D               	retlw	109
   243     025D  346D               	retlw	109
   244                           
   245                           ;initializer for _digits
   246     025E  3406               	retlw	6
   247     025F  345B               	retlw	91
   248     0260  344F               	retlw	79
   249                           
   250                           ;initializer for _prev_RB4
   251     0261  3401               	retlw	1
   252                           
   253                           ;initializer for _prev_RB3
   254     0262  3401               	retlw	1
   255                           
   256                           ;initializer for _prev_RB2
   257     0263  3401               	retlw	1
   258                           
   259                           ;initializer for _prev_RB1
   260     0264  3401               	retlw	1
   261                           
   262                           ;initializer for _tries
   263     0265  3403               	retlw	3
   264     0006                     _PORTB          set	6
   265     0008                     _PORTD          set	8
   266     0007                     _PORTC          set	7
   267     0006                     _PORTBbits      set	6
   268     005C                     _INTE           set	92
   269     005F                     _GIE            set	95
   270     0059                     _INTF           set	89
   271     0088                     _TRISD          set	136
   272     0087                     _TRISC          set	135
   273     0086                     _TRISB          set	134
   274     0081                     _OPTION_REG     set	129
   275     040E                     _INTEDG         set	1038
   276     0189                     _ANSELH         set	393
   277     0188                     _ANSEL          set	392
   278                           
   279                           	psect	cinit
   280     0015                     start_initialization:	
   281                           ; #config settings
   282                           
   283     0015                     __initialization:
   284                           
   285                           ; Initialize objects allocated to BANK0
   286     0015  1383               	bcf	3,7	;select IRP bank0
   287     0016  3038               	movlw	low (__pdataBANK0+24)
   288     0017  00FD               	movwf	btemp+-1
   289     0018  3002               	movlw	high __pidataBANK0
   290     0019  00FE               	movwf	btemp
   291     001A  304E               	movlw	low __pidataBANK0
   292     001B  00FF               	movwf	btemp+1
   293     001C  3020               	movlw	low __pdataBANK0
   294     001D  0084               	movwf	4
   295     001E  120A  118A  226A  120A  118A  	fcall	init_ram0
   296                           
   297                           ; Clear objects allocated to BANK0
   298     0023  01B8               	clrf	__pbssBANK0& (0+127)
   299     0024  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   300     0025  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   301     0026  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   302     0027  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   303     0028  01BD               	clrf	(__pbssBANK0+5)& (0+127)
   304     0029  01BE               	clrf	(__pbssBANK0+6)& (0+127)
   305     002A  01BF               	clrf	(__pbssBANK0+7)& (0+127)
   306     002B                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309     002B                     __end_of__initialization:
   310     002B  0183               	clrf	3
   311     002C  120A  118A  282F   	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bssBANK0
   314     0038                     __pbssBANK0:
   315     0038                     _userInput:
   316     0038                     	ds	8
   317                           
   318                           	psect	dataBANK0
   319     0020                     __pdataBANK0:
   320     0020                     _password:
   321     0020                     	ds	8
   322     0028                     _FAIL:
   323     0028                     	ds	4
   324     002C                     _PASS:
   325     002C                     	ds	4
   326     0030                     _digits:
   327     0030                     	ds	3
   328     0033                     _prev_RB4:
   329     0033                     	ds	1
   330     0034                     _prev_RB3:
   331     0034                     	ds	1
   332     0035                     _prev_RB2:
   333     0035                     	ds	1
   334     0036                     _prev_RB1:
   335     0036                     	ds	1
   336     0037                     _tries:
   337     0037                     	ds	1
   338                           
   339                           	psect	inittext
   340     0266                     init_fetch0:	
   341                           ;	Called with low address in FSR and high address in W
   342                           
   343     0266  087E               	movf	btemp,w
   344     0267  008A               	movwf	10
   345     0268  087F               	movf	btemp+1,w
   346     0269  0082               	movwf	2
   347     026A                     init_ram0:	
   348                           ;Called with:
   349                           ;	high address of idata address in btemp 
   350                           ;	low address of idata address in btemp+1 
   351                           ;	low address of data in FSR
   352                           ;	high address + 1 of data in btemp-1
   353                           
   354     026A  120A  118A  2266  120A  118A  	fcall	init_fetch0
   355     026F  0080               	movwf	0
   356     0270  0A84               	incf	4,f
   357     0271  0804               	movf	4,w
   358     0272  067D               	xorwf	btemp+-1,w
   359     0273  1903               	btfsc	3,2
   360     0274  3400               	retlw	0
   361     0275  0AFF               	incf	btemp+1,f
   362     0276  1903               	btfsc	3,2
   363     0277  0AFE               	incf	btemp,f
   364     0278  2A6A               	goto	init_ram0
   365                           
   366                           	psect	cstackCOMMON
   367     0070                     __pcstackCOMMON:
   368     0070                     ?_clearLEDs:
   369     0070                     ?_printPass:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ?_printFail:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     ?_confirm:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     ?_ISR:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     ?_main:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0070                     ??_clearLEDs:	
   385                           ; 1 bytes @ 0x0
   386                           
   387     0070                     ??_printPass:	
   388                           ; 1 bytes @ 0x0
   389                           
   390     0070                     ??_printFail:	
   391                           ; 1 bytes @ 0x0
   392                           
   393                           
   394                           ; 1 bytes @ 0x0
   395     0070                     	ds	1
   396     0071                     printPass@i:
   397     0071                     printFail@i:	
   398                           ; 2 bytes @ 0x1
   399                           
   400                           
   401                           ; 2 bytes @ 0x1
   402     0071                     	ds	2
   403     0073                     ??_confirm:
   404                           
   405                           ; 1 bytes @ 0x3
   406     0073                     	ds	6
   407     0079                     confirm@correcto:
   408                           
   409                           ; 1 bytes @ 0x9
   410     0079                     	ds	1
   411     007A                     confirm@i_91:
   412                           
   413                           ; 2 bytes @ 0xA
   414     007A                     	ds	2
   415     007C                     confirm@i:
   416                           
   417                           ; 2 bytes @ 0xC
   418     007C                     	ds	2
   419                           
   420                           	psect	cstackBANK0
   421     0040                     __pcstackBANK0:
   422     0040                     ??_ISR:
   423                           
   424                           ; 1 bytes @ 0x0
   425     0040                     	ds	4
   426     0044                     ??_main:
   427                           
   428                           ; 1 bytes @ 0x4
   429     0044                     	ds	1
   430     0045                     main@i:
   431                           
   432                           ; 2 bytes @ 0x5
   433     0045                     	ds	2
   434     0047                     main@pos:
   435                           
   436                           ; 1 bytes @ 0x7
   437     0047                     	ds	1
   438                           
   439                           	psect	maintext
   440     002F                     __pmaintext:	
   441 ;;
   442 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   443 ;;
   444 ;; *************** function _main *****************
   445 ;; Defined at:
   446 ;;		line 121 in file "newmain.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  i               2    5[BANK0 ] int 
   451 ;;  pos             1    7[BANK0 ] unsigned char 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      void 
   454 ;; Registers used:
   455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   456 ;; Tracked objects:
   457 ;;		On entry : B00/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   461 ;;      Params:         0       0       0       0       0
   462 ;;      Locals:         0       3       0       0       0
   463 ;;      Temps:          0       1       0       0       0
   464 ;;      Totals:         0       4       0       0       0
   465 ;;Total ram usage:        4 bytes
   466 ;; Hardware stack levels required when called: 4
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		Startup code after reset
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474     002F                     _main:	
   475                           ;psect for function _main
   476                           
   477     002F                     l946:	
   478                           ;incstack = 0
   479                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   480                           
   481                           
   482                           ;newmain.c: 122:     ANSEL = 0;
   483     002F  1683               	bsf	3,5	;RP0=1, select bank3
   484     0030  1703               	bsf	3,6	;RP1=1, select bank3
   485     0031  0188               	clrf	8	;volatile
   486                           
   487                           ;newmain.c: 123:     ANSELH = 0;
   488     0032  0189               	clrf	9	;volatile
   489     0033                     l948:
   490                           
   491                           ;newmain.c: 124:     OPTION_REG &= 0b01111111;
   492     0033  307F               	movlw	127
   493     0034  1683               	bsf	3,5	;RP0=1, select bank1
   494     0035  1303               	bcf	3,6	;RP1=0, select bank1
   495     0036  0581               	andwf	1,f	;volatile
   496     0037                     l950:
   497                           
   498                           ;newmain.c: 126:     TRISB = 0b00011111;
   499     0037  301F               	movlw	31
   500     0038  0086               	movwf	6	;volatile
   501     0039                     l952:
   502                           
   503                           ;newmain.c: 127:     TRISC = 0x00;
   504     0039  0187               	clrf	7	;volatile
   505     003A                     l954:
   506                           
   507                           ;newmain.c: 128:     TRISD = 0x00;
   508     003A  0188               	clrf	8	;volatile
   509     003B                     l956:
   510                           
   511                           ;newmain.c: 130:     PORTB = 0;
   512     003B  1283               	bcf	3,5	;RP0=0, select bank0
   513     003C  1303               	bcf	3,6	;RP1=0, select bank0
   514     003D  0186               	clrf	6	;volatile
   515     003E                     l958:
   516                           
   517                           ;newmain.c: 131:     PORTC = 0;
   518     003E  0187               	clrf	7	;volatile
   519     003F                     l960:
   520                           
   521                           ;newmain.c: 132:     PORTD = 0;
   522     003F  0188               	clrf	8	;volatile
   523     0040                     l962:
   524                           
   525                           ;newmain.c: 134:     INTEDG = 0;
   526     0040  1683               	bsf	3,5	;RP0=1, select bank1
   527     0041  1303               	bcf	3,6	;RP1=0, select bank1
   528     0042  1301               	bcf	1,6	;volatile
   529     0043                     l964:
   530                           
   531                           ;newmain.c: 135:     INTE = 1;
   532     0043  160B               	bsf	11,4	;volatile
   533     0044                     l966:
   534                           
   535                           ;newmain.c: 136:     GIE = 1;
   536     0044  178B               	bsf	11,7	;volatile
   537     0045                     l968:
   538                           
   539                           ;newmain.c: 138:     unsigned char pos = 0;
   540     0045  1283               	bcf	3,5	;RP0=0, select bank0
   541     0046  1303               	bcf	3,6	;RP1=0, select bank0
   542     0047  01C7               	clrf	main@pos
   543     0048                     l970:
   544                           
   545                           ;newmain.c: 142:         if (!PORTBbits.RB1 && prev_RB1 && pos < 4) {
   546     0048  1283               	bcf	3,5	;RP0=0, select bank0
   547     0049  1303               	bcf	3,6	;RP1=0, select bank0
   548     004A  1886               	btfsc	6,1	;volatile
   549     004B  284D               	goto	u381
   550     004C  284E               	goto	u380
   551     004D                     u381:
   552     004D  2867               	goto	l982
   553     004E                     u380:
   554     004E                     l972:
   555     004E  0836               	movf	_prev_RB1,w
   556     004F  1903               	btfsc	3,2
   557     0050  2852               	goto	u391
   558     0051  2853               	goto	u390
   559     0052                     u391:
   560     0052  2867               	goto	l982
   561     0053                     u390:
   562     0053                     l974:
   563     0053  3004               	movlw	4
   564     0054  0247               	subwf	main@pos,w
   565     0055  1803               	skipnc
   566     0056  2858               	goto	u401
   567     0057  2859               	goto	u400
   568     0058                     u401:
   569     0058  2867               	goto	l982
   570     0059                     u400:
   571     0059                     l976:
   572                           
   573                           ;newmain.c: 143:             userInput[pos++] = 1;
   574     0059  0847               	movf	main@pos,w
   575     005A  00C4               	movwf	??_main
   576     005B  0744               	addwf	??_main,w
   577     005C  3E38               	addlw	(low (_userInput| 0))& (0+255)
   578     005D  0084               	movwf	4
   579     005E  3001               	movlw	1
   580     005F  1383               	bcf	3,7	;select IRP bank0
   581     0060  0080               	movwf	0
   582     0061  0A84               	incf	4,f
   583     0062  3000               	movlw	0
   584     0063  0080               	movwf	0
   585     0064                     l978:
   586     0064  3001               	movlw	1
   587     0065  07C7               	addwf	main@pos,f
   588     0066                     l980:
   589                           
   590                           ;newmain.c: 144:             prev_RB1 = 0;
   591     0066  01B6               	clrf	_prev_RB1
   592     0067                     l982:
   593                           
   594                           ;newmain.c: 146:         if (PORTBbits.RB1) prev_RB1 = 1;
   595     0067  1C86               	btfss	6,1	;volatile
   596     0068  286A               	goto	u411
   597     0069  286B               	goto	u410
   598     006A                     u411:
   599     006A  286D               	goto	l95
   600     006B                     u410:
   601     006B                     l984:
   602     006B  3001               	movlw	1
   603     006C  00B6               	movwf	_prev_RB1
   604     006D                     l95:
   605                           
   606                           ;newmain.c: 148:         if (!PORTBbits.RB2 && prev_RB2 && pos < 4) {
   607     006D  1906               	btfsc	6,2	;volatile
   608     006E  2870               	goto	u421
   609     006F  2871               	goto	u420
   610     0070                     u421:
   611     0070  2888               	goto	l996
   612     0071                     u420:
   613     0071                     l986:
   614     0071  0835               	movf	_prev_RB2,w
   615     0072  1903               	btfsc	3,2
   616     0073  2875               	goto	u431
   617     0074  2876               	goto	u430
   618     0075                     u431:
   619     0075  2888               	goto	l996
   620     0076                     u430:
   621     0076                     l988:
   622     0076  3004               	movlw	4
   623     0077  0247               	subwf	main@pos,w
   624     0078  1803               	skipnc
   625     0079  287B               	goto	u441
   626     007A  287C               	goto	u440
   627     007B                     u441:
   628     007B  2888               	goto	l996
   629     007C                     u440:
   630     007C                     l990:
   631                           
   632                           ;newmain.c: 149:             userInput[pos++] = 0;
   633     007C  0847               	movf	main@pos,w
   634     007D  00C4               	movwf	??_main
   635     007E  0744               	addwf	??_main,w
   636     007F  3E38               	addlw	(low (_userInput| 0))& (0+255)
   637     0080  0084               	movwf	4
   638     0081  1383               	bcf	3,7	;select IRP bank0
   639     0082  0180               	clrf	0
   640     0083  0A84               	incf	4,f
   641     0084  0180               	clrf	0
   642     0085                     l992:
   643     0085  3001               	movlw	1
   644     0086  07C7               	addwf	main@pos,f
   645     0087                     l994:
   646                           
   647                           ;newmain.c: 150:             prev_RB2 = 0;
   648     0087  01B5               	clrf	_prev_RB2
   649     0088                     l996:
   650                           
   651                           ;newmain.c: 152:         if (PORTBbits.RB2) prev_RB2 = 1;
   652     0088  1D06               	btfss	6,2	;volatile
   653     0089  288B               	goto	u451
   654     008A  288C               	goto	u450
   655     008B                     u451:
   656     008B  288E               	goto	l97
   657     008C                     u450:
   658     008C                     l998:
   659     008C  3001               	movlw	1
   660     008D  00B5               	movwf	_prev_RB2
   661     008E                     l97:
   662                           
   663                           ;newmain.c: 154:         if (!PORTBbits.RB3 && prev_RB3 && pos < 4) {
   664     008E  1986               	btfsc	6,3	;volatile
   665     008F  2891               	goto	u461
   666     0090  2892               	goto	u460
   667     0091                     u461:
   668     0091  28AB               	goto	l1010
   669     0092                     u460:
   670     0092                     l1000:
   671     0092  0834               	movf	_prev_RB3,w
   672     0093  1903               	btfsc	3,2
   673     0094  2896               	goto	u471
   674     0095  2897               	goto	u470
   675     0096                     u471:
   676     0096  28AB               	goto	l1010
   677     0097                     u470:
   678     0097                     l1002:
   679     0097  3004               	movlw	4
   680     0098  0247               	subwf	main@pos,w
   681     0099  1803               	skipnc
   682     009A  289C               	goto	u481
   683     009B  289D               	goto	u480
   684     009C                     u481:
   685     009C  28AB               	goto	l1010
   686     009D                     u480:
   687     009D                     l1004:
   688                           
   689                           ;newmain.c: 155:             userInput[pos++] = 1;
   690     009D  0847               	movf	main@pos,w
   691     009E  00C4               	movwf	??_main
   692     009F  0744               	addwf	??_main,w
   693     00A0  3E38               	addlw	(low (_userInput| 0))& (0+255)
   694     00A1  0084               	movwf	4
   695     00A2  3001               	movlw	1
   696     00A3  1383               	bcf	3,7	;select IRP bank0
   697     00A4  0080               	movwf	0
   698     00A5  0A84               	incf	4,f
   699     00A6  3000               	movlw	0
   700     00A7  0080               	movwf	0
   701     00A8                     l1006:
   702     00A8  3001               	movlw	1
   703     00A9  07C7               	addwf	main@pos,f
   704     00AA                     l1008:
   705                           
   706                           ;newmain.c: 156:             prev_RB3 = 0;
   707     00AA  01B4               	clrf	_prev_RB3
   708     00AB                     l1010:
   709                           
   710                           ;newmain.c: 158:         if (PORTBbits.RB3) prev_RB3 = 1;
   711     00AB  1D86               	btfss	6,3	;volatile
   712     00AC  28AE               	goto	u491
   713     00AD  28AF               	goto	u490
   714     00AE                     u491:
   715     00AE  28B1               	goto	l99
   716     00AF                     u490:
   717     00AF                     l1012:
   718     00AF  3001               	movlw	1
   719     00B0  00B4               	movwf	_prev_RB3
   720     00B1                     l99:
   721                           
   722                           ;newmain.c: 160:         if (!PORTBbits.RB4 && prev_RB4 && pos < 4) {
   723     00B1  1A06               	btfsc	6,4	;volatile
   724     00B2  28B4               	goto	u501
   725     00B3  28B5               	goto	u500
   726     00B4                     u501:
   727     00B4  28CC               	goto	l1024
   728     00B5                     u500:
   729     00B5                     l1014:
   730     00B5  0833               	movf	_prev_RB4,w
   731     00B6  1903               	btfsc	3,2
   732     00B7  28B9               	goto	u511
   733     00B8  28BA               	goto	u510
   734     00B9                     u511:
   735     00B9  28CC               	goto	l1024
   736     00BA                     u510:
   737     00BA                     l1016:
   738     00BA  3004               	movlw	4
   739     00BB  0247               	subwf	main@pos,w
   740     00BC  1803               	skipnc
   741     00BD  28BF               	goto	u521
   742     00BE  28C0               	goto	u520
   743     00BF                     u521:
   744     00BF  28CC               	goto	l1024
   745     00C0                     u520:
   746     00C0                     l1018:
   747                           
   748                           ;newmain.c: 161:             userInput[pos++] = 0;
   749     00C0  0847               	movf	main@pos,w
   750     00C1  00C4               	movwf	??_main
   751     00C2  0744               	addwf	??_main,w
   752     00C3  3E38               	addlw	(low (_userInput| 0))& (0+255)
   753     00C4  0084               	movwf	4
   754     00C5  1383               	bcf	3,7	;select IRP bank0
   755     00C6  0180               	clrf	0
   756     00C7  0A84               	incf	4,f
   757     00C8  0180               	clrf	0
   758     00C9                     l1020:
   759     00C9  3001               	movlw	1
   760     00CA  07C7               	addwf	main@pos,f
   761     00CB                     l1022:
   762                           
   763                           ;newmain.c: 162:             prev_RB4 = 0;
   764     00CB  01B3               	clrf	_prev_RB4
   765     00CC                     l1024:
   766                           
   767                           ;newmain.c: 164:         if (PORTBbits.RB4) prev_RB4 = 1;
   768     00CC  1E06               	btfss	6,4	;volatile
   769     00CD  28CF               	goto	u531
   770     00CE  28D0               	goto	u530
   771     00CF                     u531:
   772     00CF  28D2               	goto	l1028
   773     00D0                     u530:
   774     00D0                     l1026:
   775     00D0  3001               	movlw	1
   776     00D1  00B3               	movwf	_prev_RB4
   777     00D2                     l1028:
   778                           
   779                           ;newmain.c: 167:         for (int i = 0; i < 20; i++) {
   780     00D2  01C5               	clrf	main@i
   781     00D3  01C6               	clrf	main@i+1
   782     00D4                     l102:
   783                           
   784                           ;newmain.c: 168:             PORTC = 0b11111110;
   785     00D4  30FE               	movlw	254
   786     00D5  1283               	bcf	3,5	;RP0=0, select bank0
   787     00D6  1303               	bcf	3,6	;RP1=0, select bank0
   788     00D7  0087               	movwf	7	;volatile
   789     00D8                     l1034:
   790                           
   791                           ;newmain.c: 169:             PORTD = digits[tries - 1];
   792     00D8  0837               	movf	_tries,w
   793     00D9  3E2F               	addlw	(low ((_digits| 0+-1)))& (0+255)
   794     00DA  0084               	movwf	4
   795     00DB  1383               	bcf	3,7	;select IRP bank0
   796     00DC  0800               	movf	0,w
   797     00DD  0088               	movwf	8	;volatile
   798     00DE                     l1036:
   799                           
   800                           ;newmain.c: 170:             _delay((unsigned long)((1)*(4000000/4000.0)));
   801     00DE  30C7               	movlw	199
   802     00DF  1283               	bcf	3,5	;RP0=0, select bank0
   803     00E0  1303               	bcf	3,6	;RP1=0, select bank0
   804     00E1  00C4               	movwf	??_main
   805     00E2                     u557:
   806     00E2  28E3               	nop2
   807     00E3  0BC4               	decfsz	??_main,f
   808     00E4  28E2               	goto	u557
   809     00E5  28E6               	nop2
   810     00E6                     l1038:
   811                           
   812                           ;newmain.c: 171:         }
   813     00E6  3001               	movlw	1
   814     00E7  1283               	bcf	3,5	;RP0=0, select bank0
   815     00E8  1303               	bcf	3,6	;RP1=0, select bank0
   816     00E9  07C5               	addwf	main@i,f
   817     00EA  1803               	skipnc
   818     00EB  0AC6               	incf	main@i+1,f
   819     00EC  3000               	movlw	0
   820     00ED  07C6               	addwf	main@i+1,f
   821     00EE                     l1040:
   822     00EE  0846               	movf	main@i+1,w
   823     00EF  3A80               	xorlw	128
   824     00F0  00FF               	movwf	btemp+1
   825     00F1  3080               	movlw	128
   826     00F2  027F               	subwf	btemp+1,w
   827     00F3  1D03               	skipz
   828     00F4  28F7               	goto	u545
   829     00F5  3014               	movlw	20
   830     00F6  0245               	subwf	main@i,w
   831     00F7                     u545:
   832     00F7  1C03               	skipc
   833     00F8  28FA               	goto	u541
   834     00F9  28FB               	goto	u540
   835     00FA                     u541:
   836     00FA  28D4               	goto	l102
   837     00FB                     u540:
   838     00FB  2848               	goto	l970
   839     00FC  120A  118A  2812   	ljmp	start
   840     00FF                     __end_of_main:
   841                           
   842                           	psect	text1
   843     0235                     __ptext1:	
   844 ;; *************** function _ISR *****************
   845 ;; Defined at:
   846 ;;		line 108 in file "newmain.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   860 ;;      Params:         0       0       0       0       0
   861 ;;      Locals:         0       0       0       0       0
   862 ;;      Temps:          0       4       0       0       0
   863 ;;      Totals:         0       4       0       0       0
   864 ;;Total ram usage:        4 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 3
   867 ;; This function calls:
   868 ;;		_confirm
   869 ;; This function is called by:
   870 ;;		Interrupt level 1
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874     0235                     _ISR:	
   875                           ;psect for function _ISR
   876                           
   877     0235                     i1l936:
   878                           
   879                           ;newmain.c: 109:     if (INTF) {
   880     0235  1C8B               	btfss	11,1	;volatile
   881     0236  2A38               	goto	u37_21
   882     0237  2A39               	goto	u37_20
   883     0238                     u37_21:
   884     0238  2A41               	goto	i1l88
   885     0239                     u37_20:
   886     0239                     i1l938:
   887                           
   888                           ;newmain.c: 110:         GIE = 0;
   889     0239  138B               	bcf	11,7	;volatile
   890     023A                     i1l940:
   891                           
   892                           ;newmain.c: 111:         confirm();
   893     023A  120A  118A  20FF  120A  118A  	fcall	_confirm
   894     023F                     i1l942:
   895                           
   896                           ;newmain.c: 112:         INTF = 0;
   897     023F  108B               	bcf	11,1	;volatile
   898     0240                     i1l944:
   899                           
   900                           ;newmain.c: 113:         GIE = 1;
   901     0240  178B               	bsf	11,7	;volatile
   902     0241                     i1l88:
   903     0241  1283               	bcf	3,5	;RP0=0, select bank0
   904     0242  1303               	bcf	3,6	;RP1=0, select bank0
   905     0243  0843               	movf	??_ISR+3,w
   906     0244  00FF               	movwf	btemp+1
   907     0245  0842               	movf	??_ISR+2,w
   908     0246  008A               	movwf	10
   909     0247  0841               	movf	??_ISR+1,w
   910     0248  0084               	movwf	4
   911     0249  0E40               	swapf	??_ISR,w
   912     024A  0083               	movwf	3
   913     024B  0EFE               	swapf	btemp,f
   914     024C  0E7E               	swapf	btemp,w
   915     024D  0009               	retfie
   916     024E                     __end_of_ISR:
   917                           
   918                           	psect	intentry
   919     0004                     __pintentry:	
   920                           ;incstack = 0
   921                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   922                           
   923     0004                     interrupt_function:
   924     007E                     saved_w         set	btemp
   925     0004  00FE               	movwf	btemp
   926     0005  0E03               	swapf	3,w
   927     0006  1283               	bcf	3,5	;RP0=0, select bank0
   928     0007  1303               	bcf	3,6	;RP1=0, select bank0
   929     0008  00C0               	movwf	??_ISR
   930     0009  0804               	movf	4,w
   931     000A  00C1               	movwf	??_ISR+1
   932     000B  080A               	movf	10,w
   933     000C  00C2               	movwf	??_ISR+2
   934     000D  087F               	movf	btemp+1,w
   935     000E  00C3               	movwf	??_ISR+3
   936     000F  120A  118A  2A35   	ljmp	_ISR
   937                           
   938                           	psect	text2
   939     00FF                     __ptext2:	
   940 ;; *************** function _confirm *****************
   941 ;; Defined at:
   942 ;;		line 81 in file "newmain.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  i               2   10[COMMON] int 
   947 ;;  i               2   12[COMMON] int 
   948 ;;  correcto        1    9[COMMON] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   958 ;;      Params:         0       0       0       0       0
   959 ;;      Locals:         5       0       0       0       0
   960 ;;      Temps:          6       0       0       0       0
   961 ;;      Totals:        11       0       0       0       0
   962 ;;Total ram usage:       11 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; Hardware stack levels required when called: 2
   965 ;; This function calls:
   966 ;;		_printFail
   967 ;;		_printPass
   968 ;; This function is called by:
   969 ;;		_ISR
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973     00FF                     _confirm:	
   974                           ;psect for function _confirm
   975                           
   976     00FF                     i1l892:	
   977                           ;incstack = 0
   978                           ; Regs used in _confirm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   979                           
   980                           
   981                           ;newmain.c: 82:     char correcto = 1;
   982     00FF  3001               	movlw	1
   983     0100  00F9               	movwf	confirm@correcto
   984     0101                     i1l894:
   985                           
   986                           ;newmain.c: 83:     for (int i = 0; i < 4; i++) {
   987     0101  01FC               	clrf	confirm@i
   988     0102  01FD               	clrf	confirm@i+1
   989     0103                     i1l900:
   990                           
   991                           ;newmain.c: 84:         if (userInput[i] != password[i]) {
   992     0103  087C               	movf	confirm@i,w
   993     0104  00F3               	movwf	??_confirm
   994     0105  0773               	addwf	??_confirm,w
   995     0106  3E20               	addlw	(low (_password| 0))& (0+255)
   996     0107  0084               	movwf	4
   997     0108  1383               	bcf	3,7	;select IRP bank0
   998     0109  0800               	movf	0,w
   999     010A  00F4               	movwf	??_confirm+1
  1000     010B  0A84               	incf	4,f
  1001     010C  0800               	movf	0,w
  1002     010D  00F5               	movwf	??_confirm+2
  1003     010E  087C               	movf	confirm@i,w
  1004     010F  00F6               	movwf	??_confirm+3
  1005     0110  0776               	addwf	??_confirm+3,w
  1006     0111  3E38               	addlw	(low (_userInput| 0))& (0+255)
  1007     0112  0084               	movwf	4
  1008     0113  0800               	movf	0,w
  1009     0114  00F7               	movwf	??_confirm+4
  1010     0115  0A84               	incf	4,f
  1011     0116  0800               	movf	0,w
  1012     0117  00F8               	movwf	??_confirm+5
  1013     0118  0875               	movf	??_confirm+2,w
  1014     0119  0678               	xorwf	??_confirm+5,w
  1015     011A  1D03               	skipz
  1016     011B  291E               	goto	u31_25
  1017     011C  0874               	movf	??_confirm+1,w
  1018     011D  0677               	xorwf	??_confirm+4,w
  1019     011E                     u31_25:
  1020     011E  1903               	skipnz
  1021     011F  2921               	goto	u31_21
  1022     0120  2922               	goto	u31_20
  1023     0121                     u31_21:
  1024     0121  2924               	goto	i1l904
  1025     0122                     u31_20:
  1026     0122                     i1l902:
  1027                           
  1028                           ;newmain.c: 85:             correcto = 0;
  1029     0122  01F9               	clrf	confirm@correcto
  1030                           
  1031                           ;newmain.c: 86:             break;
  1032     0123  2937               	goto	i1l908
  1033     0124                     i1l904:
  1034                           
  1035                           ;newmain.c: 88:     }
  1036     0124  3001               	movlw	1
  1037     0125  07FC               	addwf	confirm@i,f
  1038     0126  1803               	skipnc
  1039     0127  0AFD               	incf	confirm@i+1,f
  1040     0128  3000               	movlw	0
  1041     0129  07FD               	addwf	confirm@i+1,f
  1042     012A                     i1l906:
  1043     012A  087D               	movf	confirm@i+1,w
  1044     012B  3A80               	xorlw	128
  1045     012C  00FF               	movwf	btemp+1
  1046     012D  3080               	movlw	128
  1047     012E  027F               	subwf	btemp+1,w
  1048     012F  1D03               	skipz
  1049     0130  2933               	goto	u32_25
  1050     0131  3004               	movlw	4
  1051     0132  027C               	subwf	confirm@i,w
  1052     0133                     u32_25:
  1053     0133  1C03               	skipc
  1054     0134  2936               	goto	u32_21
  1055     0135  2937               	goto	u32_20
  1056     0136                     u32_21:
  1057     0136  2903               	goto	i1l900
  1058     0137                     u32_20:
  1059     0137                     i1l908:
  1060                           
  1061                           ;newmain.c: 90:     if (correcto) {
  1062     0137  0879               	movf	confirm@correcto,w
  1063     0138  1903               	btfsc	3,2
  1064     0139  293B               	goto	u33_21
  1065     013A  293C               	goto	u33_20
  1066     013B                     u33_21:
  1067     013B  2946               	goto	i1l914
  1068     013C                     u33_20:
  1069     013C                     i1l910:
  1070                           
  1071                           ;newmain.c: 91:         printPass();
  1072     013C  120A  118A  21E3  120A  118A  	fcall	_printPass
  1073     0141                     i1l912:
  1074                           
  1075                           ;newmain.c: 92:         tries = 3;
  1076     0141  3003               	movlw	3
  1077     0142  1283               	bcf	3,5	;RP0=0, select bank0
  1078     0143  1303               	bcf	3,6	;RP1=0, select bank0
  1079     0144  00B7               	movwf	_tries
  1080                           
  1081                           ;newmain.c: 93:     } else {
  1082     0145  294F               	goto	i1l918
  1083     0146                     i1l914:
  1084                           
  1085                           ;newmain.c: 94:         printFail();
  1086     0146  120A  118A  218A  120A  118A  	fcall	_printFail
  1087     014B                     i1l916:
  1088                           
  1089                           ;newmain.c: 95:         tries--;
  1090     014B  3001               	movlw	1
  1091     014C  1283               	bcf	3,5	;RP0=0, select bank0
  1092     014D  1303               	bcf	3,6	;RP1=0, select bank0
  1093     014E  02B7               	subwf	_tries,f
  1094     014F                     i1l918:
  1095                           
  1096                           ;newmain.c: 98:     for (int i = 0; i < 4; i++) userInput[i] = 0;
  1097     014F  01FA               	clrf	confirm@i_91
  1098     0150  01FB               	clrf	confirm@i_91+1
  1099     0151                     i1l924:
  1100     0151  087A               	movf	confirm@i_91,w
  1101     0152  00F3               	movwf	??_confirm
  1102     0153  0773               	addwf	??_confirm,w
  1103     0154  3E38               	addlw	(low (_userInput| 0))& (0+255)
  1104     0155  0084               	movwf	4
  1105     0156  1383               	bcf	3,7	;select IRP bank0
  1106     0157  0180               	clrf	0
  1107     0158  0A84               	incf	4,f
  1108     0159  0180               	clrf	0
  1109     015A                     i1l926:
  1110     015A  3001               	movlw	1
  1111     015B  07FA               	addwf	confirm@i_91,f
  1112     015C  1803               	skipnc
  1113     015D  0AFB               	incf	confirm@i_91+1,f
  1114     015E  3000               	movlw	0
  1115     015F  07FB               	addwf	confirm@i_91+1,f
  1116     0160                     i1l928:
  1117     0160  087B               	movf	confirm@i_91+1,w
  1118     0161  3A80               	xorlw	128
  1119     0162  00FF               	movwf	btemp+1
  1120     0163  3080               	movlw	128
  1121     0164  027F               	subwf	btemp+1,w
  1122     0165  1D03               	skipz
  1123     0166  2969               	goto	u34_25
  1124     0167  3004               	movlw	4
  1125     0168  027A               	subwf	confirm@i_91,w
  1126     0169                     u34_25:
  1127     0169  1C03               	skipc
  1128     016A  296C               	goto	u34_21
  1129     016B  296D               	goto	u34_20
  1130     016C                     u34_21:
  1131     016C  2951               	goto	i1l924
  1132     016D                     u34_20:
  1133     016D                     i1l75:
  1134     016D  1283               	bcf	3,5	;RP0=0, select bank0
  1135     016E  1303               	bcf	3,6	;RP1=0, select bank0
  1136     016F  1C06               	btfss	6,0	;volatile
  1137     0170  2972               	goto	u35_21
  1138     0171  2973               	goto	u35_20
  1139     0172                     u35_21:
  1140     0172  296D               	goto	i1l75
  1141     0173                     u35_20:
  1142     0173                     i1l930:
  1143                           
  1144                           ;newmain.c: 101:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1145     0173  3082               	movlw	130
  1146     0174  00F4               	movwf	??_confirm+1
  1147     0175  30DD               	movlw	221
  1148     0176  00F3               	movwf	??_confirm
  1149     0177                     u56_27:
  1150     0177  0BF3               	decfsz	??_confirm,f
  1151     0178  2977               	goto	u56_27
  1152     0179  0BF4               	decfsz	??_confirm+1,f
  1153     017A  2977               	goto	u56_27
  1154     017B  297C               	nop2
  1155     017C                     i1l932:
  1156                           
  1157                           ;newmain.c: 103:     if (tries == 0) {
  1158     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1159     017D  1303               	bcf	3,6	;RP1=0, select bank0
  1160     017E  0837               	movf	_tries,w
  1161     017F  1D03               	btfss	3,2
  1162     0180  2982               	goto	u36_21
  1163     0181  2983               	goto	u36_20
  1164     0182                     u36_21:
  1165     0182  2989               	goto	i1l82
  1166     0183                     u36_20:
  1167     0183                     i1l934:
  1168     0183  120A  118A  218A  120A  118A  	fcall	_printFail
  1169     0188  2983               	goto	i1l934
  1170     0189                     i1l82:
  1171     0189  0008               	return
  1172     018A                     __end_of_confirm:
  1173                           
  1174                           	psect	text3
  1175     01E3                     __ptext3:	
  1176 ;; *************** function _printPass *****************
  1177 ;; Defined at:
  1178 ;;		line 54 in file "newmain.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  i               2    1[COMMON] int 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1192 ;;      Params:         0       0       0       0       0
  1193 ;;      Locals:         2       0       0       0       0
  1194 ;;      Temps:          1       0       0       0       0
  1195 ;;      Totals:         3       0       0       0       0
  1196 ;;Total ram usage:        3 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; Hardware stack levels required when called: 1
  1199 ;; This function calls:
  1200 ;;		_clearLEDs
  1201 ;; This function is called by:
  1202 ;;		_confirm
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206     01E3                     _printPass:	
  1207                           ;psect for function _printPass
  1208                           
  1209     01E3                     i1l848:	
  1210                           ;incstack = 0
  1211                           ; Regs used in _printPass: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1212                           
  1213                           
  1214                           ;newmain.c: 55:     for(int i = 0; i < 25; i++) {
  1215     01E3  01F1               	clrf	printPass@i
  1216     01E4  01F2               	clrf	printPass@i+1
  1217     01E5                     i1l56:
  1218                           
  1219                           ;newmain.c: 56:         PORTC = 0b11111110; PORTD = PASS[0]; _delay((unsigned long)((1)*
      +                          (4000000/4000.0)));
  1220     01E5  30FE               	movlw	254
  1221     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1222     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1223     01E8  0087               	movwf	7	;volatile
  1224     01E9                     i1l854:
  1225     01E9  082C               	movf	_PASS,w
  1226     01EA  0088               	movwf	8	;volatile
  1227     01EB  30C7               	movlw	199
  1228     01EC  00F0               	movwf	??_printPass
  1229     01ED                     u57_27:
  1230     01ED  29EE               	nop2
  1231     01EE  0BF0               	decfsz	??_printPass,f
  1232     01EF  29ED               	goto	u57_27
  1233     01F0  29F1               	nop2
  1234     01F1  29F2               	nop2
  1235     01F2                     i1l856:
  1236                           
  1237                           ;newmain.c: 57:         PORTC = 0b11111101; PORTD = PASS[1]; _delay((unsigned long)((1)*
      +                          (4000000/4000.0)));
  1238     01F2  30FD               	movlw	253
  1239     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1240     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1241     01F5  0087               	movwf	7	;volatile
  1242     01F6  082D               	movf	_PASS+1,w
  1243     01F7  0088               	movwf	8	;volatile
  1244     01F8  30C7               	movlw	199
  1245     01F9  00F0               	movwf	??_printPass
  1246     01FA                     u58_27:
  1247     01FA  29FB               	nop2
  1248     01FB  0BF0               	decfsz	??_printPass,f
  1249     01FC  29FA               	goto	u58_27
  1250     01FD  29FE               	nop2
  1251     01FE  29FF               	nop2
  1252     01FF                     i1l858:
  1253                           
  1254                           ;newmain.c: 58:         PORTC = 0b11111011; PORTD = PASS[2]; _delay((unsigned long)((1)*
      +                          (4000000/4000.0)));
  1255     01FF  30FB               	movlw	251
  1256     0200  1283               	bcf	3,5	;RP0=0, select bank0
  1257     0201  1303               	bcf	3,6	;RP1=0, select bank0
  1258     0202  0087               	movwf	7	;volatile
  1259     0203  082E               	movf	_PASS+2,w
  1260     0204  0088               	movwf	8	;volatile
  1261     0205  30C7               	movlw	199
  1262     0206  00F0               	movwf	??_printPass
  1263     0207                     u59_27:
  1264     0207  2A08               	nop2
  1265     0208  0BF0               	decfsz	??_printPass,f
  1266     0209  2A07               	goto	u59_27
  1267     020A  2A0B               	nop2
  1268     020B  2A0C               	nop2
  1269     020C                     i1l860:
  1270                           
  1271                           ;newmain.c: 59:         PORTC = 0b11110111; PORTD = PASS[3]; _delay((unsigned long)((1)*
      +                          (4000000/4000.0)));
  1272     020C  30F7               	movlw	247
  1273     020D  1283               	bcf	3,5	;RP0=0, select bank0
  1274     020E  1303               	bcf	3,6	;RP1=0, select bank0
  1275     020F  0087               	movwf	7	;volatile
  1276     0210  082F               	movf	_PASS+3,w
  1277     0211  0088               	movwf	8	;volatile
  1278     0212  30C7               	movlw	199
  1279     0213  00F0               	movwf	??_printPass
  1280     0214                     u60_27:
  1281     0214  2A15               	nop2
  1282     0215  0BF0               	decfsz	??_printPass,f
  1283     0216  2A14               	goto	u60_27
  1284     0217  2A18               	nop2
  1285     0218  2A19               	nop2
  1286     0219                     i1l862:
  1287                           
  1288                           ;newmain.c: 60:         PORTBbits.RB5 = 1;
  1289     0219  1283               	bcf	3,5	;RP0=0, select bank0
  1290     021A  1303               	bcf	3,6	;RP1=0, select bank0
  1291     021B  1686               	bsf	6,5	;volatile
  1292                           
  1293                           ;newmain.c: 61:     }
  1294     021C  3001               	movlw	1
  1295     021D  07F1               	addwf	printPass@i,f
  1296     021E  1803               	skipnc
  1297     021F  0AF2               	incf	printPass@i+1,f
  1298     0220  3000               	movlw	0
  1299     0221  07F2               	addwf	printPass@i+1,f
  1300     0222                     i1l864:
  1301     0222  0872               	movf	printPass@i+1,w
  1302     0223  3A80               	xorlw	128
  1303     0224  00FF               	movwf	btemp+1
  1304     0225  3080               	movlw	128
  1305     0226  027F               	subwf	btemp+1,w
  1306     0227  1D03               	skipz
  1307     0228  2A2B               	goto	u28_25
  1308     0229  3019               	movlw	25
  1309     022A  0271               	subwf	printPass@i,w
  1310     022B                     u28_25:
  1311     022B  1C03               	skipc
  1312     022C  2A2E               	goto	u28_21
  1313     022D  2A2F               	goto	u28_20
  1314     022E                     u28_21:
  1315     022E  29E5               	goto	i1l56
  1316     022F                     u28_20:
  1317     022F                     i1l866:
  1318                           
  1319                           ;newmain.c: 62:     clearLEDs();
  1320     022F  120A  118A  2279  120A  118A  	fcall	_clearLEDs
  1321     0234                     i1l58:
  1322     0234  0008               	return
  1323     0235                     __end_of_printPass:
  1324                           
  1325                           	psect	text4
  1326     018A                     __ptext4:	
  1327 ;; *************** function _printFail *****************
  1328 ;; Defined at:
  1329 ;;		line 65 in file "newmain.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  i               2    1[COMMON] int 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         0       0       0       0       0
  1344 ;;      Locals:         2       0       0       0       0
  1345 ;;      Temps:          1       0       0       0       0
  1346 ;;      Totals:         3       0       0       0       0
  1347 ;;Total ram usage:        3 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; Hardware stack levels required when called: 1
  1350 ;; This function calls:
  1351 ;;		_clearLEDs
  1352 ;; This function is called by:
  1353 ;;		_confirm
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357     018A                     _printFail:	
  1358                           ;psect for function _printFail
  1359                           
  1360     018A                     i1l868:	
  1361                           ;incstack = 0
  1362                           ; Regs used in _printFail: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1363                           
  1364                           
  1365                           ;newmain.c: 66:     for(int i = 0; i < 25; i++) {
  1366     018A  01F1               	clrf	printFail@i
  1367     018B  01F2               	clrf	printFail@i+1
  1368     018C                     i1l61:
  1369                           
  1370                           ;newmain.c: 67:         PORTC = 0b11111110; PORTD = FAIL[0]; _delay((unsigned long)((1)*
      +                          (4000000/4000.0)));
  1371     018C  30FE               	movlw	254
  1372     018D  1283               	bcf	3,5	;RP0=0, select bank0
  1373     018E  1303               	bcf	3,6	;RP1=0, select bank0
  1374     018F  0087               	movwf	7	;volatile
  1375     0190                     i1l874:
  1376     0190  0828               	movf	_FAIL,w
  1377     0191  0088               	movwf	8	;volatile
  1378     0192  30C7               	movlw	199
  1379     0193  00F0               	movwf	??_printFail
  1380     0194                     u61_27:
  1381     0194  2995               	nop2
  1382     0195  0BF0               	decfsz	??_printFail,f
  1383     0196  2994               	goto	u61_27
  1384     0197  2998               	nop2
  1385     0198  2999               	nop2
  1386     0199                     i1l876:
  1387                           
  1388                           ;newmain.c: 68:         PORTC = 0b11111101; PORTD = FAIL[1]; _delay((unsigned long)((1)*
      +                          (4000000/4000.0)));
  1389     0199  30FD               	movlw	253
  1390     019A  1283               	bcf	3,5	;RP0=0, select bank0
  1391     019B  1303               	bcf	3,6	;RP1=0, select bank0
  1392     019C  0087               	movwf	7	;volatile
  1393     019D  0829               	movf	_FAIL+1,w
  1394     019E  0088               	movwf	8	;volatile
  1395     019F  30C7               	movlw	199
  1396     01A0  00F0               	movwf	??_printFail
  1397     01A1                     u62_27:
  1398     01A1  29A2               	nop2
  1399     01A2  0BF0               	decfsz	??_printFail,f
  1400     01A3  29A1               	goto	u62_27
  1401     01A4  29A5               	nop2
  1402     01A5  29A6               	nop2
  1403     01A6                     i1l878:
  1404                           
  1405                           ;newmain.c: 69:         PORTC = 0b11111011; PORTD = FAIL[2]; _delay((unsigned long)((1)*
      +                          (4000000/4000.0)));
  1406     01A6  30FB               	movlw	251
  1407     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1408     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1409     01A9  0087               	movwf	7	;volatile
  1410     01AA  082A               	movf	_FAIL+2,w
  1411     01AB  0088               	movwf	8	;volatile
  1412     01AC  30C7               	movlw	199
  1413     01AD  00F0               	movwf	??_printFail
  1414     01AE                     u63_27:
  1415     01AE  29AF               	nop2
  1416     01AF  0BF0               	decfsz	??_printFail,f
  1417     01B0  29AE               	goto	u63_27
  1418     01B1  29B2               	nop2
  1419     01B2  29B3               	nop2
  1420     01B3                     i1l880:
  1421                           
  1422                           ;newmain.c: 70:         PORTC = 0b11110111; PORTD = FAIL[3]; _delay((unsigned long)((1)*
      +                          (4000000/4000.0)));
  1423     01B3  30F7               	movlw	247
  1424     01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1425     01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1426     01B6  0087               	movwf	7	;volatile
  1427     01B7  082B               	movf	_FAIL+3,w
  1428     01B8  0088               	movwf	8	;volatile
  1429     01B9  30C7               	movlw	199
  1430     01BA  00F0               	movwf	??_printFail
  1431     01BB                     u64_27:
  1432     01BB  29BC               	nop2
  1433     01BC  0BF0               	decfsz	??_printFail,f
  1434     01BD  29BB               	goto	u64_27
  1435     01BE  29BF               	nop2
  1436     01BF  29C0               	nop2
  1437     01C0                     i1l882:
  1438                           
  1439                           ;newmain.c: 71:         if(tries > 0) PORTBbits.RB7 = 1;
  1440     01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1441     01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1442     01C2  0837               	movf	_tries,w
  1443     01C3  1903               	btfsc	3,2
  1444     01C4  29C6               	goto	u29_21
  1445     01C5  29C7               	goto	u29_20
  1446     01C6                     u29_21:
  1447     01C6  29C9               	goto	i1l63
  1448     01C7                     u29_20:
  1449     01C7                     i1l884:
  1450     01C7  1786               	bsf	6,7	;volatile
  1451     01C8  29CA               	goto	i1l886
  1452     01C9                     i1l63:	
  1453                           ;newmain.c: 72:         else PORTBbits.RB6 = 1;
  1454                           
  1455     01C9  1706               	bsf	6,6	;volatile
  1456     01CA                     i1l886:
  1457                           
  1458                           ;newmain.c: 73:     }
  1459     01CA  3001               	movlw	1
  1460     01CB  07F1               	addwf	printFail@i,f
  1461     01CC  1803               	skipnc
  1462     01CD  0AF2               	incf	printFail@i+1,f
  1463     01CE  3000               	movlw	0
  1464     01CF  07F2               	addwf	printFail@i+1,f
  1465     01D0                     i1l888:
  1466     01D0  0872               	movf	printFail@i+1,w
  1467     01D1  3A80               	xorlw	128
  1468     01D2  00FF               	movwf	btemp+1
  1469     01D3  3080               	movlw	128
  1470     01D4  027F               	subwf	btemp+1,w
  1471     01D5  1D03               	skipz
  1472     01D6  29D9               	goto	u30_25
  1473     01D7  3019               	movlw	25
  1474     01D8  0271               	subwf	printFail@i,w
  1475     01D9                     u30_25:
  1476     01D9  1C03               	skipc
  1477     01DA  29DC               	goto	u30_21
  1478     01DB  29DD               	goto	u30_20
  1479     01DC                     u30_21:
  1480     01DC  298C               	goto	i1l61
  1481     01DD                     u30_20:
  1482     01DD                     i1l890:
  1483                           
  1484                           ;newmain.c: 74:     clearLEDs();
  1485     01DD  120A  118A  2279  120A  118A  	fcall	_clearLEDs
  1486     01E2                     i1l65:
  1487     01E2  0008               	return
  1488     01E3                     __end_of_printFail:
  1489                           
  1490                           	psect	text5
  1491     0279                     __ptext5:	
  1492 ;; *************** function _clearLEDs *****************
  1493 ;; Defined at:
  1494 ;;		line 48 in file "newmain.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		None
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0
  1511 ;;      Totals:         0       0       0       0       0
  1512 ;;Total ram usage:        0 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_printPass
  1518 ;;		_printFail
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522     0279                     _clearLEDs:	
  1523                           ;psect for function _clearLEDs
  1524                           
  1525     0279                     i1l846:	
  1526                           ;incstack = 0
  1527                           ; Regs used in _clearLEDs: []
  1528                           
  1529                           
  1530                           ;newmain.c: 49:     PORTBbits.RB5 = 0;
  1531     0279  1283               	bcf	3,5	;RP0=0, select bank0
  1532     027A  1303               	bcf	3,6	;RP1=0, select bank0
  1533     027B  1286               	bcf	6,5	;volatile
  1534                           
  1535                           ;newmain.c: 50:     PORTBbits.RB6 = 0;
  1536     027C  1306               	bcf	6,6	;volatile
  1537                           
  1538                           ;newmain.c: 51:     PORTBbits.RB7 = 0;
  1539     027D  1386               	bcf	6,7	;volatile
  1540     027E                     i1l53:
  1541     027E  0008               	return
  1542     027F                     __end_of_clearLEDs:
  1543     0002                     ___latbits      equ	2
  1544     007E                     btemp           set	126	;btemp
  1545     007E                     wtemp0          set	126
  1546                           
  1547                           	psect	config
  1548                           
  1549                           ;Config register CONFIG1 @ 0x2007
  1550                           ;	Oscillator Selection bits
  1551                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1552                           ;	Watchdog Timer Enable bit
  1553                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1554                           ;	Power-up Timer Enable bit
  1555                           ;	PWRTE = OFF, PWRT disabled
  1556                           ;	RE3/MCLR pin function select bit
  1557                           ;	MCLRE = 0x1, unprogrammed default
  1558                           ;	Code Protection bit
  1559                           ;	CP = OFF, Program memory code protection is disabled
  1560                           ;	Data Code Protection bit
  1561                           ;	CPD = OFF, Data memory code protection is disabled
  1562                           ;	Brown Out Reset Selection bits
  1563                           ;	BOREN = ON, BOR enabled
  1564                           ;	Internal External Switchover bit
  1565                           ;	IESO = 0x1, unprogrammed default
  1566                           ;	Fail-Safe Clock Monitor Enabled bit
  1567                           ;	FCMEN = 0x1, unprogrammed default
  1568                           ;	Low Voltage Programming Enable bit
  1569                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1570                           ;	In-Circuit Debugger Mode bit
  1571                           ;	DEBUG = 0x1, unprogrammed default
  1572     2007                     	org	8199
  1573     2007  2FF1               	dw	12273
  1574                           
  1575                           ;Config register CONFIG2 @ 0x2008
  1576                           ;	Brown-out Reset Selection bit
  1577                           ;	BOR4V = 0x1, unprogrammed default
  1578                           ;	Flash Program Memory Self Write Enable bits
  1579                           ;	WRT = OFF, Write protection off
  1580     2008                     	org	8200
  1581     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_confirm
    _confirm->_printFail
    _confirm->_printPass

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     227
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  4     4      0     274
                                              0 BANK0      4     4      0
                            _confirm
 ---------------------------------------------------------------------------------
 (2) _confirm                                             11    11      0     274
                                              3 COMMON    11    11      0
                          _printFail
                          _printPass
 ---------------------------------------------------------------------------------
 (3) _printPass                                            3     3      0      46
                                              0 COMMON     3     3      0
                          _clearLEDs
 ---------------------------------------------------------------------------------
 (3) _printFail                                            3     3      0      46
                                              0 COMMON     3     3      0
                          _clearLEDs
 ---------------------------------------------------------------------------------
 (4) _clearLEDs                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _confirm
     _printFail
       _clearLEDs
     _printPass
       _clearLEDs

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      8      40     50.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      54      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Jun 11 23:56:00 2025

                      pc 0002                       l95 006D                       l97 008E  
                     l99 00B1                       fsr 0004                      l102 00D4  
                    l950 0037                      l960 003F                      l952 0039  
                    l970 0048                      l962 0040                      l954 003A  
                    l946 002F                      l980 0066                      l972 004E  
                    l964 0043                      l956 003B                      l948 0033  
                    l990 007C                      l974 0053                      l982 0067  
                    l966 0044                      l958 003E                      l992 0085  
                    l984 006B                      l976 0059                      l968 0045  
                    l994 0087                      l986 0071                      l978 0064  
                    _GIE 005F                      l988 0076                      l996 0088  
                    l998 008C                      u400 0059                      u401 0058  
                    u410 006B                      u411 006A                      u500 00B5  
                    u420 0071                      u501 00B4                      u421 0070  
                    u510 00BA                      u430 0076                      u511 00B9  
                    u431 0075                      u520 00C0                      u440 007C  
                    u521 00BF                      u441 007B                      u530 00D0  
                    u450 008C                      u531 00CF                      u451 008B  
                    u540 00FB                      u460 0092                      u380 004E  
                    _ISR 0235                      u541 00FA                      u461 0091  
                    u381 004D                      u470 0097                      u390 0053  
                    u471 0096                      u391 0052                      u480 009D  
                    u545 00F7                      u481 009C                      u490 00AF  
                    u491 00AE                      u557 00E2                      fsr0 0004  
                    indf 0000              confirm@i_91 007A                     ?_ISR 0070  
                   l1000 0092                     l1002 0097                     l1010 00AB  
                   l1020 00C9                     l1012 00AF                     l1004 009D  
                   l1022 00CB                     l1014 00B5                     l1006 00A8  
                   l1040 00EE                     l1016 00BA                     l1024 00CC  
                   l1008 00AA                     l1034 00D8                     l1026 00D0  
                   l1018 00C0                     l1036 00DE                     l1028 00D2  
                   l1038 00E6                     _FAIL 0028                     _INTE 005C  
                   _INTF 0059                     i1l53 027E                     i1l61 018C  
                   i1l63 01C9                     i1l56 01E5                     i1l65 01E2  
                   i1l58 0234                     i1l82 0189                     i1l75 016D  
                   _PASS 002C                     i1l88 0241                     _main 002F  
                   btemp 007E                     start 0012                    ??_ISR 0040  
                  ?_main 0070                    _ANSEL 0188                    i1l900 0103  
                  i1l910 013C                    i1l902 0122                    i1l912 0141  
                  i1l904 0124                    i1l930 0173                    i1l914 0146  
                  i1l906 012A                    i1l860 020C                    i1l932 017C  
                  i1l924 0151                    i1l916 014B                    i1l908 0137  
                  i1l940 023A                    i1l846 0279                    i1l862 0219  
                  i1l854 01E9                    i1l934 0183                    i1l926 015A  
                  i1l918 014F                    i1l942 023F                    i1l880 01B3  
                  i1l864 0222                    i1l856 01F2                    i1l848 01E3  
                  i1l928 0160                    i1l944 0240                    i1l936 0235  
                  i1l890 01DD                    i1l882 01C0                    i1l874 0190  
                  i1l866 022F                    i1l858 01FF                    i1l938 0239  
                  i1l884 01C7                    i1l876 0199                    i1l868 018A  
                  i1l892 00FF                    i1l886 01CA                    i1l878 01A6  
                  i1l894 0101                    i1l888 01D0                    u30_20 01DD  
                  u30_21 01DC                    u30_25 01D9                    u31_20 0122  
                  u31_21 0121                    u31_25 011E                    u32_20 0137  
                  u32_21 0136                    u32_25 0133                    u33_20 013C  
                  u33_21 013B                    u34_20 016D                    u34_21 016C  
                  u34_25 0169                    u35_20 0173                    u35_21 0172  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u28_20 022F                    u36_20 0183                    u28_21 022E  
                  u36_21 0182                    u28_25 022B                    u60_27 0214  
                  u29_20 01C7                    u37_20 0239                    u29_21 01C6  
                  u37_21 0238                    u61_27 0194                    u62_27 01A1  
                  u63_27 01AE                    u64_27 01BB                    u56_27 0177  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  u57_27 01ED                    u58_27 01FA                    u59_27 0207  
        __end_of_confirm 018A                    _tries 0037                    main@i 0045  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 00FF                   ??_main 0044  
                 _ANSELH 0189                   _INTEDG 040E                   _digits 0030  
              ??_confirm 0073                   saved_w 007E  __end_of__initialization 002B  
         __pcstackCOMMON 0070             __pidataBANK0 024E               __pbssBANK0 0038  
             __pmaintext 002F               __pintentry 0004        __end_of_clearLEDs 027F  
                __ptext1 0235                  __ptext2 00FF                  __ptext3 01E3  
                __ptext4 018A                  __ptext5 0279                  _confirm 00FF  
                main@pos 0047     end_of_initialization 002B        __end_of_printFail 01E3  
      __end_of_printPass 0235                _PORTBbits 0006      start_initialization 0015  
            __end_of_ISR 024E               init_fetch0 0266              __pdataBANK0 0020  
        confirm@correcto 0079                ___latbits 0002            __pcstackBANK0 0040  
              _clearLEDs 0279                 ?_confirm 0070        interrupt_function 0004  
             ?_clearLEDs 0070                _printFail 018A                _printPass 01E3  
             printFail@i 0071               printPass@i 0071                _userInput 0038  
             ?_printFail 0070               ?_printPass 0070              ??_clearLEDs 0070  
               _password 0020                 _prev_RB1 0036                 _prev_RB2 0035  
               _prev_RB3 0034                 _prev_RB4 0033                 confirm@i 007C  
               init_ram0 026A                 intlevel1 0000              ??_printFail 0070  
            ??_printPass 0070               _OPTION_REG 0081  
